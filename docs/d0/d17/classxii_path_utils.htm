<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiPathUtils Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/d17/classxii_path_utils.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="../../d5/d08/classxii_path_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiPathUtils Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Contains Helper functions to work with paths.  
 <a href="../../d0/d17/classxii_path_utils.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/d82/_path_utils_8h_source.htm">PathUtils.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a296a4c42330e1bbb110b28f4cb55e10f"><td class="memItemLeft" align="right" valign="top"><a id="a296a4c42330e1bbb110b28f4cb55e10f"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a296a4c42330e1bbb110b28f4cb55e10f">IsPathSeparator</a> (xiiUInt32 c)</td></tr>
<tr class="memdesc:a296a4c42330e1bbb110b28f4cb55e10f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether c is any known path separator. <br /></td></tr>
<tr class="separator:a296a4c42330e1bbb110b28f4cb55e10f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af334a7fa1be165457f1dad1ee8c3c471"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#af334a7fa1be165457f1dad1ee8c3c471">IsValidFilenameChar</a> (xiiUInt32 uiCharacter)</td></tr>
<tr class="memdesc:af334a7fa1be165457f1dad1ee8c3c471"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a given character is allowed in a filename (not path!)  <a href="../../d0/d17/classxii_path_utils.htm#af334a7fa1be165457f1dad1ee8c3c471">More...</a><br /></td></tr>
<tr class="separator:af334a7fa1be165457f1dad1ee8c3c471"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab36b044f45664467af838ba051622b72"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#ab36b044f45664467af838ba051622b72">ContainsInvalidFilenameChars</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:ab36b044f45664467af838ba051622b72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks every character in the string with <a class="el" href="../../d0/d17/classxii_path_utils.htm#af334a7fa1be165457f1dad1ee8c3c471" title="Checks if a given character is allowed in a filename (not path!)">IsValidFilenameChar()</a>  <a href="../../d0/d17/classxii_path_utils.htm#ab36b044f45664467af838ba051622b72">More...</a><br /></td></tr>
<tr class="separator:ab36b044f45664467af838ba051622b72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad163d21e2df9c0222ab6cac572d3ae6"><td class="memItemLeft" align="right" valign="top"><a id="aad163d21e2df9c0222ab6cac572d3ae6"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#aad163d21e2df9c0222ab6cac572d3ae6">FindPreviousSeparator</a> (const char *szPathStart, const char *szStartSearchAt)</td></tr>
<tr class="memdesc:aad163d21e2df9c0222ab6cac572d3ae6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the previous path separator before szStartSearchAt. Will return nullptr if it reaches szPathStart before finding any separator. <br /></td></tr>
<tr class="separator:aad163d21e2df9c0222ab6cac572d3ae6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5af91da5b069d53e82fe5c4c1ef2bf"><td class="memItemLeft" align="right" valign="top"><a id="a5d5af91da5b069d53e82fe5c4c1ef2bf"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a5d5af91da5b069d53e82fe5c4c1ef2bf">HasAnyExtension</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:a5d5af91da5b069d53e82fe5c4c1ef2bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path has any file extension. <br /></td></tr>
<tr class="separator:a5d5af91da5b069d53e82fe5c4c1ef2bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71b42068084079f127bc8e8c2bfd23a7"><td class="memItemLeft" align="right" valign="top"><a id="a71b42068084079f127bc8e8c2bfd23a7"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a71b42068084079f127bc8e8c2bfd23a7">HasExtension</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sExtension)</td></tr>
<tr class="memdesc:a71b42068084079f127bc8e8c2bfd23a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path ends with the given extension. szExtension should start with a '.' for performance reasons, but it will work without a '.' too. <br /></td></tr>
<tr class="separator:a71b42068084079f127bc8e8c2bfd23a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12d1e730f3cca0ef53d7646c4a0a44d9"><td class="memItemLeft" align="right" valign="top"><a id="a12d1e730f3cca0ef53d7646c4a0a44d9"></a>
static <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a12d1e730f3cca0ef53d7646c4a0a44d9">GetFileExtension</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:a12d1e730f3cca0ef53d7646c4a0a44d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file extension of the given path. Will be empty, if the path does not end with a proper extension. The dot (.) is not included. <br /></td></tr>
<tr class="separator:a12d1e730f3cca0ef53d7646c4a0a44d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a611229904ecb6d7ad2c28080fe5f7f33"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a611229904ecb6d7ad2c28080fe5f7f33">GetFileName</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:a611229904ecb6d7ad2c28080fe5f7f33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file name of a path, excluding the path and extension.  <a href="../../d0/d17/classxii_path_utils.htm#a611229904ecb6d7ad2c28080fe5f7f33">More...</a><br /></td></tr>
<tr class="separator:a611229904ecb6d7ad2c28080fe5f7f33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b77840949e3dc67ed2a0ca282027123"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a1b77840949e3dc67ed2a0ca282027123">GetFileNameAndExtension</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:a1b77840949e3dc67ed2a0ca282027123"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the substring that represents the file name including the file extension.  <a href="../../d0/d17/classxii_path_utils.htm#a1b77840949e3dc67ed2a0ca282027123">More...</a><br /></td></tr>
<tr class="separator:a1b77840949e3dc67ed2a0ca282027123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33f8b5c05513cdd0249a9ce513f56049"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a33f8b5c05513cdd0249a9ce513f56049">GetFileDirectory</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:a33f8b5c05513cdd0249a9ce513f56049"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the directory of the given file, which is the substring up to the last path separator.  <a href="../../d0/d17/classxii_path_utils.htm#a33f8b5c05513cdd0249a9ce513f56049">More...</a><br /></td></tr>
<tr class="separator:a33f8b5c05513cdd0249a9ce513f56049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5977a6cfe8663d68002579c048e0cb30"><td class="memItemLeft" align="right" valign="top"><a id="a5977a6cfe8663d68002579c048e0cb30"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a5977a6cfe8663d68002579c048e0cb30">IsAbsolutePath</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:a5977a6cfe8663d68002579c048e0cb30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents an absolute path on the current OS. <br /></td></tr>
<tr class="separator:a5977a6cfe8663d68002579c048e0cb30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81d55a78ebb3e16fea39bf593d893342"><td class="memItemLeft" align="right" valign="top"><a id="a81d55a78ebb3e16fea39bf593d893342"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a81d55a78ebb3e16fea39bf593d893342">IsRelativePath</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:a81d55a78ebb3e16fea39bf593d893342"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents a relative path on the current OS. <br /></td></tr>
<tr class="separator:a81d55a78ebb3e16fea39bf593d893342"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac926f4e33b022330627de5eff594af32"><td class="memItemLeft" align="right" valign="top"><a id="ac926f4e33b022330627de5eff594af32"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#ac926f4e33b022330627de5eff594af32">IsRootedPath</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:ac926f4e33b022330627de5eff594af32"><td class="mdescLeft">&#160;</td><td class="mdescRight">A rooted path starts with a colon and then names a file-system data directory. Rooted paths are used as 'absolute' paths within the <a class="el" href="../../d7/d0a/classxii_file_system.htm" title="The xiiFileSystem provides high-level functionality to manage files in a virtual file system.">xiiFileSystem</a>. <br /></td></tr>
<tr class="separator:ac926f4e33b022330627de5eff594af32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ae1ba938b06a4cba6ccf77a1e024690"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a5ae1ba938b06a4cba6ccf77a1e024690">GetRootedPathParts</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> &amp;ref_sRoot, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> &amp;ref_sRelPath)</td></tr>
<tr class="memdesc:a5ae1ba938b06a4cba6ccf77a1e024690"><td class="mdescLeft">&#160;</td><td class="mdescRight">Splits the passed path into its root portion and the relative path.  <a href="../../d0/d17/classxii_path_utils.htm#a5ae1ba938b06a4cba6ccf77a1e024690">More...</a><br /></td></tr>
<tr class="separator:a5ae1ba938b06a4cba6ccf77a1e024690"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb63112f1a6d316c3af4940ffc2891ed"><td class="memItemLeft" align="right" valign="top"><a id="acb63112f1a6d316c3af4940ffc2891ed"></a>
static <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#acb63112f1a6d316c3af4940ffc2891ed">GetRootedPathRootName</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath)</td></tr>
<tr class="memdesc:acb63112f1a6d316c3af4940ffc2891ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special case of GetRootedPathParts that returns the root of the input path and discards the relative path. <br /></td></tr>
<tr class="separator:acb63112f1a6d316c3af4940ffc2891ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf0e8078fedec454b3ffb674249b57aa"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#aaf0e8078fedec454b3ffb674249b57aa">MakeValidFilename</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sFilename, xiiUInt32 uiReplacementCharacter, <a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out_sFilename)</td></tr>
<tr class="memdesc:aaf0e8078fedec454b3ffb674249b57aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a valid filename (not path!) using the given string by replacing all disallowed characters.  <a href="../../d0/d17/classxii_path_utils.htm#aaf0e8078fedec454b3ffb674249b57aa">More...</a><br /></td></tr>
<tr class="separator:aaf0e8078fedec454b3ffb674249b57aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26dfbe711cebef8410a036e97306dbdd"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#a26dfbe711cebef8410a036e97306dbdd">IsSubPath</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPrefixPath, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sFullPath)</td></tr>
<tr class="memdesc:a26dfbe711cebef8410a036e97306dbdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether <em>sFullPath</em> starts with <em>sPrefixPath</em>.  <a href="../../d0/d17/classxii_path_utils.htm#a26dfbe711cebef8410a036e97306dbdd">More...</a><br /></td></tr>
<tr class="separator:a26dfbe711cebef8410a036e97306dbdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:ac6882d71f9649e4ad5ae278487f94b3e"><td class="memItemLeft" align="right" valign="top"><a id="ac6882d71f9649e4ad5ae278487f94b3e"></a>
static const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d17/classxii_path_utils.htm#ac6882d71f9649e4ad5ae278487f94b3e">OsSpecificPathSeparator</a></td></tr>
<tr class="memdesc:ac6882d71f9649e4ad5ae278487f94b3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The path separator used by this operating system. <br /></td></tr>
<tr class="separator:ac6882d71f9649e4ad5ae278487f94b3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Contains Helper functions to work with paths. </p>
<p>Only functions that require read-only access to a string are provided here All functions that require to modify the path are provided by <a class="el" href="../../d4/dbb/classxii_string_builder.htm" title="xiiStringBuilder is a class that is meant for creating and modifying strings.">xiiStringBuilder</a>. Many functions return <a class="el" href="../../da/d9d/structxii_string_view.htm" title="xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...">xiiStringView</a>'s, which will always be strict sub-strings of their input data. That allows that these functions can work without any additional memory allocations. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ab36b044f45664467af838ba051622b72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab36b044f45664467af838ba051622b72">&#9670;&nbsp;</a></span>ContainsInvalidFilenameChars()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiPathUtils::ContainsInvalidFilenameChars </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks every character in the string with <a class="el" href="../../d0/d17/classxii_path_utils.htm#af334a7fa1be165457f1dad1ee8c3c471" title="Checks if a given character is allowed in a filename (not path!)">IsValidFilenameChar()</a> </p>
<p>This is a basic check, only because each character passes the test, it does not guarantee that the full string is a valid path. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000032">Test:</a></b></dt><dd>Not tested yet </dd></dl>

</div>
</div>
<a id="a33f8b5c05513cdd0249a9ce513f56049"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33f8b5c05513cdd0249a9ce513f56049">&#9670;&nbsp;</a></span>GetFileDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> xiiPathUtils::GetFileDirectory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the directory of the given file, which is the substring up to the last path separator. </p>
<p>If the path already ends in a path separator, and thus points to a folder, instead of a file, the unchanged path is returned. "path/to/file" -&gt; "path/to/" "path/to/folder/" -&gt; "path/to/folder/" "filename" -&gt; "" "/file_at_root_level" -&gt; "/" </p>

</div>
</div>
<a id="a611229904ecb6d7ad2c28080fe5f7f33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a611229904ecb6d7ad2c28080fe5f7f33">&#9670;&nbsp;</a></span>GetFileName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> xiiPathUtils::GetFileName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the file name of a path, excluding the path and extension. </p>
<p>If the path already ends with a path separator, the result will be empty. </p>

</div>
</div>
<a id="a1b77840949e3dc67ed2a0ca282027123"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b77840949e3dc67ed2a0ca282027123">&#9670;&nbsp;</a></span>GetFileNameAndExtension()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> xiiPathUtils::GetFileNameAndExtension </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sPath</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the substring that represents the file name including the file extension. </p>
<p>Returns an empty string, if sPath already ends in a path separator, or is empty itself. </p>

</div>
</div>
<a id="a5ae1ba938b06a4cba6ccf77a1e024690"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ae1ba938b06a4cba6ccf77a1e024690">&#9670;&nbsp;</a></span>GetRootedPathParts()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiPathUtils::GetRootedPathParts </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> &amp;&#160;</td>
          <td class="paramname"><em>ref_sRoot</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> &amp;&#160;</td>
          <td class="paramname"><em>ref_sRelPath</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Splits the passed path into its root portion and the relative path. </p>
<p>":MyRoot\file.txt" -&gt; root = "MyRoot", relPath="file.txt" ":MyRoot\folder\file.txt" -&gt; root = "MyRoot", relPath = "folder\file.txt" ":\MyRoot\folder\file.txt" -&gt; root = "MyRoot", relPath = "folder\file.txt" ":/MyRoot\folder\file.txt" -&gt; root = "MyRoot", relPath = "folder\file.txt" If the path is not rooted, then root will be an empty string and relPath is set to the full input path. </p>

</div>
</div>
<a id="a26dfbe711cebef8410a036e97306dbdd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26dfbe711cebef8410a036e97306dbdd">&#9670;&nbsp;</a></span>IsSubPath()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiPathUtils::IsSubPath </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sPrefixPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sFullPath</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks whether <em>sFullPath</em> starts with <em>sPrefixPath</em>. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000033">Test:</a></b></dt><dd>this is new </dd></dl>

</div>
</div>
<a id="af334a7fa1be165457f1dad1ee8c3c471"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af334a7fa1be165457f1dad1ee8c3c471">&#9670;&nbsp;</a></span>IsValidFilenameChar()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiPathUtils::IsValidFilenameChar </td>
          <td>(</td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiCharacter</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if a given character is allowed in a filename (not path!) </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000031">Test:</a></b></dt><dd>Not tested yet </dd></dl>

</div>
</div>
<a id="aaf0e8078fedec454b3ffb674249b57aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf0e8078fedec454b3ffb674249b57aa">&#9670;&nbsp;</a></span>MakeValidFilename()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiPathUtils::MakeValidFilename </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sFilename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiReplacementCharacter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;&#160;</td>
          <td class="paramname"><em>out_sFilename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a valid filename (not path!) using the given string by replacing all disallowed characters. </p>
<p>Note that path separators in the given string will be replaced as well! Asserts that replacementCharacter is an allowed character. </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d0/d17/classxii_path_utils.htm#af334a7fa1be165457f1dad1ee8c3c471" title="Checks if a given character is allowed in a filename (not path!)">IsValidFilenameChar()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Strings/<a class="el" href="../../dd/d82/_path_utils_8h_source.htm">PathUtils.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/PathUtils.cpp</li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d1/d9d/_path_utils__inl_8h_source.htm">PathUtils_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/d17/classxii_path_utils.htm">xiiPathUtils</a></li>
    <li class="footer">Generated on Sat Oct 14 2023 18:05:08 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
