<!-- HTML header for doxygen 1.11.0-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Engine/Foundation/Containers/Implementation/DynamicArray_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript">
  DoxygenAwesomeDarkModeToggle.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript">
  DoxygenAwesomeFragmentCopyButton.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
  DoxygenAwesomeParagraphLink.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
  DoxygenAwesomeInteractiveToc.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d0/dd9/_dynamic_array__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">DynamicArray_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00003" data-start="{" data-end="}">
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a44b428b0e9bd8d731bd2f4a57bdd5828">    3</a></span><a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a44b428b0e9bd8d731bd2f4a57bdd5828">xiiDynamicArrayBase&lt;T&gt;::xiiDynamicArrayBase</a>(<a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span>  m_pAllocator(pAllocator)</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>{</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>}</div>
</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a44b428b0e9bd8d731bd2f4a57bdd5828">xiiDynamicArrayBase&lt;T&gt;::xiiDynamicArrayBase</a>(T* pInplaceStorage, xiiUInt32 uiCapacity, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>  m_pAllocator(pAllocator)</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>{</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  m_pAllocator.<a class="code hl_function" href="../../d4/d14/classxii_pointer_with_flags.htm#a18faf0609e4f0740c76c5772b8f894b0">SetFlags</a>(Storage::External);</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  this-&gt;<a class="code hl_variable" href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">m_uiCapacity</a> = uiCapacity;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  this-&gt;<a class="code hl_variable" href="../../da/d4c/classxii_array_base.htm#ac72646567deadcaaf4f24b6ce2b61a4d">m_pElements</a>  = pInplaceStorage;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>}</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="foldopen" id="foldopen00017" data-start="{" data-end="}">
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a44b428b0e9bd8d731bd2f4a57bdd5828">   17</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="}">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a97bacdc130f8746f1a7d03fa73ab2b55">   18</a></span><a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a44b428b0e9bd8d731bd2f4a57bdd5828">xiiDynamicArrayBase&lt;T&gt;::xiiDynamicArrayBase</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;</a>&amp; other, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  m_pAllocator(pAllocator)</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>{</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, xiiDynamicArrayBase&lt;T&gt;</a>&gt;::operator=((<a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>)other); <span class="comment">// redirect this to the xiiArrayPtr version</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a97bacdc130f8746f1a7d03fa73ab2b55">   22</a></span>}</div>
</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00025" data-start="{" data-end="}">
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#aa98730768a9b6a76bf7567fa42b1adaf">   25</a></span><a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a44b428b0e9bd8d731bd2f4a57bdd5828">xiiDynamicArrayBase&lt;T&gt;::xiiDynamicArrayBase</a>(<a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;</a>&amp;&amp; other, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  m_pAllocator(pAllocator)</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>{</div>
<div class="foldopen" id="foldopen00028" data-start="{" data-end="}">
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#ac590bfb2e459a39ac985d6c02f7570c0">   28</a></span>  *<span class="keyword">this</span> = std::move(other);</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>}</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a3d738ae761e844b79762a8782cc01d15">   31</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00032" data-start="{" data-end="}">
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#ac590bfb2e459a39ac985d6c02f7570c0">   32</a></span><a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a44b428b0e9bd8d731bd2f4a57bdd5828">xiiDynamicArrayBase&lt;T&gt;::xiiDynamicArrayBase</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; other, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  m_pAllocator(pAllocator)</div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="}">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#ade68e18f96667d63208378671e7ce835">   34</a></span>{</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, xiiDynamicArrayBase&lt;T&gt;</a>&gt;::operator=(other);</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>}</div>
<div class="foldopen" id="foldopen00037" data-start="{" data-end="}">
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#accfee682a696aa6cf306750024cd0600">   37</a></span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00039" data-start="{" data-end="}">
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a3d738ae761e844b79762a8782cc01d15">   39</a></span><a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a3d738ae761e844b79762a8782cc01d15">xiiDynamicArrayBase&lt;T&gt;::~xiiDynamicArrayBase</a>()</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>{</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  this-&gt;Clear();</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <span class="keywordflow">if</span> (m_pAllocator.GetFlags() == Storage::Owned)</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  {</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    <span class="comment">// only delete our storage, if we own it</span></div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="}">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a9d30fef4224f0f636084a8ed1bf3c7b1">   46</a></span>    XII_DELETE_RAW_BUFFER(this-&gt;m_pAllocator, this-&gt;m_pElements);</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  }</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  this-&gt;m_uiCapacity = 0;</div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="}">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a6d358b4088479f7fa46cf78500b6c326">   50</a></span>  this-&gt;m_pElements  = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>}</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00054" data-start="{" data-end="}">
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#ade68e18f96667d63208378671e7ce835">   54</a></span>XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#ade68e18f96667d63208378671e7ce835">xiiDynamicArrayBase&lt;T&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>{</div>
<div class="foldopen" id="foldopen00056" data-start="{" data-end="}">
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#ac55eab0198c86747de97680542cd75e8">   56</a></span>  <a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, xiiDynamicArrayBase&lt;T&gt;</a>&gt;::operator=((<a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>)rhs); <span class="comment">// redirect this to the xiiArrayPtr version</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>}</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="foldopen" id="foldopen00059" data-start="{" data-end="}">
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a5e973c316c93e0e8d3e19438dabd1d26">   59</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00060" data-start="{" data-end="}">
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#accfee682a696aa6cf306750024cd0600">   60</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#ade68e18f96667d63208378671e7ce835">xiiDynamicArrayBase&lt;T&gt;::operator=</a>(<a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;</a>&amp;&amp; rhs) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>{</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="comment">// Clear any existing data (calls destructors if necessary)</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  this-&gt;Clear();</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keywordflow">if</span> (this-&gt;m_pAllocator.GetPtr() == rhs.m_pAllocator.GetPtr() &amp;&amp; rhs.m_pAllocator.GetFlags() == Storage::Owned) <span class="comment">// only move the storage of rhs, if it owns it</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <span class="keywordflow">if</span> (this-&gt;m_pAllocator.GetFlags() == Storage::Owned)</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>      <span class="comment">// only delete our storage, if we own it</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>      XII_DELETE_RAW_BUFFER(this-&gt;m_pAllocator, this-&gt;m_pElements);</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    }</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    <span class="comment">// we now own this storage</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    this-&gt;m_pAllocator.SetFlags(Storage::Owned);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    <span class="comment">// move the data over from the other array</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    this-&gt;m_uiCount    = rhs.m_uiCount;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    this-&gt;m_uiCapacity = rhs.m_uiCapacity;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    this-&gt;m_pElements  = rhs.m_pElements;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="comment">// reset the other array to not reference the data anymore</span></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    rhs.m_pElements  = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    rhs.m_uiCount    = 0;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    rhs.m_uiCapacity = 0;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  }</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  {</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <span class="comment">// Ensure we have enough data.</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    this-&gt;Reserve(rhs.m_uiCount);</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    this-&gt;m_uiCount = rhs.m_uiCount;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#acddb7a04ed071f62321060eb8c59ab87">xiiMemoryUtils::RelocateConstruct</a>(this-&gt;GetElementsPtr(), rhs.GetElementsPtr() <span class="comment">/* vital to remap rhs.m_pElements to absolute ptr */</span>, rhs.m_uiCount);</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    rhs.m_uiCount = 0;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>}</div>
</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00099" data-start="{" data-end="}">
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a5e973c316c93e0e8d3e19438dabd1d26">   99</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a5e973c316c93e0e8d3e19438dabd1d26">xiiDynamicArrayBase&lt;T&gt;::Swap</a>(<a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>{</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="keywordflow">if</span> (this-&gt;m_pAllocator.GetFlags() == Storage::External &amp;&amp; other.m_pAllocator.<a class="code hl_function" href="../../d4/d14/classxii_pointer_with_flags.htm#a3ea76bbf42e2263481023655472a3547">GetFlags</a>() == Storage::External)</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  {</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    <span class="keyword">constexpr</span> xiiUInt32 InplaceStorageSize = 64;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    <span class="keyword">struct </span><span class="keyword">alignas</span>(XII_ALIGNMENT_OF(T)) Tmp</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    {</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>      xiiUInt8 m_StaticData[InplaceStorageSize * <span class="keyword">sizeof</span>(T)];</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    };</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    <span class="keyword">const</span> xiiUInt32 localSize      = this-&gt;m_uiCount;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    <span class="keyword">const</span> xiiUInt32 otherLocalSize = other.<a class="code hl_variable" href="../../da/d4c/classxii_array_base.htm#a466dea27f227cab87a867becebce4bcb">m_uiCount</a>;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="keywordflow">if</span> (localSize &lt;= InplaceStorageSize &amp;&amp; otherLocalSize &lt;= InplaceStorageSize &amp;&amp; localSize &lt;= other.<a class="code hl_variable" href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">m_uiCapacity</a> &amp;&amp;</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>        otherLocalSize &lt;= this-&gt;m_uiCapacity)</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    {</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>      Tmp tmp;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>      <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#acddb7a04ed071f62321060eb8c59ab87">xiiMemoryUtils::RelocateConstruct</a>(<span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(tmp.m_StaticData), this-&gt;GetElementsPtr(), localSize);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>      <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#acddb7a04ed071f62321060eb8c59ab87">xiiMemoryUtils::RelocateConstruct</a>(this-&gt;GetElementsPtr(), other.GetElementsPtr(), otherLocalSize);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>      <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#acddb7a04ed071f62321060eb8c59ab87">xiiMemoryUtils::RelocateConstruct</a>(other.GetElementsPtr(), <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(tmp.m_StaticData), localSize);</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>      <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(this-&gt;m_pAllocator, other.m_pAllocator);</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>      <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(this-&gt;m_uiCount, other.<a class="code hl_variable" href="../../da/d4c/classxii_array_base.htm#a466dea27f227cab87a867becebce4bcb">m_uiCount</a>);</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>      <span class="keywordflow">return</span>; <span class="comment">// successfully swapped in place</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    }</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>    <span class="comment">// temp buffer was insufficient -&gt; fallthrough</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  }</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="keywordflow">if</span> (this-&gt;m_pAllocator.GetFlags() == Storage::External)</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  {</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>    <span class="comment">// enforce using own storage</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    this-&gt;Reserve(this-&gt;m_uiCapacity + 1);</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  }</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="keywordflow">if</span> (other.m_pAllocator.<a class="code hl_function" href="../../d4/d14/classxii_pointer_with_flags.htm#a3ea76bbf42e2263481023655472a3547">GetFlags</a>() == Storage::External)</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  {</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <span class="comment">// enforce using own storage</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    other.<a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a9d30fef4224f0f636084a8ed1bf3c7b1">Reserve</a>(other.<a class="code hl_variable" href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">m_uiCapacity</a> + 1);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  }</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <span class="comment">// no external storage involved -&gt; swap pointers</span></div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(this-&gt;m_pAllocator, other.m_pAllocator);</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  this-&gt;DoSwap(other);</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>}</div>
</div>
</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;::SetCapacity</a>(xiiUInt32 uiCapacity)</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>{</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  <span class="comment">// do NOT early out here, it is vital that this function does its thing even if the old capacity would be sufficient</span></div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <span class="keywordflow">if</span> (this-&gt;m_pAllocator.GetFlags() == Storage::Owned &amp;&amp; uiCapacity &gt; this-&gt;m_uiCapacity)</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  {</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    this-&gt;m_pElements = XII_EXTEND_RAW_BUFFER(this-&gt;m_pAllocator, this-&gt;m_pElements, this-&gt;m_uiCount, uiCapacity);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  }</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  {</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    T* pOldElements = GetElementsPtr();</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    T* pNewElements = XII_NEW_RAW_BUFFER(this-&gt;m_pAllocator, T, uiCapacity);</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#acddb7a04ed071f62321060eb8c59ab87">xiiMemoryUtils::RelocateConstruct</a>(pNewElements, pOldElements, this-&gt;m_uiCount);</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>    <span class="keywordflow">if</span> (this-&gt;m_pAllocator.GetFlags() == Storage::Owned)</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    {</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>      XII_DELETE_RAW_BUFFER(this-&gt;m_pAllocator, pOldElements);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>    }</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    <span class="comment">// after any resize, we definitely own the storage</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    this-&gt;m_pAllocator.SetFlags(Storage::Owned);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    this-&gt;m_pElements = pNewElements;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  }</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  this-&gt;m_uiCapacity = uiCapacity;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>}</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00178" data-start="{" data-end="}">
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a9d30fef4224f0f636084a8ed1bf3c7b1">  178</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a9d30fef4224f0f636084a8ed1bf3c7b1">xiiDynamicArrayBase&lt;T&gt;::Reserve</a>(xiiUInt32 uiCapacity)</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>{</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="keywordflow">if</span> (this-&gt;m_uiCapacity &gt;= uiCapacity)</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  <span class="keyword">const</span> xiiUInt64 uiCurCap64      = <span class="keyword">static_cast&lt;</span>xiiUInt64<span class="keyword">&gt;</span>(this-&gt;m_uiCapacity);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  xiiUInt64       uiNewCapacity64 = uiCurCap64 + (uiCurCap64 / 2);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  uiNewCapacity64 = <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max&lt;xiiUInt64&gt;</a>(uiNewCapacity64, uiCapacity);</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  <span class="keyword">constexpr</span> xiiUInt64 uiMaxCapacity = 0xFFFFFFFFllu - (CAPACITY_ALIGNMENT - 1);</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <span class="comment">// the maximum value must leave room for the capacity alignment computation below (without overflowing the 32 bit range)</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  uiNewCapacity64 = <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min&lt;xiiUInt64&gt;</a>(uiNewCapacity64, uiMaxCapacity);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  uiNewCapacity64 = (uiNewCapacity64 + (CAPACITY_ALIGNMENT - 1)) &amp; ~(CAPACITY_ALIGNMENT - 1);</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  XII_ASSERT_DEV(uiCapacity &lt;= uiNewCapacity64, <span class="stringliteral">&quot;The requested capacity of {} elements exceeds the maximum possible capacity of {} elements.&quot;</span>, uiCapacity, uiMaxCapacity);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  SetCapacity(<span class="keyword">static_cast&lt;</span>xiiUInt32<span class="keyword">&gt;</span>(uiNewCapacity64 &amp; 0xFFFFFFFF));</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>}</div>
</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span> </div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00201" data-start="{" data-end="}">
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#a6d358b4088479f7fa46cf78500b6c326">  201</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#a6d358b4088479f7fa46cf78500b6c326">xiiDynamicArrayBase&lt;T&gt;::Compact</a>()</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>{</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  <span class="keywordflow">if</span> (m_pAllocator.GetFlags() == Storage::External)</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  <span class="keywordflow">if</span> (this-&gt;IsEmpty())</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  {</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>    <span class="comment">// completely deallocate all data, if the array is empty.</span></div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>    XII_DELETE_RAW_BUFFER(this-&gt;m_pAllocator, this-&gt;m_pElements);</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>    this-&gt;m_uiCapacity = 0;</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>  }</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  {</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    <span class="keyword">const</span> xiiUInt32 uiNewCapacity = (this-&gt;m_uiCount + (CAPACITY_ALIGNMENT - 1)) &amp; ~(CAPACITY_ALIGNMENT - 1);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    <span class="keywordflow">if</span> (this-&gt;m_uiCapacity != uiNewCapacity)</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>      SetCapacity(uiNewCapacity);</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>  }</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>}</div>
</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>XII_ALWAYS_INLINE T* <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;::GetElementsPtr</a>()</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>{</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  <span class="keywordflow">return</span> this-&gt;m_pElements;</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>}</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>XII_ALWAYS_INLINE <span class="keyword">const</span> T* <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;::GetElementsPtr</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  <span class="keywordflow">return</span> this-&gt;m_pElements;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>}</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00233" data-start="{" data-end="}">
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno"><a class="line" href="../../d2/dea/classxii_dynamic_array_base.htm#ac55eab0198c86747de97680542cd75e8">  233</a></span>xiiUInt64 <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#ac55eab0198c86747de97680542cd75e8">xiiDynamicArrayBase&lt;T&gt;::GetHeapMemoryUsage</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  <span class="keywordflow">if</span> (this-&gt;m_pAllocator.GetFlags() == Storage::External)</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  <span class="keywordflow">return</span> (xiiUInt64)this-&gt;m_uiCapacity * (xiiUInt64)<span class="keyword">sizeof</span>(T);</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>}</div>
</div>
</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span> </div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span><a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::xiiDynamicArray</a>() :</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase</a>&lt;T&gt;(<a class="code hl_class" href="../../d8/d4f/class_a.htm">A</a>::GetAllocator())</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>{</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>}</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span><a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::xiiDynamicArray</a>(<a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase</a>&lt;T&gt;(pAllocator)</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>{</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>}</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span> </div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span><a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::xiiDynamicArray</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;</a>&amp; other) :</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>  <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase</a>&lt;T&gt;(other, <a class="code hl_class" href="../../d8/d4f/class_a.htm">A</a>::GetAllocator())</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>{</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>}</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span><a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::xiiDynamicArray</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;</a>&amp; other) :</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase</a>&lt;T&gt;(other, <a class="code hl_class" href="../../d8/d4f/class_a.htm">A</a>::GetAllocator())</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>{</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>}</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span> </div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span><a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::xiiDynamicArray</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; other) :</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase</a>&lt;T&gt;(other, <a class="code hl_class" href="../../d8/d4f/class_a.htm">A</a>::GetAllocator())</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>{</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>}</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span><a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::xiiDynamicArray</a>(<a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;</a>&amp;&amp; other) :</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase</a>&lt;T&gt;(std::move(other), other.GetAllocator())</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>{</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>}</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span><a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::xiiDynamicArray</a>(<a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;</a>&amp;&amp; other) :</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>  <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase</a>&lt;T&gt;(std::move(other), other.GetAllocator())</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>{</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>}</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span> </div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>{</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>  <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#ade68e18f96667d63208378671e7ce835">xiiDynamicArrayBase&lt;T&gt;::operator=</a>(rhs);</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>}</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>{</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>  <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#ade68e18f96667d63208378671e7ce835">xiiDynamicArrayBase&lt;T&gt;::operator=</a>(rhs);</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>}</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span> </div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>{</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>  <a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, xiiDynamicArrayBase&lt;T&gt;</a>&gt;::operator=(rhs);</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>}</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span> </div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::operator=</a>(<a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;</a>&amp;&amp; rhs) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>{</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>  <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#ade68e18f96667d63208378671e7ce835">xiiDynamicArrayBase&lt;T&gt;::operator=</a>(std::move(rhs));</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>}</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span> </div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, A&gt;::operator=</a>(<a class="code hl_class" href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase&lt;T&gt;</a>&amp;&amp; rhs) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>{</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>  <a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#ade68e18f96667d63208378671e7ce835">xiiDynamicArrayBase&lt;T&gt;::operator=</a>(std::move(rhs));</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>}</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> AllocatorWrapper&gt;</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span><a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T* const&gt;</a> xiiMakeArrayPtr(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T*, AllocatorWrapper&gt;</a>&amp; dynArray)</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>{</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T* const&gt;</a>(dynArray.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), dynArray.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>());</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>}</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span> </div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> AllocatorWrapper&gt;</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span><a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a> xiiMakeArrayPtr(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, AllocatorWrapper&gt;</a>&amp; dynArray)</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>{</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>(dynArray.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), dynArray.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>());</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>}</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> AllocatorWrapper&gt;</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span><a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a> xiiMakeArrayPtr(<a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;T, AllocatorWrapper&gt;</a>&amp; ref_dynArray)</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>{</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a>(ref_dynArray.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), ref_dynArray.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>());</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>}</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="ttc" id="aclass_a_htm"><div class="ttname"><a href="../../d8/d4f/class_a.htm">A</a></div><div class="ttdef"><b>Definition</b> diagrams_a.h:3</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassxii_array_base_htm"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm">xiiArrayBase</a></div><div class="ttdoc">Base class for all array containers. Implements all the basic functionality that only requires a poin...</div><div class="ttdef"><b>Definition</b> ArrayBase.h:19</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a2ac4701f79554bcc89ba1a2b0ad5f9ad"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">xiiArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:417</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4071fdcb9041d9f4ad7ffabccdf8eb5e"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">xiiArrayBase&lt; T, xiiDynamicArrayBase&lt; T &gt; &gt;::m_uiCapacity</a></div><div class="ttdeci">xiiUInt32 m_uiCapacity</div><div class="ttdef"><b>Definition</b> ArrayBase.h:199</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a43100f93e19bb795ea0980dae2b28e0b"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">xiiArrayBase::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:164</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a466dea27f227cab87a867becebce4bcb"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a466dea27f227cab87a867becebce4bcb">xiiArrayBase::m_uiCount</a></div><div class="ttdeci">xiiUInt32 m_uiCount</div><div class="ttdoc">The number of elements used from the array.</div><div class="ttdef"><b>Definition</b> ArrayBase.h:196</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ac72646567deadcaaf4f24b6ce2b61a4d"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ac72646567deadcaaf4f24b6ce2b61a4d">xiiArrayBase&lt; T, xiiDynamicArrayBase&lt; T &gt; &gt;::m_pElements</a></div><div class="ttdeci">T * m_pElements</div><div class="ttdef"><b>Definition</b> ArrayBase.h:193</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:37</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm">xiiDynamicArrayBase</a></div><div class="ttdoc">Implementation of a dynamically growing array.</div><div class="ttdef"><b>Definition</b> DynamicArray.h:14</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_a3d738ae761e844b79762a8782cc01d15"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#a3d738ae761e844b79762a8782cc01d15">xiiDynamicArrayBase::~xiiDynamicArrayBase</a></div><div class="ttdeci">~xiiDynamicArrayBase()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition</b> DynamicArray_inl.h:39</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_a44b428b0e9bd8d731bd2f4a57bdd5828"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#a44b428b0e9bd8d731bd2f4a57bdd5828">xiiDynamicArrayBase::xiiDynamicArrayBase</a></div><div class="ttdeci">xiiDynamicArrayBase(xiiAllocatorBase *pAllocator)</div><div class="ttdoc">Creates an empty array. Does not allocate any data yet.</div><div class="ttdef"><b>Definition</b> DynamicArray_inl.h:3</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_a5e973c316c93e0e8d3e19438dabd1d26"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#a5e973c316c93e0e8d3e19438dabd1d26">xiiDynamicArrayBase::Swap</a></div><div class="ttdeci">void Swap(xiiDynamicArrayBase&lt; T &gt; &amp;other)</div><div class="ttdoc">swaps the contents of this array with another one</div><div class="ttdef"><b>Definition</b> DynamicArray_inl.h:99</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_a6d358b4088479f7fa46cf78500b6c326"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#a6d358b4088479f7fa46cf78500b6c326">xiiDynamicArrayBase::Compact</a></div><div class="ttdeci">void Compact()</div><div class="ttdoc">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no...</div><div class="ttdef"><b>Definition</b> DynamicArray_inl.h:201</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_a9d30fef4224f0f636084a8ed1bf3c7b1"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#a9d30fef4224f0f636084a8ed1bf3c7b1">xiiDynamicArrayBase::Reserve</a></div><div class="ttdeci">void Reserve(xiiUInt32 uiCapacity)</div><div class="ttdoc">Expands the array so it can at least store the given capacity.</div><div class="ttdef"><b>Definition</b> DynamicArray_inl.h:178</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_ac55eab0198c86747de97680542cd75e8"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#ac55eab0198c86747de97680542cd75e8">xiiDynamicArrayBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition</b> DynamicArray_inl.h:233</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_ade68e18f96667d63208378671e7ce835"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#ade68e18f96667d63208378671e7ce835">xiiDynamicArrayBase::operator=</a></div><div class="ttdeci">void operator=(const xiiDynamicArrayBase&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Copies the data from some other contiguous array into this one.</div><div class="ttdef"><b>Definition</b> DynamicArray_inl.h:54</div></div>
<div class="ttc" id="aclassxii_dynamic_array_htm"><div class="ttname"><a href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a></div><div class="ttdef"><b>Definition</b> DynamicArray.h:81</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_acddb7a04ed071f62321060eb8c59ab87"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#acddb7a04ed071f62321060eb8c59ab87">xiiMemoryUtils::RelocateConstruct</a></div><div class="ttdeci">static void RelocateConstruct(T *pDestination, T *pSource, size_t uiCount=1)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination from an existing array of object...</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a18faf0609e4f0740c76c5772b8f894b0"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a18faf0609e4f0740c76c5772b8f894b0">xiiPointerWithFlags::SetFlags</a></div><div class="ttdeci">void SetFlags(xiiUInt8 uiFlags)</div><div class="ttdoc">Changes only the flags value. The given value must fit into the reserved bits.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:73</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a3ea76bbf42e2263481023655472a3547"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a3ea76bbf42e2263481023655472a3547">xiiPointerWithFlags::GetFlags</a></div><div class="ttdeci">xiiUInt8 GetFlags() const</div><div class="ttdoc">Returns the flags value only.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:66</div></div>
<div class="ttc" id="anamespacexii_math_htm_a2c660f80f0df5bb91a751d12a93cb9cb"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a></div><div class="ttdeci">constexpr XII_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:26</div></div>
<div class="ttc" id="anamespacexii_math_htm_a2e7c389d4195d010ba0c207a1e981a58"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a></div><div class="ttdeci">XII_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:222</div></div>
<div class="ttc" id="anamespacexii_math_htm_a4d6f8bf4858245e40a706a3aabd0a59e"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max</a></div><div class="ttdeci">constexpr XII_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:38</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_7f59ab18dbc50035dfc0ee7070867286.htm">Containers</a></li><li class="navelem"><a class="el" href="../../dir_acc055bf9d45372e5f916366fab93514.htm">Implementation</a></li><li class="navelem"><b>DynamicArray_inl.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:47:28 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
