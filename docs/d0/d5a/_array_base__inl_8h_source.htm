<!-- HTML header for doxygen 1.11.0-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Engine/Foundation/Containers/Implementation/ArrayBase_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript">
  DoxygenAwesomeDarkModeToggle.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript">
  DoxygenAwesomeFragmentCopyButton.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
  DoxygenAwesomeParagraphLink.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
  DoxygenAwesomeInteractiveToc.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d0/d5a/_array_base__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ArrayBase_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a85ea62d9f68f7a08c0d71d4f60ec4d7b">xiiArrayBase&lt;T, Derived&gt;::xiiArrayBase</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00006" data-start="{" data-end="}">
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a1aa63ec4e48bbcd78206f1a4d0ed3412">    6</a></span><a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a1aa63ec4e48bbcd78206f1a4d0ed3412">xiiArrayBase&lt;T, Derived&gt;::~xiiArrayBase</a>()</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>  XII_ASSERT_DEBUG(m_uiCount == 0, <span class="stringliteral">&quot;The derived class did not destruct all objects. Count is {0}.&quot;</span>, m_uiCount);</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  XII_ASSERT_DEBUG(m_pElements == <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The derived class did not free its memory.&quot;</span>);</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>}</div>
</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00013" data-start="{" data-end="}">
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#aba1caa3a7fd339b97a42b7a7c6462440">   13</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#aba1caa3a7fd339b97a42b7a7c6462440">xiiArrayBase&lt;T, Derived&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keywordflow">if</span> (this-&gt;GetData() == rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#acfb4db6e3a381669be860ce1a5500c6b">GetPtr</a>())</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  {</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    <span class="keywordflow">if</span> (m_uiCount == rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>())</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    XII_ASSERT_DEV(m_uiCount &gt; rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>(), <span class="stringliteral">&quot;Dangling array pointer. The given array pointer points to invalid memory.&quot;</span>);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a6c8728654ad1b5c0c9dcbb597a93594d">xiiMemoryUtils::Destruct</a>(pElements + rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>(), m_uiCount - rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>());</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>    m_uiCount = rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>();</div>
<div class="foldopen" id="foldopen00025" data-start="{" data-end="}">
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a1aa63ec4e48bbcd78206f1a4d0ed3412">   25</a></span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  }</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="foldopen" id="foldopen00028" data-start="{" data-end="}">
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#aba1caa3a7fd339b97a42b7a7c6462440">   28</a></span>  <span class="keyword">const</span> xiiUInt32 uiOldCount = m_uiCount;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="keyword">const</span> xiiUInt32 uiNewCount = rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>();</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#aa4906be518b884c8392f5835e4ff5675">   31</a></span>  <span class="keywordflow">if</span> (uiNewCount &gt; uiOldCount)</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  {</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(uiNewCount);</div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="}">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a7ac8b6132b510436cacd5e175a878bbc">   34</a></span>    T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a>(pElements, rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#acfb4db6e3a381669be860ce1a5500c6b">GetPtr</a>(), uiOldCount);</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#ae8fab7dfd33a7693c95a8c58def775fd">xiiMemoryUtils::CopyConstructArray</a>(pElements + uiOldCount, rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#acfb4db6e3a381669be860ce1a5500c6b">GetPtr</a>() + uiOldCount, uiNewCount - uiOldCount);</div>
<div class="foldopen" id="foldopen00037" data-start="{" data-end="}">
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ad70f0262f264a918f64d8018bc85054d">   37</a></span>  }</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  {</div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="}">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a950bfcf80cb60c580a815c3a4fafdbe2">   40</a></span>    T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a>(pElements, rhs.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#acfb4db6e3a381669be860ce1a5500c6b">GetPtr</a>(), uiNewCount);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a6c8728654ad1b5c0c9dcbb597a93594d">xiiMemoryUtils::Destruct</a>(pElements + uiNewCount, uiOldCount - uiNewCount);</div>
<div class="foldopen" id="foldopen00043" data-start="{" data-end="}">
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a05f353b06f2a42dda6ef5d122d459e2f">   43</a></span>  }</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  m_uiCount = uiNewCount;</div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="}">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a2efa1906d1123183f18a70fc2a008fc3">   46</a></span>}</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00049" data-start="{" data-end="}">
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#aa4906be518b884c8392f5835e4ff5675">   49</a></span>XII_ALWAYS_INLINE <a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;::operator</a> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr(), m_uiCount);</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">   52</a></span>}</div>
</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a7ac8b6132b510436cacd5e175a878bbc">   55</a></span>XII_ALWAYS_INLINE <a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;::operator</a> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a>()</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>{</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr(), m_uiCount);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>}</div>
</div>
<div class="foldopen" id="foldopen00059" data-start="{" data-end="}">
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">   59</a></span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00061" data-start="{" data-end="}">
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ad70f0262f264a918f64d8018bc85054d">   61</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#ad70f0262f264a918f64d8018bc85054d">xiiArrayBase&lt;T, Derived&gt;::operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00063" data-start="{" data-end="}">
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ac9e0425e1b0ae3e9a958af289d336b34">   63</a></span>  <span class="keywordflow">if</span> (m_uiCount != rhs.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>())</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="foldopen" id="foldopen00066" data-start="{" data-end="}">
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">   66</a></span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a82f92064b280ab0015bd5a88c42618bc">xiiMemoryUtils::IsEqual</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr(), rhs.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), m_uiCount);</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>}</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="foldopen" id="foldopen00069" data-start="{" data-end="}">
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">   69</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00070" data-start="{" data-end="}">
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a950bfcf80cb60c580a815c3a4fafdbe2">   70</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a950bfcf80cb60c580a815c3a4fafdbe2">xiiArrayBase&lt;T, Derived&gt;::operator&lt;</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00072" data-start="{" data-end="}">
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ab517ef07fbed3ecc766ac24394ae1fc8">   72</a></span>  <span class="keywordflow">return</span> GetArrayPtr() &lt; rhs.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">GetArrayPtr</a>();</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>}</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="foldopen" id="foldopen00075" data-start="{" data-end="}">
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a4ae4bf9cd46a5736ddeed4672e84d05c">   75</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00076" data-start="{" data-end="}">
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a05f353b06f2a42dda6ef5d122d459e2f">   76</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a950bfcf80cb60c580a815c3a4fafdbe2">xiiArrayBase&lt;T, Derived&gt;::operator&lt;</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00078" data-start="{" data-end="}">
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#aab14a4d946d6fc3a98cb0907b830d829">   78</a></span>  <span class="keywordflow">return</span> GetArrayPtr() &lt; rhs;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>}</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="foldopen" id="foldopen00081" data-start="{" data-end="}">
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ad1e58f68091c53115dbdb0ec618ff8c4">   81</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00082" data-start="{" data-end="}">
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a2efa1906d1123183f18a70fc2a008fc3">   82</a></span>XII_ALWAYS_INLINE <span class="keyword">const</span> T&amp; <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2efa1906d1123183f18a70fc2a008fc3">xiiArrayBase&lt;T, Derived&gt;::operator[]</a>(<span class="keyword">const</span> xiiUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00084" data-start="{" data-end="}">
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a0f15ffe8d9d4cf30dbfe85f2355f87f3">   84</a></span>  XII_ASSERT_DEBUG(uiIndex &lt; m_uiCount, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to access element at index {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr()[uiIndex];</div>
<div class="foldopen" id="foldopen00087" data-start="{" data-end="}">
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a79122e86b6c0895983dde7da738f4f7e">   87</a></span>}</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00090" data-start="{" data-end="}">
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a735b58104c532af6199fa354f4a3c12c">   90</a></span>XII_ALWAYS_INLINE T&amp; <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2efa1906d1123183f18a70fc2a008fc3">xiiArrayBase&lt;T, Derived&gt;::operator[]</a>(<span class="keyword">const</span> xiiUInt32 uiIndex)</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>{</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  XII_ASSERT_DEBUG(uiIndex &lt; m_uiCount, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to access element at index {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="foldopen" id="foldopen00093" data-start="{" data-end="}">
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a37ed2d14e39f124a0e4b3afad19615d0">   93</a></span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr()[uiIndex];</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>}</div>
<div class="foldopen" id="foldopen00096" data-start="{" data-end="}">
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#af88e03749773adddbbbac8389963c69f">   96</a></span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00098" data-start="{" data-end="}">
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">   98</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">xiiArrayBase&lt;T, Derived&gt;::SetCount</a>(xiiUInt32 uiCount)</div>
<div class="foldopen" id="foldopen00099" data-start="{" data-end="}">
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a3f1d04afc7c0b78048a6ae00f0dad616">   99</a></span>{</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  <span class="keyword">const</span> xiiUInt32 uiOldCount = m_uiCount;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="keyword">const</span> xiiUInt32 uiNewCount = uiCount;</div>
<div class="foldopen" id="foldopen00102" data-start="{" data-end="}">
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a33d696c060495085bcdd4a9774959179">  102</a></span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keywordflow">if</span> (uiNewCount &gt; uiOldCount)</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  {</div>
<div class="foldopen" id="foldopen00105" data-start="{" data-end="}">
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#af8b150ecd75941f71981db12f78c70b2">  105</a></span>    <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(uiNewCount);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a0b9f518ec24d03e497b61b248ead335e">xiiMemoryUtils::Construct&lt;ConstructAll&gt;</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiOldCount, uiNewCount - uiOldCount);</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  }</div>
<div class="foldopen" id="foldopen00108" data-start="{" data-end="}">
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ae7c9f257c3d2dad1fd92d8b80465e22c">  108</a></span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (uiNewCount &lt; uiOldCount)</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  {</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a6c8728654ad1b5c0c9dcbb597a93594d">xiiMemoryUtils::Destruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiNewCount, uiOldCount - uiNewCount);</div>
<div class="foldopen" id="foldopen00111" data-start="{" data-end="}">
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">  111</a></span>  }</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  m_uiCount = uiCount;</div>
<div class="foldopen" id="foldopen00114" data-start="{" data-end="}">
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a3355e9462666104de28256850ae10f7d">  114</a></span>}</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00117" data-start="{" data-end="}">
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ab61a71e4322d8397a82a6d37c3fb9a33">  117</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">xiiArrayBase&lt;T, Derived&gt;::SetCount</a>(xiiUInt32 uiCount, <span class="keyword">const</span> T&amp; fillValue)</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>{</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <span class="keyword">const</span> xiiUInt32 uiOldCount = m_uiCount;</div>
<div class="foldopen" id="foldopen00120" data-start="{" data-end="}">
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a8213d4f8e70805d521da6030ae520c9f">  120</a></span>  <span class="keyword">const</span> xiiUInt32 uiNewCount = uiCount;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="keywordflow">if</span> (uiNewCount &gt; uiOldCount)</div>
<div class="foldopen" id="foldopen00123" data-start="{" data-end="}">
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ab24631562df0f7a1c2f991000490b5c6">  123</a></span>  {</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(uiNewCount);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#aece4fdeb5f8a35b58bd979302f3e9768">xiiMemoryUtils::CopyConstruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiOldCount, fillValue, uiNewCount - uiOldCount);</div>
<div class="foldopen" id="foldopen00126" data-start="{" data-end="}">
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a27e05cf9ccd5e5c2434612da12648733">  126</a></span>  }</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (uiNewCount &lt; uiOldCount)</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  {</div>
<div class="foldopen" id="foldopen00129" data-start="{" data-end="}">
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a4780d4cda12bb4316d96e80c7e976091">  129</a></span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a6c8728654ad1b5c0c9dcbb597a93594d">xiiMemoryUtils::Destruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiNewCount, uiOldCount - uiNewCount);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  }</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="foldopen" id="foldopen00132" data-start="{" data-end="}">
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#abf3fa9c3e24881ed47faf68a671fb122">  132</a></span>  m_uiCount = uiCount;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>}</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00136" data-start="{" data-end="}">
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ac9e0425e1b0ae3e9a958af289d336b34">  136</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#ac9e0425e1b0ae3e9a958af289d336b34">xiiArrayBase&lt;T, Derived&gt;::EnsureCount</a>(xiiUInt32 uiCount)</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>{</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <span class="keywordflow">if</span> (uiCount &gt; m_uiCount)</div>
<div class="foldopen" id="foldopen00139" data-start="{" data-end="}">
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ad02c74f222eb78fe41627cc3b41fa3ad">  139</a></span>  {</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    SetCount(uiCount);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  }</div>
<div class="foldopen" id="foldopen00142" data-start="{" data-end="}">
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">  142</a></span>}</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00145" data-start="{" data-end="}">
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#afa0f541ab1df4e1aaf6627d9f983b0a9">  145</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="comment">// Second template needed so that the compiler does only instantiate it when called. Otherwise the static_assert would trigger</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span><span class="comment">// early.</span></div>
<div class="foldopen" id="foldopen00147" data-start="{" data-end="}">
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">  147</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">xiiArrayBase&lt;T, Derived&gt;::SetCountUninitialized</a>(xiiUInt32 uiCount)</div>
<div class="foldopen" id="foldopen00148" data-start="{" data-end="}">
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">  148</a></span>{</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <span class="keyword">static_assert</span>(<a class="code hl_struct" href="../../d2/dad/structxii_is_pod_type.htm">xiiIsPodType&lt;T&gt;::value</a> == xiiTypeIsPod::value, <span class="stringliteral">&quot;SetCountUninitialized is only supported for POD types.&quot;</span>);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  <span class="keyword">const</span> xiiUInt32 uiOldCount = m_uiCount;</div>
<div class="foldopen" id="foldopen00151" data-start="{" data-end="}">
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a13160b173a1c3b3b19bd9cbd98e6e9ad">  151</a></span>  <span class="keyword">const</span> xiiUInt32 uiNewCount = uiCount;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <span class="keywordflow">if</span> (uiNewCount &gt; uiOldCount)</div>
<div class="foldopen" id="foldopen00154" data-start="{" data-end="}">
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a479716d5712790819c5f5130c7985f15">  154</a></span>  {</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(uiNewCount);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="foldopen" id="foldopen00157" data-start="{" data-end="}">
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a9988906575d152bc3d0029d251641e8a">  157</a></span>    <span class="comment">// We already assert above that T is a POD type. Do not construct anything and leave the memory untouched.</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  }</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  m_uiCount = uiCount;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>}</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00164" data-start="{" data-end="}">
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">  164</a></span>XII_ALWAYS_INLINE xiiUInt32 <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">xiiArrayBase&lt;T, Derived&gt;::GetCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  <span class="keywordflow">return</span> m_uiCount;</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>}</div>
</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00170" data-start="{" data-end="}">
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">  170</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">xiiArrayBase&lt;T, Derived&gt;::IsEmpty</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  <span class="keywordflow">return</span> m_uiCount == 0;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>}</div>
</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00176" data-start="{" data-end="}">
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ab517ef07fbed3ecc766ac24394ae1fc8">  176</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#ab517ef07fbed3ecc766ac24394ae1fc8">xiiArrayBase&lt;T, Derived&gt;::Clear</a>()</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>{</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a6c8728654ad1b5c0c9dcbb597a93594d">xiiMemoryUtils::Destruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr(), m_uiCount);</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  m_uiCount = 0;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>}</div>
</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00183" data-start="{" data-end="}">
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a4ae4bf9cd46a5736ddeed4672e84d05c">  183</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a4ae4bf9cd46a5736ddeed4672e84d05c">xiiArrayBase&lt;T, Derived&gt;::Contains</a>(<span class="keyword">const</span> T&amp; value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keywordflow">return</span> IndexOf(value) != xiiInvalidIndex;</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>}</div>
</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00189" data-start="{" data-end="}">
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#aab14a4d946d6fc3a98cb0907b830d829">  189</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#aab14a4d946d6fc3a98cb0907b830d829">xiiArrayBase&lt;T, Derived&gt;::InsertAt</a>(xiiUInt32 uiIndex, <span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>{</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  XII_ASSERT_DEV(uiIndex &lt;= m_uiCount, <span class="stringliteral">&quot;Invalid index. Array has {0} elements, trying to insert element at index {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a37c0501684dc3bcc11f47bf8d77bcfa5">xiiMemoryUtils::Prepend</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiIndex, value, m_uiCount - uiIndex);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  m_uiCount++;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>}</div>
</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00200" data-start="{" data-end="}">
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ad1e58f68091c53115dbdb0ec618ff8c4">  200</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#aab14a4d946d6fc3a98cb0907b830d829">xiiArrayBase&lt;T, Derived&gt;::InsertAt</a>(xiiUInt32 uiIndex, T&amp;&amp; value)</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>{</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  XII_ASSERT_DEV(uiIndex &lt;= m_uiCount, <span class="stringliteral">&quot;Invalid index. Array has {0} elements, trying to insert element at index {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a37c0501684dc3bcc11f47bf8d77bcfa5">xiiMemoryUtils::Prepend</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiIndex, std::move(value), m_uiCount - uiIndex);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  m_uiCount++;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>}</div>
</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00211" data-start="{" data-end="}">
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a0f15ffe8d9d4cf30dbfe85f2355f87f3">  211</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a0f15ffe8d9d4cf30dbfe85f2355f87f3">xiiArrayBase&lt;T, Derived&gt;::InsertRange</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; range, xiiUInt32 uiIndex)</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>{</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  <span class="keyword">const</span> xiiUInt32 uiRangeCount = range.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>();</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + uiRangeCount);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a37c0501684dc3bcc11f47bf8d77bcfa5">xiiMemoryUtils::Prepend</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiIndex, range.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#acfb4db6e3a381669be860ce1a5500c6b">GetPtr</a>(), uiRangeCount, m_uiCount - uiIndex);</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>  m_uiCount += uiRangeCount;</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>}</div>
</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00221" data-start="{" data-end="}">
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a79122e86b6c0895983dde7da738f4f7e">  221</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a79122e86b6c0895983dde7da738f4f7e">xiiArrayBase&lt;T, Derived&gt;::RemoveAndCopy</a>(<span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>{</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  xiiUInt32 uiIndex = IndexOf(value);</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  <span class="keywordflow">if</span> (uiIndex == xiiInvalidIndex)</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  RemoveAtAndCopy(uiIndex);</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>}</div>
</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00233" data-start="{" data-end="}">
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#af44f4640654ede7c5f3b6dea920fc852">  233</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#af44f4640654ede7c5f3b6dea920fc852">xiiArrayBase&lt;T, Derived&gt;::RemoveAndSwap</a>(<span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>{</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  xiiUInt32 uiIndex = IndexOf(value);</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  <span class="keywordflow">if</span> (uiIndex == xiiInvalidIndex)</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  RemoveAtAndSwap(uiIndex);</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>}</div>
</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00245" data-start="{" data-end="}">
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a37ed2d14e39f124a0e4b3afad19615d0">  245</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a37ed2d14e39f124a0e4b3afad19615d0">xiiArrayBase&lt;T, Derived&gt;::RemoveAtAndCopy</a>(xiiUInt32 uiIndex, xiiUInt32 uiNumElements <span class="comment">/*= 1*/</span>)</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>{</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  XII_ASSERT_DEV(uiIndex + uiNumElements &lt;= m_uiCount, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to remove element at index {1}.&quot;</span>, m_uiCount, uiIndex + uiNumElements - 1);</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>  m_uiCount -= uiNumElements;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a87bf347cd7290d597774bfead29edb46">xiiMemoryUtils::RelocateOverlapped</a>(pElements + uiIndex, pElements + uiIndex + uiNumElements, m_uiCount - uiIndex);</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>}</div>
</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span> </div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00256" data-start="{" data-end="}">
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#af88e03749773adddbbbac8389963c69f">  256</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#af88e03749773adddbbbac8389963c69f">xiiArrayBase&lt;T, Derived&gt;::RemoveAtAndSwap</a>(xiiUInt32 uiIndex, xiiUInt32 uiNumElements <span class="comment">/*= 1*/</span>)</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>{</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>  XII_ASSERT_DEV(uiIndex + uiNumElements &lt;= m_uiCount, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to remove element at index {1}.&quot;</span>, m_uiCount, uiIndex + uiNumElements - 1);</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span> </div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; uiNumElements; ++i)</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>  {</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    m_uiCount--;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>    <span class="keywordflow">if</span> (m_uiCount != uiIndex)</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>    {</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>      pElements[uiIndex] = std::move(pElements[m_uiCount]);</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>    }</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a6c8728654ad1b5c0c9dcbb597a93594d">xiiMemoryUtils::Destruct</a>(pElements + m_uiCount, 1);</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>    ++uiIndex;</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>  }</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>}</div>
</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00276" data-start="{" data-end="}">
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a3f1d04afc7c0b78048a6ae00f0dad616">  276</a></span>xiiUInt32 <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a3f1d04afc7c0b78048a6ae00f0dad616">xiiArrayBase&lt;T, Derived&gt;::IndexOf</a>(<span class="keyword">const</span> T&amp; value, xiiUInt32 uiStartIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>  <span class="keyword">const</span> T* pElements = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  <span class="keywordflow">for</span> (xiiUInt32 i = uiStartIndex; i &lt; m_uiCount; i++)</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>  {</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a82f92064b280ab0015bd5a88c42618bc">xiiMemoryUtils::IsEqual</a>(pElements + i, &amp;value))</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>      <span class="keywordflow">return</span> i;</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  }</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>  <span class="keywordflow">return</span> xiiInvalidIndex;</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>}</div>
</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span> </div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00289" data-start="{" data-end="}">
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a33d696c060495085bcdd4a9774959179">  289</a></span>xiiUInt32 <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a33d696c060495085bcdd4a9774959179">xiiArrayBase&lt;T, Derived&gt;::LastIndexOf</a>(<span class="keyword">const</span> T&amp; value, xiiUInt32 uiStartIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>  <span class="keyword">const</span> T* pElements = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span> </div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>  <span class="keywordflow">for</span> (xiiUInt32 i = <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a>(uiStartIndex, m_uiCount); i-- &gt; 0;)</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>  {</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a82f92064b280ab0015bd5a88c42618bc">xiiMemoryUtils::IsEqual</a>(pElements + i, &amp;value))</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>      <span class="keywordflow">return</span> i;</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>  }</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>  <span class="keywordflow">return</span> xiiInvalidIndex;</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>}</div>
</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span> </div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00302" data-start="{" data-end="}">
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#af8b150ecd75941f71981db12f78c70b2">  302</a></span>T&amp; <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#af8b150ecd75941f71981db12f78c70b2">xiiArrayBase&lt;T, Derived&gt;::ExpandAndGetRef</a>()</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>{</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span> </div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>  T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a0b9f518ec24d03e497b61b248ead335e">xiiMemoryUtils::Construct&lt;SkipTrivialTypes&gt;</a>(pElements + m_uiCount, 1);</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span> </div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>  T&amp; ReturnRef = *(pElements + m_uiCount);</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span> </div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>  m_uiCount++;</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>  <span class="keywordflow">return</span> ReturnRef;</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>}</div>
</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00318" data-start="{" data-end="}">
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ae7c9f257c3d2dad1fd92d8b80465e22c">  318</a></span>T* <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#ae7c9f257c3d2dad1fd92d8b80465e22c">xiiArrayBase&lt;T, Derived&gt;::ExpandBy</a>(xiiUInt32 uiNumNewItems)</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>{</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>  this-&gt;SetCount(this-&gt;GetCount() + uiNumNewItems);</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>  <span class="keywordflow">return</span> GetArrayPtr().GetEndPtr() - uiNumNewItems;</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>}</div>
</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span> </div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00325" data-start="{" data-end="}">
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">  325</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">xiiArrayBase&lt;T, Derived&gt;::PushBack</a>(<span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>{</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span> </div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#aece4fdeb5f8a35b58bd979302f3e9768">xiiMemoryUtils::CopyConstruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, value, 1);</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>  m_uiCount++;</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>}</div>
</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span> </div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00334" data-start="{" data-end="}">
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a3355e9462666104de28256850ae10f7d">  334</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">xiiArrayBase&lt;T, Derived&gt;::PushBack</a>(T&amp;&amp; value)</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>{</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span> </div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a16883e3b910453d68ffb96562b92eed4">xiiMemoryUtils::MoveConstruct&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, std::move(value));</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>  m_uiCount++;</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>}</div>
</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span> </div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00343" data-start="{" data-end="}">
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ab61a71e4322d8397a82a6d37c3fb9a33">  343</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#ab61a71e4322d8397a82a6d37c3fb9a33">xiiArrayBase&lt;T, Derived&gt;::PushBackUnchecked</a>(<span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>{</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>  XII_ASSERT_DEBUG(m_uiCount &lt; m_uiCapacity, <span class="stringliteral">&quot;Appending unchecked to array with insufficient capacity.&quot;</span>);</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span> </div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#aece4fdeb5f8a35b58bd979302f3e9768">xiiMemoryUtils::CopyConstruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, value, 1);</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>  m_uiCount++;</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>}</div>
</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span> </div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00352" data-start="{" data-end="}">
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a8213d4f8e70805d521da6030ae520c9f">  352</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#ab61a71e4322d8397a82a6d37c3fb9a33">xiiArrayBase&lt;T, Derived&gt;::PushBackUnchecked</a>(T&amp;&amp; value)</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>{</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>  XII_ASSERT_DEBUG(m_uiCount &lt; m_uiCapacity, <span class="stringliteral">&quot;Appending unchecked to array with insufficient capacity.&quot;</span>);</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span> </div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a16883e3b910453d68ffb96562b92eed4">xiiMemoryUtils::MoveConstruct&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, std::move(value));</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>  m_uiCount++;</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>}</div>
</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span> </div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00361" data-start="{" data-end="}">
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ab24631562df0f7a1c2f991000490b5c6">  361</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#ab24631562df0f7a1c2f991000490b5c6">xiiArrayBase&lt;T, Derived&gt;::PushBackRange</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; range)</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>{</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>  <span class="keyword">const</span> xiiUInt32 uiRangeCount = range.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>();</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + uiRangeCount);</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span> </div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#ae8fab7dfd33a7693c95a8c58def775fd">xiiMemoryUtils::CopyConstructArray</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, range.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#acfb4db6e3a381669be860ce1a5500c6b">GetPtr</a>(), uiRangeCount);</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>  m_uiCount += uiRangeCount;</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>}</div>
</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span> </div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00371" data-start="{" data-end="}">
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a27e05cf9ccd5e5c2434612da12648733">  371</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a27e05cf9ccd5e5c2434612da12648733">xiiArrayBase&lt;T, Derived&gt;::PopBack</a>(xiiUInt32 uiCountToRemove <span class="comment">/* = 1 */</span>)</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>{</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>  XII_ASSERT_DEV(m_uiCount &gt;= uiCountToRemove, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to pop {1} elements.&quot;</span>, m_uiCount, uiCountToRemove);</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span> </div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>  m_uiCount -= uiCountToRemove;</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a6c8728654ad1b5c0c9dcbb597a93594d">xiiMemoryUtils::Destruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, uiCountToRemove);</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>}</div>
</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span> </div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00380" data-start="{" data-end="}">
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a4780d4cda12bb4316d96e80c7e976091">  380</a></span>XII_FORCE_INLINE T&amp; <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a4780d4cda12bb4316d96e80c7e976091">xiiArrayBase&lt;T, Derived&gt;::PeekBack</a>()</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>{</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>  XII_ASSERT_DEBUG(m_uiCount &gt; 0, <span class="stringliteral">&quot;Out of bounds access. Trying to peek into an empty array.&quot;</span>);</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span> </div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr()[m_uiCount - 1];</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>}</div>
</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span> </div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00388" data-start="{" data-end="}">
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#abf3fa9c3e24881ed47faf68a671fb122">  388</a></span>XII_FORCE_INLINE <span class="keyword">const</span> T&amp; <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a4780d4cda12bb4316d96e80c7e976091">xiiArrayBase&lt;T, Derived&gt;::PeekBack</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>  XII_ASSERT_DEBUG(m_uiCount &gt; 0, <span class="stringliteral">&quot;Out of bounds access. Trying to peek into an empty array.&quot;</span>);</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span> </div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr()[m_uiCount - 1];</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>}</div>
</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span> </div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Comparer&gt;</div>
<div class="foldopen" id="foldopen00397" data-start="{" data-end="}">
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ad4c1ee8e977404192558dd36e3e54735">  397</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#ad02c74f222eb78fe41627cc3b41fa3ad">xiiArrayBase&lt;T, Derived&gt;::Sort</a>(<span class="keyword">const</span> Comparer&amp; comparer)</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span>{</div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>  <span class="keywordflow">if</span> (m_uiCount &gt; 1)</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>  {</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>    <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a> ar = *<span class="keyword">this</span>;</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>    <a class="code hl_function" href="../../da/d89/classxii_sorting.htm#a3e6e0255ac3dc4d93eff8b3c18aedf4c">xiiSorting::QuickSort</a>(ar, comparer);</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>  }</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>}</div>
</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span> </div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00407" data-start="{" data-end="}">
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ad02c74f222eb78fe41627cc3b41fa3ad">  407</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#ad02c74f222eb78fe41627cc3b41fa3ad">xiiArrayBase&lt;T, Derived&gt;::Sort</a>()</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>{</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>  <span class="keywordflow">if</span> (m_uiCount &gt; 1)</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>  {</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>    <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a> ar = *<span class="keyword">this</span>;</div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>    <a class="code hl_function" href="../../da/d89/classxii_sorting.htm#a3e6e0255ac3dc4d93eff8b3c18aedf4c">xiiSorting::QuickSort</a>(ar, <a class="code hl_struct" href="../../d1/deb/structxii_compare_helper.htm">xiiCompareHelper&lt;T&gt;</a>());</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>  }</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>}</div>
</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span> </div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00417" data-start="{" data-end="}">
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">  417</a></span>XII_ALWAYS_INLINE T* <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">xiiArrayBase&lt;T, Derived&gt;::GetData</a>()</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>{</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>  <span class="keywordflow">if</span> (IsEmpty())</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span> </div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>}</div>
</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span> </div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00426" data-start="{" data-end="}">
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#afa0f541ab1df4e1aaf6627d9f983b0a9">  426</a></span>XII_ALWAYS_INLINE <span class="keyword">const</span> T* <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">xiiArrayBase&lt;T, Derived&gt;::GetData</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>  <span class="keywordflow">if</span> (IsEmpty())</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span> </div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span>}</div>
</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span> </div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00435" data-start="{" data-end="}">
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">  435</a></span>XII_ALWAYS_INLINE <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">xiiArrayBase&lt;T, Derived&gt;::GetArrayPtr</a>()</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>{</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a>(GetData(), GetCount());</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>}</div>
</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span> </div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00441" data-start="{" data-end="}">
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a13160b173a1c3b3b19bd9cbd98e6e9ad">  441</a></span>XII_ALWAYS_INLINE <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a> <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">xiiArrayBase&lt;T, Derived&gt;::GetArrayPtr</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>(GetData(), GetCount());</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>}</div>
</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span> </div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00447" data-start="{" data-end="}">
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a479716d5712790819c5f5130c7985f15">  447</a></span>XII_ALWAYS_INLINE <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;typename xiiArrayPtr&lt;T&gt;::ByteType</a>&gt; <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a479716d5712790819c5f5130c7985f15">xiiArrayBase&lt;T, Derived&gt;::GetByteArrayPtr</a>()</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span>{</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>  <span class="keywordflow">return</span> GetArrayPtr().<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#ad4f4e073a70ad8c84da4d1a179bd1e33">ToByteArray</a>();</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>}</div>
</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span> </div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00453" data-start="{" data-end="}">
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a9988906575d152bc3d0029d251641e8a">  453</a></span>XII_ALWAYS_INLINE <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;typename xiiArrayPtr&lt;const T&gt;::ByteType</a>&gt; <a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a479716d5712790819c5f5130c7985f15">xiiArrayBase&lt;T, Derived&gt;::GetByteArrayPtr</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>  <span class="keywordflow">return</span> GetArrayPtr().<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#ad4f4e073a70ad8c84da4d1a179bd1e33">ToByteArray</a>();</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>}</div>
</div>
</div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span> </div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;::DoSwap</a>(<a class="code hl_class" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; other)</div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>{</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>  <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(this-&gt;m_pElements, other.<a class="code hl_variable" href="../../da/d4c/classxii_array_base.htm#ac72646567deadcaaf4f24b6ce2b61a4d">m_pElements</a>);</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>  <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(this-&gt;m_uiCapacity, other.<a class="code hl_variable" href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">m_uiCapacity</a>);</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span>  <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(this-&gt;m_uiCount, other.<a class="code hl_variable" href="../../da/d4c/classxii_array_base.htm#a466dea27f227cab87a867becebce4bcb">m_uiCount</a>);</div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span>}</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="ttc" id="aclassxii_array_base_htm"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm">xiiArrayBase</a></div><div class="ttdoc">Base class for all array containers. Implements all the basic functionality that only requires a poin...</div><div class="ttdef"><b>Definition</b> ArrayBase.h:19</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a0f15ffe8d9d4cf30dbfe85f2355f87f3"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a0f15ffe8d9d4cf30dbfe85f2355f87f3">xiiArrayBase::InsertRange</a></div><div class="ttdeci">void InsertRange(const xiiArrayPtr&lt; const T &gt; &amp;range, xiiUInt32 uiIndex)</div><div class="ttdoc">Inserts all elements in the range starting at the given index, shifting the elements after the index.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:211</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a1aa63ec4e48bbcd78206f1a4d0ed3412"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a1aa63ec4e48bbcd78206f1a4d0ed3412">xiiArrayBase::~xiiArrayBase</a></div><div class="ttdeci">~xiiArrayBase()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:6</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a27e05cf9ccd5e5c2434612da12648733"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a27e05cf9ccd5e5c2434612da12648733">xiiArrayBase::PopBack</a></div><div class="ttdeci">void PopBack(xiiUInt32 uiCountToRemove=1)</div><div class="ttdoc">Removes count elements from the end of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:371</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a2ac4701f79554bcc89ba1a2b0ad5f9ad"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">xiiArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:417</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a2efa1906d1123183f18a70fc2a008fc3"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a2efa1906d1123183f18a70fc2a008fc3">xiiArrayBase::operator[]</a></div><div class="ttdeci">const T &amp; operator[](xiiUInt32 uiIndex) const</div><div class="ttdoc">Returns the element at the given index. Does bounds checks in debug builds.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:82</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a33d696c060495085bcdd4a9774959179"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a33d696c060495085bcdd4a9774959179">xiiArrayBase::LastIndexOf</a></div><div class="ttdeci">xiiUInt32 LastIndexOf(const T &amp;value, xiiUInt32 uiStartIndex=xiiInvalidIndex) const</div><div class="ttdoc">Searches for the last occurrence of the given value and returns its index or xiiInvalidIndex if not f...</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:289</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a37ed2d14e39f124a0e4b3afad19615d0"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a37ed2d14e39f124a0e4b3afad19615d0">xiiArrayBase::RemoveAtAndCopy</a></div><div class="ttdeci">void RemoveAtAndCopy(xiiUInt32 uiIndex, xiiUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:245</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a3f1d04afc7c0b78048a6ae00f0dad616"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a3f1d04afc7c0b78048a6ae00f0dad616">xiiArrayBase::IndexOf</a></div><div class="ttdeci">xiiUInt32 IndexOf(const T &amp;value, xiiUInt32 uiStartIndex=0) const</div><div class="ttdoc">Searches for the first occurrence of the given value and returns its index or xiiInvalidIndex if not ...</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:276</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4071fdcb9041d9f4ad7ffabccdf8eb5e"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">xiiArrayBase::m_uiCapacity</a></div><div class="ttdeci">xiiUInt32 m_uiCapacity</div><div class="ttdoc">The number of elements which can be stored in the array without re-allocating.</div><div class="ttdef"><b>Definition</b> ArrayBase.h:199</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4114fd2fe9dc9b02ce50e8d723515c24"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">xiiArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(xiiUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:147</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a43100f93e19bb795ea0980dae2b28e0b"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">xiiArrayBase::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:164</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a466dea27f227cab87a867becebce4bcb"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a466dea27f227cab87a867becebce4bcb">xiiArrayBase::m_uiCount</a></div><div class="ttdeci">xiiUInt32 m_uiCount</div><div class="ttdoc">The number of elements used from the array.</div><div class="ttdef"><b>Definition</b> ArrayBase.h:196</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4780d4cda12bb4316d96e80c7e976091"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4780d4cda12bb4316d96e80c7e976091">xiiArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:380</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a479716d5712790819c5f5130c7985f15"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a479716d5712790819c5f5130c7985f15">xiiArrayBase::GetByteArrayPtr</a></div><div class="ttdeci">xiiArrayPtr&lt; typename xiiArrayPtr&lt; T &gt;::ByteType &gt; GetByteArrayPtr()</div><div class="ttdoc">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:447</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4ae4bf9cd46a5736ddeed4672e84d05c"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4ae4bf9cd46a5736ddeed4672e84d05c">xiiArrayBase::Contains</a></div><div class="ttdeci">bool Contains(const T &amp;value) const</div><div class="ttdoc">Checks whether the given value can be found in the array. O(n) complexity.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:183</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a706ff45a8f4a199483ba8053517c8d2a"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">xiiArrayBase::GetArrayPtr</a></div><div class="ttdeci">xiiArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:435</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a7609a39613cdc57b56d12537b3ba4d48"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">xiiArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:170</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a79122e86b6c0895983dde7da738f4f7e"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a79122e86b6c0895983dde7da738f4f7e">xiiArrayBase::RemoveAndCopy</a></div><div class="ttdeci">bool RemoveAndCopy(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:221</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a85ea62d9f68f7a08c0d71d4f60ec4d7b"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a85ea62d9f68f7a08c0d71d4f60ec4d7b">xiiArrayBase::xiiArrayBase</a></div><div class="ttdeci">xiiArrayBase()</div><div class="ttdoc">Constructor.</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a8b86f58a2097871da0e0b91eecc823e4"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">xiiArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:325</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a950bfcf80cb60c580a815c3a4fafdbe2"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a950bfcf80cb60c580a815c3a4fafdbe2">xiiArrayBase::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const xiiArrayBase&lt; T, Derived &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:70</div></div>
<div class="ttc" id="aclassxii_array_base_htm_aab14a4d946d6fc3a98cb0907b830d829"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#aab14a4d946d6fc3a98cb0907b830d829">xiiArrayBase::InsertAt</a></div><div class="ttdeci">void InsertAt(xiiUInt32 uiIndex, const T &amp;value)</div><div class="ttdoc">Inserts value at index by shifting all following elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:189</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ab24631562df0f7a1c2f991000490b5c6"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ab24631562df0f7a1c2f991000490b5c6">xiiArrayBase::PushBackRange</a></div><div class="ttdeci">void PushBackRange(const xiiArrayPtr&lt; const T &gt; &amp;range)</div><div class="ttdoc">Pushes all elements in range at the end of the array. Increases the capacity if necessary.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:361</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ab517ef07fbed3ecc766ac24394ae1fc8"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ab517ef07fbed3ecc766ac24394ae1fc8">xiiArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:176</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ab61a71e4322d8397a82a6d37c3fb9a33"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ab61a71e4322d8397a82a6d37c3fb9a33">xiiArrayBase::PushBackUnchecked</a></div><div class="ttdeci">void PushBackUnchecked(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array. Does NOT ensure capacity.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:343</div></div>
<div class="ttc" id="aclassxii_array_base_htm_aba1caa3a7fd339b97a42b7a7c6462440"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#aba1caa3a7fd339b97a42b7a7c6462440">xiiArrayBase::operator=</a></div><div class="ttdeci">void operator=(const xiiArrayPtr&lt; const T &gt; &amp;rhs)</div><div class="ttdoc">Copies the data from some other contiguous array into this one.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:13</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ac72646567deadcaaf4f24b6ce2b61a4d"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ac72646567deadcaaf4f24b6ce2b61a4d">xiiArrayBase::m_pElements</a></div><div class="ttdeci">T * m_pElements</div><div class="ttdoc">Element-type access to m_Data.</div><div class="ttdef"><b>Definition</b> ArrayBase.h:193</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ac9e0425e1b0ae3e9a958af289d336b34"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ac9e0425e1b0ae3e9a958af289d336b34">xiiArrayBase::EnsureCount</a></div><div class="ttdeci">void EnsureCount(xiiUInt32 uiCount)</div><div class="ttdoc">Ensures the container has at least uiCount elements. Ie. calls SetCount() if the container has fewer ...</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:136</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ad02c74f222eb78fe41627cc3b41fa3ad"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ad02c74f222eb78fe41627cc3b41fa3ad">xiiArrayBase::Sort</a></div><div class="ttdeci">void Sort()</div><div class="ttdoc">Sort with default comparer.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:407</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ad70f0262f264a918f64d8018bc85054d"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ad70f0262f264a918f64d8018bc85054d">xiiArrayBase::operator==</a></div><div class="ttdeci">bool operator==(const xiiArrayBase&lt; T, Derived &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:61</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ae7c9f257c3d2dad1fd92d8b80465e22c"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ae7c9f257c3d2dad1fd92d8b80465e22c">xiiArrayBase::ExpandBy</a></div><div class="ttdeci">T * ExpandBy(xiiUInt32 uiNumNewItems)</div><div class="ttdoc">Expands the array by N new items and returns a pointer to the first new one.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:318</div></div>
<div class="ttc" id="aclassxii_array_base_htm_aeb9f05e6229fcca31131a822a99bc1f9"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">xiiArrayBase::SetCount</a></div><div class="ttdeci">void SetCount(xiiUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:98</div></div>
<div class="ttc" id="aclassxii_array_base_htm_af44f4640654ede7c5f3b6dea920fc852"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#af44f4640654ede7c5f3b6dea920fc852">xiiArrayBase::RemoveAndSwap</a></div><div class="ttdeci">bool RemoveAndSwap(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:233</div></div>
<div class="ttc" id="aclassxii_array_base_htm_af88e03749773adddbbbac8389963c69f"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#af88e03749773adddbbbac8389963c69f">xiiArrayBase::RemoveAtAndSwap</a></div><div class="ttdeci">void RemoveAtAndSwap(xiiUInt32 uiIndex, xiiUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:256</div></div>
<div class="ttc" id="aclassxii_array_base_htm_af8b150ecd75941f71981db12f78c70b2"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#af8b150ecd75941f71981db12f78c70b2">xiiArrayBase::ExpandAndGetRef</a></div><div class="ttdeci">T &amp; ExpandAndGetRef()</div><div class="ttdoc">Grows the array by one element and returns a reference to the newly created element.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:302</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:37</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm_acfb4db6e3a381669be860ce1a5500c6b"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm#acfb4db6e3a381669be860ce1a5500c6b">xiiArrayPtr::GetPtr</a></div><div class="ttdeci">XII_ALWAYS_INLINE PointerType GetPtr() const</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:122</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm_ad4f4e073a70ad8c84da4d1a179bd1e33"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm#ad4f4e073a70ad8c84da4d1a179bd1e33">xiiArrayPtr::ToByteArray</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiArrayPtr&lt; const ByteType &gt; ToByteArray() const</div><div class="ttdoc">Reinterprets this array as a byte array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:168</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm_af1e072a93ee1a583d0db00e821c2d999"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">xiiArrayPtr::GetCount</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:146</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a0b9f518ec24d03e497b61b248ead335e"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a0b9f518ec24d03e497b61b248ead335e">xiiMemoryUtils::Construct</a></div><div class="ttdeci">static void Construct(T *pDestination, size_t uiCount=1)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination.</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a16883e3b910453d68ffb96562b92eed4"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a16883e3b910453d68ffb96562b92eed4">xiiMemoryUtils::MoveConstruct</a></div><div class="ttdeci">static void MoveConstruct(T *pDestination, T &amp;&amp;source)</div><div class="ttdoc">Constructs an object of type T in a raw buffer at pDestination, by using move construction from sourc...</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a37c0501684dc3bcc11f47bf8d77bcfa5"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a37c0501684dc3bcc11f47bf8d77bcfa5">xiiMemoryUtils::Prepend</a></div><div class="ttdeci">static void Prepend(T *pDestination, const T &amp;source, size_t uiCount)</div><div class="ttdoc">Moves uiCount objects in pDestination by one object and copies source to the free space.</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a6c8728654ad1b5c0c9dcbb597a93594d"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a6c8728654ad1b5c0c9dcbb597a93594d">xiiMemoryUtils::Destruct</a></div><div class="ttdeci">static void Destruct(T *pDestination, size_t uiCount=1)</div><div class="ttdoc">Destructs uiCount objects of type T at pDestination.</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a802d7a152c551948e45e7d0e19ae1e88"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount=1)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a82f92064b280ab0015bd5a88c42618bc"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a82f92064b280ab0015bd5a88c42618bc">xiiMemoryUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const T *a, const T *b, size_t uiCount=1)</div><div class="ttdoc">Tests if objects of type T from pSource and pDestination are equal.</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a87bf347cd7290d597774bfead29edb46"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a87bf347cd7290d597774bfead29edb46">xiiMemoryUtils::RelocateOverlapped</a></div><div class="ttdeci">static void RelocateOverlapped(T *pDestination, T *pSource, size_t uiCount=1)</div><div class="ttdoc">Moves objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_ae8fab7dfd33a7693c95a8c58def775fd"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#ae8fab7dfd33a7693c95a8c58def775fd">xiiMemoryUtils::CopyConstructArray</a></div><div class="ttdeci">static void CopyConstructArray(T *pDestination, const T *pSource, size_t uiCount)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination from an existing array of object...</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_aece4fdeb5f8a35b58bd979302f3e9768"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#aece4fdeb5f8a35b58bd979302f3e9768">xiiMemoryUtils::CopyConstruct</a></div><div class="ttdeci">static void CopyConstruct(Destination *pDestination, const Source &amp;copy, size_t uiCount=1)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination, by creating uiCount copies of c...</div></div>
<div class="ttc" id="aclassxii_sorting_htm_a3e6e0255ac3dc4d93eff8b3c18aedf4c"><div class="ttname"><a href="../../da/d89/classxii_sorting.htm#a3e6e0255ac3dc4d93eff8b3c18aedf4c">xiiSorting::QuickSort</a></div><div class="ttdeci">static void QuickSort(Container &amp;ref_container, const Comparer &amp;comparer=Comparer())</div><div class="ttdoc">Sorts the elements in container using a in-place quick sort implementation (not stable).</div><div class="ttdef"><b>Definition</b> Sorting_inl.h:3</div></div>
<div class="ttc" id="anamespacexii_math_htm_a2c660f80f0df5bb91a751d12a93cb9cb"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a></div><div class="ttdeci">constexpr XII_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:26</div></div>
<div class="ttc" id="anamespacexii_math_htm_a2e7c389d4195d010ba0c207a1e981a58"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a></div><div class="ttdeci">XII_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:222</div></div>
<div class="ttc" id="astructxii_compare_helper_htm"><div class="ttname"><a href="../../d1/deb/structxii_compare_helper.htm">xiiCompareHelper</a></div><div class="ttdoc">A comparer object is used in sorting algorithms to compare to objects of the same type.</div><div class="ttdef"><b>Definition</b> Comparer.h:7</div></div>
<div class="ttc" id="astructxii_is_pod_type_htm"><div class="ttname"><a href="../../d2/dad/structxii_is_pod_type.htm">xiiIsPodType</a></div><div class="ttdoc">If there is an % operator which takes a TypeIsPod and returns a CompileTimeTrueType T is Pod....</div><div class="ttdef"><b>Definition</b> TypeTraits.h:41</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_7f59ab18dbc50035dfc0ee7070867286.htm">Containers</a></li><li class="navelem"><a class="el" href="../../dir_acc055bf9d45372e5f916366fab93514.htm">Implementation</a></li><li class="navelem"><b>ArrayBase_inl.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:47:27 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
