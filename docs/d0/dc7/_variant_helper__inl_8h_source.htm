<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Types/Implementation/VariantHelper_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/dc7/_variant_helper__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">VariantHelper_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// for some reason MSVC does not accept the template keyword here</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_COMPILER_MSVC_PURE)</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#  define CALL_FUNCTOR(functor, type) return functor.operator()&lt;type&gt;(std::forward&lt;Args&gt;(args)...)</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#  define CALL_FUNCTOR(functor, type) return functor.template operator()&lt;type&gt;(std::forward&lt;Args&gt;(args)...)</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Functor, <span class="keyword">class</span>... Args&gt;</div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../db/d1a/classxii_variant.htm#a2a0ec6bf278a9412ec6fb8103d71f93a">   10</a></span>&#160;<span class="keyword">auto</span> <a class="code" href="../../db/d1a/classxii_variant.htm#a2a0ec6bf278a9412ec6fb8103d71f93a">xiiVariant::DispatchTo</a>(Functor&amp; ref_functor, <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">Type::Enum</a> type, Args&amp;&amp;... args)</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordflow">switch</span> (type)</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baa8c07e5b250f6b9234d0b2834f7f6b48">Type::Bool</a>:</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;      CALL_FUNCTOR(ref_functor, <span class="keywordtype">bool</span>);</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba7d5e70e515c8922d553f093c35b8bd7a">Type::Int8</a>:</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      CALL_FUNCTOR(ref_functor, xiiInt8);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba507c2b7c1346973f51f2f4d81071669a">Type::UInt8</a>:</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;      CALL_FUNCTOR(ref_functor, xiiUInt8);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab2f9f3eb8e59af447f4059f0d11af5b1">Type::Int16</a>:</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      CALL_FUNCTOR(ref_functor, xiiInt16);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba2785d1b68e10f5e955f16e2b3056c376">Type::UInt16</a>:</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      CALL_FUNCTOR(ref_functor, xiiUInt16);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bafa279ab5b91306b5dc181daa4bba8ffe">Type::Int32</a>:</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      CALL_FUNCTOR(ref_functor, xiiInt32);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8050a00aa1fda3e68fdb6f82b6f5e0bb">Type::UInt32</a>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      CALL_FUNCTOR(ref_functor, xiiUInt32);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba163cde0ca329cca1d0fb13696253d724">Type::Int64</a>:</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      CALL_FUNCTOR(ref_functor, xiiInt64);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba7696a7cb5ba35ccc868c905bd137c676">Type::UInt64</a>:</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      CALL_FUNCTOR(ref_functor, xiiUInt64);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba327ed72dcbeab3cd012e726c77998554">Type::Float</a>:</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      CALL_FUNCTOR(ref_functor, <span class="keywordtype">float</span>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808">Type::Double</a>:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      CALL_FUNCTOR(ref_functor, <span class="keywordtype">double</span>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bacd2abf80cb60eedeb8a259d884f88b49">Type::Color</a>:</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d3/de6/classxii_color.htm">xiiColor</a>);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba821e5ad1a679a77328f2353dd6a1f9c8">Type::ColorGamma</a>:</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../df/d71/classxii_color_gamma_u_b.htm">xiiColorGammaUB</a>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba83dc55dc1487a94bf827c807efb89609">Type::Vector2</a>:</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2</a>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6babe6f49b378e08d337081a39f82bfa047">Type::Vector2d</a>:</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2d</a>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bae02b02d6a7e5675f783ba12f54cd9a50">Type::Vector3</a>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baa89b3078e423304b3bb9c2c8bfd2042f">Type::Vector3d</a>:</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3d</a>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baffb36261ed0cbc046508167bd8f0a060">Type::Vector4</a>:</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4</a>);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bae04f6ed2f5d8c59a57004f437a050df6">Type::Vector4d</a>:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4d</a>);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba050f8cea737a00cb6a24148fd1d1e0cd">Type::Vector2I</a>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2I32</a>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baaff7f565bf78e380552ff479ea5123dd">Type::Vector2I64</a>:</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2I64</a>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baea31d52ec8669e7817ec3802bd70563b">Type::Vector3I</a>:</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3I32</a>);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baaa27edd155de1483f639b07f7e02868d">Type::Vector3I64</a>:</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3I64</a>);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baa74aec2c0d3e52f88efb01c7d4e04649">Type::Vector4I</a>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4I32</a>);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baca7acfc317d0da41f1f4289062243bf2">Type::Vector4I64</a>:</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4I64</a>);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baefc73d0a6f233e85bf6b539389420ad2">Type::Vector2U</a>:</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2U32</a>);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba15d41ad54a95b2d45210e5b76b9a95c0">Type::Vector2U64</a>:</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2U64</a>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab26b8af58219c7d6f73e5db04dc9c002">Type::Vector3U</a>:</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3U32</a>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba0fbd097229a58c90f8ed48a28cb04d36">Type::Vector3U64</a>:</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3U64</a>);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba69a6dcd72a912e37b60f63e8ec3b8883">Type::Vector4U</a>:</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4U32</a>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6babdefc4bfdb91cd26095efd2376b40fed">Type::Vector4U64</a>:</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4U64</a>);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba054efb0d381798145ec3ed37a1dbfcc0">Type::Quaternion</a>:</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuat</a>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab919acbbaaf48d8c629e950c070639ea">Type::Quaterniond</a>:</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatd</a>);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba49e3197092e54db6d283bb04756e768e">Type::Matrix3</a>:</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3</a>);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba1a84f65af26a38e279bb14132e3aa401">Type::Matrix3d</a>:</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3d</a>);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bac7ef5f2d3002177f7be84230ff522d30">Type::Matrix4</a>:</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4</a>);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bacddf3e94b5d47ed47a9644546fd6e5ba">Type::Matrix4d</a>:</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4d</a>);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba66010e7ef97a1be2e2b52350f7a97807">Type::Transform</a>:</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d5/d13/classxii_transform_template.htm">xiiTransform</a>);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba3f773ef671b2cc2468439e62898a46f5">Type::Transformd</a>:</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d5/d13/classxii_transform_template.htm">xiiTransformd</a>);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">Type::String</a>:</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">Type::StringView</a>:</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">Type::HashedString</a>:</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bacbc04abe2af34252c7b5928d990ea60f">Type::TempHashedString</a>:</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d5/dd2/classxii_temp_hashed_string.htm">xiiTempHashedString</a>);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba6a190bc49f129b7fcdf4950893b6e8ba">Type::DataBuffer</a>:</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../dc/da4/classxii_dynamic_array.htm">xiiDataBuffer</a>);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba40e3d70b6d04b754918ddff3de8a06da">Type::Time</a>:</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d7/dc1/structxii_time.htm">xiiTime</a>);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba6e346a06313406f6befb99e786d0a38d">Type::Uuid</a>:</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../dc/d1d/classxii_uuid.htm">xiiUuid</a>);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba645c5268ede1adbeae7f88d69f6f4f57">Type::Angle</a>:</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a>);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba2fb493562ef47c8eb600436750635e4d">Type::Angled</a>:</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngled</a>);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bacf5e38ac100b71d28a809c15e0480881">Type::VariantArray</a>:</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../dc/da4/classxii_dynamic_array.htm">xiiVariantArray</a>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bae293ccf0b245bf852d3fc228b531f5e6">Type::VariantDictionary</a>:</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiVariantDictionary</a>);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba43f41acdb77f27ddf59975457ab79032">Type::TypedObject</a>:</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d1/d30/structxii_typed_object.htm">xiiTypedObject</a>);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Could not dispatch type &#39;{0}&#39;&quot;</span>, type);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;      <span class="comment">// Intended fall through to disable warning.</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      [[fallthrough]];</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baa11a3d6923f73b22de869a2fd6921913">Type::TypedPointer</a>:</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      CALL_FUNCTOR(ref_functor, <a class="code" href="../../d2/de4/structxii_typed_pointer.htm">xiiTypedPointer</a>);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  }</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#undef CALL_FUNCTOR</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="../../d8/d7d/classxii_variant_helper.htm">  231</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/d7d/classxii_variant_helper.htm">xiiVariantHelper</a></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;{</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keyword">friend</span> <span class="keyword">struct </span>ConvertFunc;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <span class="keywordtype">bool</span>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  {</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() &lt;= <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808">xiiVariant::Type::Double</a>)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      result = value.ConvertNumber&lt;xiiInt32&gt;() != 0;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariant::Type::String</a> || value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">xiiVariant::Type::HashedString</a>)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;      <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> s = value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;() ? value.Cast&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;().GetView() : value.Cast&lt;<a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&gt;().GetView();</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ac9f29fe90cbed1ca079e2407d4b3f3bd">xiiConversionUtils::StringToBool</a>(s, result) == XII_FAILURE)</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      {</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        result      = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      }</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    }</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariant::Type::StringView</a>)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ac9f29fe90cbed1ca079e2407d4b3f3bd">xiiConversionUtils::StringToBool</a>(value.Cast&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;(), result) == XII_FAILURE)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;      {</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        result      = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;      }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    }</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    {</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to bool failed&quot;</span>);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    }</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  }</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, xiiInt8&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    xiiInt32 tempResult = 0;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    To(value, tempResult, bSuccessful);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    result = (xiiInt8)tempResult;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  }</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, xiiUInt8&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    xiiUInt32 tempResult = 0;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    To(value, tempResult, bSuccessful);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    result = (xiiUInt8)tempResult;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, xiiInt16&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    xiiInt32 tempResult = 0;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    To(value, tempResult, bSuccessful);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    result = (xiiInt16)tempResult;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, xiiUInt16&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  {</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    xiiUInt32 tempResult = 0;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    To(value, tempResult, bSuccessful);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    result = (xiiUInt16)tempResult;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  }</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, xiiInt32&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() &lt;= <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808">xiiVariant::Type::Double</a>)</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    {</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;      result = value.ConvertNumber&lt;xiiInt32&gt;();</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    }</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariant::Type::String</a> || value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">xiiVariant::Type::HashedString</a>)</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    {</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> s = value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;() ? value.Cast&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;().GetView() : value.Cast&lt;<a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&gt;().GetView();</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#aa292cb87e3b4b91ed3c90d7cd3729c3b">xiiConversionUtils::StringToInt</a>(s, result) == XII_FAILURE)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      {</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        result      = 0;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;      }</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariant::Type::StringView</a>)</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    {</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#aa292cb87e3b4b91ed3c90d7cd3729c3b">xiiConversionUtils::StringToInt</a>(value.Cast&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;(), result) == XII_FAILURE)</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        result      = 0;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      }</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    }</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    {</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to int failed&quot;</span>);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    }</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, xiiUInt32&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  {</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() &lt;= <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808">xiiVariant::Type::Double</a>)</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    {</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;      result = value.ConvertNumber&lt;xiiUInt32&gt;();</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    }</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariant::Type::String</a> || value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">xiiVariant::Type::HashedString</a>)</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;      <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> s   = value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;() ? value.Cast&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;().GetView() : value.Cast&lt;<a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&gt;().GetView();</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;      xiiInt64      tmp = result;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ad84dbcba8a552de03d282e9ffd80aff3">xiiConversionUtils::StringToInt64</a>(s, tmp) == XII_FAILURE)</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;      {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        result      = 0;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      {</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        result = (xiiUInt32)tmp;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;      }</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    }</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariant::Type::StringView</a>)</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    {</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      xiiInt64 tmp = result;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ad84dbcba8a552de03d282e9ffd80aff3">xiiConversionUtils::StringToInt64</a>(value.Cast&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;(), tmp) == XII_FAILURE)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;      {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        result      = 0;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;      }</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;      {</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        result = (xiiUInt32)tmp;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;      }</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    }</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    {</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to uint failed&quot;</span>);</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    }</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  }</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, xiiInt64&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  {</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() &lt;= <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808">xiiVariant::Type::Double</a>)</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    {</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;      result = value.ConvertNumber&lt;xiiInt64&gt;();</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    }</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariant::Type::String</a> || value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">xiiVariant::Type::HashedString</a>)</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    {</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;      <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> s = value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;() ? value.Cast&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;().GetView() : value.Cast&lt;<a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&gt;().GetView();</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ad84dbcba8a552de03d282e9ffd80aff3">xiiConversionUtils::StringToInt64</a>(s, result) == XII_FAILURE)</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;      {</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;        result      = 0;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;      }</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    }</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariant::Type::StringView</a>)</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    {</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ad84dbcba8a552de03d282e9ffd80aff3">xiiConversionUtils::StringToInt64</a>(value.Cast&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;(), result) == XII_FAILURE)</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;      {</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        result      = 0;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;      }</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    }</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    {</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to int64 failed&quot;</span>);</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    }</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  }</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, xiiUInt64&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  {</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160; </div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() &lt;= <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808">xiiVariant::Type::Double</a>)</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    {</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;      result = value.ConvertNumber&lt;xiiUInt64&gt;();</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    }</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariant::Type::String</a> || value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">xiiVariant::Type::HashedString</a>)</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    {</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;      <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> s   = value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;() ? value.Cast&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;().GetView() : value.Cast&lt;<a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&gt;().GetView();</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;      xiiInt64      tmp = result;</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ad84dbcba8a552de03d282e9ffd80aff3">xiiConversionUtils::StringToInt64</a>(s, tmp) == XII_FAILURE)</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;      {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        result      = 0;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;      {</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;        result = (xiiUInt64)tmp;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;      }</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    }</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariant::Type::StringView</a>)</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    {</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;      xiiInt64 tmp = result;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ad84dbcba8a552de03d282e9ffd80aff3">xiiConversionUtils::StringToInt64</a>(value.Cast&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;(), tmp) == XII_FAILURE)</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;      {</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        result      = 0;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;      }</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;      {</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        result = (xiiUInt64)tmp;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      }</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    }</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    {</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to uint64 failed&quot;</span>);</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    }</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  }</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160; </div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <span class="keywordtype">float</span>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  {</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160; </div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() &lt;= <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808">xiiVariant::Type::Double</a>)</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    {</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;      result = value.ConvertNumber&lt;<span class="keywordtype">float</span>&gt;();</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    }</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariant::Type::String</a> || value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">xiiVariant::Type::HashedString</a>)</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    {</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;      <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> s   = value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;() ? value.Cast&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;().GetView() : value.Cast&lt;<a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&gt;().GetView();</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      <span class="keywordtype">double</span>        tmp = result;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ab611da72ebd3daf60c4d0c2a805f3cad">xiiConversionUtils::StringToFloat</a>(s, tmp) == XII_FAILURE)</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;      {</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        result      = 0.0f;</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;      }</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      {</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        result = (float)tmp;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;      }</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    }</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariant::Type::StringView</a>)</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    {</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;      <span class="keywordtype">double</span> tmp = result;</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ab611da72ebd3daf60c4d0c2a805f3cad">xiiConversionUtils::StringToFloat</a>(value.Cast&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;(), tmp) == XII_FAILURE)</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;      {</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        result      = 0.0f;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;      }</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;      {</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        result = (float)tmp;</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;      }</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    }</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    {</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to float failed&quot;</span>);</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    }</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;  }</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160; </div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <span class="keywordtype">double</span>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;  {</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160; </div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() &lt;= <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808">xiiVariant::Type::Double</a>)</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    {</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;      result = value.ConvertNumber&lt;<span class="keywordtype">double</span>&gt;();</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    }</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariant::Type::String</a> || value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">xiiVariant::Type::HashedString</a>)</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    {</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;      <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> s = value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;() ? value.Cast&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;().GetView() : value.Cast&lt;<a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&gt;().GetView();</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ab611da72ebd3daf60c4d0c2a805f3cad">xiiConversionUtils::StringToFloat</a>(s, result) == XII_FAILURE)</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;      {</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        result      = 0.0;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;      }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    }</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariant::Type::StringView</a>)</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    {</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;      <span class="keywordflow">if</span> (<a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#ab611da72ebd3daf60c4d0c2a805f3cad">xiiConversionUtils::StringToFloat</a>(value.Cast&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;(), result) == XII_FAILURE)</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;      {</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        result      = 0.0;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;      }</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    }</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    {</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to double failed&quot;</span>);</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    }</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;  }</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160; </div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;  {</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160; </div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a250a01bc4087187f7fa2de0f63afffd1">IsValid</a>() == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    {</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;      result = <span class="stringliteral">&quot;&lt;Invalid&gt;&quot;</span>;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    }</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160; </div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    ToStringFunc toStringFunc;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    toStringFunc.m_pThis   = &amp;value;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    toStringFunc.m_pResult = &amp;result;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160; </div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <a class="code" href="../../db/d1a/classxii_variant.htm#a2a0ec6bf278a9412ec6fb8103d71f93a">xiiVariant::DispatchTo</a>(toStringFunc, value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>());</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  }</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160; </div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;  {</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160; </div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;())</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;      result = value.<a class="code" href="../../db/d1a/classxii_variant.htm#a71635c40a508116fdda394b3be814789">Get</a>&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;();</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;      result = value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;() ? value.<a class="code" href="../../db/d1a/classxii_variant.htm#a71635c40a508116fdda394b3be814789">Get</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;().GetView() : value.<a class="code" href="../../db/d1a/classxii_variant.htm#a71635c40a508116fdda394b3be814789">Get</a>&lt;<a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&gt;().GetView();</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;  }</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160; </div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d2/de4/structxii_typed_pointer.htm">xiiTypedPointer</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;  {</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160; </div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    XII_ASSERT_DEBUG(value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baa11a3d6923f73b22de869a2fd6921913">xiiVariant::Type::TypedPointer</a>, <span class="stringliteral">&quot;Only ptr can be converted to void*!&quot;</span>);</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160; </div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    result = value.Cast&lt;<a class="code" href="../../d2/de4/structxii_typed_pointer.htm">xiiTypedPointer</a>&gt;();</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;  }</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160; </div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d3/de6/classxii_color.htm">xiiColor</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  {</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160; </div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba821e5ad1a679a77328f2353dd6a1f9c8">xiiVariant::Type::ColorGamma</a>)</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    {</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;      result = value.Cast&lt;<a class="code" href="../../df/d71/classxii_color_gamma_u_b.htm">xiiColorGammaUB</a>&gt;();</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    }</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    {</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to xiiColor failed&quot;</span>);</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    }</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;  }</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160; </div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../df/d71/classxii_color_gamma_u_b.htm">xiiColorGammaUB</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;  {</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160; </div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bacd2abf80cb60eedeb8a259d884f88b49">xiiVariant::Type::Color</a>)</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    {</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;      result = value.Cast&lt;<a class="code" href="../../d3/de6/classxii_color.htm">xiiColor</a>&gt;();</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    }</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    {</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to xiiColorGammaUB failed&quot;</span>);</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    }</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;  }</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160; </div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> V1, <span class="keyword">typename</span> V2, <span class="keyword">typename</span> V3, <span class="keyword">typename</span> V4, <span class="keyword">typename</span> V5&gt;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> ToVec2X(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, T&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;  {</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160; </div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V1&gt;())</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    {</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;      <span class="keyword">const</span> V1&amp; v = value.Cast&lt;V1&gt;();</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y));</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    }</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V2&gt;())</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    {</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;      <span class="keyword">const</span> V2&amp; v = value.Cast&lt;V2&gt;();</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y));</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    }</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V3&gt;())</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    {</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;      <span class="keyword">const</span> V3&amp; v = value.Cast&lt;V3&gt;();</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y));</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    }</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V4&gt;())</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    {</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;      <span class="keyword">const</span> V4&amp; v = value.Cast&lt;V4&gt;();</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y));</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    }</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V5&gt;())</div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    {</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;      <span class="keyword">const</span> V5&amp; v = value.Cast&lt;V5&gt;();</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y));</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    }</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    {</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to xiiVec2X failed&quot;</span>);</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160; </div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;      bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    }</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;  }</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160; </div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec2X&lt;xiiVec2, xiiVec2I32, xiiVec2U32, xiiVec2d, xiiVec2I64, xiiVec2U64&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160; </div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2I32</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec2X&lt;xiiVec2I32, xiiVec2, xiiVec2U32, xiiVec2d, xiiVec2I64, xiiVec2U64&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160; </div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2U32</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec2X&lt;xiiVec2U32, xiiVec2I32, xiiVec2, xiiVec2d, xiiVec2I64, xiiVec2U64&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160; </div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2d</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec2X&lt;xiiVec2d, xiiVec2I64, xiiVec2U64, xiiVec2, xiiVec2I32, xiiVec2U32&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160; </div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2I64</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec2X&lt;xiiVec2I64, xiiVec2d, xiiVec2U64, xiiVec2, xiiVec2I32, xiiVec2U32&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160; </div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2U64</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec2X&lt;xiiVec2U64, xiiVec2I64, xiiVec2d, xiiVec2, xiiVec2I32, xiiVec2U32&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160; </div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> V1, <span class="keyword">typename</span> V2, <span class="keyword">typename</span> V3, <span class="keyword">typename</span> V4, <span class="keyword">typename</span> V5&gt;</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> ToVec3X(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, T&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;  {</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160; </div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V1&gt;())</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    {</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;      <span class="keyword">const</span> V1&amp; v = value.Cast&lt;V1&gt;();</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z));</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    }</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V2&gt;())</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    {</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;      <span class="keyword">const</span> V2&amp; v = value.Cast&lt;V2&gt;();</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z));</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    }</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V3&gt;())</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    {</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;      <span class="keyword">const</span> V3&amp; v = value.Cast&lt;V3&gt;();</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z));</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    }</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V4&gt;())</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;    {</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;      <span class="keyword">const</span> V4&amp; v = value.Cast&lt;V4&gt;();</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z));</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    }</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V5&gt;())</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    {</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;      <span class="keyword">const</span> V5&amp; v = value.Cast&lt;V5&gt;();</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z));</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    }</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    {</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to xiiVec3X failed&quot;</span>);</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160; </div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;      bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;    }</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;  }</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160; </div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec3X&lt;xiiVec3, xiiVec3I32, xiiVec3U32, xiiVec3d, xiiVec3I64, xiiVec3U64&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160; </div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3I32</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec3X&lt;xiiVec3I32, xiiVec3, xiiVec3U32, xiiVec3d, xiiVec3I64, xiiVec3U64&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160; </div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3U32</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec3X&lt;xiiVec3U32, xiiVec3I32, xiiVec3, xiiVec3d, xiiVec3I64, xiiVec3U64&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160; </div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3d</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec3X&lt;xiiVec3d, xiiVec3I64, xiiVec3U64, xiiVec3, xiiVec3I32, xiiVec3U32&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160; </div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3I64</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec3X&lt;xiiVec3I64, xiiVec3d, xiiVec3U64, xiiVec3, xiiVec3I32, xiiVec3U32&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160; </div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3U64</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec3X&lt;xiiVec3U64, xiiVec3I64, xiiVec3d, xiiVec3, xiiVec3I32, xiiVec3U32&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160; </div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> V1, <span class="keyword">typename</span> V2, <span class="keyword">typename</span> V3, <span class="keyword">typename</span> V4, <span class="keyword">typename</span> V5&gt;</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> ToVec4X(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, T&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;  {</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160; </div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V1&gt;())</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    {</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;      <span class="keyword">const</span> V1&amp; v = value.Cast&lt;V1&gt;();</div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.w));</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    }</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V2&gt;())</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;    {</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;      <span class="keyword">const</span> V2&amp; v = value.Cast&lt;V2&gt;();</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.w));</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    }</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V3&gt;())</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    {</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;      <span class="keyword">const</span> V3&amp; v = value.Cast&lt;V3&gt;();</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.w));</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    }</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V4&gt;())</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    {</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;      <span class="keyword">const</span> V4&amp; v = value.Cast&lt;V4&gt;();</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.w));</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    }</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V5&gt;())</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    {</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;      <span class="keyword">const</span> V5&amp; v = value.Cast&lt;V5&gt;();</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.z), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.w));</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    }</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    {</div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to xiiVec4X failed&quot;</span>);</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160; </div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;      bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    }</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;  }</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160; </div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec4X&lt;xiiVec4, xiiVec4I32, xiiVec4U32, xiiVec4d, xiiVec4I64, xiiVec4U64&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160; </div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4I32</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec4X&lt;xiiVec4I32, xiiVec4, xiiVec4U32, xiiVec4d, xiiVec4I64, xiiVec4U64&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160; </div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4U32</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec4X&lt;xiiVec4U32, xiiVec4I32, xiiVec4, xiiVec4d, xiiVec4I64, xiiVec4U64&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160; </div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4d</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec4X&lt;xiiVec4d, xiiVec4I64, xiiVec4U64, xiiVec4, xiiVec4I32, xiiVec4U32&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160; </div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4I64</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec4X&lt;xiiVec4I64, xiiVec4d, xiiVec4U64, xiiVec4, xiiVec4I32, xiiVec4U32&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160; </div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4U64</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToVec4X&lt;xiiVec4U64, xiiVec4I64, xiiVec4d, xiiVec4, xiiVec4I32, xiiVec4U32&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160; </div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> V1&gt;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> ToQuatX(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, T&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;  {</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160; </div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V1&gt;())</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    {</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;      <span class="keyword">const</span> V1&amp; v = value.Cast&lt;V1&gt;();</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.v.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.v.z), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.w));</div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    }</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    {</div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to xiiQuatX failed&quot;</span>);</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160; </div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;      bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    }</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;  }</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160; </div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuat</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToQuatX&lt;xiiQuat, xiiQuatd&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160; </div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatd</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToQuatX&lt;xiiQuatd, xiiQuat&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160; </div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> V1&gt;</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> ToMat3X(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, T&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;  {</div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160; </div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V1&gt;())</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    {</div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;      <span class="keyword">const</span> V1&amp; v = value.Cast&lt;V1&gt;();</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(0, 0)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(1, 0)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(2, 0)),</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                 <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(0, 1)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(1, 1)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(2, 1)),</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                 <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(0, 2)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(1, 2)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(2, 2)));</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    }</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    {</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to xiiMat3X failed&quot;</span>);</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;      bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    }</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;  }</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160; </div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToMat3X&lt;xiiMat3, xiiMat3d&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160; </div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3d</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToMat3X&lt;xiiMat3d, xiiMat3&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160; </div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> V1&gt;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> ToMat4X(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, T&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;  {</div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160; </div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V1&gt;())</div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    {</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;      <span class="keyword">const</span> V1&amp; v = value.Cast&lt;V1&gt;();</div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;      result      = T(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(0, 0)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(1, 0)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(2, 0)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(3, 0)),</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                 <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(0, 1)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(1, 1)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(2, 1)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(3, 1)),</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;                 <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(0, 2)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(1, 2)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(2, 2)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(3, 2)),</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;                 <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(0, 3)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(1, 3)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(2, 3)), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.Element(3, 3)));</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    }</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    {</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to xiiMat4X failed&quot;</span>);</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;      bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    }</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;  }</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160; </div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToMat4X&lt;xiiMat4, xiiMat4d&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160; </div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4d</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToMat4X&lt;xiiMat4d, xiiMat4&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160; </div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> V1&gt;</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> ToTransformX(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, T&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;  {</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160; </div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">IsA</a>&lt;V1&gt;())</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    {</div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;      <span class="keyword">const</span> V1&amp;                                        v         = value.Cast&lt;V1&gt;();</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;typename T::ComponentType&gt;</a> vPosition = <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;typename T::ComponentType&gt;</a>(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_vPosition.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_vPosition.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_vPosition.z));</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;typename T::ComponentType&gt;</a> qRotation = <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;typename T::ComponentType&gt;</a>(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_qRotation.v.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_qRotation.v.y),</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;                                                                                                              <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_qRotation.v.z), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_qRotation.w));</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;typename T::ComponentType&gt;</a> vScale    = <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;typename T::ComponentType&gt;</a>(<span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_vScale.x), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_vScale.y), <span class="keyword">static_cast&lt;</span>typename T::ComponentType<span class="keyword">&gt;</span>(v.m_vScale.z));</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;      result                                                     = T(vPosition, qRotation, vScale);</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    }</div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    {</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;      XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion to xiiTransformX failed&quot;</span>);</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;      bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;    }</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;  }</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160; </div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d5/d13/classxii_transform_template.htm">xiiTransform</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToTransformX&lt;xiiTransform, xiiTransformd&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160; </div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d5/d13/classxii_transform_template.htm">xiiTransformd</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful) { ToTransformX&lt;xiiTransformd, xiiTransform&gt;(value, result, bSuccessful); }</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160; </div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;  {</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160; </div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariantType::String</a>)</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    {</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;      result.<a class="code" href="../../d6/d0c/classxii_hashed_string.htm#a54c8ecc5b07fff781b4c8fb18b9d89cc">Assign</a>(value.Cast&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;());</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    }</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariantType::StringView</a>)</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;    {</div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;      result.<a class="code" href="../../d6/d0c/classxii_hashed_string.htm#a54c8ecc5b07fff781b4c8fb18b9d89cc">Assign</a>(value.Cast&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;());</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    }</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    {</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;      <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> s;</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;      To(value, s, bSuccessful);</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;      result.<a class="code" href="../../d6/d0c/classxii_hashed_string.htm#a54c8ecc5b07fff781b4c8fb18b9d89cc">Assign</a>(s.GetView());</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    }</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;  }</div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160; </div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d5/dd2/classxii_temp_hashed_string.htm">xiiTempHashedString</a>&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;  {</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    bSuccessful = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160; </div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariantType::String</a>)</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    {</div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;      result = value.Cast&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&gt;();</div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    }</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariantType::StringView</a>)</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    {</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;      result = value.Cast&lt;<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&gt;();</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    }</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (value.<a class="code" href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">GetType</a>() == <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">xiiVariant::Type::HashedString</a>)</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    {</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;      result = value.Cast&lt;<a class="code" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&gt;();</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    }</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    {</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;      <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> s;</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;      To(value, s, bSuccessful);</div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;      result = s.GetView();</div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;    }</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;  }</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160; </div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> To(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, T&amp; result, <span class="keywordtype">bool</span>&amp; bSuccessful)</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;  {</div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    XII_REPORT_FAILURE(<span class="stringliteral">&quot;Conversion function not implemented for target type &#39;{0}&#39;&quot;</span>, <a class="code" href="../../de/dec/structxii_variant_type_deduction.htm">xiiVariant::TypeDeduction&lt;T&gt;::value</a>);</div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160; </div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    bSuccessful = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;  }</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160; </div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;  <span class="keyword">struct </span>ToStringFunc</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;  {</div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    XII_ALWAYS_INLINE <span class="keywordtype">void</span> operator()()</div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;    {</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;      <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> tmp;</div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;      *m_pResult = <a class="code" href="../../d9/d80/namespacexii_conversion_utils.htm#a6ec84e63e58423cf09b5bb966278d1ad">xiiConversionUtils::ToString</a>(m_pThis-&gt;Cast&lt;T&gt;(), tmp);</div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;    }</div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160; </div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>* m_pThis   = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>*        m_pResult = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;  };</div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba0fbd097229a58c90f8ed48a28cb04d36"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba0fbd097229a58c90f8ed48a28cb04d36">xiiVariantType::Vector3U64</a></div><div class="ttdeci">@ Vector3U64</div><div class="ttdoc">The variant stores a xiiVec3U64. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:53</div></div>
<div class="ttc" id="aclassxii_temp_hashed_string_htm"><div class="ttname"><a href="../../d5/dd2/classxii_temp_hashed_string.htm">xiiTempHashedString</a></div><div class="ttdoc">A class to use together with xiiHashedString for quick comparisons with temporary strings that need n...</div><div class="ttdef"><b>Definition:</b> HashedString.h:148</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba83dc55dc1487a94bf827c807efb89609"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba83dc55dc1487a94bf827c807efb89609">xiiVariantType::Vector2</a></div><div class="ttdeci">@ Vector2</div><div class="ttdoc">The variant stores a xiiVec2.</div><div class="ttdef"><b>Definition:</b> VariantType.h:55</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bacddf3e94b5d47ed47a9644546fd6e5ba"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bacddf3e94b5d47ed47a9644546fd6e5ba">xiiVariantType::Matrix4d</a></div><div class="ttdeci">@ Matrix4d</div><div class="ttdoc">The variant stores a xiiMat4d. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:66</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baa74aec2c0d3e52f88efb01c7d4e04649"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baa74aec2c0d3e52f88efb01c7d4e04649">xiiVariantType::Vector4I</a></div><div class="ttdeci">@ Vector4I</div><div class="ttdoc">The variant stores a xiiVec4I32.</div><div class="ttdef"><b>Definition:</b> VariantType.h:45</div></div>
<div class="ttc" id="astructxii_typed_pointer_htm"><div class="ttname"><a href="../../d2/de4/structxii_typed_pointer.htm">xiiTypedPointer</a></div><div class="ttdoc">A typed raw pointer.</div><div class="ttdef"><b>Definition:</b> TypedPointer.h:12</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba6e346a06313406f6befb99e786d0a38d"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba6e346a06313406f6befb99e786d0a38d">xiiVariantType::Uuid</a></div><div class="ttdeci">@ Uuid</div><div class="ttdoc">The variant stores a xiiUuid value.</div><div class="ttdef"><b>Definition:</b> VariantType.h:77</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba7d5e70e515c8922d553f093c35b8bd7a"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba7d5e70e515c8922d553f093c35b8bd7a">xiiVariantType::Int8</a></div><div class="ttdeci">@ Int8</div><div class="ttdoc">The variant stores a xiiInt8.</div><div class="ttdef"><b>Definition:</b> VariantType.h:32</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baa11a3d6923f73b22de869a2fd6921913"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baa11a3d6923f73b22de869a2fd6921913">xiiVariantType::TypedPointer</a></div><div class="ttdeci">@ TypedPointer</div><div class="ttdoc">The variant stores a xiiTypedPointer value. Reflected type and data queries will match the pointed to...</div><div class="ttdef"><b>Definition:</b> VariantType.h:85</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6babe6f49b378e08d337081a39f82bfa047"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6babe6f49b378e08d337081a39f82bfa047">xiiVariantType::Vector2d</a></div><div class="ttdeci">@ Vector2d</div><div class="ttdoc">The variant stores a xiiVec2d.</div><div class="ttdef"><b>Definition:</b> VariantType.h:58</div></div>
<div class="ttc" id="aclassxii_hashed_string_htm"><div class="ttname"><a href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a></div><div class="ttdoc">This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...</div><div class="ttdef"><b>Definition:</b> HashedString.h:24</div></div>
<div class="ttc" id="aclassxii_variant_helper_htm"><div class="ttname"><a href="../../d8/d7d/classxii_variant_helper.htm">xiiVariantHelper</a></div><div class="ttdef"><b>Definition:</b> VariantHelper_inl.h:231</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba327ed72dcbeab3cd012e726c77998554"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba327ed72dcbeab3cd012e726c77998554">xiiVariantType::Float</a></div><div class="ttdeci">@ Float</div><div class="ttdoc">The variant stores a float.</div><div class="ttdef"><b>Definition:</b> VariantType.h:40</div></div>
<div class="ttc" id="aclassxii_variant_htm"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm">xiiVariant</a></div><div class="ttdoc">xiiVariant is a class that can store different types of variables, which is useful in situations wher...</div><div class="ttdef"><b>Definition:</b> Variant.h:43</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bae04f6ed2f5d8c59a57004f437a050df6"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bae04f6ed2f5d8c59a57004f437a050df6">xiiVariantType::Vector4d</a></div><div class="ttdeci">@ Vector4d</div><div class="ttdoc">The variant stores a xiiVec4d. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:60</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6b"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariantType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdoc">This enum describes the type of data that is currently stored inside the variant. Note that changes t...</div><div class="ttdef"><b>Definition:</b> VariantType.h:25</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bafa279ab5b91306b5dc181daa4bba8ffe"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bafa279ab5b91306b5dc181daa4bba8ffe">xiiVariantType::Int32</a></div><div class="ttdeci">@ Int32</div><div class="ttdoc">The variant stores a xiiInt32.</div><div class="ttdef"><b>Definition:</b> VariantType.h:34</div></div>
<div class="ttc" id="astructxii_time_htm"><div class="ttname"><a href="../../d7/dc1/structxii_time.htm">xiiTime</a></div><div class="ttdoc">The time class encapsulates a double value storing the time in seconds.</div><div class="ttdef"><b>Definition:</b> Time.h:11</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba15d41ad54a95b2d45210e5b76b9a95c0"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba15d41ad54a95b2d45210e5b76b9a95c0">xiiVariantType::Vector2U64</a></div><div class="ttdeci">@ Vector2U64</div><div class="ttdoc">The variant stores a xiiVec2U64.</div><div class="ttdef"><b>Definition:</b> VariantType.h:52</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba821e5ad1a679a77328f2353dd6a1f9c8"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba821e5ad1a679a77328f2353dd6a1f9c8">xiiVariantType::ColorGamma</a></div><div class="ttdeci">@ ColorGamma</div><div class="ttdoc">The variant stores a xiiColorGammaUB value.</div><div class="ttdef"><b>Definition:</b> VariantType.h:78</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bae293ccf0b245bf852d3fc228b531f5e6"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bae293ccf0b245bf852d3fc228b531f5e6">xiiVariantType::VariantDictionary</a></div><div class="ttdeci">@ VariantDictionary</div><div class="ttdoc">The variant stores a dictionary (hashmap) of xiiVariant's. A heap allocation is required to store thi...</div><div class="ttdef"><b>Definition:</b> VariantType.h:84</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba7696a7cb5ba35ccc868c905bd137c676"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba7696a7cb5ba35ccc868c905bd137c676">xiiVariantType::UInt64</a></div><div class="ttdeci">@ UInt64</div><div class="ttdoc">The variant stores a xiiUInt64.</div><div class="ttdef"><b>Definition:</b> VariantType.h:39</div></div>
<div class="ttc" id="anamespacexii_conversion_utils_htm_ac9f29fe90cbed1ca079e2407d4b3f3bd"><div class="ttname"><a href="../../d9/d80/namespacexii_conversion_utils.htm#ac9f29fe90cbed1ca079e2407d4b3f3bd">xiiConversionUtils::StringToBool</a></div><div class="ttdeci">XII_FOUNDATION_DLL xiiResult StringToBool(xiiStringView sText, bool &amp;out_bRes, const char **out_pLastParsePosition=nullptr)</div><div class="ttdoc">Parses szString and checks that the first word it finds starts with a phrase that can be interpreted ...</div><div class="ttdef"><b>Definition:</b> ConversionUtils.cpp:310</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baffb36261ed0cbc046508167bd8f0a060"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baffb36261ed0cbc046508167bd8f0a060">xiiVariantType::Vector4</a></div><div class="ttdeci">@ Vector4</div><div class="ttdoc">The variant stores a xiiVec4.</div><div class="ttdef"><b>Definition:</b> VariantType.h:57</div></div>
<div class="ttc" id="anamespacexii_conversion_utils_htm_aa292cb87e3b4b91ed3c90d7cd3729c3b"><div class="ttname"><a href="../../d9/d80/namespacexii_conversion_utils.htm#aa292cb87e3b4b91ed3c90d7cd3729c3b">xiiConversionUtils::StringToInt</a></div><div class="ttdeci">XII_FOUNDATION_DLL xiiResult StringToInt(xiiStringView sText, xiiInt32 &amp;out_iRes, const char **out_pLastParsePosition=nullptr)</div><div class="ttdoc">Parses szString and converts it to an integer value. Returns XII_FAILURE if the string contains no pa...</div><div class="ttdef"><b>Definition:</b> ConversionUtils.cpp:87</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba6a190bc49f129b7fcdf4950893b6e8ba"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba6a190bc49f129b7fcdf4950893b6e8ba">xiiVariantType::DataBuffer</a></div><div class="ttdeci">@ DataBuffer</div><div class="ttdoc">The variant stores a xiiDataBuffer, an alias to DynamicArray&lt;xiiUInt8&gt;. A heap allocation is required...</div><div class="ttdef"><b>Definition:</b> VariantType.h:75</div></div>
<div class="ttc" id="astructxii_hybrid_string_htm"><div class="ttname"><a href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt; 32, xiiDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="aclassxii_mat4_template_htm"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt; float &gt;</a></div></div>
<div class="ttc" id="aclassxii_mat3_template_htm"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt; float &gt;</a></div></div>
<div class="ttc" id="anamespacexii_conversion_utils_htm_a6ec84e63e58423cf09b5bb966278d1ad"><div class="ttname"><a href="../../d9/d80/namespacexii_conversion_utils.htm#a6ec84e63e58423cf09b5bb966278d1ad">xiiConversionUtils::ToString</a></div><div class="ttdeci">const XII_ALWAYS_INLINE xiiStringBuilder &amp; ToString(bool value, xiiStringBuilder &amp;out_sResult)</div><div class="ttdoc">Converts a bool to a string.</div><div class="ttdef"><b>Definition:</b> ConversionUtils.h:176</div></div>
<div class="ttc" id="astructxii_typed_object_htm"><div class="ttname"><a href="../../d1/d30/structxii_typed_object.htm">xiiTypedObject</a></div><div class="ttdoc">Defines a reference to an immutable object owned by a xiiVariant.</div><div class="ttdef"><b>Definition:</b> Variant.h:23</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baaa27edd155de1483f639b07f7e02868d"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baaa27edd155de1483f639b07f7e02868d">xiiVariantType::Vector3I64</a></div><div class="ttdeci">@ Vector3I64</div><div class="ttdoc">The variant stores a xiiVec3I64. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:47</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baa89b3078e423304b3bb9c2c8bfd2042f"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baa89b3078e423304b3bb9c2c8bfd2042f">xiiVariantType::Vector3d</a></div><div class="ttdeci">@ Vector3d</div><div class="ttdoc">The variant stores a xiiVec3d. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:59</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba8050a00aa1fda3e68fdb6f82b6f5e0bb"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8050a00aa1fda3e68fdb6f82b6f5e0bb">xiiVariantType::UInt32</a></div><div class="ttdeci">@ UInt32</div><div class="ttdoc">The variant stores a xiiUInt32.</div><div class="ttdef"><b>Definition:</b> VariantType.h:38</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bab2f9f3eb8e59af447f4059f0d11af5b1"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab2f9f3eb8e59af447f4059f0d11af5b1">xiiVariantType::Int16</a></div><div class="ttdeci">@ Int16</div><div class="ttdoc">The variant stores a xiiInt16.</div><div class="ttdef"><b>Definition:</b> VariantType.h:33</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba69a6dcd72a912e37b60f63e8ec3b8883"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba69a6dcd72a912e37b60f63e8ec3b8883">xiiVariantType::Vector4U</a></div><div class="ttdeci">@ Vector4U</div><div class="ttdoc">The variant stores a xiiVec4U32.</div><div class="ttdef"><b>Definition:</b> VariantType.h:51</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba66010e7ef97a1be2e2b52350f7a97807"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba66010e7ef97a1be2e2b52350f7a97807">xiiVariantType::Transform</a></div><div class="ttdeci">@ Transform</div><div class="ttdoc">The variant stores a xiiTransform. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:67</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="anamespacexii_conversion_utils_htm_ad84dbcba8a552de03d282e9ffd80aff3"><div class="ttname"><a href="../../d9/d80/namespacexii_conversion_utils.htm#ad84dbcba8a552de03d282e9ffd80aff3">xiiConversionUtils::StringToInt64</a></div><div class="ttdeci">XII_FOUNDATION_DLL xiiResult StringToInt64(xiiStringView sText, xiiInt64 &amp;out_iRes, const char **out_pLastParsePosition=nullptr)</div><div class="ttdoc">Same as StringToInt but converts to a 64bit integer value instead.</div><div class="ttdef"><b>Definition:</b> ConversionUtils.cpp:111</div></div>
<div class="ttc" id="aclassxii_hashed_string_htm_a54c8ecc5b07fff781b4c8fb18b9d89cc"><div class="ttname"><a href="../../d6/d0c/classxii_hashed_string.htm#a54c8ecc5b07fff781b4c8fb18b9d89cc">xiiHashedString::Assign</a></div><div class="ttdeci">void Assign(const char(&amp;string)[N])</div><div class="ttdoc">Assigning a new string from a string constant is a slow operation, but the hash computation can happe...</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba49e3197092e54db6d283bb04756e768e"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba49e3197092e54db6d283bb04756e768e">xiiVariantType::Matrix3</a></div><div class="ttdeci">@ Matrix3</div><div class="ttdoc">The variant stores a xiiMat3. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:63</div></div>
<div class="ttc" id="anamespacexii_conversion_utils_htm_ab611da72ebd3daf60c4d0c2a805f3cad"><div class="ttname"><a href="../../d9/d80/namespacexii_conversion_utils.htm#ab611da72ebd3daf60c4d0c2a805f3cad">xiiConversionUtils::StringToFloat</a></div><div class="ttdeci">XII_FOUNDATION_DLL xiiResult StringToFloat(xiiStringView sText, double &amp;out_fRes, const char **out_pLastParsePosition=nullptr)</div><div class="ttdoc">Parses szString and converts it to a double value. Returns XII_FAILURE if the string contains no pars...</div><div class="ttdef"><b>Definition:</b> ConversionUtils.cpp:162</div></div>
<div class="ttc" id="aclassxii_color_gamma_u_b_htm"><div class="ttname"><a href="../../df/d71/classxii_color_gamma_u_b.htm">xiiColorGammaUB</a></div><div class="ttdoc">A 8bit per channel unsigned normalized (values interpreted as 0-1) color storage format that represen...</div><div class="ttdef"><b>Definition:</b> Color8UNorm.h:69</div></div>
<div class="ttc" id="aclassxii_variant_htm_a2a0ec6bf278a9412ec6fb8103d71f93a"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm#a2a0ec6bf278a9412ec6fb8103d71f93a">xiiVariant::DispatchTo</a></div><div class="ttdeci">static auto DispatchTo(Functor &amp;ref_functor, Type::Enum type, Args &amp;&amp;... args)</div><div class="ttdoc">This will call the overloaded operator() (function call operator) of the provided functor.</div><div class="ttdef"><b>Definition:</b> VariantHelper_inl.h:10</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba40e3d70b6d04b754918ddff3de8a06da"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba40e3d70b6d04b754918ddff3de8a06da">xiiVariantType::Time</a></div><div class="ttdeci">@ Time</div><div class="ttdoc">The variant stores a xiiTime value.</div><div class="ttdef"><b>Definition:</b> VariantType.h:76</div></div>
<div class="ttc" id="aclassxii_color_htm"><div class="ttname"><a href="../../d3/de6/classxii_color.htm">xiiColor</a></div><div class="ttdoc">xiiColor represents and RGBA color in linear color space. Values are stored as float,...</div><div class="ttdef"><b>Definition:</b> Color.h:43</div></div>
<div class="ttc" id="aclassxii_transform_template_htm"><div class="ttname"><a href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate&lt; float &gt;</a></div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba2fb493562ef47c8eb600436750635e4d"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba2fb493562ef47c8eb600436750635e4d">xiiVariantType::Angled</a></div><div class="ttdeci">@ Angled</div><div class="ttdoc">The variant stores a xiiAngled value.</div><div class="ttdef"><b>Definition:</b> VariantType.h:70</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba050f8cea737a00cb6a24148fd1d1e0cd"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba050f8cea737a00cb6a24148fd1d1e0cd">xiiVariantType::Vector2I</a></div><div class="ttdeci">@ Vector2I</div><div class="ttdoc">The variant stores a xiiVec2I32.</div><div class="ttdef"><b>Definition:</b> VariantType.h:43</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba507c2b7c1346973f51f2f4d81071669a"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba507c2b7c1346973f51f2f4d81071669a">xiiVariantType::UInt8</a></div><div class="ttdeci">@ UInt8</div><div class="ttdoc">The variant stores a xiiUInt8.</div><div class="ttdef"><b>Definition:</b> VariantType.h:36</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba43f41acdb77f27ddf59975457ab79032"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba43f41acdb77f27ddf59975457ab79032">xiiVariantType::TypedObject</a></div><div class="ttdeci">@ TypedObject</div><div class="ttdoc">The variant stores a xiiTypedObject value. Reflected type and data queries will match the object....</div><div class="ttdef"><b>Definition:</b> VariantType.h:86</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bab919acbbaaf48d8c629e950c070639ea"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab919acbbaaf48d8c629e950c070639ea">xiiVariantType::Quaterniond</a></div><div class="ttdeci">@ Quaterniond</div><div class="ttdoc">The variant stores a xiiQuatd. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:62</div></div>
<div class="ttc" id="astructxii_variant_type_deduction_htm"><div class="ttname"><a href="../../de/dec/structxii_variant_type_deduction.htm">xiiVariantTypeDeduction</a></div><div class="ttdoc">A helper struct to convert the C++ type, which is passed as the template argument,...</div><div class="ttdef"><b>Definition:</b> VariantType.h:110</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bacbc04abe2af34252c7b5928d990ea60f"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bacbc04abe2af34252c7b5928d990ea60f">xiiVariantType::TempHashedString</a></div><div class="ttdeci">@ TempHashedString</div><div class="ttdoc">The variant stores a xiiTempHashedString value.</div><div class="ttdef"><b>Definition:</b> VariantType.h:74</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bacd2abf80cb60eedeb8a259d884f88b49"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bacd2abf80cb60eedeb8a259d884f88b49">xiiVariantType::Color</a></div><div class="ttdeci">@ Color</div><div class="ttdoc">The variant stores a xiiColor.</div><div class="ttdef"><b>Definition:</b> VariantType.h:42</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba163cde0ca329cca1d0fb13696253d724"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba163cde0ca329cca1d0fb13696253d724">xiiVariantType::Int64</a></div><div class="ttdeci">@ Int64</div><div class="ttdoc">The variant stores a xiiInt64.</div><div class="ttdef"><b>Definition:</b> VariantType.h:35</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba664309a1a4c6d1958ca3dd6fde749214">xiiVariantType::HashedString</a></div><div class="ttdeci">@ HashedString</div><div class="ttdoc">The variant stores a xiiHashedString value.</div><div class="ttdef"><b>Definition:</b> VariantType.h:73</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba645c5268ede1adbeae7f88d69f6f4f57"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba645c5268ede1adbeae7f88d69f6f4f57">xiiVariantType::Angle</a></div><div class="ttdeci">@ Angle</div><div class="ttdoc">The variant stores a xiiAngle value.</div><div class="ttdef"><b>Definition:</b> VariantType.h:69</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baaff7f565bf78e380552ff479ea5123dd"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baaff7f565bf78e380552ff479ea5123dd">xiiVariantType::Vector2I64</a></div><div class="ttdeci">@ Vector2I64</div><div class="ttdoc">The variant stores a xiiVec2I64.</div><div class="ttdef"><b>Definition:</b> VariantType.h:46</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baea31d52ec8669e7817ec3802bd70563b"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baea31d52ec8669e7817ec3802bd70563b">xiiVariantType::Vector3I</a></div><div class="ttdeci">@ Vector3I</div><div class="ttdoc">The variant stores a xiiVec3I32.</div><div class="ttdef"><b>Definition:</b> VariantType.h:44</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba2785d1b68e10f5e955f16e2b3056c376"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba2785d1b68e10f5e955f16e2b3056c376">xiiVariantType::UInt16</a></div><div class="ttdeci">@ UInt16</div><div class="ttdoc">The variant stores a xiiUInt16.</div><div class="ttdef"><b>Definition:</b> VariantType.h:37</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba8de78905eafe1a4ae0c0a29106f5a808">xiiVariantType::Double</a></div><div class="ttdeci">@ Double</div><div class="ttdoc">The variant stores a double.</div><div class="ttdef"><b>Definition:</b> VariantType.h:41</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baefc73d0a6f233e85bf6b539389420ad2"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baefc73d0a6f233e85bf6b539389420ad2">xiiVariantType::Vector2U</a></div><div class="ttdeci">@ Vector2U</div><div class="ttdoc">The variant stores a xiiVec2U32.</div><div class="ttdef"><b>Definition:</b> VariantType.h:49</div></div>
<div class="ttc" id="aclassxii_dynamic_array_htm"><div class="ttname"><a href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt; xiiUInt8 &gt;</a></div></div>
<div class="ttc" id="aclassxii_variant_htm_a71635c40a508116fdda394b3be814789"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm#a71635c40a508116fdda394b3be814789">xiiVariant::Get</a></div><div class="ttdeci">const T &amp; Get() const</div><div class="ttdoc">Returns the variants value as the provided type.</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6babdefc4bfdb91cd26095efd2376b40fed"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6babdefc4bfdb91cd26095efd2376b40fed">xiiVariantType::Vector4U64</a></div><div class="ttdeci">@ Vector4U64</div><div class="ttdoc">The variant stores a xiiVec4U64. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:54</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba58e50deeab45f9fbfac428ed490e7189">xiiVariantType::String</a></div><div class="ttdeci">@ String</div><div class="ttdoc">The variant stores a string. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:71</div></div>
<div class="ttc" id="aclassxii_quat_template_htm"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt; float &gt;</a></div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba3f773ef671b2cc2468439e62898a46f5"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba3f773ef671b2cc2468439e62898a46f5">xiiVariantType::Transformd</a></div><div class="ttdeci">@ Transformd</div><div class="ttdoc">The variant stores a xiiTransformd. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:68</div></div>
<div class="ttc" id="aclassxii_angle_template_htm"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt; float &gt;</a></div></div>
<div class="ttc" id="aclassxii_hash_table_htm"><div class="ttname"><a href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable&lt; xiiString, xiiVariant &gt;</a></div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bae02b02d6a7e5675f783ba12f54cd9a50"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bae02b02d6a7e5675f783ba12f54cd9a50">xiiVariantType::Vector3</a></div><div class="ttdeci">@ Vector3</div><div class="ttdoc">The variant stores a xiiVec3.</div><div class="ttdef"><b>Definition:</b> VariantType.h:56</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bac7ef5f2d3002177f7be84230ff522d30"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bac7ef5f2d3002177f7be84230ff522d30">xiiVariantType::Matrix4</a></div><div class="ttdeci">@ Matrix4</div><div class="ttdoc">The variant stores a xiiMat4. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:65</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baca7acfc317d0da41f1f4289062243bf2"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baca7acfc317d0da41f1f4289062243bf2">xiiVariantType::Vector4I64</a></div><div class="ttdeci">@ Vector4I64</div><div class="ttdoc">The variant stores a xiiVec4I64. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:48</div></div>
<div class="ttc" id="aclassxii_string_builder_htm"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a></div><div class="ttdoc">xiiStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba1a84f65af26a38e279bb14132e3aa401"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba1a84f65af26a38e279bb14132e3aa401">xiiVariantType::Matrix3d</a></div><div class="ttdeci">@ Matrix3d</div><div class="ttdoc">The variant stores a xiiMat3d. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:64</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6baa8c07e5b250f6b9234d0b2834f7f6b48"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6baa8c07e5b250f6b9234d0b2834f7f6b48">xiiVariantType::Bool</a></div><div class="ttdeci">@ Bool</div><div class="ttdoc">The variant stores a bool.</div><div class="ttdef"><b>Definition:</b> VariantType.h:31</div></div>
<div class="ttc" id="aclassxii_variant_htm_a8143bdbbbeb646f8db6e154f5092957f"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm#a8143bdbbbeb646f8db6e154f5092957f">xiiVariant::GetType</a></div><div class="ttdeci">Type::Enum GetType() const</div><div class="ttdoc">Returns the exact xiiVariant::Type value.</div><div class="ttdef"><b>Definition:</b> Variant_inl.h:388</div></div>
<div class="ttc" id="aclassxii_variant_htm_aa28a169f3d484e9d656060b372ce2563"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm#aa28a169f3d484e9d656060b372ce2563">xiiVariant::IsA</a></div><div class="ttdeci">bool IsA() const</div><div class="ttdoc">Returns whether the stored type is exactly the given type.</div></div>
<div class="ttc" id="aclassxii_variant_htm_a250a01bc4087187f7fa2de0f63afffd1"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm#a250a01bc4087187f7fa2de0f63afffd1">xiiVariant::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Returns whether this variant stores any other type than 'Invalid'.</div><div class="ttdef"><b>Definition:</b> Variant_inl.h:311</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bab26b8af58219c7d6f73e5db04dc9c002"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab26b8af58219c7d6f73e5db04dc9c002">xiiVariantType::Vector3U</a></div><div class="ttdeci">@ Vector3U</div><div class="ttdoc">The variant stores a xiiVec3U32.</div><div class="ttdef"><b>Definition:</b> VariantType.h:50</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt; float &gt;</a></div></div>
<div class="ttc" id="aclassxii_vec3_template_htm"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt; float &gt;</a></div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba054efb0d381798145ec3ed37a1dbfcc0"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba054efb0d381798145ec3ed37a1dbfcc0">xiiVariantType::Quaternion</a></div><div class="ttdeci">@ Quaternion</div><div class="ttdoc">The variant stores a xiiQuat.</div><div class="ttdef"><b>Definition:</b> VariantType.h:61</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt; float &gt;</a></div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bacf5e38ac100b71d28a809c15e0480881"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bacf5e38ac100b71d28a809c15e0480881">xiiVariantType::VariantArray</a></div><div class="ttdeci">@ VariantArray</div><div class="ttdoc">The variant stores an array of xiiVariant's. A heap allocation is required to store this data type.</div><div class="ttdef"><b>Definition:</b> VariantType.h:83</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6bab7308509ad3a80d19a88558c7e0163cd">xiiVariantType::StringView</a></div><div class="ttdeci">@ StringView</div><div class="ttdoc">The variant stores a xiiStringView.</div><div class="ttdef"><b>Definition:</b> VariantType.h:72</div></div>
<div class="ttc" id="aclassxii_uuid_htm"><div class="ttname"><a href="../../dc/d1d/classxii_uuid.htm">xiiUuid</a></div><div class="ttdoc">This data type is the abstraction for 128-bit Uuid (also known as GUID) instances.</div><div class="ttdef"><b>Definition:</b> Uuid.h:10</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_fd654f0525c8869fa0409c81d19e3265.htm">Types</a></li><li class="navelem"><a class="el" href="../../dir_013c87a4ce253332bc225fb61b1de856.htm">Implementation</a></li><li class="navelem"><b>VariantHelper_inl.h</b></li>
    <li class="footer">Generated on Thu Dec 28 2023 07:57:13 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
