<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiHashedString Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/d0c/classxii_hashed_string.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../db/df8/classxii_hashed_string-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiHashedString Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whether two strings are identical.  
 <a href="../../d6/d0c/classxii_hashed_string.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d9/dc9/_hashed_string_8h_source.htm">HashedString.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/df9/structxii_hashed_string_1_1_hashed_data.htm">HashedData</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a969152d0f5be54cced398088bf7011b8"><td class="memItemLeft" align="right" valign="top"><a id="a969152d0f5be54cced398088bf7011b8"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>StringStorage</b> = <a class="el" href="../../d6/df7/classxii_map.htm">xiiMap</a>&lt; xiiUInt64, <a class="el" href="../../de/df9/structxii_hashed_string_1_1_hashed_data.htm">HashedData</a>, <a class="el" href="../../d1/deb/structxii_compare_helper.htm">xiiCompareHelper</a>&lt; xiiUInt64 &gt;, <a class="el" href="../../df/d02/structxii_static_allocator_wrapper.htm">xiiStaticAllocatorWrapper</a> &gt;</td></tr>
<tr class="separator:a969152d0f5be54cced398088bf7011b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ae61f30a21d053e64aacceb938f90d1"><td class="memItemLeft" align="right" valign="top"><a id="a0ae61f30a21d053e64aacceb938f90d1"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>HashedType</b> = StringStorage::Iterator</td></tr>
<tr class="separator:a0ae61f30a21d053e64aacceb938f90d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad086be117594f63d95e56ea0f8a4c982"><td class="memItemLeft" align="right" valign="top"><a id="ad086be117594f63d95e56ea0f8a4c982"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_MEM_RELOCATABLE_TYPE</b> ()</td></tr>
<tr class="separator:ad086be117594f63d95e56ea0f8a4c982"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc65ee4ad8c6c34f8caff1cd2b3c9d82"><td class="memItemLeft" align="right" valign="top"><a id="afc65ee4ad8c6c34f8caff1cd2b3c9d82"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#afc65ee4ad8c6c34f8caff1cd2b3c9d82">xiiHashedString</a> ()</td></tr>
<tr class="memdesc:afc65ee4ad8c6c34f8caff1cd2b3c9d82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes this string to the empty string. <br /></td></tr>
<tr class="separator:afc65ee4ad8c6c34f8caff1cd2b3c9d82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f4a341d5887229a3e5fca1c85cfb75a"><td class="memItemLeft" align="right" valign="top"><a id="a5f4a341d5887229a3e5fca1c85cfb75a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a5f4a341d5887229a3e5fca1c85cfb75a">xiiHashedString</a> (const <a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;rhs)</td></tr>
<tr class="memdesc:a5f4a341d5887229a3e5fca1c85cfb75a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the given <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a>. <br /></td></tr>
<tr class="separator:a5f4a341d5887229a3e5fca1c85cfb75a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b5d0035dac27d79fa38ea117b5f8b5b"><td class="memItemLeft" align="right" valign="top"><a id="a9b5d0035dac27d79fa38ea117b5f8b5b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a9b5d0035dac27d79fa38ea117b5f8b5b">xiiHashedString</a> (<a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;&amp;rhs)</td></tr>
<tr class="memdesc:a9b5d0035dac27d79fa38ea117b5f8b5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the given <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a>. <br /></td></tr>
<tr class="separator:a9b5d0035dac27d79fa38ea117b5f8b5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4186412eca98a8fb4a2f66449f9b6c0"><td class="memItemLeft" align="right" valign="top"><a id="af4186412eca98a8fb4a2f66449f9b6c0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#af4186412eca98a8fb4a2f66449f9b6c0">operator=</a> (const <a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;rhs)</td></tr>
<tr class="memdesc:af4186412eca98a8fb4a2f66449f9b6c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the given <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a>. <br /></td></tr>
<tr class="separator:af4186412eca98a8fb4a2f66449f9b6c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87eeaecd77b3034b28f93958421303e4"><td class="memItemLeft" align="right" valign="top"><a id="a87eeaecd77b3034b28f93958421303e4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a87eeaecd77b3034b28f93958421303e4">operator=</a> (<a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;&amp;rhs)</td></tr>
<tr class="memdesc:a87eeaecd77b3034b28f93958421303e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the given <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a>. <br /></td></tr>
<tr class="separator:a87eeaecd77b3034b28f93958421303e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54c8ecc5b07fff781b4c8fb18b9d89cc"><td class="memTemplParams" colspan="2">template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a54c8ecc5b07fff781b4c8fb18b9d89cc"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a54c8ecc5b07fff781b4c8fb18b9d89cc">Assign</a> (const char(&amp;string)[N])</td></tr>
<tr class="memdesc:a54c8ecc5b07fff781b4c8fb18b9d89cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigning a new string from a string constant is a slow operation, but the hash computation can happen at compile time.  <a href="../../d6/d0c/classxii_hashed_string.htm#a54c8ecc5b07fff781b4c8fb18b9d89cc">More...</a><br /></td></tr>
<tr class="separator:a54c8ecc5b07fff781b4c8fb18b9d89cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55ad522187e4a55bf3aeb90f6b01c421"><td class="memTemplParams" colspan="2"><a id="a55ad522187e4a55bf3aeb90f6b01c421"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a55ad522187e4a55bf3aeb90f6b01c421"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Assign</b> (char(&amp;string)[N])=delete</td></tr>
<tr class="separator:a55ad522187e4a55bf3aeb90f6b01c421"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae43c79600e55af0daf8bcbcee592a544"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#ae43c79600e55af0daf8bcbcee592a544">Assign</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sString)</td></tr>
<tr class="memdesc:ae43c79600e55af0daf8bcbcee592a544"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigning a new string from a non-hashed string is a very slow operation, this should be used rarely.  <a href="../../d6/d0c/classxii_hashed_string.htm#ae43c79600e55af0daf8bcbcee592a544">More...</a><br /></td></tr>
<tr class="separator:ae43c79600e55af0daf8bcbcee592a544"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaee48674cfaf6da1188ff096ced2c952"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#aaee48674cfaf6da1188ff096ced2c952">operator==</a> (const <a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;rhs) const</td></tr>
<tr class="memdesc:aaee48674cfaf6da1188ff096ced2c952"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparing whether two hashed strings are identical is just a pointer comparison. This operation is what <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> is optimized for.  <a href="../../d6/d0c/classxii_hashed_string.htm#aaee48674cfaf6da1188ff096ced2c952">More...</a><br /></td></tr>
<tr class="separator:aaee48674cfaf6da1188ff096ced2c952"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecc1266fcc0bd079ea13d04343f7c296"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#aecc1266fcc0bd079ea13d04343f7c296">operator!=</a> (const <a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;rhs) const</td></tr>
<tr class="separator:aecc1266fcc0bd079ea13d04343f7c296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95154015c2d4a0925e01dbca1479b612"><td class="memItemLeft" align="right" valign="top"><a id="a95154015c2d4a0925e01dbca1479b612"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a95154015c2d4a0925e01dbca1479b612">operator==</a> (const <a class="el" href="../../d5/dd2/classxii_temp_hashed_string.htm">xiiTempHashedString</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a95154015c2d4a0925e01dbca1479b612"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string object to a <a class="el" href="../../d5/dd2/classxii_temp_hashed_string.htm" title="A class to use together with xiiHashedString for quick comparisons with temporary strings that need n...">xiiTempHashedString</a> object. This should be used whenever some object needs to be found and the string to compare against is not yet a <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> object. <br /></td></tr>
<tr class="separator:a95154015c2d4a0925e01dbca1479b612"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace614bdc4a3489137e77d6736929cd5c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#ace614bdc4a3489137e77d6736929cd5c">operator!=</a> (const <a class="el" href="../../d5/dd2/classxii_temp_hashed_string.htm">xiiTempHashedString</a> &amp;rhs) const</td></tr>
<tr class="separator:ace614bdc4a3489137e77d6736929cd5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a128693428cadc495bae497bf40fe9dee"><td class="memItemLeft" align="right" valign="top"><a id="a128693428cadc495bae497bf40fe9dee"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a128693428cadc495bae497bf40fe9dee">operator&lt;</a> (const <a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a128693428cadc495bae497bf40fe9dee"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator allows sorting objects by hash value, not by alphabetical order. <br /></td></tr>
<tr class="separator:a128693428cadc495bae497bf40fe9dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dc70e89a298d85963f3cd644e508ee6"><td class="memItemLeft" align="right" valign="top"><a id="a0dc70e89a298d85963f3cd644e508ee6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a0dc70e89a298d85963f3cd644e508ee6">operator&lt;</a> (const <a class="el" href="../../d5/dd2/classxii_temp_hashed_string.htm">xiiTempHashedString</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a0dc70e89a298d85963f3cd644e508ee6"><td class="mdescLeft">&#160;</td><td class="mdescRight">This operator allows sorting objects by hash value, not by alphabetical order. <br /></td></tr>
<tr class="separator:a0dc70e89a298d85963f3cd644e508ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50f68022fa81098fd90fd1649267a5d2"><td class="memItemLeft" align="right" valign="top"><a id="a50f68022fa81098fd90fd1649267a5d2"></a>
const <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a50f68022fa81098fd90fd1649267a5d2">GetString</a> () const</td></tr>
<tr class="memdesc:a50f68022fa81098fd90fd1649267a5d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives access to the actual string data, so you can do all the typical (read-only) string operations on it. <br /></td></tr>
<tr class="separator:a50f68022fa81098fd90fd1649267a5d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50ad54078c3e01c752191c14f3fa38cd"><td class="memItemLeft" align="right" valign="top"><a id="a50ad54078c3e01c752191c14f3fa38cd"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a50ad54078c3e01c752191c14f3fa38cd">GetData</a> () const</td></tr>
<tr class="memdesc:a50ad54078c3e01c752191c14f3fa38cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives access to the actual string data, so you can do all the typical (read-only) string operations on it. <br /></td></tr>
<tr class="separator:a50ad54078c3e01c752191c14f3fa38cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb9d0d043b09b0a5023f59c126b6e76a"><td class="memItemLeft" align="right" valign="top"><a id="abb9d0d043b09b0a5023f59c126b6e76a"></a>
xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#abb9d0d043b09b0a5023f59c126b6e76a">GetHash</a> () const</td></tr>
<tr class="memdesc:abb9d0d043b09b0a5023f59c126b6e76a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the hash of the stored string. <br /></td></tr>
<tr class="separator:abb9d0d043b09b0a5023f59c126b6e76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d16de8e7ef3c765ae6a0bab423247a1"><td class="memItemLeft" align="right" valign="top"><a id="a6d16de8e7ef3c765ae6a0bab423247a1"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a6d16de8e7ef3c765ae6a0bab423247a1">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a6d16de8e7ef3c765ae6a0bab423247a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the string is empty. <br /></td></tr>
<tr class="separator:a6d16de8e7ef3c765ae6a0bab423247a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbac46b61eee7cd13fa984b047363843"><td class="memItemLeft" align="right" valign="top"><a id="abbac46b61eee7cd13fa984b047363843"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#abbac46b61eee7cd13fa984b047363843">Clear</a> ()</td></tr>
<tr class="memdesc:abbac46b61eee7cd13fa984b047363843"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets the string to the empty string. <br /></td></tr>
<tr class="separator:abbac46b61eee7cd13fa984b047363843"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfa6e3562db945b6d3b0f48d3a39d183"><td class="memItemLeft" align="right" valign="top"><a id="adfa6e3562db945b6d3b0f48d3a39d183"></a>
XII_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#adfa6e3562db945b6d3b0f48d3a39d183">operator xiiStringView</a> () const</td></tr>
<tr class="memdesc:adfa6e3562db945b6d3b0f48d3a39d183"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string view to this string's data. <br /></td></tr>
<tr class="separator:adfa6e3562db945b6d3b0f48d3a39d183"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add27fac588d2771f1181cc38538800d3"><td class="memItemLeft" align="right" valign="top"><a id="add27fac588d2771f1181cc38538800d3"></a>
XII_ALWAYS_INLINE <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#add27fac588d2771f1181cc38538800d3">GetView</a> () const</td></tr>
<tr class="memdesc:add27fac588d2771f1181cc38538800d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string view to this string's data. <br /></td></tr>
<tr class="separator:add27fac588d2771f1181cc38538800d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7da5f3b8b35deaaac42acae20b3080cb"><td class="memItemLeft" align="right" valign="top"><a id="a7da5f3b8b35deaaac42acae20b3080cb"></a>
XII_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a7da5f3b8b35deaaac42acae20b3080cb">operator const char *</a> () const</td></tr>
<tr class="memdesc:a7da5f3b8b35deaaac42acae20b3080cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the internal Utf8 string. <br /></td></tr>
<tr class="separator:a7da5f3b8b35deaaac42acae20b3080cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dca8ce2fd7362eda35a9edd8d3caec1"><td class="memTemplParams" colspan="2"><a id="a1dca8ce2fd7362eda35a9edd8d3caec1"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a1dca8ce2fd7362eda35a9edd8d3caec1"><td class="memTemplItemLeft" align="right" valign="top">XII_FORCE_INLINE void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Assign</b> (const char(&amp;string)[N])</td></tr>
<tr class="separator:a1dca8ce2fd7362eda35a9edd8d3caec1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whether two strings are identical. </p>
<p>Internally only a reference to the string data is stored. The data itself is stored in a central location, where no duplicates are possible. Thus two identical strings will result in identical <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> objects, which makes equality comparisons very easy (it's a pointer comparison).<br  />
Copying <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> objects around and assigning between them is very fast as well.<br  />
<br  />
Assigning from some other string type is rather slow though, as it requires thread synchronization.<br  />
You can also get access to the actual string data via <a class="el" href="../../d6/d0c/classxii_hashed_string.htm#a50f68022fa81098fd90fd1649267a5d2" title="Gives access to the actual string data, so you can do all the typical (read-only) string operations o...">GetString()</a>.<br  />
<br  />
You should use <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> whenever the size of the encapsulating object is important and when changes to the string itself are rare, but checks for equality might be frequent (e.g. in a system where objects are identified via their name).<br  />
At runtime when you need to compare <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> objects with some temporary string object, used <a class="el" href="../../d5/dd2/classxii_temp_hashed_string.htm" title="A class to use together with xiiHashedString for quick comparisons with temporary strings that need n...">xiiTempHashedString</a>, as it will only use the string's hash value for comparison, but will not store the actual string anywhere. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a54c8ecc5b07fff781b4c8fb18b9d89cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54c8ecc5b07fff781b4c8fb18b9d89cc">&#9670;&nbsp;</a></span>Assign() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t N&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void xiiHashedString::Assign </td>
          <td>(</td>
          <td class="paramtype">const char(&amp;)&#160;</td>
          <td class="paramname"><em>string</em>[N]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assigning a new string from a string constant is a slow operation, but the hash computation can happen at compile time. </p>
<p>If you need to create an object to compare <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> objects against, prefer to use <a class="el" href="../../d5/dd2/classxii_temp_hashed_string.htm" title="A class to use together with xiiHashedString for quick comparisons with temporary strings that need n...">xiiTempHashedString</a>. It will only compute the strings hash value, but does not require any thread synchronization. </p>

</div>
</div>
<a id="ae43c79600e55af0daf8bcbcee592a544"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae43c79600e55af0daf8bcbcee592a544">&#9670;&nbsp;</a></span>Assign() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XII_FORCE_INLINE void xiiHashedString::Assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assigning a new string from a non-hashed string is a very slow operation, this should be used rarely. </p>
<p>If you need to create an object to compare <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> objects against, prefer to use <a class="el" href="../../d5/dd2/classxii_temp_hashed_string.htm" title="A class to use together with xiiHashedString for quick comparisons with temporary strings that need n...">xiiTempHashedString</a>. It will only compute the strings hash value, but does not require any thread synchronization. </p>

</div>
</div>
<a id="aecc1266fcc0bd079ea13d04343f7c296"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecc1266fcc0bd079ea13d04343f7c296">&#9670;&nbsp;</a></span>operator!=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiHashedString::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section see"><dt>See also</dt><dd>operator== </dd></dl>

</div>
</div>
<a id="ace614bdc4a3489137e77d6736929cd5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace614bdc4a3489137e77d6736929cd5c">&#9670;&nbsp;</a></span>operator!=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiHashedString::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d5/dd2/classxii_temp_hashed_string.htm">xiiTempHashedString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section see"><dt>See also</dt><dd>operator== </dd></dl>

</div>
</div>
<a id="aaee48674cfaf6da1188ff096ced2c952"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaee48674cfaf6da1188ff096ced2c952">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiHashedString::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Comparing whether two hashed strings are identical is just a pointer comparison. This operation is what <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> is optimized for. </p>
<dl class="section note"><dt>Note</dt><dd>Comparing between <a class="el" href="../../d6/d0c/classxii_hashed_string.htm" title="This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...">xiiHashedString</a> objects is always error-free, so even if two string had the same hash value, although they are different, this comparison function will not report they are the same. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Strings/<a class="el" href="../../d9/dc9/_hashed_string_8h_source.htm">HashedString.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/HashedString.cpp</li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d4/d50/_hashed_string__inl_8h_source.htm">HashedString_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a></li>
    <li class="footer">Generated on Thu Aug 17 2023 02:03:15 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
