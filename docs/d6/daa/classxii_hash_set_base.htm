<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiHashSetBase&lt; KeyType, Hasher &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/daa/classxii_hash_set_base.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="../../d9/d35/classxii_hash_set_base-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiHashSetBase&lt; KeyType, Hasher &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementation of a hashset.  
 <a href="../../d6/daa/classxii_hash_set_base.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d2/dfc/_hash_set_8h_source.htm">HashSet.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/dde/classxii_hash_set_base_1_1_const_iterator.htm">ConstIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const iterator.  <a href="../../d1/dde/classxii_hash_set_base_1_1_const_iterator.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afcf3028a0d851a1e5d349b7df1439d8b"><td class="memItemLeft" align="right" valign="top"><a id="afcf3028a0d851a1e5d349b7df1439d8b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#afcf3028a0d851a1e5d349b7df1439d8b">operator==</a> (const <a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:afcf3028a0d851a1e5d349b7df1439d8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this table to another table. <br /></td></tr>
<tr class="separator:afcf3028a0d851a1e5d349b7df1439d8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e156fc343d8947a9fea4696f73ab26f"><td class="memItemLeft" align="right" valign="top"><a id="a6e156fc343d8947a9fea4696f73ab26f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a6e156fc343d8947a9fea4696f73ab26f">Reserve</a> (xiiUInt32 uiCapacity)</td></tr>
<tr class="memdesc:a6e156fc343d8947a9fea4696f73ab26f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the hashset by over-allocating the internal storage so that the load factor is lower or equal to 60% when inserting the given number of entries. <br /></td></tr>
<tr class="separator:a6e156fc343d8947a9fea4696f73ab26f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af213c5ff103c94956ef8f3f04eb73c4d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#af213c5ff103c94956ef8f3f04eb73c4d">Compact</a> ()</td></tr>
<tr class="memdesc:af213c5ff103c94956ef8f3f04eb73c4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the hashset to avoid wasting memory.  <a href="../../d6/daa/classxii_hash_set_base.htm#af213c5ff103c94956ef8f3f04eb73c4d">More...</a><br /></td></tr>
<tr class="separator:af213c5ff103c94956ef8f3f04eb73c4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae690c3d8577eb8ddc1218396e0514200"><td class="memItemLeft" align="right" valign="top"><a id="ae690c3d8577eb8ddc1218396e0514200"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#ae690c3d8577eb8ddc1218396e0514200">GetCount</a> () const</td></tr>
<tr class="memdesc:ae690c3d8577eb8ddc1218396e0514200"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active entries in the table. <br /></td></tr>
<tr class="separator:ae690c3d8577eb8ddc1218396e0514200"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a8260e30f97741ad01290d044d639aa"><td class="memItemLeft" align="right" valign="top"><a id="a5a8260e30f97741ad01290d044d639aa"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a5a8260e30f97741ad01290d044d639aa">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a5a8260e30f97741ad01290d044d639aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the hashset does not contain any elements. <br /></td></tr>
<tr class="separator:a5a8260e30f97741ad01290d044d639aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1baa135019f97a028acf5dd122377708"><td class="memItemLeft" align="right" valign="top"><a id="a1baa135019f97a028acf5dd122377708"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a1baa135019f97a028acf5dd122377708">Clear</a> ()</td></tr>
<tr class="memdesc:a1baa135019f97a028acf5dd122377708"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the table. <br /></td></tr>
<tr class="separator:a1baa135019f97a028acf5dd122377708"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6fe5dbbef451a631f5fa7244a47cb49"><td class="memTemplParams" colspan="2"><a id="af6fe5dbbef451a631f5fa7244a47cb49"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:af6fe5dbbef451a631f5fa7244a47cb49"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#af6fe5dbbef451a631f5fa7244a47cb49">Insert</a> (CompatibleKeyType &amp;&amp;key)</td></tr>
<tr class="memdesc:af6fe5dbbef451a631f5fa7244a47cb49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the key. Returns whether the key was already existing. <br /></td></tr>
<tr class="separator:af6fe5dbbef451a631f5fa7244a47cb49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fb29f693cc6cf869143d2d15dbb405f"><td class="memTemplParams" colspan="2"><a id="a5fb29f693cc6cf869143d2d15dbb405f"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a5fb29f693cc6cf869143d2d15dbb405f"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a5fb29f693cc6cf869143d2d15dbb405f">Remove</a> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a5fb29f693cc6cf869143d2d15dbb405f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the entry with the given key. Returns if an entry was removed. <br /></td></tr>
<tr class="separator:a5fb29f693cc6cf869143d2d15dbb405f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aead4a2992d8a28990f669fad7775b549"><td class="memItemLeft" align="right" valign="top"><a id="aead4a2992d8a28990f669fad7775b549"></a>
<a class="el" href="../../d1/dde/classxii_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#aead4a2992d8a28990f669fad7775b549">Remove</a> (const <a class="el" href="../../d1/dde/classxii_hash_set_base_1_1_const_iterator.htm">ConstIterator</a> &amp;pos)</td></tr>
<tr class="memdesc:aead4a2992d8a28990f669fad7775b549"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the key at the given Iterator. Returns an iterator to the element after the given iterator. <br /></td></tr>
<tr class="separator:aead4a2992d8a28990f669fad7775b549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a489a672fc9831dc83caefc560b7dc176"><td class="memTemplParams" colspan="2"><a id="a489a672fc9831dc83caefc560b7dc176"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a489a672fc9831dc83caefc560b7dc176"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a489a672fc9831dc83caefc560b7dc176">Contains</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a489a672fc9831dc83caefc560b7dc176"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if an entry with given key exists in the table. <br /></td></tr>
<tr class="separator:a489a672fc9831dc83caefc560b7dc176"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b32d6374d6fac58f14abd9ef7ab4f2e"><td class="memItemLeft" align="right" valign="top"><a id="a9b32d6374d6fac58f14abd9ef7ab4f2e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a9b32d6374d6fac58f14abd9ef7ab4f2e">ContainsSet</a> (const <a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand) const</td></tr>
<tr class="memdesc:a9b32d6374d6fac58f14abd9ef7ab4f2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all keys of the given set are in the container. <br /></td></tr>
<tr class="separator:a9b32d6374d6fac58f14abd9ef7ab4f2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1767bafb36564e4061d01cfaba3c03ea"><td class="memItemLeft" align="right" valign="top"><a id="a1767bafb36564e4061d01cfaba3c03ea"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a1767bafb36564e4061d01cfaba3c03ea">Union</a> (const <a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand)</td></tr>
<tr class="memdesc:a1767bafb36564e4061d01cfaba3c03ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the union of itself and the operand. <br /></td></tr>
<tr class="separator:a1767bafb36564e4061d01cfaba3c03ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a884df912d6b8b6b9e523c7289c17c867"><td class="memItemLeft" align="right" valign="top"><a id="a884df912d6b8b6b9e523c7289c17c867"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a884df912d6b8b6b9e523c7289c17c867">Difference</a> (const <a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand)</td></tr>
<tr class="memdesc:a884df912d6b8b6b9e523c7289c17c867"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the difference of itself and the operand, i.e. subtracts operand. <br /></td></tr>
<tr class="separator:a884df912d6b8b6b9e523c7289c17c867"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad319d1cf75cad154ee3230197391ece9"><td class="memItemLeft" align="right" valign="top"><a id="ad319d1cf75cad154ee3230197391ece9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#ad319d1cf75cad154ee3230197391ece9">Intersection</a> (const <a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand)</td></tr>
<tr class="memdesc:ad319d1cf75cad154ee3230197391ece9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the intersection of itself and the operand. <br /></td></tr>
<tr class="separator:ad319d1cf75cad154ee3230197391ece9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29f69a6fe97e2ffa2b53b3da63f708b7"><td class="memItemLeft" align="right" valign="top"><a id="a29f69a6fe97e2ffa2b53b3da63f708b7"></a>
<a class="el" href="../../d1/dde/classxii_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a29f69a6fe97e2ffa2b53b3da63f708b7">GetIterator</a> () const</td></tr>
<tr class="memdesc:a29f69a6fe97e2ffa2b53b3da63f708b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the very first element. <br /></td></tr>
<tr class="separator:a29f69a6fe97e2ffa2b53b3da63f708b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1929333a5bd46ba11bd557d307428ce"><td class="memItemLeft" align="right" valign="top"><a id="ae1929333a5bd46ba11bd557d307428ce"></a>
<a class="el" href="../../d1/dde/classxii_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#ae1929333a5bd46ba11bd557d307428ce">GetEndIterator</a> () const</td></tr>
<tr class="memdesc:ae1929333a5bd46ba11bd557d307428ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the first element that is not part of the hashset. Needed to implement range based for loop support. <br /></td></tr>
<tr class="separator:ae1929333a5bd46ba11bd557d307428ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71c9869a77ce7108e9bcd1323f03d908"><td class="memItemLeft" align="right" valign="top"><a id="a71c9869a77ce7108e9bcd1323f03d908"></a>
<a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a71c9869a77ce7108e9bcd1323f03d908">GetAllocator</a> () const</td></tr>
<tr class="memdesc:a71c9869a77ce7108e9bcd1323f03d908"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a71c9869a77ce7108e9bcd1323f03d908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a626a222301033862db18802779191813"><td class="memItemLeft" align="right" valign="top"><a id="a626a222301033862db18802779191813"></a>
xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a626a222301033862db18802779191813">GetHeapMemoryUsage</a> () const</td></tr>
<tr class="memdesc:a626a222301033862db18802779191813"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a626a222301033862db18802779191813"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f64f55e41157082e0929f418cbac836"><td class="memItemLeft" align="right" valign="top"><a id="a5f64f55e41157082e0929f418cbac836"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a5f64f55e41157082e0929f418cbac836">Swap</a> (<a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;other)</td></tr>
<tr class="memdesc:a5f64f55e41157082e0929f418cbac836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps this map with the other one. <br /></td></tr>
<tr class="separator:a5f64f55e41157082e0929f418cbac836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ccd944f3e95e5affda1d377986ffd22"><td class="memTemplParams" colspan="2"><a id="a8ccd944f3e95e5affda1d377986ffd22"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a8ccd944f3e95e5affda1d377986ffd22"><td class="memTemplItemLeft" align="right" valign="top">XII_FORCE_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a8ccd944f3e95e5affda1d377986ffd22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5927012a3cfcbfdfb2efe24f1be9c785"><td class="memTemplParams" colspan="2"><a id="a5927012a3cfcbfdfb2efe24f1be9c785"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a5927012a3cfcbfdfb2efe24f1be9c785"><td class="memTemplItemLeft" align="right" valign="top">XII_FORCE_INLINE xiiUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>FindEntry</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a5927012a3cfcbfdfb2efe24f1be9c785"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a3037d907dd327f0c5e77dc44f5859f40"><td class="memItemLeft" align="right" valign="top"><a id="a3037d907dd327f0c5e77dc44f5859f40"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a3037d907dd327f0c5e77dc44f5859f40">xiiHashSetBase</a> (<a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a3037d907dd327f0c5e77dc44f5859f40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty hashset. Does not allocate any data yet. <br /></td></tr>
<tr class="separator:a3037d907dd327f0c5e77dc44f5859f40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafa7a91b60f2d8954dcbc0a89c1a2efd"><td class="memItemLeft" align="right" valign="top"><a id="aafa7a91b60f2d8954dcbc0a89c1a2efd"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#aafa7a91b60f2d8954dcbc0a89c1a2efd">xiiHashSetBase</a> (const <a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:aafa7a91b60f2d8954dcbc0a89c1a2efd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the given hashset. <br /></td></tr>
<tr class="separator:aafa7a91b60f2d8954dcbc0a89c1a2efd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5a147a058f191be6f424fc4f75a9e1d"><td class="memItemLeft" align="right" valign="top"><a id="af5a147a058f191be6f424fc4f75a9e1d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#af5a147a058f191be6f424fc4f75a9e1d">xiiHashSetBase</a> (<a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;&amp;rhs, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:af5a147a058f191be6f424fc4f75a9e1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves data from an existing hashtable into this one. <br /></td></tr>
<tr class="separator:af5a147a058f191be6f424fc4f75a9e1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e0985ad93cebd8d9a24230c732aa163"><td class="memItemLeft" align="right" valign="top"><a id="a8e0985ad93cebd8d9a24230c732aa163"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a8e0985ad93cebd8d9a24230c732aa163">~xiiHashSetBase</a> ()</td></tr>
<tr class="memdesc:a8e0985ad93cebd8d9a24230c732aa163"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a8e0985ad93cebd8d9a24230c732aa163"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8206b6001ceb19fe78ba0363b9d0a8b"><td class="memItemLeft" align="right" valign="top"><a id="ad8206b6001ceb19fe78ba0363b9d0a8b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#ad8206b6001ceb19fe78ba0363b9d0a8b">operator=</a> (const <a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs)</td></tr>
<tr class="memdesc:ad8206b6001ceb19fe78ba0363b9d0a8b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from another hashset into this one. <br /></td></tr>
<tr class="separator:ad8206b6001ceb19fe78ba0363b9d0a8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f1d8f5e68ecb0bef17b2db1be5b745a"><td class="memItemLeft" align="right" valign="top"><a id="a5f1d8f5e68ecb0bef17b2db1be5b745a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm#a5f1d8f5e68ecb0bef17b2db1be5b745a">operator=</a> (<a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;&amp;rhs)</td></tr>
<tr class="memdesc:a5f1d8f5e68ecb0bef17b2db1be5b745a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves data from an existing hashset into this one. <br /></td></tr>
<tr class="separator:a5f1d8f5e68ecb0bef17b2db1be5b745a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename KeyType, typename Hasher&gt;<br />
class xiiHashSetBase&lt; KeyType, Hasher &gt;</h3>

<p>Implementation of a hashset. </p>
<p>The hashset stores values by using the hash as an index into the table. This implementation uses linear-probing to resolve hash collisions which means all values are stored in a linear array. All insertion/erasure/lookup functions take O(1) time if the table does not need to be expanded, which happens when the load gets greater than 60%. The hash function can be customized by providing a Hasher helper class like <a class="el" href="../../d6/dcd/structxii_hash_helper.htm" title="Helper struct to calculate the Hash of different types.">xiiHashHelper</a>. </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d6/dcd/structxii_hash_helper.htm" title="Helper struct to calculate the Hash of different types.">xiiHashHelper</a> </dd></dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af213c5ff103c94956ef8f3f04eb73c4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af213c5ff103c94956ef8f3f04eb73c4d">&#9670;&nbsp;</a></span>Compact()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename K , typename H &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a>&lt; K, H &gt;::Compact</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tries to compact the hashset to avoid wasting memory. </p>
<p>The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the hashset is empty. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Containers/<a class="el" href="../../d2/dfc/_hash_set_8h_source.htm">HashSet.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Containers/Implementation/<a class="el" href="../../df/dbb/_hash_set__inl_8h_source.htm">HashSet_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/daa/classxii_hash_set_base.htm">xiiHashSetBase</a></li>
    <li class="footer">Generated on Thu May 16 2024 17:17:33 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
