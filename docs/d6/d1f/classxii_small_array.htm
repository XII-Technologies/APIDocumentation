<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: xiiSmallArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XII Engine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/d1f/classxii_small_array.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d8/d11/classxii_small_array-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiSmallArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for xiiSmallArray&lt; T, Size, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d2/d85/classxii_small_array__inherit__graph.svg" width="183" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7745085e7aff9c12d115fd89e0bd5cdb"><td class="memItemLeft" align="right" valign="top"><a id="a7745085e7aff9c12d115fd89e0bd5cdb"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b> (T)</td></tr>
<tr class="separator:a7745085e7aff9c12d115fd89e0bd5cdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d19dbcacc9634f465d81aa9fc4ad707"><td class="memItemLeft" align="right" valign="top"><a id="a2d19dbcacc9634f465d81aa9fc4ad707"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiSmallArray</b> (const <a class="el" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:a2d19dbcacc9634f465d81aa9fc4ad707"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00ca674157c6b15336dfb871208c949a"><td class="memItemLeft" align="right" valign="top"><a id="a00ca674157c6b15336dfb871208c949a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiSmallArray</b> (const <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const T &gt; &amp;other)</td></tr>
<tr class="separator:a00ca674157c6b15336dfb871208c949a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f26a778e06ec2ba9d5e0e8b7b10e8a"><td class="memItemLeft" align="right" valign="top"><a id="ab2f26a778e06ec2ba9d5e0e8b7b10e8a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiSmallArray</b> (<a class="el" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;other)</td></tr>
<tr class="separator:ab2f26a778e06ec2ba9d5e0e8b7b10e8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa26b57d9676b175f9a2a07cac52912fa"><td class="memItemLeft" align="right" valign="top"><a id="aa26b57d9676b175f9a2a07cac52912fa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:aa26b57d9676b175f9a2a07cac52912fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a45885e76c747894629aa7ce5859eb6"><td class="memItemLeft" align="right" valign="top"><a id="a7a45885e76c747894629aa7ce5859eb6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const T &gt; &amp;rhs)</td></tr>
<tr class="separator:a7a45885e76c747894629aa7ce5859eb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6ee7f3dae14cb42ced69086b2847ed6"><td class="memItemLeft" align="right" valign="top"><a id="aa6ee7f3dae14cb42ced69086b2847ed6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;rhs) noexcept</td></tr>
<tr class="separator:aa6ee7f3dae14cb42ced69086b2847ed6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53e4d945886e0df86cacedc7860fcbb2"><td class="memItemLeft" align="right" valign="top"><a id="a53e4d945886e0df86cacedc7860fcbb2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (xiiUInt16 uiCount)</td></tr>
<tr class="separator:a53e4d945886e0df86cacedc7860fcbb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaab2232582912d330c0049c0c426aa4"><td class="memItemLeft" align="right" valign="top"><a id="adaab2232582912d330c0049c0c426aa4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (xiiUInt16 uiCount, const T &amp;fillValue)</td></tr>
<tr class="separator:adaab2232582912d330c0049c0c426aa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf85e813762aca866565410acbf5a342"><td class="memItemLeft" align="right" valign="top"><a id="abf85e813762aca866565410acbf5a342"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureCount</b> (xiiUInt16 uiCount)</td></tr>
<tr class="separator:abf85e813762aca866565410acbf5a342"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a918304b6846da800ed9e5b1a1f404d3e"><td class="memTemplParams" colspan="2"><a id="a918304b6846da800ed9e5b1a1f404d3e"></a>
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a918304b6846da800ed9e5b1a1f404d3e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (xiiUInt16 uiCount)</td></tr>
<tr class="separator:a918304b6846da800ed9e5b1a1f404d3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a61f0aee8d0ad01858e446459f9644f"><td class="memItemLeft" align="right" valign="top"><a id="a7a61f0aee8d0ad01858e446459f9644f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (xiiUInt32 uiIndex, const T &amp;value)</td></tr>
<tr class="separator:a7a61f0aee8d0ad01858e446459f9644f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28cedc6d60c83a56784183376fcd1b09"><td class="memItemLeft" align="right" valign="top"><a id="a28cedc6d60c83a56784183376fcd1b09"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (xiiUInt32 uiIndex, T &amp;&amp;value)</td></tr>
<tr class="separator:a28cedc6d60c83a56784183376fcd1b09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac540647c65995101cef5fb02c25fa761"><td class="memItemLeft" align="right" valign="top"><a id="ac540647c65995101cef5fb02c25fa761"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandAndGetRef</b> ()</td></tr>
<tr class="separator:ac540647c65995101cef5fb02c25fa761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8a1b846b51811959a9be20dde4d4e62"><td class="memItemLeft" align="right" valign="top"><a id="aa8a1b846b51811959a9be20dde4d4e62"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;value)</td></tr>
<tr class="separator:aa8a1b846b51811959a9be20dde4d4e62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a518726ee2601c72051522ce92b52bb8a"><td class="memItemLeft" align="right" valign="top"><a id="a518726ee2601c72051522ce92b52bb8a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (T &amp;&amp;value)</td></tr>
<tr class="separator:a518726ee2601c72051522ce92b52bb8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a129c09bc813afa9e250494752385636b"><td class="memItemLeft" align="right" valign="top"><a id="a129c09bc813afa9e250494752385636b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackRange</b> (const <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const T &gt; &amp;range)</td></tr>
<tr class="separator:a129c09bc813afa9e250494752385636b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a051891f92a2151eac6114b33b5d75d9c"><td class="memItemLeft" align="right" valign="top"><a id="a051891f92a2151eac6114b33b5d75d9c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (xiiUInt16 uiCapacity)</td></tr>
<tr class="separator:a051891f92a2151eac6114b33b5d75d9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ca7ac213b718472815a6e86b8198b24"><td class="memItemLeft" align="right" valign="top"><a id="a6ca7ac213b718472815a6e86b8198b24"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> ()</td></tr>
<tr class="separator:a6ca7ac213b718472815a6e86b8198b24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc8f9d053f26a1a75bd1a6de39fec301"><td class="memTemplParams" colspan="2"><a id="acc8f9d053f26a1a75bd1a6de39fec301"></a>
template&lt;typename &gt; </td></tr>
<tr class="memitem:acc8f9d053f26a1a75bd1a6de39fec301"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (xiiUInt16 uiCount)</td></tr>
<tr class="separator:acc8f9d053f26a1a75bd1a6de39fec301"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classxii_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classxii_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a74a380851716cd2a7579d0ad39241f49 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a74a380851716cd2a7579d0ad39241f49"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b> (T)</td></tr>
<tr class="separator:a74a380851716cd2a7579d0ad39241f49 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3aea2716c22bc26597a80c97a452827 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="af3aea2716c22bc26597a80c97a452827"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiSmallArrayBase</b> (const <a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase</a>&lt; T, Size &gt; &amp;other, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:af3aea2716c22bc26597a80c97a452827 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93bc2296fb5c752cf09eec4ecde873b6 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a93bc2296fb5c752cf09eec4ecde873b6"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiSmallArrayBase</b> (const <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:a93bc2296fb5c752cf09eec4ecde873b6 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3117627515517ca21cf7a0201808137a inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a3117627515517ca21cf7a0201808137a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiSmallArrayBase</b> (<a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:a3117627515517ca21cf7a0201808137a inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca8d0dd21a47fda587a6c582321be442 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aca8d0dd21a47fda587a6c582321be442"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs)=delete</td></tr>
<tr class="separator:aca8d0dd21a47fda587a6c582321be442 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3b99c14513b72e193c920af57fe2941 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ad3b99c14513b72e193c920af57fe2941"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;rhs)=delete</td></tr>
<tr class="separator:ad3b99c14513b72e193c920af57fe2941 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bc5875099d17be0928af6747512f050 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a8bc5875099d17be0928af6747512f050"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a8bc5875099d17be0928af6747512f050">CopyFrom</a> (const <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a8bc5875099d17be0928af6747512f050 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other array into this one. <br /></td></tr>
<tr class="separator:a8bc5875099d17be0928af6747512f050 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ed28789384e45e0d10a20e95df2f5c6 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a5ed28789384e45e0d10a20e95df2f5c6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a5ed28789384e45e0d10a20e95df2f5c6">MoveFrom</a> (<a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a5ed28789384e45e0d10a20e95df2f5c6 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from some other array into this one. <br /></td></tr>
<tr class="separator:a5ed28789384e45e0d10a20e95df2f5c6 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6626cf2aa64e55e1e42f37a975b7e36 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ae6626cf2aa64e55e1e42f37a975b7e36"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#ae6626cf2aa64e55e1e42f37a975b7e36">operator xiiArrayPtr&lt; const T &gt;</a> () const</td></tr>
<tr class="memdesc:ae6626cf2aa64e55e1e42f37a975b7e36 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to const <a class="el" href="../../d0/d60/classxii_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">xiiArrayPtr</a>. <br /></td></tr>
<tr class="separator:ae6626cf2aa64e55e1e42f37a975b7e36 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a070e8f5ced0708755b2b2ea61e4da05a inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a070e8f5ced0708755b2b2ea61e4da05a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a070e8f5ced0708755b2b2ea61e4da05a">operator xiiArrayPtr&lt; T &gt;</a> ()</td></tr>
<tr class="memdesc:a070e8f5ced0708755b2b2ea61e4da05a inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to <a class="el" href="../../d0/d60/classxii_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">xiiArrayPtr</a>. <br /></td></tr>
<tr class="separator:a070e8f5ced0708755b2b2ea61e4da05a inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a4a5857463752121a45c8d7593db7a0 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a0a4a5857463752121a45c8d7593db7a0"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a0a4a5857463752121a45c8d7593db7a0">operator==</a> (const <a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a0a4a5857463752121a45c8d7593db7a0 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:a0a4a5857463752121a45c8d7593db7a0 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a795c38bbee63c3289752f51bb2f90647 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a795c38bbee63c3289752f51bb2f90647"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a795c38bbee63c3289752f51bb2f90647">operator[]</a> (xiiUInt32 uiIndex) const</td></tr>
<tr class="memdesc:a795c38bbee63c3289752f51bb2f90647 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:a795c38bbee63c3289752f51bb2f90647 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80b23699a2bc2378bd1d1aa08a13f66f inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a80b23699a2bc2378bd1d1aa08a13f66f"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a80b23699a2bc2378bd1d1aa08a13f66f">operator[]</a> (xiiUInt32 uiIndex)</td></tr>
<tr class="memdesc:a80b23699a2bc2378bd1d1aa08a13f66f inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:a80b23699a2bc2378bd1d1aa08a13f66f inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec2c31c5c5ffb46b0633dd7e280dfee2 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aec2c31c5c5ffb46b0633dd7e280dfee2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#aec2c31c5c5ffb46b0633dd7e280dfee2">SetCount</a> (xiiUInt16 uiCount, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:aec2c31c5c5ffb46b0633dd7e280dfee2 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is grown. <br /></td></tr>
<tr class="separator:aec2c31c5c5ffb46b0633dd7e280dfee2 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7051d28f6960ec14a5ef5b86b5d09bc inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ad7051d28f6960ec14a5ef5b86b5d09bc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#ad7051d28f6960ec14a5ef5b86b5d09bc">SetCount</a> (xiiUInt16 uiCount, const T &amp;fillValue, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:ad7051d28f6960ec14a5ef5b86b5d09bc inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Constructs all new elements by copying the FillValue. <br /></td></tr>
<tr class="separator:ad7051d28f6960ec14a5ef5b86b5d09bc inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96b254cbe8fc346df30bf263c780270f inherit pub_methods_classxii_small_array_base"><td class="memTemplParams" colspan="2"><a id="a96b254cbe8fc346df30bf263c780270f"></a>
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a96b254cbe8fc346df30bf263c780270f inherit pub_methods_classxii_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a96b254cbe8fc346df30bf263c780270f">SetCountUninitialized</a> (xiiUInt16 uiCount, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a96b254cbe8fc346df30bf263c780270f inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized. <br /></td></tr>
<tr class="separator:a96b254cbe8fc346df30bf263c780270f inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae724024d854bd5dd1b58dc0e6e87bfc inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aae724024d854bd5dd1b58dc0e6e87bfc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#aae724024d854bd5dd1b58dc0e6e87bfc">EnsureCount</a> (xiiUInt16 uiCount, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:aae724024d854bd5dd1b58dc0e6e87bfc inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures the container has at least <em>uiCount</em> elements. Ie. calls <a class="el" href="../../d0/d92/classxii_small_array_base.htm#aec2c31c5c5ffb46b0633dd7e280dfee2" title="Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...">SetCount()</a> if the container has fewer elements, does nothing otherwise. <br /></td></tr>
<tr class="separator:aae724024d854bd5dd1b58dc0e6e87bfc inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04e886c6f3b509236c70581718f988ad inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a04e886c6f3b509236c70581718f988ad"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a04e886c6f3b509236c70581718f988ad">GetCount</a> () const</td></tr>
<tr class="memdesc:a04e886c6f3b509236c70581718f988ad inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active elements in the array. <br /></td></tr>
<tr class="separator:a04e886c6f3b509236c70581718f988ad inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca1f86b4004618f872aeffdede5b86a6 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aca1f86b4004618f872aeffdede5b86a6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#aca1f86b4004618f872aeffdede5b86a6">IsEmpty</a> () const</td></tr>
<tr class="memdesc:aca1f86b4004618f872aeffdede5b86a6 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the array does not contain any elements. <br /></td></tr>
<tr class="separator:aca1f86b4004618f872aeffdede5b86a6 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40711a7c4c3b53acdedbd14403c4025d inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a40711a7c4c3b53acdedbd14403c4025d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a40711a7c4c3b53acdedbd14403c4025d">Clear</a> ()</td></tr>
<tr class="memdesc:a40711a7c4c3b53acdedbd14403c4025d inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a40711a7c4c3b53acdedbd14403c4025d inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ae99bc2f992e3d1f5bb29af7f2d1893 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a5ae99bc2f992e3d1f5bb29af7f2d1893"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a5ae99bc2f992e3d1f5bb29af7f2d1893">Contains</a> (const T &amp;value) const</td></tr>
<tr class="memdesc:a5ae99bc2f992e3d1f5bb29af7f2d1893 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given value can be found in the array. O(n) complexity. <br /></td></tr>
<tr class="separator:a5ae99bc2f992e3d1f5bb29af7f2d1893 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c8704e41443c01718cdd95c603c1c50 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a2c8704e41443c01718cdd95c603c1c50"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a2c8704e41443c01718cdd95c603c1c50">Insert</a> (const T &amp;value, xiiUInt32 uiIndex, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a2c8704e41443c01718cdd95c603c1c50 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a2c8704e41443c01718cdd95c603c1c50 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b1e675dc3d41de3adbce186107bae29 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a1b1e675dc3d41de3adbce186107bae29"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a1b1e675dc3d41de3adbce186107bae29">Insert</a> (T &amp;&amp;value, xiiUInt32 uiIndex, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a1b1e675dc3d41de3adbce186107bae29 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a1b1e675dc3d41de3adbce186107bae29 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a781068d5172a2f5251ffb408f3b390b8 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a781068d5172a2f5251ffb408f3b390b8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a781068d5172a2f5251ffb408f3b390b8">RemoveAndCopy</a> (const T &amp;value)</td></tr>
<tr class="memdesc:a781068d5172a2f5251ffb408f3b390b8 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a781068d5172a2f5251ffb408f3b390b8 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae337c41ad0aaea57e046a2cd3f8cad56 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ae337c41ad0aaea57e046a2cd3f8cad56"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#ae337c41ad0aaea57e046a2cd3f8cad56">RemoveAndSwap</a> (const T &amp;value)</td></tr>
<tr class="memdesc:ae337c41ad0aaea57e046a2cd3f8cad56 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:ae337c41ad0aaea57e046a2cd3f8cad56 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8407e866a067554683786544aec56bad inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a8407e866a067554683786544aec56bad"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a8407e866a067554683786544aec56bad">RemoveAtAndCopy</a> (xiiUInt32 uiIndex, xiiUInt16 uiNumElements=1)</td></tr>
<tr class="memdesc:a8407e866a067554683786544aec56bad inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a8407e866a067554683786544aec56bad inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29f44547b8c9552cd6fb54b6773cce26 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a29f44547b8c9552cd6fb54b6773cce26"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a29f44547b8c9552cd6fb54b6773cce26">RemoveAtAndSwap</a> (xiiUInt32 uiIndex, xiiUInt16 uiNumElements=1)</td></tr>
<tr class="memdesc:a29f44547b8c9552cd6fb54b6773cce26 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:a29f44547b8c9552cd6fb54b6773cce26 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a903aca5dbbf5f3670db554d1b4fcbc12 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a903aca5dbbf5f3670db554d1b4fcbc12"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a903aca5dbbf5f3670db554d1b4fcbc12">IndexOf</a> (const T &amp;value, xiiUInt32 uiStartIndex=0) const</td></tr>
<tr class="memdesc:a903aca5dbbf5f3670db554d1b4fcbc12 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the first occurrence of the given value and returns its index or xiiInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a903aca5dbbf5f3670db554d1b4fcbc12 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74c2dbab85a800f90ba9ccbad315e639 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a74c2dbab85a800f90ba9ccbad315e639"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a74c2dbab85a800f90ba9ccbad315e639">LastIndexOf</a> (const T &amp;value, xiiUInt32 uiStartIndex=xiiSmallInvalidIndex) const</td></tr>
<tr class="memdesc:a74c2dbab85a800f90ba9ccbad315e639 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the last occurrence of the given value and returns its index or xiiInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a74c2dbab85a800f90ba9ccbad315e639 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38a483ac998879f6f795249b58870430 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a38a483ac998879f6f795249b58870430"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a38a483ac998879f6f795249b58870430">ExpandAndGetRef</a> (<a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a38a483ac998879f6f795249b58870430 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grows the array by one element and returns a reference to the newly created element. <br /></td></tr>
<tr class="separator:a38a483ac998879f6f795249b58870430 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a539f26a493906771f28fe81fa91d0941 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a539f26a493906771f28fe81fa91d0941"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a539f26a493906771f28fe81fa91d0941">PushBack</a> (const T &amp;value, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a539f26a493906771f28fe81fa91d0941 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a539f26a493906771f28fe81fa91d0941 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a781201b456769038ce5c598e59ed13f5 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a781201b456769038ce5c598e59ed13f5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a781201b456769038ce5c598e59ed13f5">PushBack</a> (T &amp;&amp;value, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a781201b456769038ce5c598e59ed13f5 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a781201b456769038ce5c598e59ed13f5 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9c20ac9f90231d3e2999e6d9e9cda6f inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ae9c20ac9f90231d3e2999e6d9e9cda6f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#ae9c20ac9f90231d3e2999e6d9e9cda6f">PushBackUnchecked</a> (const T &amp;value)</td></tr>
<tr class="memdesc:ae9c20ac9f90231d3e2999e6d9e9cda6f inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:ae9c20ac9f90231d3e2999e6d9e9cda6f inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b9f721f54222794a2e12c86d1dbd372 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a6b9f721f54222794a2e12c86d1dbd372"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a6b9f721f54222794a2e12c86d1dbd372">PushBackUnchecked</a> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a6b9f721f54222794a2e12c86d1dbd372 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a6b9f721f54222794a2e12c86d1dbd372 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dc102bffe7301cb2866fb111cb7ee42 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a3dc102bffe7301cb2866fb111cb7ee42"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a3dc102bffe7301cb2866fb111cb7ee42">PushBackRange</a> (const <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const T &gt; &amp;range, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a3dc102bffe7301cb2866fb111cb7ee42 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes all elements in range at the end of the array. Increases the capacity if necessary. <br /></td></tr>
<tr class="separator:a3dc102bffe7301cb2866fb111cb7ee42 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6e9392c96e90cb12ca5952408d78225 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ae6e9392c96e90cb12ca5952408d78225"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#ae6e9392c96e90cb12ca5952408d78225">PopBack</a> (xiiUInt32 uiCountToRemove=1)</td></tr>
<tr class="memdesc:ae6e9392c96e90cb12ca5952408d78225 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes count elements from the end of the array. <br /></td></tr>
<tr class="separator:ae6e9392c96e90cb12ca5952408d78225 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ec8d1f6519b6d01224868e1d5b93d16 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a2ec8d1f6519b6d01224868e1d5b93d16"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a2ec8d1f6519b6d01224868e1d5b93d16">PeekBack</a> ()</td></tr>
<tr class="memdesc:a2ec8d1f6519b6d01224868e1d5b93d16 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:a2ec8d1f6519b6d01224868e1d5b93d16 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1115193a5bfdd2fb2318d476854645b4 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a1115193a5bfdd2fb2318d476854645b4"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a1115193a5bfdd2fb2318d476854645b4">PeekBack</a> () const</td></tr>
<tr class="memdesc:a1115193a5bfdd2fb2318d476854645b4 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:a1115193a5bfdd2fb2318d476854645b4 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a833914d12a6b2955b368e309640d6a inherit pub_methods_classxii_small_array_base"><td class="memTemplParams" colspan="2"><a id="a9a833914d12a6b2955b368e309640d6a"></a>
template&lt;typename Comparer &gt; </td></tr>
<tr class="memitem:a9a833914d12a6b2955b368e309640d6a inherit pub_methods_classxii_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a9a833914d12a6b2955b368e309640d6a">Sort</a> (const Comparer &amp;comparer)</td></tr>
<tr class="memdesc:a9a833914d12a6b2955b368e309640d6a inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with explicit comparer. <br /></td></tr>
<tr class="separator:a9a833914d12a6b2955b368e309640d6a inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aa60d2364c32767f44ed6d05dd7642e inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a2aa60d2364c32767f44ed6d05dd7642e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a2aa60d2364c32767f44ed6d05dd7642e">Sort</a> ()</td></tr>
<tr class="memdesc:a2aa60d2364c32767f44ed6d05dd7642e inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with default comparer. <br /></td></tr>
<tr class="separator:a2aa60d2364c32767f44ed6d05dd7642e inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45cf4b82eeb4112c5f9cad6156a8fc18 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a45cf4b82eeb4112c5f9cad6156a8fc18"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a45cf4b82eeb4112c5f9cad6156a8fc18">GetData</a> ()</td></tr>
<tr class="memdesc:a45cf4b82eeb4112c5f9cad6156a8fc18 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a45cf4b82eeb4112c5f9cad6156a8fc18 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2945b15e686e5e7404acedf85925fcfd inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a2945b15e686e5e7404acedf85925fcfd"></a>
const T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a2945b15e686e5e7404acedf85925fcfd">GetData</a> () const</td></tr>
<tr class="memdesc:a2945b15e686e5e7404acedf85925fcfd inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a2945b15e686e5e7404acedf85925fcfd inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87a2be4d175cd71b54757029980f4bbc inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a87a2be4d175cd71b54757029980f4bbc"></a>
<a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a87a2be4d175cd71b54757029980f4bbc">GetArrayPtr</a> ()</td></tr>
<tr class="memdesc:a87a2be4d175cd71b54757029980f4bbc inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a87a2be4d175cd71b54757029980f4bbc inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adeff0ff513e571ec659d783824d48664 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="adeff0ff513e571ec659d783824d48664"></a>
<a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#adeff0ff513e571ec659d783824d48664">GetArrayPtr</a> () const</td></tr>
<tr class="memdesc:adeff0ff513e571ec659d783824d48664 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:adeff0ff513e571ec659d783824d48664 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7b0793640bf988c2658f377837899ce inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aa7b0793640bf988c2658f377837899ce"></a>
<a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; typename <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#aa7b0793640bf988c2658f377837899ce">GetByteArrayPtr</a> ()</td></tr>
<tr class="memdesc:aa7b0793640bf988c2658f377837899ce inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:aa7b0793640bf988c2658f377837899ce inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad432117c640d2e9231072cc8152ff535 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ad432117c640d2e9231072cc8152ff535"></a>
<a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; typename <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#ad432117c640d2e9231072cc8152ff535">GetByteArrayPtr</a> () const</td></tr>
<tr class="memdesc:ad432117c640d2e9231072cc8152ff535 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:ad432117c640d2e9231072cc8152ff535 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43d17a7db94868fe8a57ab6e6cea617e inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a43d17a7db94868fe8a57ab6e6cea617e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#a43d17a7db94868fe8a57ab6e6cea617e">Reserve</a> (xiiUInt16 uiCapacity, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a43d17a7db94868fe8a57ab6e6cea617e inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the array so it can at least store the given capacity. <br /></td></tr>
<tr class="separator:a43d17a7db94868fe8a57ab6e6cea617e inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accbe8a8ba2f3431b6c5bc0c58f284136 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="accbe8a8ba2f3431b6c5bc0c58f284136"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#accbe8a8ba2f3431b6c5bc0c58f284136">Compact</a> (<a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:accbe8a8ba2f3431b6c5bc0c58f284136 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the array is empty. <br /></td></tr>
<tr class="separator:accbe8a8ba2f3431b6c5bc0c58f284136 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbca721a1bcdf3b69d9a760842cab654 inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="abbca721a1bcdf3b69d9a760842cab654"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#abbca721a1bcdf3b69d9a760842cab654">GetCapacity</a> () const</td></tr>
<tr class="memdesc:abbca721a1bcdf3b69d9a760842cab654 inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reserved number of elements that the array can hold without reallocating. <br /></td></tr>
<tr class="separator:abbca721a1bcdf3b69d9a760842cab654 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6ae848d26e3aa3fbc04fa7dfb29cf1f inherit pub_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="af6ae848d26e3aa3fbc04fa7dfb29cf1f"></a>
xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d92/classxii_small_array_base.htm#af6ae848d26e3aa3fbc04fa7dfb29cf1f">GetHeapMemoryUsage</a> () const</td></tr>
<tr class="memdesc:af6ae848d26e3aa3fbc04fa7dfb29cf1f inherit pub_methods_classxii_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:af6ae848d26e3aa3fbc04fa7dfb29cf1f inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259b94a96530844a0ee6b32932ee4c97 inherit pub_methods_classxii_small_array_base"><td class="memTemplParams" colspan="2"><a id="a259b94a96530844a0ee6b32932ee4c97"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a259b94a96530844a0ee6b32932ee4c97 inherit pub_methods_classxii_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">const U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:a259b94a96530844a0ee6b32932ee4c97 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bd5f493dfd7e6ccd19c27ff2efb8183 inherit pub_methods_classxii_small_array_base"><td class="memTemplParams" colspan="2"><a id="a2bd5f493dfd7e6ccd19c27ff2efb8183"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a2bd5f493dfd7e6ccd19c27ff2efb8183 inherit pub_methods_classxii_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:a2bd5f493dfd7e6ccd19c27ff2efb8183 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ee4f2de6a50e8d2334ecb3d951cad10 inherit pub_methods_classxii_small_array_base"><td class="memTemplParams" colspan="2"><a id="a5ee4f2de6a50e8d2334ecb3d951cad10"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a5ee4f2de6a50e8d2334ecb3d951cad10 inherit pub_methods_classxii_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE const U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:a5ee4f2de6a50e8d2334ecb3d951cad10 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0f0ed6732c1534f2b8bc14898d01f01 inherit pub_methods_classxii_small_array_base"><td class="memTemplParams" colspan="2"><a id="aa0f0ed6732c1534f2b8bc14898d01f01"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aa0f0ed6732c1534f2b8bc14898d01f01 inherit pub_methods_classxii_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:aa0f0ed6732c1534f2b8bc14898d01f01 inherit pub_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classxii_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classxii_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:aa54d3c38ae5ec3619a9f441dc87c46d5 inherit pub_types_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aa54d3c38ae5ec3619a9f441dc87c46d5"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T *</td></tr>
<tr class="separator:aa54d3c38ae5ec3619a9f441dc87c46d5 inherit pub_types_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8340aa840012a7022cb553f1cba5d447 inherit pub_types_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a8340aa840012a7022cb553f1cba5d447"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:a8340aa840012a7022cb553f1cba5d447 inherit pub_types_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2249166fc0f7e7d06e085e81e6b943c9 inherit pub_types_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a2249166fc0f7e7d06e085e81e6b943c9"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T *</td></tr>
<tr class="separator:a2249166fc0f7e7d06e085e81e6b943c9 inherit pub_types_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a378f8c37787e58238bab5fef81a8a73b inherit pub_types_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a378f8c37787e58238bab5fef81a8a73b"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:a378f8c37787e58238bab5fef81a8a73b inherit pub_types_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classxii_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_types_classxii_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a50d615ceb07fa909ed16f379483a48ff inherit pro_types_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a50d615ceb07fa909ed16f379483a48ff"></a>enum &#160;</td><td class="memItemRight" valign="bottom">{ <b>CAPACITY_ALIGNMENT</b> = 4
 }</td></tr>
<tr class="separator:a50d615ceb07fa909ed16f379483a48ff inherit pro_types_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classxii_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classxii_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:adb120ffd5a46b27b5a42ef9dc779fb1c inherit pro_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="adb120ffd5a46b27b5a42ef9dc779fb1c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCapacity</b> (xiiUInt16 uiCapacity, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:adb120ffd5a46b27b5a42ef9dc779fb1c inherit pro_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7073f19e79eb7b1e6e3e220a78579bf inherit pro_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ab7073f19e79eb7b1e6e3e220a78579bf"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> ()</td></tr>
<tr class="separator:ab7073f19e79eb7b1e6e3e220a78579bf inherit pro_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56df5b21c4f21fa2e33068fe381aa731 inherit pro_methods_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a56df5b21c4f21fa2e33068fe381aa731"></a>
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> () const</td></tr>
<tr class="separator:a56df5b21c4f21fa2e33068fe381aa731 inherit pro_methods_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classxii_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classxii_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d0/d92/classxii_small_array_base.htm">xiiSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:ac4d9571a8d82b65b84b1a1ded37f7ee3 inherit pro_attribs_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ac4d9571a8d82b65b84b1a1ded37f7ee3"></a>
xiiUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCount</b> = 0</td></tr>
<tr class="separator:ac4d9571a8d82b65b84b1a1ded37f7ee3 inherit pro_attribs_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af81430a883c3362d240621630d3a72b6 inherit pro_attribs_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="af81430a883c3362d240621630d3a72b6"></a>
xiiUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCapacity</b> = Size</td></tr>
<tr class="separator:af81430a883c3362d240621630d3a72b6 inherit pro_attribs_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49df6a4d33a7fc06785f737e2df3df83 inherit pro_attribs_classxii_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a49df6a4d33a7fc06785f737e2df3df83"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiUserData</b> = 0</td></tr>
<tr class="separator:a49df6a4d33a7fc06785f737e2df3df83 inherit pro_attribs_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b044443938800a1c2d9793e8c51ac28 inherit pro_attribs_classxii_small_array_base"><td class="memItemLeft" ><a id="a0b044443938800a1c2d9793e8c51ac28"></a>
union {</td></tr>
<tr class="memitem:ad6dc0a47f8e0fd6da638a09a70338dba inherit pro_attribs_classxii_small_array_base"><td class="memItemLeft" ><a id="ad6dc0a47f8e0fd6da638a09a70338dba"></a>
&#160;&#160;&#160;struct <b>alignas</b> {</td></tr>
<tr class="memitem:aaa27af7844e43f9de083bfd766fe2ebf inherit pro_attribs_classxii_small_array_base"><td class="memItemLeft" >
&#160;&#160;&#160;&#160;&#160;&#160;xiiUInt8&#160;&#160;&#160;<b>m_StaticData</b> [Size *sizeof(T)]</td></tr>
<tr class="separator:aaa27af7844e43f9de083bfd766fe2ebf inherit pro_attribs_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6dc0a47f8e0fd6da638a09a70338dba inherit pro_attribs_classxii_small_array_base"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:ad6dc0a47f8e0fd6da638a09a70338dba inherit pro_attribs_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53ce8efbc6e42e42513333dc9b132484 inherit pro_attribs_classxii_small_array_base"><td class="memItemLeft" >
&#160;&#160;&#160;T *&#160;&#160;&#160;<b>m_pElements</b> = nullptr</td></tr>
<tr class="separator:a53ce8efbc6e42e42513333dc9b132484 inherit pro_attribs_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b044443938800a1c2d9793e8c51ac28 inherit pro_attribs_classxii_small_array_base"><td class="memItemLeft" valign="top">};&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a0b044443938800a1c2d9793e8c51ac28 inherit pro_attribs_classxii_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, xiiUInt16 Size, typename AllocatorWrapper = xiiDefaultAllocatorWrapper&gt;<br />
class xiiSmallArray&lt; T, Size, AllocatorWrapper &gt;</h3>

<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d0/d92/classxii_small_array_base.htm" title="Implementation of a dynamically growing array with in-place storage and small memory overhead.">xiiSmallArrayBase</a> </dd></dl>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Containers/<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Containers/Implementation/<a class="el" href="../../d2/d62/_small_array__inl_8h_source.htm">SmallArray_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray</a></li>
    <li class="footer">Generated on Mon Jul 1 2024 12:44:21 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
