<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: xiiGameStateBase Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d6/d63/classxii_game_state_base.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../df/d61/classxii_game_state_base-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">xiiGameStateBase Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="../../d1/d19/classxii_game_state.htm" title="xiiGameState is the base class to build custom game logic upon. It works closely together with xiiGam...">xiiGameState</a> is the base class to build custom game logic upon. It works closely together with <a class="el" href="../../d1/ded/classxii_game_application.htm" title="The base class for all typical game applications made with xiiEngine.">xiiGameApplication</a>.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d6/d39/_game_state_base_8h_source.htm">GameStateBase.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for xiiGameStateBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d5/d8f/classxii_game_state_base__inherit__graph.svg" width="175" height="330"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a76098be6f82919043fccd2d64d865ad5" id="r_a76098be6f82919043fccd2d64d865ad5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a76098be6f82919043fccd2d64d865ad5">OnActivation</a> (<a class="el" href="../../d6/d89/classxii_world.htm">xiiWorld</a> *pWorld, const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransform</a> *pStartPosition)=0</td></tr>
<tr class="memdesc:a76098be6f82919043fccd2d64d865ad5"><td class="mdescLeft">&#160;</td><td class="mdescRight">When a game state was chosen, it gets activated through this function.  <br /></td></tr>
<tr class="separator:a76098be6f82919043fccd2d64d865ad5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8277a988376f5726dd2f9fb295a9a2f" id="r_ac8277a988376f5726dd2f9fb295a9a2f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac8277a988376f5726dd2f9fb295a9a2f">OnDeactivation</a> ()=0</td></tr>
<tr class="memdesc:ac8277a988376f5726dd2f9fb295a9a2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the game state is being shut down.  <br /></td></tr>
<tr class="separator:ac8277a988376f5726dd2f9fb295a9a2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d33de3bf375a635d385c8bf510c14e3" id="r_a8d33de3bf375a635d385c8bf510c14e3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8d33de3bf375a635d385c8bf510c14e3">ProcessInput</a> ()</td></tr>
<tr class="memdesc:a8d33de3bf375a635d385c8bf510c14e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called once per game update. Should handle input updates here.  <br /></td></tr>
<tr class="separator:a8d33de3bf375a635d385c8bf510c14e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7312b6bb7d355040a9e7f330c6c1a594" id="r_a7312b6bb7d355040a9e7f330c6c1a594"><td class="memItemLeft" align="right" valign="top"><a id="a7312b6bb7d355040a9e7f330c6c1a594" name="a7312b6bb7d355040a9e7f330c6c1a594"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>BeforeWorldUpdate</b> ()</td></tr>
<tr class="memdesc:a7312b6bb7d355040a9e7f330c6c1a594"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called once each frame before the worlds are updated. <br /></td></tr>
<tr class="separator:a7312b6bb7d355040a9e7f330c6c1a594"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b4bb3b769bfc9ddc3440419413c162f" id="r_a6b4bb3b769bfc9ddc3440419413c162f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6b4bb3b769bfc9ddc3440419413c162f">AfterWorldUpdate</a> ()</td></tr>
<tr class="memdesc:a6b4bb3b769bfc9ddc3440419413c162f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called once each frame after the worlds have been updated.  <br /></td></tr>
<tr class="separator:a6b4bb3b769bfc9ddc3440419413c162f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5818fbb85acf55990b8b8fb3a140a01f" id="r_a5818fbb85acf55990b8b8fb3a140a01f"><td class="memItemLeft" align="right" valign="top">virtual xiiGameStatePriority&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5818fbb85acf55990b8b8fb3a140a01f">DeterminePriority</a> (<a class="el" href="../../d6/d89/classxii_world.htm">xiiWorld</a> *pWorld) const =0</td></tr>
<tr class="memdesc:a5818fbb85acf55990b8b8fb3a140a01f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called by <a class="el" href="../../d1/ded/classxii_game_application.htm" title="The base class for all typical game applications made with xiiEngine.">xiiGameApplication</a> to determine which game state is best suited to handle a situation.  <br /></td></tr>
<tr class="separator:a5818fbb85acf55990b8b8fb3a140a01f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5080d0a1b978f673ed10e15d002def5b" id="r_a5080d0a1b978f673ed10e15d002def5b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5080d0a1b978f673ed10e15d002def5b">ScheduleRendering</a> ()=0</td></tr>
<tr class="memdesc:a5080d0a1b978f673ed10e15d002def5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has to call xiiRenderLoop::AddMainView for all views that need to be rendered.  <br /></td></tr>
<tr class="separator:a5080d0a1b978f673ed10e15d002def5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b380e8f2be3139a5bba9aea65f4265d" id="r_a2b380e8f2be3139a5bba9aea65f4265d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2b380e8f2be3139a5bba9aea65f4265d">RequestQuit</a> ()</td></tr>
<tr class="memdesc:a2b380e8f2be3139a5bba9aea65f4265d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call this to signal that a game state requested the application to quit.  <br /></td></tr>
<tr class="separator:a2b380e8f2be3139a5bba9aea65f4265d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a398a11ca8dce07adb477b7fe36e92550" id="r_a398a11ca8dce07adb477b7fe36e92550"><td class="memItemLeft" align="right" valign="top"><a id="a398a11ca8dce07adb477b7fe36e92550" name="a398a11ca8dce07adb477b7fe36e92550"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>WasQuitRequested</b> () const</td></tr>
<tr class="memdesc:a398a11ca8dce07adb477b7fe36e92550"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the game state wants to quit the application. <br /></td></tr>
<tr class="separator:a398a11ca8dce07adb477b7fe36e92550"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classxii_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classxii_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dc/d71/classxii_reflected_class.htm">xiiReflectedClass</a></td></tr>
<tr class="memitem:a00430d2230bc44ad262be3d0a4e62e10 inherit pub_methods_classxii_reflected_class" id="r_a00430d2230bc44ad262be3d0a4e62e10"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a00430d2230bc44ad262be3d0a4e62e10 inherit pub_methods_classxii_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e0f7cbc734bb4dd62b0d583bbbe2ade inherit pub_methods_classxii_reflected_class" id="r_a8e0f7cbc734bb4dd62b0d583bbbe2ade"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *pType) const</td></tr>
<tr class="memdesc:a8e0f7cbc734bb4dd62b0d583bbbe2ade inherit pub_methods_classxii_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:a8e0f7cbc734bb4dd62b0d583bbbe2ade inherit pub_methods_classxii_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0a423d0f813feb28b200d9a9756eab8 inherit pub_methods_classxii_reflected_class" id="r_ac0a423d0f813feb28b200d9a9756eab8"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac0a423d0f813feb28b200d9a9756eab8 inherit pub_methods_classxii_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:ac0a423d0f813feb28b200d9a9756eab8 inherit pub_methods_classxii_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:ac0a423d0f813feb28b200d9a9756eab8 inherit pub_methods_classxii_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a74c878e8bb4bfffeb08732ba8ac67e59" id="r_a74c878e8bb4bfffeb08732ba8ac67e59"><td class="memItemLeft" align="right" valign="top"><a id="a74c878e8bb4bfffeb08732ba8ac67e59" name="a74c878e8bb4bfffeb08732ba8ac67e59"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bStateWantsToQuit</b> = false</td></tr>
<tr class="separator:a74c878e8bb4bfffeb08732ba8ac67e59"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classxii_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classxii_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d2/d38/classxii_no_base.htm">xiiNoBase</a></td></tr>
<tr class="memitem:a4bde433b55ebd55edf63c57239799bba inherit pub_static_methods_classxii_no_base" id="r_a4bde433b55ebd55edf63c57239799bba"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:a4bde433b55ebd55edf63c57239799bba inherit pub_static_methods_classxii_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="../../d1/d19/classxii_game_state.htm" title="xiiGameState is the base class to build custom game logic upon. It works closely together with xiiGam...">xiiGameState</a> is the base class to build custom game logic upon. It works closely together with <a class="el" href="../../d1/ded/classxii_game_application.htm" title="The base class for all typical game applications made with xiiEngine.">xiiGameApplication</a>. </p>
<p>In a typical game there is always exactly one instance of a <a class="el" href="../../d1/d19/classxii_game_state.htm" title="xiiGameState is the base class to build custom game logic upon. It works closely together with xiiGam...">xiiGameState</a> derived class active. The game state handles custom game logic, which must be handled outside <a class="el" href="../../d6/d89/classxii_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">xiiWorld</a>, custom components and scripts.</p>
<p>For example a custom implementation of <a class="el" href="../../d1/d19/classxii_game_state.htm" title="xiiGameState is the base class to build custom game logic upon. It works closely together with xiiGam...">xiiGameState</a> may handle how to show a menu, when to switch to another level, how multi-player works, or which player information is transitioned from one level to the next. It's main purpose is to implement high-level game logic.</p>
<p><a class="el" href="../../d1/ded/classxii_game_application.htm" title="The base class for all typical game applications made with xiiEngine.">xiiGameApplication</a> will loop through all available <a class="el" href="../../d1/d19/classxii_game_state.htm" title="xiiGameState is the base class to build custom game logic upon. It works closely together with xiiGam...">xiiGameState</a> implementations and ask each available one whether it can handle a certain level. Each game state returns a 'priority' how well it can handle the game.</p>
<p>In a typical game you only have one game state linked into the binary, so in that case there is no reason for such a system. However, in an editor you might have multiple game states available through plugins, but only one can take control. In such a case, each game state may inspect the given world and check whether it is e.g. a single-player or multi-player level, or whether it uses it's own game specific components, and then decide whether it is the best fit for that level.</p>
<dl class="section note"><dt>Note</dt><dd>Do not forget to reflect your derived class, otherwise <a class="el" href="../../d1/ded/classxii_game_application.htm" title="The base class for all typical game applications made with xiiEngine.">xiiGameApplication</a> may not find it. </dd></dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a6b4bb3b769bfc9ddc3440419413c162f" name="a6b4bb3b769bfc9ddc3440419413c162f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b4bb3b769bfc9ddc3440419413c162f">&#9670;&#160;</a></span>AfterWorldUpdate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiGameStateBase::AfterWorldUpdate </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called once each frame after the worlds have been updated. </p>

<p>Reimplemented in <a class="el" href="../../d0/dc7/classxii_fallback_game_state.htm#aefef3561bf6c9d8d47a2e4a1b738ff05">xiiFallbackGameState</a>.</p>

</div>
</div>
<a id="a5818fbb85acf55990b8b8fb3a140a01f" name="a5818fbb85acf55990b8b8fb3a140a01f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5818fbb85acf55990b8b8fb3a140a01f">&#9670;&#160;</a></span>DeterminePriority()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual xiiGameStatePriority xiiGameStateBase::DeterminePriority </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d89/classxii_world.htm">xiiWorld</a> *</td>          <td class="paramname"><span class="paramname"><em>pWorld</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called by <a class="el" href="../../d1/ded/classxii_game_application.htm" title="The base class for all typical game applications made with xiiEngine.">xiiGameApplication</a> to determine which game state is best suited to handle a situation. </p>
<p>If the application already has a world that should be shown, the game state can inspect it. If the game state is expected to create a new world, pWorld will be nullptr. </p>

<p>Implemented in <a class="el" href="../../d0/dc7/classxii_fallback_game_state.htm#a2b22ec6e7f8970b0ca06a231196dccec">xiiFallbackGameState</a>.</p>

</div>
</div>
<a id="a76098be6f82919043fccd2d64d865ad5" name="a76098be6f82919043fccd2d64d865ad5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76098be6f82919043fccd2d64d865ad5">&#9670;&#160;</a></span>OnActivation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiGameStateBase::OnActivation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d89/classxii_world.htm">xiiWorld</a> *</td>          <td class="paramname"><span class="paramname"><em>pWorld</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransform</a> *</td>          <td class="paramname"><span class="paramname"><em>pStartPosition</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>When a game state was chosen, it gets activated through this function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pWorld</td><td>The game state is supposed to operate on the given world. In a stand-alone application pWorld will always be nullptr and the game state is expected to create worlds itself. When run inside the editor, pWorld will already exist and the game state is expected to work on it.</td></tr>
    <tr><td class="paramname">pStartPosition</td><td>An optional transform for the 'player object' to start at. Usually nullptr, but may be set by the editor to relocate or create the player object at the given destination. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="../../d0/dc7/classxii_fallback_game_state.htm#a7e1e5b43c234cc1cab6f72ebaed1da9f">xiiFallbackGameState</a>, and <a class="el" href="../../d1/d19/classxii_game_state.htm#ae30ed5d987592a260de917485f638ab0">xiiGameState</a>.</p>

</div>
</div>
<a id="ac8277a988376f5726dd2f9fb295a9a2f" name="ac8277a988376f5726dd2f9fb295a9a2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8277a988376f5726dd2f9fb295a9a2f">&#9670;&#160;</a></span>OnDeactivation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiGameStateBase::OnDeactivation </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when the game state is being shut down. </p>

<p>Implemented in <a class="el" href="../../d0/dc7/classxii_fallback_game_state.htm#a6d3899556cc5505f366cb36107ae1f1e">xiiFallbackGameState</a>, and <a class="el" href="../../d1/d19/classxii_game_state.htm#a43c949ae7d5447924a3a4838193c60e6">xiiGameState</a>.</p>

</div>
</div>
<a id="a8d33de3bf375a635d385c8bf510c14e3" name="a8d33de3bf375a635d385c8bf510c14e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d33de3bf375a635d385c8bf510c14e3">&#9670;&#160;</a></span>ProcessInput()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiGameStateBase::ProcessInput </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called once per game update. Should handle input updates here. </p>

<p>Reimplemented in <a class="el" href="../../d0/dc7/classxii_fallback_game_state.htm#a14c86722352ae5e9924af178bb43ecb7">xiiFallbackGameState</a>.</p>

</div>
</div>
<a id="a2b380e8f2be3139a5bba9aea65f4265d" name="a2b380e8f2be3139a5bba9aea65f4265d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b380e8f2be3139a5bba9aea65f4265d">&#9670;&#160;</a></span>RequestQuit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiGameStateBase::RequestQuit </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Call this to signal that a game state requested the application to quit. </p>
<p><a class="el" href="../../d1/ded/classxii_game_application.htm" title="The base class for all typical game applications made with xiiEngine.">xiiGameApplication</a> will shut down when this happens. xiiEditor will stop play-the-game mode when it is running. </p>

</div>
</div>
<a id="a5080d0a1b978f673ed10e15d002def5b" name="a5080d0a1b978f673ed10e15d002def5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5080d0a1b978f673ed10e15d002def5b">&#9670;&#160;</a></span>ScheduleRendering()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiGameStateBase::ScheduleRendering </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Has to call xiiRenderLoop::AddMainView for all views that need to be rendered. </p>

<p>Implemented in <a class="el" href="../../d1/d19/classxii_game_state.htm#a8958e26c97b6467226006a1b55f0485c">xiiGameState</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Core/GameState/<a class="el" href="../../d6/d39/_game_state_base_8h_source.htm">GameStateBase.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Core/GameState/Implementation/<b>GameStateBase.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/d63/classxii_game_state_base.htm">xiiGameStateBase</a></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:02:16 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
