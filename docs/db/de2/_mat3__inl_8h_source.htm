<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Engine/Foundation/Math/Implementation/Mat3_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/de2/_mat3__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Mat3_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00004" data-start="{" data-end="}">
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a23f9e5e5e25001cecb1f7a04edea4586">    4</a></span><a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a23f9e5e5e25001cecb1f7a04edea4586">xiiMat3Template&lt;Type&gt;::xiiMat3Template</a>()</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>{</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#if XII_ENABLED(XII_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  <span class="comment">// Initialize all data to NaN in debug mode to find problems with uninitialized data easier.</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>  <span class="keyword">const</span> Type TypeNaN = <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a794f0339ad168c57748133cd2687fe4d">xiiMath::NaN&lt;Type&gt;</a>();</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>    m_fElementsCM[i] = TypeNaN;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>}</div>
</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00015" data-start="{" data-end="}">
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a9ec0055d56f57a16ae8b577b08bed7c6">   15</a></span><a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a23f9e5e5e25001cecb1f7a04edea4586">xiiMat3Template&lt;Type&gt;::xiiMat3Template</a>(<span class="keyword">const</span> Type* <span class="keyword">const</span> pData, <a class="code hl_enumeration" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a> layout)</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="keywordflow">if</span> (layout == <a class="code hl_enumvalue" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da755702638953d02b2b8354e528d4ed1c">xiiMatrixLayout::ColumnMajor</a>)</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  {</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a>(m_fElementsCM, pData, 9);</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  }</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  {</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    <span class="keywordflow">for</span> (xiiInt32 i = 0; i &lt; 3; ++i)</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>    {</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>      Element(0, i) = pData[i * 3 + 0];</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>      Element(1, i) = pData[i * 3 + 1];</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>      Element(2, i) = pData[i * 3 + 2];</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    }</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>}</div>
</div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a23f9e5e5e25001cecb1f7a04edea4586">   31</a></span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00033" data-start="{" data-end="}">
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a424a78e134dd17629bec4ec88b77c428">   33</a></span><a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a23f9e5e5e25001cecb1f7a04edea4586">xiiMat3Template&lt;Type&gt;::xiiMat3Template</a>(Type c1r1, Type c2r1, Type c3r1, Type c1r2, Type c2r2, Type c3r2, Type c1r3, Type c2r3, Type c3r3)</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>{</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  Element(0, 0) = c1r1;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  Element(1, 0) = c2r1;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  Element(2, 0) = c3r1;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  Element(0, 1) = c1r2;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  Element(1, 1) = c2r2;</div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="}">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a9ec0055d56f57a16ae8b577b08bed7c6">   40</a></span>  Element(2, 1) = c3r2;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  Element(0, 2) = c1r3;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  Element(1, 2) = c2r3;</div>
<div class="foldopen" id="foldopen00043" data-start="{" data-end="}">
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a424a78e134dd17629bec4ec88b77c428">   43</a></span>  Element(2, 2) = c3r3;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>}</div>
</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="}">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a0d8d295e88e42388898b8676dab2ce4a">   46</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00047" data-start="{" data-end="}">
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#af9222afcf5dbfde0aae56f0876bc2b79">   47</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#af9222afcf5dbfde0aae56f0876bc2b79">xiiMat3Template&lt;Type&gt;::GetAsArray</a>(Type* out_pData, <a class="code hl_enumeration" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a> layout)<span class="keyword"> const</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00049" data-start="{" data-end="}">
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a367981ecf5e690c5afe4b3bc7ab3f768">   49</a></span>  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="keywordflow">if</span> (layout == <a class="code hl_enumvalue" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da755702638953d02b2b8354e528d4ed1c">xiiMatrixLayout::ColumnMajor</a>)</div>
<div class="foldopen" id="foldopen00052" data-start="{" data-end="}">
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#adf907182fdecf335f211e9c5ebe46b2c">   52</a></span>  {</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a>(out_pData, m_fElementsCM, 9);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  }</div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a7ac019e513879fcb4af36867e73a55ab">   55</a></span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  {</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; ++i)</div>
<div class="foldopen" id="foldopen00058" data-start="{" data-end="}">
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#aa082c8aabec50dd2c9ef565083ad0bfa">   58</a></span>    {</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>      out_pData[i * 3 + 0] = Element(0, i);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>      out_pData[i * 3 + 1] = Element(1, i);</div>
<div class="foldopen" id="foldopen00061" data-start="{" data-end="}">
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a93001a328ad66cc719a19b710e918e0b">   61</a></span>      out_pData[i * 3 + 2] = Element(2, i);</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>    }</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  }</div>
<div class="foldopen" id="foldopen00064" data-start="{" data-end="}">
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a6a4dd3be0aa66a95db1d6c09bd77e493">   64</a></span>}</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00067" data-start="{" data-end="}">
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a5496224ed35c1413db94963fe0b3f17c">   67</a></span><a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a0d8d295e88e42388898b8676dab2ce4a">xiiMat3Template&lt;Type&gt;::MakeZero</a>()</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>{</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> res;</div>
<div class="foldopen" id="foldopen00070" data-start="{" data-end="}">
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#ab1f9be0f1b2576673086919bce0839c9">   70</a></span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; XII_ARRAY_SIZE(res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>); ++i)</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i] = 0.0f;</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>}</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00078" data-start="{" data-end="}">
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a367981ecf5e690c5afe4b3bc7ab3f768">   78</a></span><a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a367981ecf5e690c5afe4b3bc7ab3f768">xiiMat3Template&lt;Type&gt;::MakeIdentity</a>()</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>{</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[0] = 1.0f;</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[1] = 0.0f;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[2] = 0.0f;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[3] = 0.0f;</div>
<div class="foldopen" id="foldopen00085" data-start="{" data-end="}">
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#af9222afcf5dbfde0aae56f0876bc2b79">   85</a></span>  res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[4] = 1.0f;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[5] = 0.0f;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[6] = 0.0f;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[7] = 0.0f;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[8] = 1.0f;</div>
<div class="foldopen" id="foldopen00090" data-start="{" data-end="}">
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a9ab491f721aa3f2be6e453782c147bff">   90</a></span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>}</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="foldopen" id="foldopen00093" data-start="{" data-end="}">
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a44eab21b44154a3110c0cf8831f4be76">   93</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00094" data-start="{" data-end="}">
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#adf907182fdecf335f211e9c5ebe46b2c">   94</a></span><a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#adf907182fdecf335f211e9c5ebe46b2c">xiiMat3Template&lt;Type&gt;::MakeFromRowMajorArray</a>(<span class="keyword">const</span> Type* <span class="keyword">const</span> pData)</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>{</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; ++i)</div>
<div class="foldopen" id="foldopen00098" data-start="{" data-end="}">
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a5f510634863c1ab428d1454e00eaa4b6">   98</a></span>  {</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    res.Element(0, i) = pData[i * 3 + 0];</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    res.Element(1, i) = pData[i * 3 + 1];</div>
<div class="foldopen" id="foldopen00101" data-start="{" data-end="}">
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a4ffe2392cb9735c15cefafde2fa91fe5">  101</a></span>    res.Element(2, i) = pData[i * 3 + 2];</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  }</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>}</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00107" data-start="{" data-end="}">
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a185d93df8fa0db0093f0346e1da823a9">  107</a></span><a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a7ac019e513879fcb4af36867e73a55ab">xiiMat3Template&lt;Type&gt;::MakeFromColumnMajorArray</a>(<span class="keyword">const</span> Type* <span class="keyword">const</span> pData)</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>{</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a>(res.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>, pData, 9);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keywordflow">return</span> res;</div>
<div class="foldopen" id="foldopen00112" data-start="{" data-end="}">
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a3d5a4e59bfaabda5b7bd526d30ad049e">  112</a></span>}</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00115" data-start="{" data-end="}">
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a2242c5bed80854bfd3df461b18b0aaa2">  115</a></span><a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#aa082c8aabec50dd2c9ef565083ad0bfa">xiiMat3Template&lt;Type&gt;::MakeFromValues</a>(Type c1r1, Type c2r1, Type c3r1, Type c1r2, Type c2r2, Type c3r2, Type c1r3, Type c2r3, Type c3r3)</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>{</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> res;</div>
<div class="foldopen" id="foldopen00118" data-start="{" data-end="}">
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#ae319eb9c5a1e6317e7630fd91fde8bf2">  118</a></span>  res.Element(0, 0) = c1r1;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  res.Element(1, 0) = c2r1;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  res.Element(2, 0) = c3r1;</div>
<div class="foldopen" id="foldopen00121" data-start="{" data-end="}">
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a51b350f694940a3349a33a319c0cd370">  121</a></span>  res.Element(0, 1) = c1r2;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  res.Element(1, 1) = c2r2;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  res.Element(2, 1) = c3r2;</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  res.Element(0, 2) = c1r3;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  res.Element(1, 2) = c2r3;</div>
<div class="foldopen" id="foldopen00126" data-start="{" data-end="}">
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#af621155fc6d4f0d34aef928574a34e26">  126</a></span>  res.Element(2, 2) = c3r3;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>}</div>
<div class="foldopen" id="foldopen00129" data-start="{" data-end="}">
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a9df6f445183ab2fe78794e27a6ab8c12">  129</a></span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00131" data-start="{" data-end="}">
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a93001a328ad66cc719a19b710e918e0b">  131</a></span><a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a93001a328ad66cc719a19b710e918e0b">xiiMat3Template&lt;Type&gt;::MakeScaling</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vScale)</div>
<div class="foldopen" id="foldopen00132" data-start="{" data-end="}">
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#abe79a4ff1ac34659d1e1ce609f1838d9">  132</a></span>{</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  res.Element(0, 0) = vScale.x;</div>
<div class="foldopen" id="foldopen00135" data-start="{" data-end="}">
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a305fa340274e241f3f0e8aaed8419c25">  135</a></span>  res.Element(1, 0) = 0;</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  res.Element(2, 0) = 0;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  res.Element(0, 1) = 0;</div>
<div class="foldopen" id="foldopen00138" data-start="{" data-end="}">
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a7c671bd7b406f58d41d1b2bcf37e78c6">  138</a></span>  res.Element(1, 1) = vScale.y;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  res.Element(2, 1) = 0;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  res.Element(0, 2) = 0;</div>
<div class="foldopen" id="foldopen00141" data-start="{" data-end="}">
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a15089ff81187573cad25388b78711fbd">  141</a></span>  res.Element(1, 2) = 0;</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  res.Element(2, 2) = vScale.z;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <span class="keywordflow">return</span> res;</div>
<div class="foldopen" id="foldopen00144" data-start="{" data-end="}">
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a2260e2ed856a7e05fc2ee8ec5c4b5437">  144</a></span>}</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00147" data-start="{" data-end="}">
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a6a4dd3be0aa66a95db1d6c09bd77e493">  147</a></span><a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a6a4dd3be0aa66a95db1d6c09bd77e493">xiiMat3Template&lt;Type&gt;::MakeRotationX</a>(<a class="code hl_class" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> angle)</div>
<div class="foldopen" id="foldopen00148" data-start="{" data-end="}">
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a9aab0677882d361e8eb188d9f30707db">  148</a></span>{</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <span class="keyword">const</span> Type fSin = xiiMath::Sin(angle);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  <span class="keyword">const</span> Type fCos = xiiMath::Cos(angle);</div>
<div class="foldopen" id="foldopen00151" data-start="{" data-end="}">
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a01c2ab7226eb443ee4cbab0e92a86d0d">  151</a></span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#aa082c8aabec50dd2c9ef565083ad0bfa">xiiMat3Template&lt;Type&gt;::MakeFromValues</a>(1.0f, 0.0f, 0.0f, 0.0f, fCos, -fSin, 0.0f, fSin, fCos);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>}</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00156" data-start="{" data-end="}">
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a5496224ed35c1413db94963fe0b3f17c">  156</a></span><a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a5496224ed35c1413db94963fe0b3f17c">xiiMat3Template&lt;Type&gt;::MakeRotationY</a>(<a class="code hl_class" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> angle)</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>{</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <span class="keyword">const</span> Type fSin = xiiMath::Sin(angle);</div>
<div class="foldopen" id="foldopen00159" data-start="{" data-end="}">
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a18996c357cb51f0d732577fc2d3d8d62">  159</a></span>  <span class="keyword">const</span> Type fCos = xiiMath::Cos(angle);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#aa082c8aabec50dd2c9ef565083ad0bfa">xiiMat3Template&lt;Type&gt;::MakeFromValues</a>(fCos, 0.0f, fSin, 0.0f, 1.0f, 0.0f, -fSin, 0.0f, fCos);</div>
<div class="foldopen" id="foldopen00162" data-start="{" data-end="}">
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a86011435fa0be690ae529478d0c80736">  162</a></span>}</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00165" data-start="{" data-end="}">
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a1e3e941b1994fe650bcbc1cdb88e6b31">  165</a></span><a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#ab1f9be0f1b2576673086919bce0839c9">xiiMat3Template&lt;Type&gt;::MakeRotationZ</a>(<a class="code hl_class" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> angle)</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>{</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keyword">const</span> Type fSin = xiiMath::Sin(angle);</div>
<div class="foldopen" id="foldopen00168" data-start="{" data-end="}">
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a6b0f45c8c92a08d94de64aca1f540a55">  168</a></span>  <span class="keyword">const</span> Type fCos = xiiMath::Cos(angle);</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#aa082c8aabec50dd2c9ef565083ad0bfa">xiiMat3Template&lt;Type&gt;::MakeFromValues</a>(fCos, -fSin, 0.0f, fSin, fCos, 0.0f, 0.0f, 0.0f, 1.0f);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>}</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00174" data-start="{" data-end="}">
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a9ab491f721aa3f2be6e453782c147bff">  174</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a9ab491f721aa3f2be6e453782c147bff">xiiMat3Template&lt;Type&gt;::SetZero</a>()</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>{</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  *<span class="keyword">this</span> = MakeZero();</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>}</div>
</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00180" data-start="{" data-end="}">
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a44eab21b44154a3110c0cf8831f4be76">  180</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a44eab21b44154a3110c0cf8831f4be76">xiiMat3Template&lt;Type&gt;::SetIdentity</a>()</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>{</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  *<span class="keyword">this</span> = MakeIdentity();</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>}</div>
</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00186" data-start="{" data-end="}">
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a5f510634863c1ab428d1454e00eaa4b6">  186</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a5f510634863c1ab428d1454e00eaa4b6">xiiMat3Template&lt;Type&gt;::Transpose</a>()</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>{</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(Element(0, 1), Element(1, 0));</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(Element(0, 2), Element(2, 0));</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(Element(1, 2), Element(2, 1));</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>}</div>
</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00194" data-start="{" data-end="}">
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a4ffe2392cb9735c15cefafde2fa91fe5">  194</a></span><span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a4ffe2392cb9735c15cefafde2fa91fe5">xiiMat3Template&lt;Type&gt;::GetTranspose</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#adf907182fdecf335f211e9c5ebe46b2c">xiiMat3Template::MakeFromRowMajorArray</a>(m_fElementsCM);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>}</div>
</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00200" data-start="{" data-end="}">
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a185d93df8fa0db0093f0346e1da823a9">  200</a></span><span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a185d93df8fa0db0093f0346e1da823a9">xiiMat3Template&lt;Type&gt;::GetInverse</a>(Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> Inverse = *<span class="keyword">this</span>;</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  <a class="code hl_struct" href="../../dd/dad/structxii_result.htm">xiiResult</a>             res     = Inverse.<a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#aa330921727d478abef3163425ba42895">Invert</a>(fEpsilon);</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  XII_ASSERT_DEBUG(res.Succeeded(), <span class="stringliteral">&quot;Could not invert the given Mat3.&quot;</span>);</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  XII_IGNORE_UNUSED(res);</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  <span class="keywordflow">return</span> Inverse;</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>}</div>
</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00210" data-start="{" data-end="}">
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#af621155fc6d4f0d34aef928574a34e26">  210</a></span><a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#af621155fc6d4f0d34aef928574a34e26">xiiMat3Template&lt;Type&gt;::GetRow</a>(xiiUInt32 uiRow)<span class="keyword"> const</span></div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>  XII_ASSERT_DEBUG(uiRow &lt;= 2, <span class="stringliteral">&quot;Invalid Row Index {0}&quot;</span>, uiRow);</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>  r.x = Element(0, uiRow);</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  r.y = Element(1, uiRow);</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>  r.z = Element(2, uiRow);</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>  <span class="keywordflow">return</span> r;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>}</div>
</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00224" data-start="{" data-end="}">
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a9df6f445183ab2fe78794e27a6ab8c12">  224</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a9df6f445183ab2fe78794e27a6ab8c12">xiiMat3Template&lt;Type&gt;::SetRow</a>(xiiUInt32 uiRow, <span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vRow)</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>{</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  XII_ASSERT_DEBUG(uiRow &lt;= 2, <span class="stringliteral">&quot;Invalid Row Index {0}&quot;</span>, uiRow);</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  Element(0, uiRow) = vRow.x;</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  Element(1, uiRow) = vRow.y;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>  Element(2, uiRow) = vRow.z;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>}</div>
</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00234" data-start="{" data-end="}">
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#abe79a4ff1ac34659d1e1ce609f1838d9">  234</a></span><a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#abe79a4ff1ac34659d1e1ce609f1838d9">xiiMat3Template&lt;Type&gt;::GetColumn</a>(xiiUInt32 uiColumn)<span class="keyword"> const</span></div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>  XII_ASSERT_DEBUG(uiColumn &lt;= 2, <span class="stringliteral">&quot;Invalid Column Index {0}&quot;</span>, uiColumn);</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>  r.x = Element(uiColumn, 0);</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  r.y = Element(uiColumn, 1);</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  r.z = Element(uiColumn, 2);</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>  <span class="keywordflow">return</span> r;</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>}</div>
</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00248" data-start="{" data-end="}">
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a305fa340274e241f3f0e8aaed8419c25">  248</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a305fa340274e241f3f0e8aaed8419c25">xiiMat3Template&lt;Type&gt;::SetColumn</a>(xiiUInt32 uiColumn, <span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vColumn)</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>{</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>  XII_ASSERT_DEBUG(uiColumn &lt;= 2, <span class="stringliteral">&quot;Invalid Column Index {0}&quot;</span>, uiColumn);</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  Element(uiColumn, 0) = vColumn.x;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  Element(uiColumn, 1) = vColumn.y;</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>  Element(uiColumn, 2) = vColumn.z;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>}</div>
</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00258" data-start="{" data-end="}">
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a7c671bd7b406f58d41d1b2bcf37e78c6">  258</a></span><a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a7c671bd7b406f58d41d1b2bcf37e78c6">xiiMat3Template&lt;Type&gt;::GetDiagonal</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span> </div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>(Element(0, 0), Element(1, 1), Element(2, 2));</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>}</div>
</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span> </div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00266" data-start="{" data-end="}">
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a15089ff81187573cad25388b78711fbd">  266</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a15089ff81187573cad25388b78711fbd">xiiMat3Template&lt;Type&gt;::SetDiagonal</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vDiag)</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>{</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>  Element(0, 0) = vDiag.x;</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>  Element(1, 1) = vDiag.y;</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>  Element(2, 2) = vDiag.z;</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>}</div>
</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span> </div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00274" data-start="{" data-end="}">
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#af8517a144ac1cf4d9df9232804817f11">  274</a></span>XII_FORCE_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#af8517a144ac1cf4d9df9232804817f11">xiiMat3Template&lt;Type&gt;::TransformDirection</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v)<span class="keyword"> const</span></div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>  <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  r.x = Element(0, 0) * v.x + Element(1, 0) * v.y + Element(2, 0) * v.z;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>  r.y = Element(0, 1) * v.x + Element(1, 1) * v.y + Element(2, 1) * v.z;</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>  r.z = Element(0, 2) * v.x + Element(1, 2) * v.y + Element(2, 2) * v.z;</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>  <span class="keywordflow">return</span> r;</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>}</div>
</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span> </div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00286" data-start="{" data-end="}">
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a18996c357cb51f0d732577fc2d3d8d62">  286</a></span>XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a18996c357cb51f0d732577fc2d3d8d62">xiiMat3Template&lt;Type&gt;::operator*=</a>(Type f)</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>{</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  <span class="keywordflow">for</span> (xiiInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>    m_fElementsCM[i] *= f;</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>}</div>
</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span> </div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00295" data-start="{" data-end="}">
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a86011435fa0be690ae529478d0c80736">  295</a></span>XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a86011435fa0be690ae529478d0c80736">xiiMat3Template&lt;Type&gt;::operator/=</a>(Type f)</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>{</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>  <span class="keyword">const</span> Type fInv = <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#ac1067d4c24d9b02662c60a528c870580">xiiMath::Invert</a>(f);</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span> </div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>  operator*=(fInv);</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>}</div>
</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span><span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m2)</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>{</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>  <span class="keywordflow">for</span> (xiiInt32 i = 0; i &lt; 3; ++i)</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>  {</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>    r.Element(0, i) = m1.Element(0, i) * m2.Element(0, 0) + m1.Element(1, i) * m2.Element(0, 1) + m1.Element(2, i) * m2.Element(0, 2);</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>    r.Element(1, i) = m1.Element(0, i) * m2.Element(1, 0) + m1.Element(1, i) * m2.Element(1, 1) + m1.Element(2, i) * m2.Element(1, 2);</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>    r.Element(2, i) = m1.Element(0, i) * m2.Element(2, 0) + m1.Element(1, i) * m2.Element(2, 1) + m1.Element(2, i) * m2.Element(2, 2);</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>  }</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>  <span class="keywordflow">return</span> r;</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>}</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>XII_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m, <span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v)</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>{</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>  <span class="keywordflow">return</span> m.<a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#af8517a144ac1cf4d9df9232804817f11">TransformDirection</a>(v);</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>}</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span> </div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span><span class="comment">// *** free functions ***</span></div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span> </div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>XII_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m1)</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>{</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>  <span class="keywordflow">return</span> operator*(m1, f);</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>}</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span> </div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span><span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m1, Type f)</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>{</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span> </div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>    r.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i] = m1.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i] * f;</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span> </div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span> </div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>  <span class="keywordflow">return</span> r;</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>}</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span> </div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>XII_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m1, Type f)</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>{</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>  <span class="keywordflow">return</span> operator*(m1, <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#ac1067d4c24d9b02662c60a528c870580">xiiMath::Invert</a>(f));</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>}</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span> </div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span><span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m2)</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>{</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span> </div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>    r.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i] = m1.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i] + m2.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i];</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span> </div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span> </div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>  <span class="keywordflow">return</span> r;</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>}</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span> </div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span><span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m2)</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>{</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>  <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span> </div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>    r.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i] = m1.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i] - m2.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i];</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span> </div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span> </div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>  <span class="keywordflow">return</span> r;</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>}</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span> </div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00379" data-start="{" data-end="}">
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a1e3e941b1994fe650bcbc1cdb88e6b31">  379</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a1e3e941b1994fe650bcbc1cdb88e6b31">xiiMat3Template&lt;Type&gt;::IsIdentical</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>  XII_NAN_ASSERT(&amp;rhs);</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span> </div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>  {</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>    <span class="keywordflow">if</span> (m_fElementsCM[i] != rhs.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i])</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>  }</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span> </div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>}</div>
</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span> </div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00394" data-start="{" data-end="}">
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a6b0f45c8c92a08d94de64aca1f540a55">  394</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a6b0f45c8c92a08d94de64aca1f540a55">xiiMat3Template&lt;Type&gt;::IsEqual</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>  XII_NAN_ASSERT(&amp;rhs);</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span> </div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>  XII_ASSERT_DEBUG(fEpsilon &gt;= 0.0f, <span class="stringliteral">&quot;Epsilon may not be negative.&quot;</span>);</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span> </div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>  {</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>    <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(m_fElementsCM[i], rhs.<a class="code hl_variable" href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">m_fElementsCM</a>[i], fEpsilon))</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>  }</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span> </div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>}</div>
</div>
</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span> </div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>{</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>  <span class="keywordflow">return</span> lhs.<a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a1e3e941b1994fe650bcbc1cdb88e6b31">IsIdentical</a>(rhs);</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>}</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span> </div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00417" data-start="{" data-end="}">
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a3d5a4e59bfaabda5b7bd526d30ad049e">  417</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a3d5a4e59bfaabda5b7bd526d30ad049e">xiiMat3Template&lt;Type&gt;::IsZero</a>(Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span> </div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>  {</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>    <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a76f446939ad58af387fb79b8fd9deff7">xiiMath::IsZero</a>(m_fElementsCM[i], fEpsilon))</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>  }</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span> </div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>}</div>
</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span> </div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00431" data-start="{" data-end="}">
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a2242c5bed80854bfd3df461b18b0aaa2">  431</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a2242c5bed80854bfd3df461b18b0aaa2">xiiMat3Template&lt;Type&gt;::IsIdentity</a>(Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span>  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span> </div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(0, 0), (Type)1, fEpsilon))</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(0, 1), (Type)0, fEpsilon))</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(0, 2), (Type)0, fEpsilon))</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span> </div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(1, 0), (Type)0, fEpsilon))</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(1, 1), (Type)1, fEpsilon))</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(1, 2), (Type)0, fEpsilon))</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span> </div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(2, 0), (Type)0, fEpsilon))</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(2, 1), (Type)0, fEpsilon))</div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(2, 2), (Type)1, fEpsilon))</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span> </div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span>}</div>
</div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span> </div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00460" data-start="{" data-end="}">
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#ae319eb9c5a1e6317e7630fd91fde8bf2">  460</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#ae319eb9c5a1e6317e7630fd91fde8bf2">xiiMat3Template&lt;Type&gt;::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span>  {</div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span>    <span class="keywordflow">if</span> (!xiiMath::IsFinite(m_fElementsCM[i]))</div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span>  }</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span> </div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>}</div>
</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span> </div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00472" data-start="{" data-end="}">
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a51b350f694940a3349a33a319c0cd370">  472</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a51b350f694940a3349a33a319c0cd370">xiiMat3Template&lt;Type&gt;::IsNaN</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span>  {</div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>    <span class="keywordflow">if</span> (xiiMath::IsNaN(m_fElementsCM[i]))</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span>  }</div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span> </div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span>  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno">  481</span>}</div>
</div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span> </div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00484" data-start="{" data-end="}">
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a2260e2ed856a7e05fc2ee8ec5c4b5437">  484</a></span><span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a2260e2ed856a7e05fc2ee8ec5c4b5437">xiiMat3Template&lt;Type&gt;::GetScalingFactors</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span>  <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> v;</div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span> </div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span>  v.x = <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>(Element(0, 0), Element(0, 1), Element(0, 2)).<a class="code hl_function" href="../../d9/d9a/classxii_vec3_template.htm#afdbfe005da534ab16e275c8d18bd9f81">GetLength</a>();</div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>  v.y = <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>(Element(1, 0), Element(1, 1), Element(1, 2)).<a class="code hl_function" href="../../d9/d9a/classxii_vec3_template.htm#afdbfe005da534ab16e275c8d18bd9f81">GetLength</a>();</div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>  v.z = <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>(Element(2, 0), Element(2, 1), Element(2, 2)).<a class="code hl_function" href="../../d9/d9a/classxii_vec3_template.htm#afdbfe005da534ab16e275c8d18bd9f81">GetLength</a>();</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span> </div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span>  XII_NAN_ASSERT(&amp;v);</div>
<div class="line"><a id="l00493" name="l00493"></a><span class="lineno">  493</span>  <span class="keywordflow">return</span> v;</div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno">  494</span>}</div>
</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span> </div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00497" data-start="{" data-end="}">
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a9aab0677882d361e8eb188d9f30707db">  497</a></span><a class="code hl_struct" href="../../dd/dad/structxii_result.htm">xiiResult</a> <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a9aab0677882d361e8eb188d9f30707db">xiiMat3Template&lt;Type&gt;::SetScalingFactors</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vXYZ, Type fEpsilon <span class="comment">/* = xiiMath::DefaultEpsilon&lt;Type&gt;() */</span>)</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span>{</div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span>  <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> tx(Element(0, 0), Element(0, 1), Element(0, 2));</div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span>  <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> ty(Element(1, 0), Element(1, 1), Element(1, 2));</div>
<div class="line"><a id="l00501" name="l00501"></a><span class="lineno">  501</span>  <a class="code hl_class" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> tz(Element(2, 0), Element(2, 1), Element(2, 2));</div>
<div class="line"><a id="l00502" name="l00502"></a><span class="lineno">  502</span> </div>
<div class="line"><a id="l00503" name="l00503"></a><span class="lineno">  503</span>  <span class="keywordflow">if</span> (tx.<a class="code hl_function" href="../../d9/d9a/classxii_vec3_template.htm#ad2cb527586b7ad99cf02329ee839f75c">SetLength</a>(vXYZ.x, fEpsilon) == XII_FAILURE)</div>
<div class="line"><a id="l00504" name="l00504"></a><span class="lineno">  504</span>    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>  <span class="keywordflow">if</span> (ty.<a class="code hl_function" href="../../d9/d9a/classxii_vec3_template.htm#ad2cb527586b7ad99cf02329ee839f75c">SetLength</a>(vXYZ.y, fEpsilon) == XII_FAILURE)</div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span>    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno">  507</span>  <span class="keywordflow">if</span> (tz.<a class="code hl_function" href="../../d9/d9a/classxii_vec3_template.htm#ad2cb527586b7ad99cf02329ee839f75c">SetLength</a>(vXYZ.z, fEpsilon) == XII_FAILURE)</div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span>    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a id="l00509" name="l00509"></a><span class="lineno">  509</span> </div>
<div class="line"><a id="l00510" name="l00510"></a><span class="lineno">  510</span> </div>
<div class="line"><a id="l00511" name="l00511"></a><span class="lineno">  511</span>  Element(0, 0) = tx.x;</div>
<div class="line"><a id="l00512" name="l00512"></a><span class="lineno">  512</span>  Element(0, 1) = tx.y;</div>
<div class="line"><a id="l00513" name="l00513"></a><span class="lineno">  513</span>  Element(0, 2) = tx.z;</div>
<div class="line"><a id="l00514" name="l00514"></a><span class="lineno">  514</span>  Element(1, 0) = ty.x;</div>
<div class="line"><a id="l00515" name="l00515"></a><span class="lineno">  515</span>  Element(1, 1) = ty.y;</div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>  Element(1, 2) = ty.z;</div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno">  517</span>  Element(2, 0) = tz.x;</div>
<div class="line"><a id="l00518" name="l00518"></a><span class="lineno">  518</span>  Element(2, 1) = tz.y;</div>
<div class="line"><a id="l00519" name="l00519"></a><span class="lineno">  519</span>  Element(2, 2) = tz.z;</div>
<div class="line"><a id="l00520" name="l00520"></a><span class="lineno">  520</span> </div>
<div class="line"><a id="l00521" name="l00521"></a><span class="lineno">  521</span>  <span class="keywordflow">return</span> XII_SUCCESS;</div>
<div class="line"><a id="l00522" name="l00522"></a><span class="lineno">  522</span>}</div>
</div>
<div class="line"><a id="l00523" name="l00523"></a><span class="lineno">  523</span> </div>
<div class="line"><a id="l00524" name="l00524"></a><span class="lineno">  524</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00525" data-start="{" data-end="}">
<div class="line"><a id="l00525" name="l00525"></a><span class="lineno"><a class="line" href="../../d3/d74/classxii_mat3_template.htm#a01c2ab7226eb443ee4cbab0e92a86d0d">  525</a></span>Type <a class="code hl_function" href="../../d3/d74/classxii_mat3_template.htm#a01c2ab7226eb443ee4cbab0e92a86d0d">xiiMat3Template&lt;Type&gt;::GetDeterminant</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00526" name="l00526"></a><span class="lineno">  526</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00527" name="l00527"></a><span class="lineno">  527</span>  <span class="comment">// Using rule of Sarrus</span></div>
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno">  528</span>  Type fDeterminant = 0;</div>
<div class="line"><a id="l00529" name="l00529"></a><span class="lineno">  529</span>  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; i++)</div>
<div class="line"><a id="l00530" name="l00530"></a><span class="lineno">  530</span>  {</div>
<div class="line"><a id="l00531" name="l00531"></a><span class="lineno">  531</span>    fDeterminant += Element(i, 0) * Element((i + 1) % 3, 1) * Element((i + 2) % 3, 2);</div>
<div class="line"><a id="l00532" name="l00532"></a><span class="lineno">  532</span>    fDeterminant -= Element(i, 2) * Element((i + 1) % 3, 1) * Element((i + 2) % 3, 0);</div>
<div class="line"><a id="l00533" name="l00533"></a><span class="lineno">  533</span>  }</div>
<div class="line"><a id="l00534" name="l00534"></a><span class="lineno">  534</span>  <span class="keywordflow">return</span> fDeterminant;</div>
<div class="line"><a id="l00535" name="l00535"></a><span class="lineno">  535</span>}</div>
</div>
<div class="line"><a id="l00536" name="l00536"></a><span class="lineno">  536</span> </div>
<div class="line"><a id="l00537" name="l00537"></a><span class="lineno">  537</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/AllClasses_inl.h&gt;</span></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="ttc" id="aclassxii_angle_template_htm"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a></div><div class="ttdoc">Wrapper class for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition</b> Angle.h:10</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template</a></div><div class="ttdoc">A 3x3 component matrix class.</div><div class="ttdef"><b>Definition</b> Mat3.h:9</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a01c2ab7226eb443ee4cbab0e92a86d0d"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a01c2ab7226eb443ee4cbab0e92a86d0d">xiiMat3Template::GetDeterminant</a></div><div class="ttdeci">Type GetDeterminant() const</div><div class="ttdoc">Computes the determinant of the matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:525</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a0d8d295e88e42388898b8676dab2ce4a"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a0d8d295e88e42388898b8676dab2ce4a">xiiMat3Template::MakeZero</a></div><div class="ttdeci">static xiiMat3Template&lt; Type &gt; MakeZero()</div><div class="ttdoc">Returns a zero matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:67</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a15089ff81187573cad25388b78711fbd"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a15089ff81187573cad25388b78711fbd">xiiMat3Template::SetDiagonal</a></div><div class="ttdeci">void SetDiagonal(const xiiVec3Template&lt; Type &gt; &amp;vDiag)</div><div class="ttdoc">Sets all 3 components on the diagonal of the matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:266</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a185d93df8fa0db0093f0346e1da823a9"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a185d93df8fa0db0093f0346e1da823a9">xiiMat3Template::GetInverse</a></div><div class="ttdeci">const xiiMat3Template&lt; Type &gt; GetInverse(Type fEpsilon=xiiMath::SmallEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns the inverse of this matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:200</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a18996c357cb51f0d732577fc2d3d8d62"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a18996c357cb51f0d732577fc2d3d8d62">xiiMat3Template::operator*=</a></div><div class="ttdeci">void operator*=(Type f)</div><div class="ttdoc">Component-wise multiplication (commutative)</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:286</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a1e3e941b1994fe650bcbc1cdb88e6b31"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a1e3e941b1994fe650bcbc1cdb88e6b31">xiiMat3Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const xiiMat3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:379</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a2242c5bed80854bfd3df461b18b0aaa2"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a2242c5bed80854bfd3df461b18b0aaa2">xiiMat3Template::IsIdentity</a></div><div class="ttdeci">bool IsIdentity(Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether this is an identity matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:431</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a2260e2ed856a7e05fc2ee8ec5c4b5437"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a2260e2ed856a7e05fc2ee8ec5c4b5437">xiiMat3Template::GetScalingFactors</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; GetScalingFactors() const</div><div class="ttdoc">Returns the 3 scaling factors that are encoded in the matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:484</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a23f9e5e5e25001cecb1f7a04edea4586"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a23f9e5e5e25001cecb1f7a04edea4586">xiiMat3Template::xiiMat3Template</a></div><div class="ttdeci">xiiMat3Template()</div><div class="ttdoc">Default Constructor DOES NOT INITIALIZE the matrix, at all.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:4</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a305fa340274e241f3f0e8aaed8419c25"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a305fa340274e241f3f0e8aaed8419c25">xiiMat3Template::SetColumn</a></div><div class="ttdeci">void SetColumn(xiiUInt32 uiColumn, const xiiVec3Template&lt; Type &gt; &amp;vColumn)</div><div class="ttdoc">Sets all 3 components of the i-th column.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:248</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a367981ecf5e690c5afe4b3bc7ab3f768"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a367981ecf5e690c5afe4b3bc7ab3f768">xiiMat3Template::MakeIdentity</a></div><div class="ttdeci">static xiiMat3Template&lt; Type &gt; MakeIdentity()</div><div class="ttdoc">Returns an identity matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:78</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a3d5a4e59bfaabda5b7bd526d30ad049e"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a3d5a4e59bfaabda5b7bd526d30ad049e">xiiMat3Template::IsZero</a></div><div class="ttdeci">bool IsZero(Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether all elements are zero.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:417</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a44eab21b44154a3110c0cf8831f4be76"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a44eab21b44154a3110c0cf8831f4be76">xiiMat3Template::SetIdentity</a></div><div class="ttdeci">void SetIdentity()</div><div class="ttdoc">Sets all elements to zero, except the diagonal, which is set to one.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:180</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a4ffe2392cb9735c15cefafde2fa91fe5"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a4ffe2392cb9735c15cefafde2fa91fe5">xiiMat3Template::GetTranspose</a></div><div class="ttdeci">const xiiMat3Template&lt; Type &gt; GetTranspose() const</div><div class="ttdoc">Returns the transpose of this matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:194</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a51b350f694940a3349a33a319c0cd370"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a51b350f694940a3349a33a319c0cd370">xiiMat3Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:472</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a5496224ed35c1413db94963fe0b3f17c"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a5496224ed35c1413db94963fe0b3f17c">xiiMat3Template::MakeRotationY</a></div><div class="ttdeci">static xiiMat3Template&lt; Type &gt; MakeRotationY(xiiAngleTemplate&lt; Type &gt; angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the Y-axis.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:156</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a5f510634863c1ab428d1454e00eaa4b6"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a5f510634863c1ab428d1454e00eaa4b6">xiiMat3Template::Transpose</a></div><div class="ttdeci">void Transpose()</div><div class="ttdoc">Transposes this matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:186</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a6a4dd3be0aa66a95db1d6c09bd77e493"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a6a4dd3be0aa66a95db1d6c09bd77e493">xiiMat3Template::MakeRotationX</a></div><div class="ttdeci">static xiiMat3Template&lt; Type &gt; MakeRotationX(xiiAngleTemplate&lt; Type &gt; angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the X-axis.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:147</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a6b0f45c8c92a08d94de64aca1f540a55"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a6b0f45c8c92a08d94de64aca1f540a55">xiiMat3Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const xiiMat3Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:394</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a7ac019e513879fcb4af36867e73a55ab"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a7ac019e513879fcb4af36867e73a55ab">xiiMat3Template::MakeFromColumnMajorArray</a></div><div class="ttdeci">static xiiMat3Template&lt; Type &gt; MakeFromColumnMajorArray(const Type *const pData)</div><div class="ttdoc">Creates a matrix from 9 values that are in column-major layout.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:107</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a7c671bd7b406f58d41d1b2bcf37e78c6"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a7c671bd7b406f58d41d1b2bcf37e78c6">xiiMat3Template::GetDiagonal</a></div><div class="ttdeci">xiiVec3Template&lt; Type &gt; GetDiagonal() const</div><div class="ttdoc">Returns all 3 components on the diagonal of the matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:258</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a86011435fa0be690ae529478d0c80736"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a86011435fa0be690ae529478d0c80736">xiiMat3Template::operator/=</a></div><div class="ttdeci">void operator/=(Type f)</div><div class="ttdoc">Component-wise division.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:295</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a93001a328ad66cc719a19b710e918e0b"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a93001a328ad66cc719a19b710e918e0b">xiiMat3Template::MakeScaling</a></div><div class="ttdeci">static xiiMat3Template&lt; Type &gt; MakeScaling(const xiiVec3Template&lt; Type &gt; &amp;vScale)</div><div class="ttdoc">Creates a matrix with all zero values, except along the diagonal, which is set to x,...</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:131</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a9aab0677882d361e8eb188d9f30707db"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a9aab0677882d361e8eb188d9f30707db">xiiMat3Template::SetScalingFactors</a></div><div class="ttdeci">xiiResult SetScalingFactors(const xiiVec3Template&lt; Type &gt; &amp;vXYZ, Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to set the three scaling factors in the matrix. Returns XII_FAILURE if the matrix columns canno...</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:497</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a9ab491f721aa3f2be6e453782c147bff"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a9ab491f721aa3f2be6e453782c147bff">xiiMat3Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets all elements to zero.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:174</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_a9df6f445183ab2fe78794e27a6ab8c12"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#a9df6f445183ab2fe78794e27a6ab8c12">xiiMat3Template::SetRow</a></div><div class="ttdeci">void SetRow(xiiUInt32 uiRow, const xiiVec3Template&lt; Type &gt; &amp;vRow)</div><div class="ttdoc">Sets all 3 components of the i-th row.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:224</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_aa082c8aabec50dd2c9ef565083ad0bfa"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#aa082c8aabec50dd2c9ef565083ad0bfa">xiiMat3Template::MakeFromValues</a></div><div class="ttdeci">static xiiMat3Template&lt; Type &gt; MakeFromValues(Type c1r1, Type c2r1, Type c3r1, Type c1r2, Type c2r2, Type c3r2, Type c1r3, Type c2r3, Type c3r3)</div><div class="ttdoc">Creates a matrix from 9 values. Naming is &quot;column-n row-m&quot;.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:115</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_aa330921727d478abef3163425ba42895"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#aa330921727d478abef3163425ba42895">xiiMat3Template::Invert</a></div><div class="ttdeci">xiiResult Invert(Type fEpsilon=xiiMath::SmallEpsilon&lt; Type &gt;())</div><div class="ttdoc">Inverts this matrix. Return value indicates whether the matrix could be Inverted.</div><div class="ttdef"><b>Definition</b> AllClasses_inl.h:228</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_ab1f9be0f1b2576673086919bce0839c9"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#ab1f9be0f1b2576673086919bce0839c9">xiiMat3Template::MakeRotationZ</a></div><div class="ttdeci">static xiiMat3Template&lt; Type &gt; MakeRotationZ(xiiAngleTemplate&lt; Type &gt; angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the Z-axis.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:165</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_abe79a4ff1ac34659d1e1ce609f1838d9"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#abe79a4ff1ac34659d1e1ce609f1838d9">xiiMat3Template::GetColumn</a></div><div class="ttdeci">xiiVec3Template&lt; Type &gt; GetColumn(xiiUInt32 uiColumn) const</div><div class="ttdoc">Returns all 3 components of the i-th column.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:234</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_adf907182fdecf335f211e9c5ebe46b2c"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#adf907182fdecf335f211e9c5ebe46b2c">xiiMat3Template::MakeFromRowMajorArray</a></div><div class="ttdeci">static xiiMat3Template&lt; Type &gt; MakeFromRowMajorArray(const Type *const pData)</div><div class="ttdoc">Creates a matrix from 9 values that are in row-major layout.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:94</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_ae0ae61baee9629f7bc8d90b134437070"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#ae0ae61baee9629f7bc8d90b134437070">xiiMat3Template::m_fElementsCM</a></div><div class="ttdeci">Type m_fElementsCM[9]</div><div class="ttdoc">The matrix as a 9-element Type array (column-major)</div><div class="ttdef"><b>Definition</b> Mat3.h:23</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_ae319eb9c5a1e6317e7630fd91fde8bf2"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#ae319eb9c5a1e6317e7630fd91fde8bf2">xiiMat3Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether all components are finite numbers.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:460</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_af621155fc6d4f0d34aef928574a34e26"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#af621155fc6d4f0d34aef928574a34e26">xiiMat3Template::GetRow</a></div><div class="ttdeci">xiiVec3Template&lt; Type &gt; GetRow(xiiUInt32 uiRow) const</div><div class="ttdoc">Returns all 3 components of the i-th row.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:210</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_af8517a144ac1cf4d9df9232804817f11"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#af8517a144ac1cf4d9df9232804817f11">xiiMat3Template::TransformDirection</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; TransformDirection(const xiiVec3Template&lt; Type &gt; &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is zero. So,...</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:274</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm_af9222afcf5dbfde0aae56f0876bc2b79"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm#af9222afcf5dbfde0aae56f0876bc2b79">xiiMat3Template::GetAsArray</a></div><div class="ttdeci">void GetAsArray(Type *out_pData, xiiMatrixLayout::Enum layout) const</div><div class="ttdoc">Copies the 9 values of this matrix into the given array. 'layout' defines whether the data should end...</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:47</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a802d7a152c551948e45e7d0e19ae1e88"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount=1)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition</b> Vec3.h:9</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ad2cb527586b7ad99cf02329ee839f75c"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ad2cb527586b7ad99cf02329ee839f75c">xiiVec3Template::SetLength</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE xiiResult SetLength(Type fNewLength, Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to rescale the vector to the given length. If the vector is too close to zero,...</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:56</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_afdbfe005da534ab16e275c8d18bd9f81"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#afdbfe005da534ab16e275c8d18bd9f81">xiiVec3Template::GetLength</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:50</div></div>
<div class="ttc" id="anamespacexii_math_htm_a20047812a62c07b9ac2144a5520c18f0"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a></div><div class="ttdeci">constexpr bool IsEqual(Type lhs, Type rhs, Type fEpsilon)</div><div class="ttdoc">Checks, whether fValue is in the range [fDesired - fMaxImprecision; fDesired + fMaxImprecision].</div><div class="ttdef"><b>Definition</b> Math_inl.h:285</div></div>
<div class="ttc" id="anamespacexii_math_htm_a2e7c389d4195d010ba0c207a1e981a58"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a></div><div class="ttdeci">XII_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:222</div></div>
<div class="ttc" id="anamespacexii_math_htm_a76f446939ad58af387fb79b8fd9deff7"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a76f446939ad58af387fb79b8fd9deff7">xiiMath::IsZero</a></div><div class="ttdeci">bool IsZero(Type f, Type fEpsilon)</div><div class="ttdoc">Checks whether the given number is close to zero.</div><div class="ttdef"><b>Definition</b> Math_inl.h:297</div></div>
<div class="ttc" id="anamespacexii_math_htm_a794f0339ad168c57748133cd2687fe4d"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a794f0339ad168c57748133cd2687fe4d">xiiMath::NaN</a></div><div class="ttdeci">constexpr TYPE NaN()</div><div class="ttdoc">Returns the value for NaN as the template type. Returns zero, if the type does not support NaN.</div><div class="ttdef"><b>Definition</b> Constants_inl.h:72</div></div>
<div class="ttc" id="anamespacexii_math_htm_ac1067d4c24d9b02662c60a528c870580"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#ac1067d4c24d9b02662c60a528c870580">xiiMath::Invert</a></div><div class="ttdeci">constexpr Type Invert(Type f)</div><div class="ttdoc">Returns 1 / f.</div><div class="ttdef"><b>Definition</b> Math_inl.h:62</div></div>
<div class="ttc" id="astructxii_matrix_layout_htm_ac36c91b001c7cd816897b73c0bff5e6d"><div class="ttname"><a href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition</b> Declarations.h:64</div></div>
<div class="ttc" id="astructxii_matrix_layout_htm_ac36c91b001c7cd816897b73c0bff5e6da755702638953d02b2b8354e528d4ed1c"><div class="ttname"><a href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da755702638953d02b2b8354e528d4ed1c">xiiMatrixLayout::ColumnMajor</a></div><div class="ttdeci">@ ColumnMajor</div><div class="ttdoc">The matrix is stored in column-major format.</div><div class="ttdef"><b>Definition</b> Declarations.h:66</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:56</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c1b0860bb61ff24e678d996d14e4bcdd.htm">Math</a></li><li class="navelem"><a class="el" href="../../dir_fb7e93d80251333452775ccd3b7c417a.htm">Implementation</a></li><li class="navelem"><b>Mat3_inl.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:02:11 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
