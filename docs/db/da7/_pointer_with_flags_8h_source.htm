<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Types/PointerWithFlags.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/da7/_pointer_with_flags_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">PointerWithFlags.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> PtrType, u<span class="keywordtype">int</span>8_t NumFlagBits = 2&gt;</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm">   11</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm">xiiPointerWithFlags</a></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  enum : <span class="keywordtype">size_t</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  {</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    AllOnes   = (std::size_t)(-1),</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    PtrBits   = <span class="keyword">sizeof</span>(<span class="keywordtype">void</span>*) * 8,</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    FlagsMask = (AllOnes &gt;&gt; (PtrBits - NumFlagBits)),</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    PtrMask   = ~FlagsMask,</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  };</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordtype">void</span>* m_pPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a8dc052b7b8ec67da3fa6e6d118cd90db">xiiPointerWithFlags</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a74133af5cc6ecfa122dfb38b13c52265">   29</a></span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a74133af5cc6ecfa122dfb38b13c52265">xiiPointerWithFlags</a>(PtrType* ptr, uint8_t flags = 0) { <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#adbba9d24d585d17657a803b417df0397">SetPtrAndFlags</a>(ptr, flags); }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#adbba9d24d585d17657a803b417df0397">   32</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#adbba9d24d585d17657a803b417df0397">SetPtrAndFlags</a>(PtrType* ptr, uint8_t flags)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">const</span> std::uintptr_t isrc = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;ptr);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    std::uintptr_t&amp;      iptr = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    iptr = (isrc &amp; PtrMask) | (flags &amp; FlagsMask);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  }</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">   41</a></span>&#160;  <span class="keyword">const</span> PtrType* <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">const</span> std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>PtrType*<span class="keyword">&gt;</span>(iptr &amp; PtrMask); <span class="comment">// mask off lower N bits</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a7eff00a32dbe74adaaaa840c46146100">   48</a></span>&#160;  PtrType* <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a7eff00a32dbe74adaaaa840c46146100">GetPtr</a>()</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span>PtrType*<span class="keyword">&gt;</span>(iptr &amp; PtrMask); <span class="comment">// mask off lower N bits</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a92ad909a19839fa74d15f0a73135963b">   55</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a92ad909a19839fa74d15f0a73135963b">SetPtr</a>(PtrType* ptr)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">const</span> std::uintptr_t isrc = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;ptr);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    XII_ASSERT_DEBUG(</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      (isrc &amp; FlagsMask) == 0, <span class="stringliteral">&quot;The given pointer does not have an {} byte alignment and thus cannot be stored lossless.&quot;</span>, 1u &lt;&lt; NumFlagBits);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    iptr = (isrc &amp; PtrMask) | (iptr &amp; FlagsMask);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  }</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a995862c549e5baa202c34e1b3c714832">   66</a></span>&#160;  uint8_t <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a995862c549e5baa202c34e1b3c714832">GetFlags</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">const</span> std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(iptr &amp; FlagsMask);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a34b961c019cb116ff0c0b0b98e112c47">   73</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a34b961c019cb116ff0c0b0b98e112c47">SetFlags</a>(uint8_t flags)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    XII_ASSERT_DEBUG(flags &lt;= FlagsMask, <span class="stringliteral">&quot;The flag value {} requires more than {} bits&quot;</span>, flags, NumFlagBits);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    iptr = (iptr &amp; PtrMask) | (flags &amp; FlagsMask);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a3f8d14510a18e3ad200f0eb87babf3c4">   83</a></span>&#160;  <span class="keyword">operator</span> PtrType*() { <span class="keywordflow">return</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>(); }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#aa550a3eade3b0cc278211fcaf038dd02">   86</a></span>&#160;  <span class="keyword">operator</span> <span class="keyword">const</span> PtrType*() <span class="keyword">const</span> { <span class="keywordflow">return</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>(); }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#ac91861b1f404e26244a575d86ff1f178">   89</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#ac91861b1f404e26244a575d86ff1f178">operator=</a>(PtrType* ptr) { <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a92ad909a19839fa74d15f0a73135963b">SetPtr</a>(ptr); }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#ad5b85b3ea86d40b64ba96b524fd32092">   92</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#ad5b85b3ea86d40b64ba96b524fd32092">operator==</a>(<span class="keyword">const</span> PtrType* ptr)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>() == ptr; }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a81a1e835c7d4dafd446751c445dcdb14">   95</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a81a1e835c7d4dafd446751c445dcdb14">operator!=</a>(<span class="keyword">const</span> PtrType* ptr)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == ptr); }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a991d07fa9ae237bd9854b5d16d3beebc">   98</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a991d07fa9ae237bd9854b5d16d3beebc">operator==</a>(PtrType* ptr)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>() == ptr; }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#abaf60e98675f650f5c7439939ac62a21">  101</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#abaf60e98675f650f5c7439939ac62a21">operator!=</a>(PtrType* ptr)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == ptr); }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#ab855e9dc5929e405a99156ca6b078f06">  104</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#ab855e9dc5929e405a99156ca6b078f06">operator==</a>(std::nullptr_t)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>() == <span class="keyword">nullptr</span>; }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a496469c80c2a17a21d611d709ab86650">  107</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a496469c80c2a17a21d611d709ab86650">operator!=</a>(std::nullptr_t)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == <span class="keyword">nullptr</span>); }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a4a860f5fc02be399e6dd720dbce6d536">  110</a></span>&#160;  <span class="keyword">operator</span> bool()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>() != <span class="keyword">nullptr</span>; }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#aa233b8172fccd37560eb49c7c30e0b17">  113</a></span>&#160;  <span class="keyword">const</span> PtrType* <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#aa233b8172fccd37560eb49c7c30e0b17">operator-&gt;</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>(); }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a42ba7813d2032c7ca8999799664643a4">  116</a></span>&#160;  PtrType* <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a42ba7813d2032c7ca8999799664643a4">operator-&gt;</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>(); }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a62c72752177c57d8f39fa69020cdf28d">  119</a></span>&#160;  <span class="keyword">const</span> PtrType&amp; <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a62c72752177c57d8f39fa69020cdf28d">operator*</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> *<a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>(); }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="../../d4/d14/classxii_pointer_with_flags.htm#a12c86436afbe57ef0e19b51c52947e36">  122</a></span>&#160;  PtrType&amp; <a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a12c86436afbe57ef0e19b51c52947e36">operator*</a>() { <span class="keywordflow">return</span> *<a class="code" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a>(); }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a12c86436afbe57ef0e19b51c52947e36"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a12c86436afbe57ef0e19b51c52947e36">xiiPointerWithFlags::operator*</a></div><div class="ttdeci">PtrType &amp; operator*()</div><div class="ttdoc">Dereferences the pointer.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:122</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_ac91861b1f404e26244a575d86ff1f178"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#ac91861b1f404e26244a575d86ff1f178">xiiPointerWithFlags::operator=</a></div><div class="ttdeci">void operator=(PtrType *ptr)</div><div class="ttdoc">Changes the pointer value only. Flags stay unchanged.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:89</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a34b961c019cb116ff0c0b0b98e112c47"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a34b961c019cb116ff0c0b0b98e112c47">xiiPointerWithFlags::SetFlags</a></div><div class="ttdeci">void SetFlags(uint8_t flags)</div><div class="ttdoc">Changes only the flags value. The given value must fit into the reserved bits.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:73</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a257273f6c7b882422482115adff95bd5"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">xiiPointerWithFlags::GetPtr</a></div><div class="ttdeci">const PtrType * GetPtr() const</div><div class="ttdoc">Returns the masked off pointer value.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:41</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a74133af5cc6ecfa122dfb38b13c52265"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a74133af5cc6ecfa122dfb38b13c52265">xiiPointerWithFlags::xiiPointerWithFlags</a></div><div class="ttdeci">xiiPointerWithFlags(PtrType *ptr, uint8_t flags=0)</div><div class="ttdoc">Initializes the pointer and flags.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:29</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a81a1e835c7d4dafd446751c445dcdb14"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a81a1e835c7d4dafd446751c445dcdb14">xiiPointerWithFlags::operator!=</a></div><div class="ttdeci">bool operator!=(const PtrType *ptr) const</div><div class="ttdoc">Compares the pointer part for inequality (flags are ignored)</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:95</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a8dc052b7b8ec67da3fa6e6d118cd90db"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a8dc052b7b8ec67da3fa6e6d118cd90db">xiiPointerWithFlags::xiiPointerWithFlags</a></div><div class="ttdeci">xiiPointerWithFlags()=default</div><div class="ttdoc">Initializes the pointer and flags with zero.</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a995862c549e5baa202c34e1b3c714832"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a995862c549e5baa202c34e1b3c714832">xiiPointerWithFlags::GetFlags</a></div><div class="ttdeci">uint8_t GetFlags() const</div><div class="ttdoc">Returns the flags value only.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:66</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a496469c80c2a17a21d611d709ab86650"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a496469c80c2a17a21d611d709ab86650">xiiPointerWithFlags::operator!=</a></div><div class="ttdeci">bool operator!=(std::nullptr_t) const</div><div class="ttdoc">Compares the pointer part for inequality (flags are ignored)</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:107</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_ad5b85b3ea86d40b64ba96b524fd32092"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#ad5b85b3ea86d40b64ba96b524fd32092">xiiPointerWithFlags::operator==</a></div><div class="ttdeci">bool operator==(const PtrType *ptr) const</div><div class="ttdoc">Compares the pointer part for equality (flags are ignored)</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:92</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a62c72752177c57d8f39fa69020cdf28d"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a62c72752177c57d8f39fa69020cdf28d">xiiPointerWithFlags::operator*</a></div><div class="ttdeci">const PtrType &amp; operator*() const</div><div class="ttdoc">Dereferences the pointer.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:119</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_adbba9d24d585d17657a803b417df0397"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#adbba9d24d585d17657a803b417df0397">xiiPointerWithFlags::SetPtrAndFlags</a></div><div class="ttdeci">void SetPtrAndFlags(PtrType *ptr, uint8_t flags)</div><div class="ttdoc">Changes the pointer and flags.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:32</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm">xiiPointerWithFlags</a></div><div class="ttdoc">A wrapper around a raw pointer that allows to use the lower N bits for flags.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:11</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a7eff00a32dbe74adaaaa840c46146100"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a7eff00a32dbe74adaaaa840c46146100">xiiPointerWithFlags::GetPtr</a></div><div class="ttdeci">PtrType * GetPtr()</div><div class="ttdoc">Returns the masked off pointer value.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:48</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a991d07fa9ae237bd9854b5d16d3beebc"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a991d07fa9ae237bd9854b5d16d3beebc">xiiPointerWithFlags::operator==</a></div><div class="ttdeci">bool operator==(PtrType *ptr) const</div><div class="ttdoc">Compares the pointer part for equality (flags are ignored)</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:98</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a42ba7813d2032c7ca8999799664643a4"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a42ba7813d2032c7ca8999799664643a4">xiiPointerWithFlags::operator-&gt;</a></div><div class="ttdeci">PtrType * operator-&gt;()</div><div class="ttdoc">Dereferences the pointer.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:116</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_a92ad909a19839fa74d15f0a73135963b"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#a92ad909a19839fa74d15f0a73135963b">xiiPointerWithFlags::SetPtr</a></div><div class="ttdeci">void SetPtr(PtrType *ptr)</div><div class="ttdoc">Changes the pointer value only. Flags stay unchanged.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:55</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_abaf60e98675f650f5c7439939ac62a21"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#abaf60e98675f650f5c7439939ac62a21">xiiPointerWithFlags::operator!=</a></div><div class="ttdeci">bool operator!=(PtrType *ptr) const</div><div class="ttdoc">Compares the pointer part for inequality (flags are ignored)</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:101</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_ab855e9dc5929e405a99156ca6b078f06"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#ab855e9dc5929e405a99156ca6b078f06">xiiPointerWithFlags::operator==</a></div><div class="ttdeci">bool operator==(std::nullptr_t) const</div><div class="ttdoc">Compares the pointer part for equality (flags are ignored)</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:104</div></div>
<div class="ttc" id="aclassxii_pointer_with_flags_htm_aa233b8172fccd37560eb49c7c30e0b17"><div class="ttname"><a href="../../d4/d14/classxii_pointer_with_flags.htm#aa233b8172fccd37560eb49c7c30e0b17">xiiPointerWithFlags::operator-&gt;</a></div><div class="ttdeci">const PtrType * operator-&gt;() const</div><div class="ttdoc">Dereferences the pointer.</div><div class="ttdef"><b>Definition:</b> PointerWithFlags.h:113</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_fd654f0525c8869fa0409c81d19e3265.htm">Types</a></li><li class="navelem"><b>PointerWithFlags.h</b></li>
    <li class="footer">Generated on Fri Mar 24 2023 17:20:16 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
