<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Memory/EndianHelper.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/dad/_endian_helper_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">EndianHelper.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm">    6</a></span>&#160;<span class="keyword">struct </span>XII_FOUNDATION_DLL <a class="code" href="../../d1/d45/structxii_endian_helper.htm">xiiEndianHelper</a></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#a607da5aa302290ca1cbf6a4954bd5c8d">   11</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d1/d45/structxii_endian_helper.htm#a607da5aa302290ca1cbf6a4954bd5c8d">IsBigEndian</a>()</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keyword">const</span> xiiInt32 i = 1;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keywordflow">return</span> (*(<span class="keywordtype">char</span>*)&amp;i) == 0;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  }</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#a287d44e7d1f9cb390dcba9ac8685c65d">   20</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d1/d45/structxii_endian_helper.htm#a287d44e7d1f9cb390dcba9ac8685c65d">IsLittleEndian</a>() { <span class="keywordflow">return</span> !IsBigEndian(); }</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#a196faec10a91983a2cb3a8e457bceb80">   23</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d45/structxii_endian_helper.htm#a196faec10a91983a2cb3a8e457bceb80">SwitchWords</a>(xiiUInt16* pWords, xiiUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; uiCount; i++)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      pWords[i] = Switch(pWords[i]);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#a475d9cca1635052439290272dff3eb37">   32</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d45/structxii_endian_helper.htm#a475d9cca1635052439290272dff3eb37">SwitchDWords</a>(xiiUInt32* pDWords, xiiUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; uiCount; i++)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      pDWords[i] = Switch(pDWords[i]);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  }</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#a4335b3fa729862ee6046d0a3faf53579">   41</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d45/structxii_endian_helper.htm#a4335b3fa729862ee6046d0a3faf53579">SwitchQWords</a>(xiiUInt64* pQWords, xiiUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; uiCount; i++)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      pQWords[i] = Switch(pQWords[i]);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#a1d8b02dcd8d543e2e084262546b226ed">   50</a></span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE xiiUInt16 <a class="code" href="../../d1/d45/structxii_endian_helper.htm#a1d8b02dcd8d543e2e084262546b226ed">Switch</a>(xiiUInt16 uiWord) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> (((uiWord &amp; 0xFF) &lt;&lt; 8) | ((uiWord &gt;&gt; 8) &amp; 0xFF));</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#a850f61c865e735174307e0ca9c30d925">   56</a></span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE xiiUInt32 <a class="code" href="../../d1/d45/structxii_endian_helper.htm#a850f61c865e735174307e0ca9c30d925">Switch</a>(xiiUInt32 uiDWord) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> (((uiDWord &amp; 0xFF) &lt;&lt; 24) | (((uiDWord &gt;&gt; 8) &amp; 0xFF) &lt;&lt; 16) | (((uiDWord &gt;&gt; 16) &amp; 0xFF) &lt;&lt; 8) | ((uiDWord &gt;&gt; 24) &amp; 0xFF));</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#aae1b39a77e8264436c3379d0dc76fea8">   62</a></span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE xiiUInt64 <a class="code" href="../../d1/d45/structxii_endian_helper.htm#aae1b39a77e8264436c3379d0dc76fea8">Switch</a>(xiiUInt64 uiQWord) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> (((uiQWord &amp; 0xFF) &lt;&lt; 56) | ((uiQWord &amp; 0xFF00) &lt;&lt; 40) | ((uiQWord &amp; 0xFF0000) &lt;&lt; 24) | ((uiQWord &amp; 0xFF000000) &lt;&lt; 8) |</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            ((uiQWord &amp; 0xFF00000000) &gt;&gt; 8) | ((uiQWord &amp; 0xFF0000000000) &gt;&gt; 24) | ((uiQWord &amp; 0xFF000000000000) &gt;&gt; 40) |</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            ((uiQWord &amp; 0xFF00000000000000) &gt;&gt; 56));</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#af4348b30671167d268cb0a1cd64821f8">   71</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d45/structxii_endian_helper.htm#af4348b30671167d268cb0a1cd64821f8">SwitchInPlace</a>(T* pValue) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    XII_CHECK_AT_COMPILETIME_MSG((<span class="keyword">sizeof</span>(T) == 2 || <span class="keyword">sizeof</span>(T) == 4 || <span class="keyword">sizeof</span>(T) == 8), <span class="stringliteral">&quot;Switch in place only works for type equivalents of xiiUInt16, xiiUInt32, xiiUInt64!&quot;</span>);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(T) == 2)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      <span class="keyword">struct </span>TAnd16BitUnion</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keyword">union</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;          xiiUInt16 BitValue;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;          T         TValue;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        };</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      };</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      TAnd16BitUnion Temp;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      Temp.TValue   = *pValue;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      Temp.BitValue = Switch(Temp.BitValue);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      *pValue = Temp.TValue;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(T) == 4)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <span class="keyword">struct </span>TAnd32BitUnion</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">union</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;          xiiUInt32 BitValue;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;          T         TValue;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        };</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      };</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      TAnd32BitUnion Temp;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      Temp.TValue   = *pValue;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;      Temp.BitValue = Switch(Temp.BitValue);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      *pValue = Temp.TValue;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(T) == 8)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keyword">struct </span>TAnd64BitUnion</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keyword">union</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;          xiiUInt64 BitValue;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;          T         TValue;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        };</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      };</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      TAnd64BitUnion Temp;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      Temp.TValue   = *pValue;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      Temp.BitValue = Switch(Temp.BitValue);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      *pValue = Temp.TValue;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_PLATFORM_LITTLE_ENDIAN)</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(xiiUInt16* <span class="comment">/*pWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  {}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(xiiUInt16* <span class="comment">/*pWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(xiiUInt32* <span class="comment">/*pDWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(xiiUInt32* <span class="comment">/*pDWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(xiiUInt64* <span class="comment">/*pQWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(xiiUInt64* <span class="comment">/*pQWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(xiiUInt16* pWords, xiiUInt32 uiCount) { SwitchWords(pWords, uiCount); }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(xiiUInt16* pWords, xiiUInt32 uiCount) { SwitchWords(pWords, uiCount); }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(xiiUInt32* pDWords, xiiUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(xiiUInt32* pDWords, xiiUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(xiiUInt64* pQWords, xiiUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(xiiUInt64* pQWords, xiiUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">#elif XII_ENABLED(XII_PLATFORM_BIG_ENDIAN)</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(xiiUInt16* pWords, xiiUInt32 uiCount)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    SwitchWords(pWords, uiCount);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(xiiUInt16* pWords, xiiUInt32 uiCount) { SwitchWords(pWords, uiCount); }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(xiiUInt32* pDWords, xiiUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(xiiUInt32* pDWords, xiiUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(xiiUInt64* pQWords, xiiUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(xiiUInt64* pQWords, xiiUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(xiiUInt16* <span class="comment">/*pWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(xiiUInt16* <span class="comment">/*pWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(xiiUInt32* <span class="comment">/*pWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(xiiUInt32* <span class="comment">/*pWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(xiiUInt64* <span class="comment">/*pWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(xiiUInt64* <span class="comment">/*pWords*/</span>, xiiUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SwitchStruct(<span class="keywordtype">void</span>* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#acbfb9f56323b04a667cc3cb8d9aad66c">  197</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d45/structxii_endian_helper.htm#acbfb9f56323b04a667cc3cb8d9aad66c">SwitchStruct</a>(T* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    SwitchStruct(<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span>*<span class="keyword">&gt;</span>(pDataPointer), szFormat);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SwitchStructs(<span class="keywordtype">void</span>* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, xiiUInt32 uiStride, xiiUInt32 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="../../d1/d45/structxii_endian_helper.htm#a27742cde7e3d6ef5b066da6ce40a723c">  213</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d45/structxii_endian_helper.htm#a27742cde7e3d6ef5b066da6ce40a723c">SwitchStructs</a>(T* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, xiiUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  {</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    SwitchStructs(<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span>*<span class="keyword">&gt;</span>(pDataPointer), szFormat, <span class="keyword">sizeof</span>(T), uiCount);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  }</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructxii_endian_helper_htm_a475d9cca1635052439290272dff3eb37"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#a475d9cca1635052439290272dff3eb37">xiiEndianHelper::SwitchDWords</a></div><div class="ttdeci">static void SwitchDWords(xiiUInt32 *pDWords, xiiUInt32 uiCount)</div><div class="ttdoc">Switches endianess of the given array of double words (32 bit values).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:32</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_aae1b39a77e8264436c3379d0dc76fea8"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#aae1b39a77e8264436c3379d0dc76fea8">xiiEndianHelper::Switch</a></div><div class="ttdeci">static XII_ALWAYS_INLINE xiiUInt64 Switch(xiiUInt64 uiQWord)</div><div class="ttdoc">Returns a single switched quad word (64 bit value).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:62</div></div>
<div class="ttc" id="astructxii_endian_helper_htm"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm">xiiEndianHelper</a></div><div class="ttdoc">Collection of helper methods when working with endianess &quot;problems&quot;.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:6</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_a27742cde7e3d6ef5b066da6ce40a723c"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#a27742cde7e3d6ef5b066da6ce40a723c">xiiEndianHelper::SwitchStructs</a></div><div class="ttdeci">static void SwitchStructs(T *pDataPointer, const char *szFormat, xiiUInt32 uiCount)</div><div class="ttdoc">Templated helper method for SwitchStructs.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:213</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_acbfb9f56323b04a667cc3cb8d9aad66c"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#acbfb9f56323b04a667cc3cb8d9aad66c">xiiEndianHelper::SwitchStruct</a></div><div class="ttdeci">static void SwitchStruct(T *pDataPointer, const char *szFormat)</div><div class="ttdoc">Templated helper method for SwitchStruct.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:197</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_a287d44e7d1f9cb390dcba9ac8685c65d"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#a287d44e7d1f9cb390dcba9ac8685c65d">xiiEndianHelper::IsLittleEndian</a></div><div class="ttdeci">static bool IsLittleEndian()</div><div class="ttdoc">Returns true if called on a little endian system, false otherwise.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:20</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_af4348b30671167d268cb0a1cd64821f8"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#af4348b30671167d268cb0a1cd64821f8">xiiEndianHelper::SwitchInPlace</a></div><div class="ttdeci">static void SwitchInPlace(T *pValue)</div><div class="ttdoc">Switches a value in place (template accepts pointers for 2, 4 &amp; 8 byte data types)</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:71</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_a1d8b02dcd8d543e2e084262546b226ed"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#a1d8b02dcd8d543e2e084262546b226ed">xiiEndianHelper::Switch</a></div><div class="ttdeci">static XII_ALWAYS_INLINE xiiUInt16 Switch(xiiUInt16 uiWord)</div><div class="ttdoc">Returns a single switched word (16 bit value).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:50</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_a607da5aa302290ca1cbf6a4954bd5c8d"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#a607da5aa302290ca1cbf6a4954bd5c8d">xiiEndianHelper::IsBigEndian</a></div><div class="ttdeci">static bool IsBigEndian()</div><div class="ttdoc">Returns true if called on a big endian system, false otherwise.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:11</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_a196faec10a91983a2cb3a8e457bceb80"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#a196faec10a91983a2cb3a8e457bceb80">xiiEndianHelper::SwitchWords</a></div><div class="ttdeci">static void SwitchWords(xiiUInt16 *pWords, xiiUInt32 uiCount)</div><div class="ttdoc">Switches endianess of the given array of words (16 bit values).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:23</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_a4335b3fa729862ee6046d0a3faf53579"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#a4335b3fa729862ee6046d0a3faf53579">xiiEndianHelper::SwitchQWords</a></div><div class="ttdeci">static void SwitchQWords(xiiUInt64 *pQWords, xiiUInt32 uiCount)</div><div class="ttdoc">Switches endianess of the given array of quad words (64 bit values).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:41</div></div>
<div class="ttc" id="astructxii_endian_helper_htm_a850f61c865e735174307e0ca9c30d925"><div class="ttname"><a href="../../d1/d45/structxii_endian_helper.htm#a850f61c865e735174307e0ca9c30d925">xiiEndianHelper::Switch</a></div><div class="ttdeci">static XII_ALWAYS_INLINE xiiUInt32 Switch(xiiUInt32 uiDWord)</div><div class="ttdoc">Returns a single switched double word (32 bit value).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:56</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_f4c376a517d02920cdbc41b4ea2fc5f5.htm">Memory</a></li><li class="navelem"><b>EndianHelper.h</b></li>
    <li class="footer">Generated on Sat Sep 9 2023 15:17:08 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
