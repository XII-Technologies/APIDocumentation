<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: xiiPhantomMemberProperty Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/db0/classxii_phantom_member_property.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d2/db0/classxii_phantom_member_property-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">xiiPhantomMemberProperty Class Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for xiiPhantomMemberProperty:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../db/d37/classxii_phantom_member_property__inherit__graph.svg" width="216" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2e51593f5e66871d4f69a9e5a441017e" id="r_a2e51593f5e66871d4f69a9e5a441017e"><td class="memItemLeft" align="right" valign="top"><a id="a2e51593f5e66871d4f69a9e5a441017e" name="a2e51593f5e66871d4f69a9e5a441017e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiPhantomMemberProperty</b> (const <a class="el" href="../../db/d02/structxii_reflected_property_descriptor.htm">xiiReflectedPropertyDescriptor</a> *pDesc)</td></tr>
<tr class="separator:a2e51593f5e66871d4f69a9e5a441017e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17e3e3a7b166df6cabe70ddaa976d900" id="r_a17e3e3a7b166df6cabe70ddaa976d900"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a17e3e3a7b166df6cabe70ddaa976d900">GetSpecificType</a> () const override</td></tr>
<tr class="memdesc:a17e3e3a7b166df6cabe70ddaa976d900"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../d3/de4/classxii_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">xiiTypedConstantProperty</a>.  <br /></td></tr>
<tr class="separator:a17e3e3a7b166df6cabe70ddaa976d900"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa90a888e2b40053c221ec46492589a50" id="r_aa90a888e2b40053c221ec46492589a50"><td class="memItemLeft" align="right" valign="top">virtual void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa90a888e2b40053c221ec46492589a50">GetPropertyPointer</a> (const void *pInstance) const override</td></tr>
<tr class="memdesc:aa90a888e2b40053c221ec46492589a50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the property data or nullptr. If a valid pointer is returned, that pointer and the information from <a class="el" href="#a17e3e3a7b166df6cabe70ddaa976d900" title="Returns the type information of the constant property. Use this to cast this property to a specific v...">GetSpecificType()</a> can be used to step deeper into the type (if required).  <br /></td></tr>
<tr class="separator:aa90a888e2b40053c221ec46492589a50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68266bab8766f70c001a38a8b75492d7" id="r_a68266bab8766f70c001a38a8b75492d7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a68266bab8766f70c001a38a8b75492d7">GetValuePtr</a> (const void *pInstance, void *pObject) const override</td></tr>
<tr class="memdesc:a68266bab8766f70c001a38a8b75492d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the value of this property in pInstance to pObject. pObject needs to point to an instance of this property's type.  <br /></td></tr>
<tr class="separator:a68266bab8766f70c001a38a8b75492d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bf024638f22a133e5251d44d222158f" id="r_a0bf024638f22a133e5251d44d222158f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0bf024638f22a133e5251d44d222158f">SetValuePtr</a> (void *pInstance, const void *pObject) const override</td></tr>
<tr class="memdesc:a0bf024638f22a133e5251d44d222158f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value of pObject to the property in pInstance. pObject needs to point to an instance of this property's type.  <br /></td></tr>
<tr class="separator:a0bf024638f22a133e5251d44d222158f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classxii_abstract_member_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classxii_abstract_member_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a></td></tr>
<tr class="memitem:a3e082378e1e5da16d6fabce8e058cb83 inherit pub_methods_classxii_abstract_member_property" id="r_a3e082378e1e5da16d6fabce8e058cb83"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiAbstractMemberProperty</b> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName)</td></tr>
<tr class="memdesc:a3e082378e1e5da16d6fabce8e058cb83 inherit pub_methods_classxii_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../da/d25/classxii_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">xiiAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a3e082378e1e5da16d6fabce8e058cb83 inherit pub_methods_classxii_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf0539c054c65454f20d4c1e83d13d48 inherit pub_methods_classxii_abstract_member_property" id="r_abf0539c054c65454f20d4c1e83d13d48"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">xiiPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d67/classxii_abstract_member_property.htm#abf0539c054c65454f20d4c1e83d13d48">GetCategory</a> () const override</td></tr>
<tr class="memdesc:abf0539c054c65454f20d4c1e83d13d48 inherit pub_methods_classxii_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aa2162b44ab3371e32b441f99a18e40ad" title="The property is a &#39;member property&#39;, i.e. it represents some accessible value. Cast to xiiAbstractMem...">xiiPropertyCategory::Member</a>.  <br /></td></tr>
<tr class="separator:abf0539c054c65454f20d4c1e83d13d48 inherit pub_methods_classxii_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classxii_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classxii_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></td></tr>
<tr class="memitem:a84b927e254d587c57b4dd956eb93d4a1 inherit pub_methods_classxii_abstract_property" id="r_a84b927e254d587c57b4dd956eb93d4a1"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiAbstractProperty</b> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName)</td></tr>
<tr class="memdesc:a84b927e254d587c57b4dd956eb93d4a1 inherit pub_methods_classxii_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a84b927e254d587c57b4dd956eb93d4a1 inherit pub_methods_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cc3cf4e5893d65b88b67ba6c6c6f0c3 inherit pub_methods_classxii_abstract_property" id="r_a6cc3cf4e5893d65b88b67ba6c6c6f0c3"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPropertyName</b> () const</td></tr>
<tr class="memdesc:a6cc3cf4e5893d65b88b67ba6c6c6f0c3 inherit pub_methods_classxii_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:a6cc3cf4e5893d65b88b67ba6c6c6f0c3 inherit pub_methods_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf52f12e0c85bf15996d309354bc5125 inherit pub_methods_classxii_abstract_property" id="r_aaf52f12e0c85bf15996d309354bc5125"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a>&lt; <a class="el" href="../../d6/d7c/structxii_property_flags.htm">xiiPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:aaf52f12e0c85bf15996d309354bc5125 inherit pub_methods_classxii_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:aaf52f12e0c85bf15996d309354bc5125 inherit pub_methods_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4aa513d987be8a86f89827bd64a1b1e inherit pub_methods_classxii_abstract_property" id="r_af4aa513d987be8a86f89827bd64a1b1e"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a>&lt; <a class="el" href="../../d6/d7c/structxii_property_flags.htm">xiiPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:af4aa513d987be8a86f89827bd64a1b1e inherit pub_methods_classxii_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:af4aa513d987be8a86f89827bd64a1b1e inherit pub_methods_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1306cba889c57221656d894af811b4f inherit pub_methods_classxii_abstract_property" id="r_af1306cba889c57221656d894af811b4f"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:af1306cba889c57221656d894af811b4f inherit pub_methods_classxii_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:af1306cba889c57221656d894af811b4f inherit pub_methods_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdab3642a3c77a8600e8dbdd344dbfa5 inherit pub_methods_classxii_abstract_property" id="r_acdab3642a3c77a8600e8dbdd344dbfa5"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const <a class="el" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="memdesc:acdab3642a3c77a8600e8dbdd344dbfa5 inherit pub_methods_classxii_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:acdab3642a3c77a8600e8dbdd344dbfa5 inherit pub_methods_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad4ec48408db2eba3b0056700af83a3b inherit pub_methods_classxii_abstract_property" id="r_aad4ec48408db2eba3b0056700af83a3b"><td class="memTemplParams" colspan="2">
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:aad4ec48408db2eba3b0056700af83a3b inherit pub_methods_classxii_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:aad4ec48408db2eba3b0056700af83a3b inherit pub_methods_classxii_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:aad4ec48408db2eba3b0056700af83a3b inherit pub_methods_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classxii_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classxii_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></td></tr>
<tr class="memitem:a21c1cf152a2595b9cec84da4264258a0 inherit pro_attribs_classxii_abstract_property" id="r_a21c1cf152a2595b9cec84da4264258a0"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a>&lt; <a class="el" href="../../d6/d7c/structxii_property_flags.htm">xiiPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a21c1cf152a2595b9cec84da4264258a0 inherit pro_attribs_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ab36c24bce444210f4073e13b5d9d62 inherit pro_attribs_classxii_abstract_property" id="r_a4ab36c24bce444210f4073e13b5d9d62"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sPropertyName</b></td></tr>
<tr class="separator:a4ab36c24bce444210f4073e13b5d9d62 inherit pro_attribs_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae62000a5340129da5eccc66add039dc1 inherit pro_attribs_classxii_abstract_property" id="r_ae62000a5340129da5eccc66add039dc1"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a>&lt; const <a class="el" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a> *, 2U, <a class="el" href="../../df/d02/structxii_static_allocator_wrapper.htm">xiiStaticAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:ae62000a5340129da5eccc66add039dc1 inherit pro_attribs_classxii_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa90a888e2b40053c221ec46492589a50" name="aa90a888e2b40053c221ec46492589a50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa90a888e2b40053c221ec46492589a50">&#9670;&#160;</a></span>GetPropertyPointer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void * xiiPhantomMemberProperty::GetPropertyPointer </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a pointer to the property data or nullptr. If a valid pointer is returned, that pointer and the information from <a class="el" href="#a17e3e3a7b166df6cabe70ddaa976d900" title="Returns the type information of the constant property. Use this to cast this property to a specific v...">GetSpecificType()</a> can be used to step deeper into the type (if required). </p>
<p>You need to pass the pointer to an object on which you are operating. This function is mostly of interest when the property itself is a compound type (a struct or class). If it is a simple type (int, float, etc.) it doesn't make much sense to retrieve the pointer.</p>
<p>For example <a class="el" href="#a17e3e3a7b166df6cabe70ddaa976d900" title="Returns the type information of the constant property. Use this to cast this property to a specific v...">GetSpecificType()</a> might return that a property is of type xiiVec3. In that case one might either stop and just use the code to handle xiiVec3 types, or one might continue and enumerate all sub-properties (x, y and z) as well.</p>
<dl class="section note"><dt>Note</dt><dd>There is no guarantee that this function returns a non-nullptr pointer, independent of the type. When a property uses custom 'accessors' (functions to get / set the property value), it is not possible (or useful) to get the property pointer. </dd></dl>

<p>Implements <a class="el" href="../../dd/d67/classxii_abstract_member_property.htm#a85bc7f6f315cca2c65f741206635c844">xiiAbstractMemberProperty</a>.</p>

</div>
</div>
<a id="a17e3e3a7b166df6cabe70ddaa976d900" name="a17e3e3a7b166df6cabe70ddaa976d900"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17e3e3a7b166df6cabe70ddaa976d900">&#9670;&#160;</a></span>GetSpecificType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> * xiiPhantomMemberProperty::GetSpecificType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../d3/de4/classxii_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">xiiTypedConstantProperty</a>. </p>

<p>Implements <a class="el" href="../../da/d25/classxii_abstract_property.htm#af2444215837714062b107e2288b1ac61">xiiAbstractProperty</a>.</p>

</div>
</div>
<a id="a68266bab8766f70c001a38a8b75492d7" name="a68266bab8766f70c001a38a8b75492d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68266bab8766f70c001a38a8b75492d7">&#9670;&#160;</a></span>GetValuePtr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiPhantomMemberProperty::GetValuePtr </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>out_pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes the value of this property in pInstance to pObject. pObject needs to point to an instance of this property's type. </p>

<p>Implements <a class="el" href="../../dd/d67/classxii_abstract_member_property.htm#a27692a40525ab421b34c1585e5b99b7c">xiiAbstractMemberProperty</a>.</p>

</div>
</div>
<a id="a0bf024638f22a133e5251d44d222158f" name="a0bf024638f22a133e5251d44d222158f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bf024638f22a133e5251d44d222158f">&#9670;&#160;</a></span>SetValuePtr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiPhantomMemberProperty::SetValuePtr </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the value of pObject to the property in pInstance. pObject needs to point to an instance of this property's type. </p>

<p>Implements <a class="el" href="../../dd/d67/classxii_abstract_member_property.htm#a474b8cb38ed1b5a33c5f17de7ee85c7b">xiiAbstractMemberProperty</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Tools/Libs/ToolsFoundation/Reflection/<a class="el" href="../../d7/d0a/_phantom_property_8h_source.htm">PhantomProperty.h</a></li>
<li>/home/runner/work/XII/XII/Source/Tools/Libs/ToolsFoundation/Reflection/Implementation/<b>PhantomProperty.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/db0/classxii_phantom_member_property.htm">xiiPhantomMemberProperty</a></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:02:16 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
