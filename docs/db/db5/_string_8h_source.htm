<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Strings/String.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/db5/_string_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">String.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Algorithm/HashingUtils.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringBase.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringConversion.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringUtils.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringView.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">template</span> &lt;xiiUInt16 Size&gt;</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="../../df/d4f/structxii_hybrid_string_base.htm">   27</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a> : <span class="keyword">public</span> <a class="code" href="../../d2/d29/structxii_string_base.htm">xiiStringBase</a>&lt;xiiHybridStringBase&lt;Size&gt;&gt;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;{</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&amp; rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&amp;&amp; rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&amp; rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a4df07698a7751857afeb872ef08053d3">~xiiHybridStringBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&amp;&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a3e3c71d8981b8bbbca81a9c55421860d">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a0b5d233da03c9c8de3a264ec2aa3a854">GetData</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  xiiUInt32 <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a8615de56509497abe4e25ff08955a025">GetElementCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  xiiUInt32 <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a086838cd056f14619fdb74147286f2bb">GetCharacterCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a6ef058523f39c1996329cd0c33974f32">GetSubString</a>(xiiUInt32 uiFirstCharacter, xiiUInt32 uiNumCharacters) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a8ff03462c0d48940f7f12af313135107">GetFirst</a>(xiiUInt32 uiNumCharacters) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#aaa093d081e97ec9e0a86a29e6fedccee">GetLast</a>(xiiUInt32 uiNumCharacters) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#afd77513023512269df5bd1a13c52a255">ReadAll</a>(<a class="code" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>&amp; ref_stream);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="../../df/d4f/structxii_hybrid_string_base.htm#a23af029cf9011b12d88278fd23e59c98">  116</a></span>&#160;  xiiUInt64 <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm#a23af029cf9011b12d88278fd23e59c98">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#ac55eab0198c86747de97680542cd75e8">GetHeapMemoryUsage</a>(); }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;char, Size&gt;</a> m_Data;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  xiiUInt32                  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;};</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword">template</span> &lt;xiiUInt16 Size, <span class="keyword">typename</span> AllocatorWrapper = xiiDefaultAllocatorWrapper&gt;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">struct </span><a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a> : <span class="keyword">public</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&lt;Size&gt;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>();</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp; other);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* rhs);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* rhs);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&amp; rhs);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, AllocatorWrapper&gt;</a>&amp;&amp; other);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp;&amp; other);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pString);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&amp; rhs);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, AllocatorWrapper&gt;</a>&amp;&amp; rhs);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp;&amp; rhs);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;};</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiDynamicString</a> = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;1&gt;</a>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiUntrackedString</a> = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;32, xiiStaticAllocatorWrapper&gt;</a>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>          = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;32&gt;</a>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString16</a>        = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;16&gt;</a>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString24</a>        = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;24&gt;</a>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString32</a>        = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;32&gt;</a>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString48</a>        = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;48&gt;</a>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString64</a>        = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;64&gt;</a>;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString128</a>       = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;128&gt;</a>;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keyword">using</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString256</a>       = <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;256&gt;</a>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;static_assert(<a class="code" href="../../d0/dc6/structxii_get_type_class.htm">xiiGetTypeClass&lt;xiiString&gt;::value</a> == xiiTypeIsClass::value);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">template</span> &lt;xiiUInt16 Size&gt;</div>
<div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="../../d0/dd6/structxii_compare_helper_3_01xii_hybrid_string_3_01_size_01_4_01_4.htm">  173</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d1/deb/structxii_compare_helper.htm">xiiCompareHelper</a>&lt;<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>&lt;Size&gt;&gt;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;{</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d1/deb/structxii_compare_helper.htm#a3da52f8ec32436df2a7158194814f1ff">Less</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">return</span> lhs.<a class="code" href="../../da/d9d/structxii_string_view.htm#ab6b5f4c7fdc35fa1aad794a36299c5f0">Compare</a>(rhs) &lt; 0;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d1/deb/structxii_compare_helper.htm#aa8ce6cbf687c027c08b87cef13675011">Equal</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">return</span> lhs.<a class="code" href="../../da/d9d/structxii_string_view.htm#a3eed1e0fcd7aa1a0af2ecab95c7870df">IsEqual</a>(rhs);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;};</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="../../d7/de6/structxii_compare_string___no_case.htm">  186</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/de6/structxii_compare_string___no_case.htm">xiiCompareString_NoCase</a></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> Less(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">return</span> lhs.<a class="code" href="../../da/d9d/structxii_string_view.htm#aa37ae842ddaf3243a98b1206b77f2e5f">Compare_NoCase</a>(rhs) &lt; 0;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> Equal(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  {</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> lhs.<a class="code" href="../../da/d9d/structxii_string_view.htm#ae727f5c345e7420c72dfcc7fc032bcd2">IsEqual_NoCase</a>(rhs);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  }</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;};</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="../../dc/d66/struct_compare_const_char.htm">  199</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../dc/d66/struct_compare_const_char.htm">CompareConstChar</a></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;{</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="../../dc/d66/struct_compare_const_char.htm#a4a27362901f48ef165b8bd4b777baa5c">  202</a></span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../dc/d66/struct_compare_const_char.htm#a4a27362901f48ef165b8bd4b777baa5c">Less</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* a, <span class="keyword">const</span> <span class="keywordtype">char</span>* b) { <span class="keywordflow">return</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#ac7f20a820fd23caf6e017547438cc44d">xiiStringUtils::Compare</a>(a, b) &lt; 0; }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="../../dc/d66/struct_compare_const_char.htm#acfb7cf7088419fd86183e0b66e9bbce1">  205</a></span>&#160;  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../dc/d66/struct_compare_const_char.htm#acfb7cf7088419fd86183e0b66e9bbce1">Equal</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* a, <span class="keyword">const</span> <span class="keywordtype">char</span>* b) { <span class="keywordflow">return</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a39bb50553ad3fbca2c342abbca08fee5">xiiStringUtils::IsEqual</a>(a, b); }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;};</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">// For xiiFormatString</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;XII_FOUNDATION_DLL <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, xiiUInt32 uiLength, <span class="keyword">const</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&amp; sArg);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;XII_FOUNDATION_DLL <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, xiiUInt32 uiLength, <span class="keyword">const</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiUntrackedString</a>&amp; sArg);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/String_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructxii_hybrid_string_base_htm_afd77513023512269df5bd1a13c52a255"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#afd77513023512269df5bd1a13c52a255">xiiHybridStringBase::ReadAll</a></div><div class="ttdeci">void ReadAll(xiiStreamReader &amp;ref_stream)</div><div class="ttdoc">Replaces the current string with the content from the stream. Reads the stream to its end.</div><div class="ttdef"><b>Definition:</b> AllStrings_inl.h:60</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a39bb50553ad3fbca2c342abbca08fee5"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a39bb50553ad3fbca2c342abbca08fee5">xiiStringUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise).</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:123</div></div>
<div class="ttc" id="astructxii_string_base_htm"><div class="ttname"><a href="../../d2/d29/structxii_string_base.htm">xiiStringBase</a></div><div class="ttdoc">Base class for strings, which implements all read-only string functions.</div><div class="ttdef"><b>Definition:</b> StringBase.h:13</div></div>
<div class="ttc" id="astructxii_hybrid_string_htm"><div class="ttname"><a href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a></div><div class="ttdef"><b>Definition:</b> Stream.h:16</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt; char, Size &gt;</a></div></div>
<div class="ttc" id="aclassxii_string_utils_htm_ac7f20a820fd23caf6e017547438cc44d"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#ac7f20a820fd23caf6e017547438cc44d">xiiStringUtils::Compare</a></div><div class="ttdeci">static xiiInt32 Compare(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares two strings for equality.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:263</div></div>
<div class="ttc" id="astructxii_string_view_htm_ab6b5f4c7fdc35fa1aad794a36299c5f0"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ab6b5f4c7fdc35fa1aad794a36299c5f0">xiiStringView::Compare</a></div><div class="ttdeci">xiiInt32 Compare(xiiStringView sOther) const</div><div class="ttdoc">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller',...</div><div class="ttdef"><b>Definition:</b> StringView.cpp:31</div></div>
<div class="ttc" id="astructxii_string_view_htm_ae727f5c345e7420c72dfcc7fc032bcd2"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ae727f5c345e7420c72dfcc7fc032bcd2">xiiStringView::IsEqual_NoCase</a></div><div class="ttdeci">bool IsEqual_NoCase(xiiStringView sOther) const</div><div class="ttdoc">Compares this string view with the other string view for equality.</div><div class="ttdef"><b>Definition:</b> StringView_inl.h:85</div></div>
<div class="ttc" id="astructxii_string_view_htm_a3eed1e0fcd7aa1a0af2ecab95c7870df"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#a3eed1e0fcd7aa1a0af2ecab95c7870df">xiiStringView::IsEqual</a></div><div class="ttdeci">bool IsEqual(xiiStringView sOther) const</div><div class="ttdoc">Compares this string view with the other string view for equality.</div><div class="ttdef"><b>Definition:</b> StringView_inl.h:80</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a8ff03462c0d48940f7f12af313135107"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a8ff03462c0d48940f7f12af313135107">xiiHybridStringBase::GetFirst</a></div><div class="ttdeci">xiiStringView GetFirst(xiiUInt32 uiNumCharacters) const</div><div class="ttdoc">Returns a view to the sub-string containing the first uiNumCharacters characters of this string.</div><div class="ttdef"><b>Definition:</b> String_inl.h:149</div></div>
<div class="ttc" id="astruct_compare_const_char_htm_a4a27362901f48ef165b8bd4b777baa5c"><div class="ttname"><a href="../../dc/d66/struct_compare_const_char.htm#a4a27362901f48ef165b8bd4b777baa5c">CompareConstChar::Less</a></div><div class="ttdeci">static XII_ALWAYS_INLINE bool Less(const char *a, const char *b)</div><div class="ttdoc">Returns true if a is less than b.</div><div class="ttdef"><b>Definition:</b> String.h:202</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a3e3c71d8981b8bbbca81a9c55421860d"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a3e3c71d8981b8bbbca81a9c55421860d">xiiHybridStringBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Resets this string to an empty string.</div><div class="ttdef"><b>Definition:</b> String_inl.h:49</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a086838cd056f14619fdb74147286f2bb"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a086838cd056f14619fdb74147286f2bb">xiiHybridStringBase::GetCharacterCount</a></div><div class="ttdeci">xiiUInt32 GetCharacterCount() const</div><div class="ttdoc">Returns the number of characters in this string.</div><div class="ttdef"><b>Definition:</b> String_inl.h:72</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_aaa093d081e97ec9e0a86a29e6fedccee"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#aaa093d081e97ec9e0a86a29e6fedccee">xiiHybridStringBase::GetLast</a></div><div class="ttdeci">xiiStringView GetLast(xiiUInt32 uiNumCharacters) const</div><div class="ttdoc">Returns a view to the sub-string containing the last uiNumCharacters characters of this string.</div><div class="ttdef"><b>Definition:</b> String_inl.h:155</div></div>
<div class="ttc" id="astructxii_get_type_class_htm"><div class="ttname"><a href="../../d0/dc6/structxii_get_type_class.htm">xiiGetTypeClass</a></div><div class="ttdoc">If there is an % operator which takes a xiiTypeIsMemRelocatable and returns a CompileTimeTrueType T i...</div><div class="ttdef"><b>Definition:</b> TypeTraits.h:63</div></div>
<div class="ttc" id="astructxii_compare_helper_htm_a3da52f8ec32436df2a7158194814f1ff"><div class="ttname"><a href="../../d1/deb/structxii_compare_helper.htm#a3da52f8ec32436df2a7158194814f1ff">xiiCompareHelper::Less</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool Less(const T &amp;a, const T &amp;b) const</div><div class="ttdoc">Returns true if a is less than b.</div><div class="ttdef"><b>Definition:</b> Comparer.h:9</div></div>
<div class="ttc" id="astructxii_string_view_htm_aa37ae842ddaf3243a98b1206b77f2e5f"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#aa37ae842ddaf3243a98b1206b77f2e5f">xiiStringView::Compare_NoCase</a></div><div class="ttdeci">xiiInt32 Compare_NoCase(xiiStringView sOther) const</div><div class="ttdoc">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller',...</div><div class="ttdef"><b>Definition:</b> StringView.cpp:41</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a8615de56509497abe4e25ff08955a025"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a8615de56509497abe4e25ff08955a025">xiiHybridStringBase::GetElementCount</a></div><div class="ttdeci">xiiUInt32 GetElementCount() const</div><div class="ttdoc">Returns the amount of bytes that this string takes (excluding the '\0' terminator).</div><div class="ttdef"><b>Definition:</b> String_inl.h:66</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_ac55eab0198c86747de97680542cd75e8"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#ac55eab0198c86747de97680542cd75e8">xiiDynamicArrayBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> DynamicArray_inl.h:234</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a82ca74a23c1efe09ca1a2f7998ad2f2f"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">xiiHybridStringBase::operator=</a></div><div class="ttdeci">void operator=(const xiiHybridStringBase &amp;rhs)</div><div class="ttdoc">Copies the data from rhs.</div><div class="ttdef"><b>Definition:</b> String_inl.h:98</div></div>
<div class="ttc" id="aclassxii_stream_reader_htm"><div class="ttname"><a href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="astruct_compare_const_char_htm_acfb7cf7088419fd86183e0b66e9bbce1"><div class="ttname"><a href="../../dc/d66/struct_compare_const_char.htm#acfb7cf7088419fd86183e0b66e9bbce1">CompareConstChar::Equal</a></div><div class="ttdeci">static XII_ALWAYS_INLINE bool Equal(const char *a, const char *b)</div><div class="ttdoc">Returns true if a is equal to b.</div><div class="ttdef"><b>Definition:</b> String.h:205</div></div>
<div class="ttc" id="astruct_compare_const_char_htm"><div class="ttname"><a href="../../dc/d66/struct_compare_const_char.htm">CompareConstChar</a></div><div class="ttdef"><b>Definition:</b> String.h:199</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a34f65955e06e31dfecec3bd3f801712a"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase::xiiHybridStringBase</a></div><div class="ttdeci">xiiHybridStringBase(xiiAllocatorBase *pAllocator)</div><div class="ttdoc">Creates an empty string.</div><div class="ttdef"><b>Definition:</b> String_inl.h:4</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:21</div></div>
<div class="ttc" id="astructxii_compare_string___no_case_htm"><div class="ttname"><a href="../../d7/de6/structxii_compare_string___no_case.htm">xiiCompareString_NoCase</a></div><div class="ttdef"><b>Definition:</b> String.h:186</div></div>
<div class="ttc" id="astructxii_compare_helper_htm"><div class="ttname"><a href="../../d1/deb/structxii_compare_helper.htm">xiiCompareHelper</a></div><div class="ttdoc">A comparer object is used in sorting algorithms to compare to objects of the same type.</div><div class="ttdef"><b>Definition:</b> Comparer.h:6</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a23af029cf9011b12d88278fd23e59c98"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a23af029cf9011b12d88278fd23e59c98">xiiHybridStringBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> String.h:116</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a></div><div class="ttdoc">A string class for storing and passing around strings.</div><div class="ttdef"><b>Definition:</b> String.h:27</div></div>
<div class="ttc" id="aclassxii_string_builder_htm"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a></div><div class="ttdoc">xiiStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="astructxii_compare_helper_htm_aa8ce6cbf687c027c08b87cef13675011"><div class="ttname"><a href="../../d1/deb/structxii_compare_helper.htm#aa8ce6cbf687c027c08b87cef13675011">xiiCompareHelper::Equal</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool Equal(const T &amp;a, const T &amp;b) const</div><div class="ttdoc">Returns true if a is equal to b.</div><div class="ttdef"><b>Definition:</b> Comparer.h:29</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a0b5d233da03c9c8de3a264ec2aa3a854"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a0b5d233da03c9c8de3a264ec2aa3a854">xiiHybridStringBase::GetData</a></div><div class="ttdeci">const char * GetData() const</div><div class="ttdoc">Returns a pointer to the internal Utf8 string.</div><div class="ttdef"><b>Definition:</b> String_inl.h:57</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a6ef058523f39c1996329cd0c33974f32"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a6ef058523f39c1996329cd0c33974f32">xiiHybridStringBase::GetSubString</a></div><div class="ttdeci">xiiStringView GetSubString(xiiUInt32 uiFirstCharacter, xiiUInt32 uiNumCharacters) const</div><div class="ttdoc">Returns a view to a sub-string of this string, starting at character uiFirstCharacter,...</div><div class="ttdef"><b>Definition:</b> String_inl.h:135</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a4df07698a7751857afeb872ef08053d3"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a4df07698a7751857afeb872ef08053d3">xiiHybridStringBase::~xiiHybridStringBase</a></div><div class="ttdeci">~xiiHybridStringBase()</div><div class="ttdoc">Destructor.</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b0d9e1007714c8956662e529025ab552.htm">Strings</a></li><li class="navelem"><b>String.h</b></li>
    <li class="footer">Generated on Wed Dec 27 2023 06:00:45 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
