<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Engine/Foundation/Strings/String.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/db5/_string_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">String.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Algorithm/HashingUtils.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringBase.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Strings/StringConversion.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;Foundation/Strings/StringUtils.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Foundation/Strings/StringView.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">class </span><a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">class </span><a class="code hl_class" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>;</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="keyword">template</span> &lt;xiiUInt16 Size&gt;</div>
<div class="foldopen" id="foldopen00027" data-start="{" data-end="};">
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="../../df/d4f/structxii_hybrid_string_base.htm">   27</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d29/structxii_string_base.htm">xiiStringBase</a>&lt;xiiHybridStringBase&lt;Size&gt;&gt;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>{</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&amp; rhs, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&amp;&amp; rhs, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* rhs, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* rhs, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&amp; rhs, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../df/d4f/structxii_hybrid_string_base.htm#a4df07698a7751857afeb872ef08053d3">   55</a></span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a4df07698a7751857afeb872ef08053d3">~xiiHybridStringBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&amp;&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span><span class="preprocessor">#if XII_ENABLED(XII_INTEROP_STL_STRINGS)</span></div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> std::string_view&amp; rhs, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a>(<span class="keyword">const</span> std::string&amp; rhs, <a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator);</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> std::string_view&amp; rhs);</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a>(<span class="keyword">const</span> std::string&amp; rhs);</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a3e3c71d8981b8bbbca81a9c55421860d">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#af918be3076cb4cb09be77b2783bc8029">GetData</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  xiiUInt32 <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a8615de56509497abe4e25ff08955a025">GetElementCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  xiiUInt32 <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a086838cd056f14619fdb74147286f2bb">GetCharacterCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a6ef058523f39c1996329cd0c33974f32">GetSubString</a>(xiiUInt32 uiFirstCharacter, xiiUInt32 uiNumCharacters) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a8ff03462c0d48940f7f12af313135107">GetFirst</a>(xiiUInt32 uiNumCharacters) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#aaa093d081e97ec9e0a86a29e6fedccee">GetLast</a>(xiiUInt32 uiNumCharacters) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#afd77513023512269df5bd1a13c52a255">ReadAll</a>(<a class="code hl_class" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>&amp; ref_stream);</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno"><a class="line" href="../../df/d4f/structxii_hybrid_string_base.htm#a23af029cf9011b12d88278fd23e59c98">  134</a></span>  xiiUInt64 <a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a23af029cf9011b12d88278fd23e59c98">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Data.<a class="code hl_function" href="../../d2/dea/classxii_dynamic_array_base.htm#ac55eab0198c86747de97680542cd75e8">GetHeapMemoryUsage</a>(); }</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>;</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  <a class="code hl_class" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;char, Size&gt;</a> m_Data;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>};</div>
</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span><span class="keyword">template</span> &lt;xiiUInt16 Size, <span class="keyword">typename</span> AllocatorWrapper = xiiDefaultAllocatorWrapper&gt;</div>
<div class="foldopen" id="foldopen00145" data-start="{" data-end="};">
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="../../df/dfb/structxii_hybrid_string.htm">  145</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&lt;Size&gt;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>{</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>();</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<a class="code hl_class" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp; other);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* rhs);</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* rhs);</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&amp; rhs);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs);</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, AllocatorWrapper&gt;</a>&amp;&amp; other);</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp;&amp; other);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString);</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pString);</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&amp; rhs);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, AllocatorWrapper&gt;</a>&amp;&amp; rhs);</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_struct" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp;&amp; rhs);</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="preprocessor">#if XII_ENABLED(XII_INTEROP_STL_STRINGS)</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> std::string_view&amp; rhs);</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>(<span class="keyword">const</span> std::string&amp; rhs);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> std::string_view&amp; rhs);</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> std::string&amp; rhs);</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>};</div>
</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span><span class="keyword">using </span><a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiUntrackedString</a> = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;32U, xiiStaticAllocatorWrapper&gt;</a>;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span><span class="keyword">using </span><a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiDynamicString</a> = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;1U&gt;</a>;</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span><span class="keyword">using </span><a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>        = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;32U&gt;</a>;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span><span class="keyword">using </span><a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiString16</a>      = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;16U&gt;</a>;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span><span class="keyword">using </span><a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiString24</a>      = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;24U&gt;</a>;</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span><span class="keyword">using </span><a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString32</a>      = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;32U&gt;</a>;</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span><span class="keyword">using </span><a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiString48</a>      = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;48U&gt;</a>;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span><span class="keyword">using </span><a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiString64</a>      = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;64U&gt;</a>;</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span><span class="keyword">using </span><a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString128</a>     = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;128U&gt;</a>;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span><span class="keyword">using </span><a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiString256</a>     = <a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;256U&gt;</a>;</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span><span class="keyword">static_assert</span>(<a class="code hl_struct" href="../../d0/dc6/structxii_get_type_class.htm">xiiGetTypeClass&lt;xiiString&gt;::value</a> == xiiTypeIsClass::value);</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span><span class="keyword">template</span> &lt;xiiUInt16 Size&gt;</div>
<div class="foldopen" id="foldopen00195" data-start="{" data-end="};">
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno"><a class="line" href="../../d0/dd6/structxii_compare_helper_3_01xii_hybrid_string_3_01_size_01_4_01_4.htm">  195</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d1/deb/structxii_compare_helper.htm">xiiCompareHelper</a>&lt;<a class="code hl_struct" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>&lt;Size&gt;&gt;</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>{</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/deb/structxii_compare_helper.htm#a3da52f8ec32436df2a7158194814f1ff">Less</a>(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  {</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    <span class="keywordflow">return</span> lhs.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ab6b5f4c7fdc35fa1aad794a36299c5f0">Compare</a>(rhs) &lt; 0;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  }</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> Equal(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  {</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>    <span class="keywordflow">return</span> lhs.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3eed1e0fcd7aa1a0af2ecab95c7870df">IsEqual</a>(rhs);</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  }</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>};</div>
</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span> </div>
<div class="foldopen" id="foldopen00208" data-start="{" data-end="};">
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno"><a class="line" href="../../d7/de6/structxii_compare_string___no_case.htm">  208</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d7/de6/structxii_compare_string___no_case.htm">xiiCompareString_NoCase</a></div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>{</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> Less(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>  {</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    <span class="keywordflow">return</span> lhs.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#aa37ae842ddaf3243a98b1206b77f2e5f">Compare_NoCase</a>(rhs) &lt; 0;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  }</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> Equal(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  {</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    <span class="keywordflow">return</span> lhs.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ae727f5c345e7420c72dfcc7fc032bcd2">IsEqual_NoCase</a>(rhs);</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>  }</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>};</div>
</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="foldopen" id="foldopen00221" data-start="{" data-end="};">
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno"><a class="line" href="../../dc/d66/struct_compare_const_char.htm">  221</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d66/struct_compare_const_char.htm">CompareConstChar</a></div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>{</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno"><a class="line" href="../../dc/d66/struct_compare_const_char.htm#a4a27362901f48ef165b8bd4b777baa5c">  224</a></span>  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d66/struct_compare_const_char.htm#a4a27362901f48ef165b8bd4b777baa5c">Less</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* a, <span class="keyword">const</span> <span class="keywordtype">char</span>* b) { <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#ac7f20a820fd23caf6e017547438cc44d">xiiStringUtils::Compare</a>(a, b) &lt; 0; }</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno"><a class="line" href="../../dc/d66/struct_compare_const_char.htm#acfb7cf7088419fd86183e0b66e9bbce1">  227</a></span>  <span class="keyword">static</span> XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d66/struct_compare_const_char.htm#acfb7cf7088419fd86183e0b66e9bbce1">Equal</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* a, <span class="keyword">const</span> <span class="keywordtype">char</span>* b) { <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#a39bb50553ad3fbca2c342abbca08fee5">xiiStringUtils::IsEqual</a>(a, b); }</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>};</div>
</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span><span class="comment">// For xiiFormatString</span></div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>XII_FOUNDATION_DLL <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, xiiUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&amp; sArg);</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>XII_FOUNDATION_DLL <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, xiiUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiUntrackedString</a>&amp; sArg);</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span><span class="preprocessor">#include &lt;Foundation/Strings/Implementation/String_inl.h&gt;</span></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_ac55eab0198c86747de97680542cd75e8"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#ac55eab0198c86747de97680542cd75e8">xiiDynamicArrayBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition</b> DynamicArray_inl.h:233</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition</b> HybridArray.h:12</div></div>
<div class="ttc" id="aclassxii_stream_reader_htm"><div class="ttname"><a href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclassxii_string_builder_htm"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a></div><div class="ttdoc">xiiStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a39bb50553ad3fbca2c342abbca08fee5"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a39bb50553ad3fbca2c342abbca08fee5">xiiStringUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise).</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:124</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_ac7f20a820fd23caf6e017547438cc44d"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#ac7f20a820fd23caf6e017547438cc44d">xiiStringUtils::Compare</a></div><div class="ttdeci">static xiiInt32 Compare(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares two strings for equality.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:218</div></div>
<div class="ttc" id="astruct_compare_const_char_htm"><div class="ttname"><a href="../../dc/d66/struct_compare_const_char.htm">CompareConstChar</a></div><div class="ttdef"><b>Definition</b> String.h:222</div></div>
<div class="ttc" id="astruct_compare_const_char_htm_a4a27362901f48ef165b8bd4b777baa5c"><div class="ttname"><a href="../../dc/d66/struct_compare_const_char.htm#a4a27362901f48ef165b8bd4b777baa5c">CompareConstChar::Less</a></div><div class="ttdeci">static XII_ALWAYS_INLINE bool Less(const char *a, const char *b)</div><div class="ttdoc">Returns true if a is less than b.</div><div class="ttdef"><b>Definition</b> String.h:224</div></div>
<div class="ttc" id="astruct_compare_const_char_htm_acfb7cf7088419fd86183e0b66e9bbce1"><div class="ttname"><a href="../../dc/d66/struct_compare_const_char.htm#acfb7cf7088419fd86183e0b66e9bbce1">CompareConstChar::Equal</a></div><div class="ttdeci">static XII_ALWAYS_INLINE bool Equal(const char *a, const char *b)</div><div class="ttdoc">Returns true if a is equal to b.</div><div class="ttdef"><b>Definition</b> String.h:227</div></div>
<div class="ttc" id="astructxii_compare_helper_htm"><div class="ttname"><a href="../../d1/deb/structxii_compare_helper.htm">xiiCompareHelper</a></div><div class="ttdoc">A comparer object is used in sorting algorithms to compare to objects of the same type.</div><div class="ttdef"><b>Definition</b> Comparer.h:7</div></div>
<div class="ttc" id="astructxii_compare_helper_htm_a3da52f8ec32436df2a7158194814f1ff"><div class="ttname"><a href="../../d1/deb/structxii_compare_helper.htm#a3da52f8ec32436df2a7158194814f1ff">xiiCompareHelper::Less</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool Less(const T &amp;a, const T &amp;b) const</div><div class="ttdoc">Returns true if a is less than b.</div><div class="ttdef"><b>Definition</b> Comparer.h:9</div></div>
<div class="ttc" id="astructxii_compare_string___no_case_htm"><div class="ttname"><a href="../../d7/de6/structxii_compare_string___no_case.htm">xiiCompareString_NoCase</a></div><div class="ttdef"><b>Definition</b> String.h:209</div></div>
<div class="ttc" id="astructxii_get_type_class_htm"><div class="ttname"><a href="../../d0/dc6/structxii_get_type_class.htm">xiiGetTypeClass</a></div><div class="ttdoc">If there is an % operator which takes a xiiTypeIsMemRelocatable and returns a CompileTimeTrueType T i...</div><div class="ttdef"><b>Definition</b> TypeTraits.h:64</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a></div><div class="ttdoc">A string class for storing and passing around strings.</div><div class="ttdef"><b>Definition</b> String.h:28</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a086838cd056f14619fdb74147286f2bb"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a086838cd056f14619fdb74147286f2bb">xiiHybridStringBase::GetCharacterCount</a></div><div class="ttdeci">xiiUInt32 GetCharacterCount() const</div><div class="ttdoc">Returns the number of characters in this string. Might be less than GetElementCount,...</div><div class="ttdef"><b>Definition</b> String_inl.h:71</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a23af029cf9011b12d88278fd23e59c98"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a23af029cf9011b12d88278fd23e59c98">xiiHybridStringBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition</b> String.h:134</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a34f65955e06e31dfecec3bd3f801712a"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase::xiiHybridStringBase</a></div><div class="ttdeci">xiiHybridStringBase(xiiAllocatorBase *pAllocator)</div><div class="ttdoc">Creates an empty string.</div><div class="ttdef"><b>Definition</b> String_inl.h:4</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a3e3c71d8981b8bbbca81a9c55421860d"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a3e3c71d8981b8bbbca81a9c55421860d">xiiHybridStringBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Resets this string to an empty string.</div><div class="ttdef"><b>Definition</b> String_inl.h:49</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a4df07698a7751857afeb872ef08053d3"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a4df07698a7751857afeb872ef08053d3">xiiHybridStringBase::~xiiHybridStringBase</a></div><div class="ttdeci">~xiiHybridStringBase()</div><div class="ttdoc">Destructor.</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a6ef058523f39c1996329cd0c33974f32"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a6ef058523f39c1996329cd0c33974f32">xiiHybridStringBase::GetSubString</a></div><div class="ttdeci">xiiStringView GetSubString(xiiUInt32 uiFirstCharacter, xiiUInt32 uiNumCharacters) const</div><div class="ttdoc">Returns a view to a sub-string of this string, starting at character uiFirstCharacter,...</div><div class="ttdef"><b>Definition</b> String_inl.h:130</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a82ca74a23c1efe09ca1a2f7998ad2f2f"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">xiiHybridStringBase::operator=</a></div><div class="ttdeci">void operator=(const xiiHybridStringBase &amp;rhs)</div><div class="ttdoc">Copies the data from rhs.</div><div class="ttdef"><b>Definition</b> String_inl.h:96</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a8615de56509497abe4e25ff08955a025"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a8615de56509497abe4e25ff08955a025">xiiHybridStringBase::GetElementCount</a></div><div class="ttdeci">xiiUInt32 GetElementCount() const</div><div class="ttdoc">Returns the amount of bytes that this string takes (excluding the '\0' terminator).</div><div class="ttdef"><b>Definition</b> String_inl.h:65</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a8ff03462c0d48940f7f12af313135107"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a8ff03462c0d48940f7f12af313135107">xiiHybridStringBase::GetFirst</a></div><div class="ttdeci">xiiStringView GetFirst(xiiUInt32 uiNumCharacters) const</div><div class="ttdoc">Returns a view to the sub-string containing the first uiNumCharacters characters of this string.</div><div class="ttdef"><b>Definition</b> String_inl.h:143</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_aaa093d081e97ec9e0a86a29e6fedccee"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#aaa093d081e97ec9e0a86a29e6fedccee">xiiHybridStringBase::GetLast</a></div><div class="ttdeci">xiiStringView GetLast(xiiUInt32 uiNumCharacters) const</div><div class="ttdoc">Returns a view to the sub-string containing the last uiNumCharacters characters of this string.</div><div class="ttdef"><b>Definition</b> String_inl.h:149</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_af918be3076cb4cb09be77b2783bc8029"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#af918be3076cb4cb09be77b2783bc8029">xiiHybridStringBase::GetData</a></div><div class="ttdeci">const char * GetData() const</div><div class="ttdoc">Returns a pointer to the internal Utf8 string.</div><div class="ttdef"><b>Definition</b> String_inl.h:56</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_afd77513023512269df5bd1a13c52a255"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#afd77513023512269df5bd1a13c52a255">xiiHybridStringBase::ReadAll</a></div><div class="ttdeci">void ReadAll(xiiStreamReader &amp;ref_stream)</div><div class="ttdoc">Replaces the current string with the content from the stream. Reads the stream to its end.</div><div class="ttdef"><b>Definition</b> AllStrings_inl.h:58</div></div>
<div class="ttc" id="astructxii_hybrid_string_htm"><div class="ttname"><a href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a></div><div class="ttdef"><b>Definition</b> String.h:146</div></div>
<div class="ttc" id="astructxii_string_base_htm"><div class="ttname"><a href="../../d2/d29/structxii_string_base.htm">xiiStringBase</a></div><div class="ttdoc">Base class for strings, which implements all read-only string functions.</div><div class="ttdef"><b>Definition</b> StringBase.h:14</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition</b> StringView.h:28</div></div>
<div class="ttc" id="astructxii_string_view_htm_a3eed1e0fcd7aa1a0af2ecab95c7870df"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#a3eed1e0fcd7aa1a0af2ecab95c7870df">xiiStringView::IsEqual</a></div><div class="ttdeci">bool IsEqual(xiiStringView sOther) const</div><div class="ttdoc">Compares this string view with the other string view for equality.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:86</div></div>
<div class="ttc" id="astructxii_string_view_htm_aa37ae842ddaf3243a98b1206b77f2e5f"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#aa37ae842ddaf3243a98b1206b77f2e5f">xiiStringView::Compare_NoCase</a></div><div class="ttdeci">xiiInt32 Compare_NoCase(xiiStringView sOther) const</div><div class="ttdoc">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller',...</div><div class="ttdef"><b>Definition</b> StringView.cpp:41</div></div>
<div class="ttc" id="astructxii_string_view_htm_ab6b5f4c7fdc35fa1aad794a36299c5f0"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ab6b5f4c7fdc35fa1aad794a36299c5f0">xiiStringView::Compare</a></div><div class="ttdeci">xiiInt32 Compare(xiiStringView sOther) const</div><div class="ttdoc">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller',...</div><div class="ttdef"><b>Definition</b> StringView.cpp:31</div></div>
<div class="ttc" id="astructxii_string_view_htm_ae727f5c345e7420c72dfcc7fc032bcd2"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ae727f5c345e7420c72dfcc7fc032bcd2">xiiStringView::IsEqual_NoCase</a></div><div class="ttdeci">bool IsEqual_NoCase(xiiStringView sOther) const</div><div class="ttdoc">Compares this string view with the other string view for equality.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:91</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b0d9e1007714c8956662e529025ab552.htm">Strings</a></li><li class="navelem"><b>String.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:02:12 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
