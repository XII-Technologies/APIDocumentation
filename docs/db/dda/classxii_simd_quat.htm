<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiSimdQuat Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/dda/classxii_simd_quat.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d0/d83/classxii_simd_quat-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiSimdQuat Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aedb542db7e39813994a0a5cd0fa136da"><td class="memItemLeft" align="right" valign="top"><a id="aedb542db7e39813994a0a5cd0fa136da"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:aedb542db7e39813994a0a5cd0fa136da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6ae71ec1c176b24314a5337a9d3e8b2"><td class="memItemLeft" align="right" valign="top"><a id="ac6ae71ec1c176b24314a5337a9d3e8b2"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiSimdQuat</b> (const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;v)</td></tr>
<tr class="separator:ac6ae71ec1c176b24314a5337a9d3e8b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d404f2facdc453321c87e2efba10869"><td class="memItemLeft" align="right" valign="top"><a id="a7d404f2facdc453321c87e2efba10869"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a7d404f2facdc453321c87e2efba10869">SetIdentity</a> ()</td></tr>
<tr class="memdesc:a7d404f2facdc453321c87e2efba10869"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the Quaternion to the identity. <br /></td></tr>
<tr class="separator:a7d404f2facdc453321c87e2efba10869"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11a661fb093719009dd32b13265dd434"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a11a661fb093719009dd32b13265dd434">SetFromAxisAndAngle</a> (const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;vRotationAxis, const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;angle)</td></tr>
<tr class="memdesc:a11a661fb093719009dd32b13265dd434"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a quaternion from a rotation-axis and an angle (angle is given in Radians or as an xiiAngle)  <a href="../../db/dda/classxii_simd_quat.htm#a11a661fb093719009dd32b13265dd434">More...</a><br /></td></tr>
<tr class="separator:a11a661fb093719009dd32b13265dd434"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56e2c8227e8fce2c4d5669add072fcd4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a56e2c8227e8fce2c4d5669add072fcd4">SetShortestRotation</a> (const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;vDirFrom, const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;vDirTo)</td></tr>
<tr class="memdesc:a56e2c8227e8fce2c4d5669add072fcd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a quaternion, that rotates through the shortest arc from "vDirFrom" to "vDirTo".  <a href="../../db/dda/classxii_simd_quat.htm#a56e2c8227e8fce2c4d5669add072fcd4">More...</a><br /></td></tr>
<tr class="separator:a56e2c8227e8fce2c4d5669add072fcd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeddb58cf915f84945b3081c7a7b01123"><td class="memItemLeft" align="right" valign="top"><a id="aeddb58cf915f84945b3081c7a7b01123"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#aeddb58cf915f84945b3081c7a7b01123">SetSlerp</a> (const <a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a> &amp;qFrom, const <a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a> &amp;qTo, const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;t)</td></tr>
<tr class="memdesc:aeddb58cf915f84945b3081c7a7b01123"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets this quaternion to be the spherical linear interpolation of the other two. <br /></td></tr>
<tr class="separator:aeddb58cf915f84945b3081c7a7b01123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a541efb5807f3d79c8c7ff5ec756a5314"><td class="memItemLeft" align="right" valign="top"><a id="a541efb5807f3d79c8c7ff5ec756a5314"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a541efb5807f3d79c8c7ff5ec756a5314">Normalize</a> ()</td></tr>
<tr class="memdesc:a541efb5807f3d79c8c7ff5ec756a5314"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes the quaternion to unit length. ALL rotation-quaternions should be normalized at all times (automatically). <br /></td></tr>
<tr class="separator:a541efb5807f3d79c8c7ff5ec756a5314"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c6c37d8c942e2d9a8c96244997b8ca0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a8c6c37d8c942e2d9a8c96244997b8ca0">GetRotationAxisAndAngle</a> (<a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;vAxis, <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;angle, const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;fEpsilon=xiiMath::DefaultEpsilon&lt; float &gt;()) const</td></tr>
<tr class="memdesc:a8c6c37d8c942e2d9a8c96244997b8ca0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the rotation-axis and angle (in Radians), that this quaternion rotates around.  <a href="../../db/dda/classxii_simd_quat.htm#a8c6c37d8c942e2d9a8c96244997b8ca0">More...</a><br /></td></tr>
<tr class="separator:a8c6c37d8c942e2d9a8c96244997b8ca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ea87662d83ed3ae4ec5bfc732d1391d"><td class="memItemLeft" align="right" valign="top"><a id="a0ea87662d83ed3ae4ec5bfc732d1391d"></a>
<a class="el" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a0ea87662d83ed3ae4ec5bfc732d1391d">GetAsMat4</a> () const</td></tr>
<tr class="memdesc:a0ea87662d83ed3ae4ec5bfc732d1391d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the Quaternion as a matrix. <br /></td></tr>
<tr class="separator:a0ea87662d83ed3ae4ec5bfc732d1391d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d78dc95b50323d1bc196a5a550c1c09"><td class="memItemLeft" align="right" valign="top"><a id="a9d78dc95b50323d1bc196a5a550c1c09"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a9d78dc95b50323d1bc196a5a550c1c09">IsValid</a> (const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;fEpsilon=xiiMath::DefaultEpsilon&lt; float &gt;()) const</td></tr>
<tr class="memdesc:a9d78dc95b50323d1bc196a5a550c1c09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all components are neither NaN nor infinite and that the quaternion is normalized. <br /></td></tr>
<tr class="separator:a9d78dc95b50323d1bc196a5a550c1c09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87ed023ea832fdadd8f78f49b4c231fe"><td class="memItemLeft" align="right" valign="top"><a id="a87ed023ea832fdadd8f78f49b4c231fe"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a87ed023ea832fdadd8f78f49b4c231fe">IsNaN</a> () const</td></tr>
<tr class="memdesc:a87ed023ea832fdadd8f78f49b4c231fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether any component is NaN. <br /></td></tr>
<tr class="separator:a87ed023ea832fdadd8f78f49b4c231fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31b655bab69cff6ac12286038391f4bb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a31b655bab69cff6ac12286038391f4bb">IsEqualRotation</a> (const <a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a> &amp;qOther, const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;fEpsilon) const</td></tr>
<tr class="memdesc:a31b655bab69cff6ac12286038391f4bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines whether <em>this</em> and <em>qOther</em> represent the same rotation. This is a rather slow operation.  <a href="../../db/dda/classxii_simd_quat.htm#a31b655bab69cff6ac12286038391f4bb">More...</a><br /></td></tr>
<tr class="separator:a31b655bab69cff6ac12286038391f4bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a814a871cd81c59817b578212f20492f5"><td class="memItemLeft" align="right" valign="top"><a id="a814a871cd81c59817b578212f20492f5"></a>
<a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a814a871cd81c59817b578212f20492f5">operator-</a> () const</td></tr>
<tr class="memdesc:a814a871cd81c59817b578212f20492f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a Quaternion that represents the negative / inverted rotation. <br /></td></tr>
<tr class="separator:a814a871cd81c59817b578212f20492f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc2fdaa456eb71a25dd71e1743aa5363"><td class="memItemLeft" align="right" valign="top"><a id="acc2fdaa456eb71a25dd71e1743aa5363"></a>
<a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#acc2fdaa456eb71a25dd71e1743aa5363">operator*</a> (const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;v) const</td></tr>
<tr class="memdesc:acc2fdaa456eb71a25dd71e1743aa5363"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotates v by q. <br /></td></tr>
<tr class="separator:acc2fdaa456eb71a25dd71e1743aa5363"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7291bc7f1374ec99cb845cf7e4b14d56"><td class="memItemLeft" align="right" valign="top"><a id="a7291bc7f1374ec99cb845cf7e4b14d56"></a>
<a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a7291bc7f1374ec99cb845cf7e4b14d56">operator*</a> (const <a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a> &amp;q2) const</td></tr>
<tr class="memdesc:a7291bc7f1374ec99cb845cf7e4b14d56"><td class="mdescLeft">&#160;</td><td class="mdescRight">Concatenates the rotations of q1 and q2. <br /></td></tr>
<tr class="separator:a7291bc7f1374ec99cb845cf7e4b14d56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98e328655ea5d32cfa364dd3438b1b04"><td class="memItemLeft" align="right" valign="top"><a id="a98e328655ea5d32cfa364dd3438b1b04"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a> &amp;q2) const</td></tr>
<tr class="separator:a98e328655ea5d32cfa364dd3438b1b04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a0f8709e75e945abe94178fd0d263b1"><td class="memItemLeft" align="right" valign="top"><a id="a7a0f8709e75e945abe94178fd0d263b1"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a> &amp;q2) const</td></tr>
<tr class="separator:a7a0f8709e75e945abe94178fd0d263b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a310ac43d3304864b08a9b81fdd805cae"><td class="memItemLeft" align="right" valign="top"><a id="a310ac43d3304864b08a9b81fdd805cae"></a>
static <a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/dda/classxii_simd_quat.htm#a310ac43d3304864b08a9b81fdd805cae">IdentityQuaternion</a> ()</td></tr>
<tr class="memdesc:a310ac43d3304864b08a9b81fdd805cae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function that returns a quaternion that represents the identity rotation (none). <br /></td></tr>
<tr class="separator:a310ac43d3304864b08a9b81fdd805cae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aadec02e1f747089a6928ac338ca5675c"><td class="memItemLeft" align="right" valign="top"><a id="aadec02e1f747089a6928ac338ca5675c"></a>
<a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_v</b></td></tr>
<tr class="separator:aadec02e1f747089a6928ac338ca5675c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a8c6c37d8c942e2d9a8c96244997b8ca0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c6c37d8c942e2d9a8c96244997b8ca0">&#9670;&nbsp;</a></span>GetRotationAxisAndAngle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiSimdQuat::GetRotationAxisAndAngle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;&#160;</td>
          <td class="paramname"><em>vAxis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;&#160;</td>
          <td class="paramname"><em>angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;&#160;</td>
          <td class="paramname"><em>fEpsilon</em> = <code>xiiMath::DefaultEpsilon&lt;float&gt;()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the rotation-axis and angle (in Radians), that this quaternion rotates around. </p>
<dl class="todo"><dt><b><a class="el" href="../../dd/da0/todo.htm#_todo000059">Todo:</a></b></dt><dd>optimize </dd></dl>

</div>
</div>
<a id="a31b655bab69cff6ac12286038391f4bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31b655bab69cff6ac12286038391f4bb">&#9670;&nbsp;</a></span>IsEqualRotation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiSimdQuat::IsEqualRotation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a> &amp;&#160;</td>
          <td class="paramname"><em>qOther</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;&#160;</td>
          <td class="paramname"><em>fEpsilon</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determines whether <em>this</em> and <em>qOther</em> represent the same rotation. This is a rather slow operation. </p>
<p>Currently it fails when one of the given quaternions is identity (so no rotation, at all), as it tries to compare rotation axis' and angles, which is undefined for the identity quaternion (also there are infinite representations for 'identity', so it's difficult to check for it). </p>

</div>
</div>
<a id="a11a661fb093719009dd32b13265dd434"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11a661fb093719009dd32b13265dd434">&#9670;&nbsp;</a></span>SetFromAxisAndAngle()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE void xiiSimdQuat::SetFromAxisAndAngle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;&#160;</td>
          <td class="paramname"><em>vRotationAxis</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;&#160;</td>
          <td class="paramname"><em>angle</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a quaternion from a rotation-axis and an angle (angle is given in Radians or as an xiiAngle) </p>
<dl class="todo"><dt><b><a class="el" href="../../dd/da0/todo.htm#_todo000058">Todo:</a></b></dt><dd>optimize </dd></dl>

</div>
</div>
<a id="a56e2c8227e8fce2c4d5669add072fcd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a56e2c8227e8fce2c4d5669add072fcd4">&#9670;&nbsp;</a></span>SetShortestRotation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void xiiSimdQuat::SetShortestRotation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;&#160;</td>
          <td class="paramname"><em>vDirFrom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> &amp;&#160;</td>
          <td class="paramname"><em>vDirTo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a quaternion, that rotates through the shortest arc from "vDirFrom" to "vDirTo". </p>
<dl class="todo"><dt><b><a class="el" href="../../dd/da0/todo.htm#_todo000057">Todo:</a></b></dt><dd>optimize these methods if needed </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/SimdMath/<a class="el" href="../../d6/d77/_simd_quat_8h_source.htm">SimdQuat.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/SimdMath/Implementation/SimdQuat.cpp</li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/SimdMath/Implementation/<a class="el" href="../../d0/dd6/_simd_quat__inl_8h_source.htm">SimdQuat_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/dda/classxii_simd_quat.htm">xiiSimdQuat</a></li>
    <li class="footer">Generated on Mon Apr 17 2023 20:10:42 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
