<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Memory/Policies/StackAllocation.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d98/_stack_allocation_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StackAllocation.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">namespace </span>xiiMemoryPolicies</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../d1/d53/classxii_memory_policies_1_1xii_stack_allocation.htm">   13</a></span>&#160;  <span class="keyword">class </span><a class="code" href="../../d1/d53/classxii_memory_policies_1_1xii_stack_allocation.htm">xiiStackAllocation</a></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  {</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keyword">enum</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    {</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      Alignment = 16</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    };</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    XII_FORCE_INLINE <a class="code" href="../../d1/d53/classxii_memory_policies_1_1xii_stack_allocation.htm">xiiStackAllocation</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pParent) :</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;      m_pParent(pParent), m_uiNextBucketSize(4096)</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    }</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    XII_FORCE_INLINE ~<a class="code" href="../../d1/d53/classxii_memory_policies_1_1xii_stack_allocation.htm">xiiStackAllocation</a>()</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      XII_ASSERT_DEV(m_uiCurrentBucketIndex == 0 &amp;&amp; (m_Buckets.<a class="code" href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">IsEmpty</a>() || m_Buckets[m_uiCurrentBucketIndex].GetPtr() == m_pNextAllocation), <span class="stringliteral">&quot;There is still something allocated!&quot;</span>);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; bucket : m_Buckets)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        m_pParent-&gt;Deallocate(bucket.GetPtr());</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      }</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    }</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    XII_FORCE_INLINE <span class="keywordtype">void</span>* Allocate(<span class="keywordtype">size_t</span> uiSize, <span class="keywordtype">size_t</span> uiAlign)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      XII_ASSERT_DEV(uiAlign &lt;= Alignment &amp;&amp; Alignment % uiAlign == 0, <span class="stringliteral">&quot;Unsupported alignment {0}&quot;</span>, ((xiiUInt32)uiAlign));</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      uiSize = <a class="code" href="../../d8/d9d/classxii_memory_utils.htm#a49b9826f878346f165be1d4b0f85a819">xiiMemoryUtils::AlignSize</a>(uiSize, (<span class="keywordtype">size_t</span>)Alignment);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      <span class="keywordtype">bool</span> bFoundBucket = !m_Buckets.<a class="code" href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">IsEmpty</a>() &amp;&amp; m_pNextAllocation + uiSize &lt;= m_Buckets[m_uiCurrentBucketIndex].GetEndPtr();</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordflow">if</span> (!bFoundBucket)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="comment">// Check if there is an empty bucket that fits the allocation</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">for</span> (xiiUInt32 i = m_uiCurrentBucketIndex + 1; i &lt; m_Buckets.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>(); ++i)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;          <span class="keyword">auto</span>&amp; testBucket = m_Buckets[i];</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;          <span class="keywordflow">if</span> (uiSize &lt;= testBucket.GetCount())</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;          {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            m_uiCurrentBucketIndex = i;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            m_pNextAllocation      = testBucket.GetPtr();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            bFoundBucket           = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;          }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordflow">if</span> (!bFoundBucket)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      {</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keywordflow">while</span> (uiSize &gt; m_uiNextBucketSize)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;          XII_ASSERT_DEBUG(m_uiNextBucketSize &gt; 0, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;          m_uiNextBucketSize *= 2;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        m_uiCurrentBucketIndex = m_Buckets.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keyword">auto</span> newBucket = <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;xiiUInt8&gt;</a>(<span class="keyword">static_cast&lt;</span>xiiUInt8*<span class="keyword">&gt;</span>(m_pParent-&gt;<a class="code" href="../../d5/d66/classxii_allocator_base.htm#aa6d955a078790ddbd0f26d1a39ea220f">Allocate</a>(m_uiNextBucketSize, Alignment)), m_uiNextBucketSize);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        m_Buckets.<a class="code" href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">PushBack</a>(newBucket);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        m_pNextAllocation = newBucket.GetPtr();</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        m_uiNextBucketSize *= 2;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      XII_ASSERT_DEBUG(m_pNextAllocation + uiSize &lt;= m_Buckets[m_uiCurrentBucketIndex].GetEndPtr(), <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      xiiUInt8* ptr = m_pNextAllocation;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      m_pNextAllocation += uiSize;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="keywordflow">return</span> ptr;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    XII_FORCE_INLINE <span class="keywordtype">void</span> Deallocate(<span class="keywordtype">void</span>* pPtr)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      <span class="comment">// Individual deallocation is not supported by this allocator</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    XII_FORCE_INLINE <span class="keywordtype">void</span> Reset()</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      m_uiCurrentBucketIndex = 0;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;      m_pNextAllocation      = !m_Buckets.<a class="code" href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">IsEmpty</a>() ? m_Buckets[0].GetPtr() : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    XII_FORCE_INLINE <span class="keywordtype">void</span> FillStats(<a class="code" href="../../d1/d87/structxii_allocator_base_1_1_stats.htm">xiiAllocatorBase::Stats</a>&amp; ref_stats)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      ref_stats.<a class="code" href="../../d1/d87/structxii_allocator_base_1_1_stats.htm#a0a9aef620c455faa28c5cb83398f7f28">m_uiNumAllocations</a> = m_Buckets.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>();</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; bucket : m_Buckets)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        ref_stats.<a class="code" href="../../d1/d87/structxii_allocator_base_1_1_stats.htm#ac59721d124724ba3da87180b407e6e20">m_uiAllocationSize</a> += bucket.GetCount();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    XII_ALWAYS_INLINE <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* GetParent()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pParent; }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* m_pParent = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    xiiUInt32 m_uiCurrentBucketIndex = 0;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    xiiUInt32 m_uiNextBucketSize     = 0;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    xiiUInt8* m_pNextAllocation = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;xiiArrayPtr&lt;xiiUInt8&gt;</a>, 4&gt; m_Buckets;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  };</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;} <span class="comment">// namespace xiiMemoryPolicies</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_array_base_htm_a8b86f58a2097871da0e0b91eecc823e4"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">xiiArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:325</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a7609a39613cdc57b56d12537b3ba4d48"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">xiiArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:170</div></div>
<div class="ttc" id="astructxii_allocator_base_1_1_stats_htm_a0a9aef620c455faa28c5cb83398f7f28"><div class="ttname"><a href="../../d1/d87/structxii_allocator_base_1_1_stats.htm#a0a9aef620c455faa28c5cb83398f7f28">xiiAllocatorBase::Stats::m_uiNumAllocations</a></div><div class="ttdeci">xiiUInt64 m_uiNumAllocations</div><div class="ttdoc">total number of allocations</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:28</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt; xiiUInt8 &gt;</a></div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition:</b> HybridArray.h:11</div></div>
<div class="ttc" id="aclassxii_memory_policies_1_1xii_stack_allocation_htm"><div class="ttname"><a href="../../d1/d53/classxii_memory_policies_1_1xii_stack_allocation.htm">xiiMemoryPolicies::xiiStackAllocation</a></div><div class="ttdoc">This allocation policy works like a stack. You can only &quot;push&quot; and &quot;pop&quot; allocations in the correct o...</div><div class="ttdef"><b>Definition:</b> StackAllocation.h:13</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm_aa6d955a078790ddbd0f26d1a39ea220f"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm#aa6d955a078790ddbd0f26d1a39ea220f">xiiAllocatorBase::Allocate</a></div><div class="ttdeci">virtual void * Allocate(size_t uiSize, size_t uiAlign, xiiMemoryUtils::DestructorFunction destructorFunc=nullptr)=0</div><div class="ttdoc">Interface, do not use this directly, always use the new/delete macros below.</div></div>
<div class="ttc" id="astructxii_allocator_base_1_1_stats_htm_ac59721d124724ba3da87180b407e6e20"><div class="ttname"><a href="../../d1/d87/structxii_allocator_base_1_1_stats.htm#ac59721d124724ba3da87180b407e6e20">xiiAllocatorBase::Stats::m_uiAllocationSize</a></div><div class="ttdeci">xiiUInt64 m_uiAllocationSize</div><div class="ttdoc">total allocation size in bytes</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:30</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a43100f93e19bb795ea0980dae2b28e0b"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">xiiArrayBase::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:164</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a49b9826f878346f165be1d4b0f85a819"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a49b9826f878346f165be1d4b0f85a819">xiiMemoryUtils::AlignSize</a></div><div class="ttdeci">static T AlignSize(T uiSize, T uiAlignment)</div><div class="ttdoc">Aligns the given size uiSize by rounding up to the next multiple of the size.</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:21</div></div>
<div class="ttc" id="astructxii_allocator_base_1_1_stats_htm"><div class="ttname"><a href="../../d1/d87/structxii_allocator_base_1_1_stats.htm">xiiAllocatorBase::Stats</a></div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:24</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_f4c376a517d02920cdbc41b4ea2fc5f5.htm">Memory</a></li><li class="navelem"><a class="el" href="../../dir_2a5e9a7a2f5f78531e2c7d0b6f1ae434.htm">Policies</a></li><li class="navelem"><b>StackAllocation.h</b></li>
    <li class="footer">Generated on Mon May 27 2024 16:41:24 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
