<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiQtImageCache Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d47/classxii_qt_image_cache.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#signals">Signals</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../da/dbd/classxii_qt_image_cache-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiQtImageCache Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A singleton class that caches Qt images that are typically used for thumbnails.  
 <a href="../../d1/d47/classxii_qt_image_cache.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d1/d98/_image_cache_8moc_8h_source.htm">ImageCache.moc.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for xiiQtImageCache:</div>
<div class="dyncontent">
<div class="center"><img src="../../d2/d31/classxii_qt_image_cache__inherit__graph.png" border="0" usemap="#xii_qt_image_cache_inherit__map" alt="Inheritance graph"/></div>
<map name="xii_qt_image_cache_inherit__map" id="xii_qt_image_cache_inherit__map">
<area shape="rect" title="A singleton class that caches Qt images that are typically used for thumbnails." alt="" coords="5,80,140,107"/>
<area shape="rect" title=" " alt="" coords="35,5,110,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="signals"></a>
Signals</h2></td></tr>
<tr class="memitem:a3b2ff8a44ed10b8200f3294b6327498b"><td class="memItemLeft" align="right" valign="top"><a id="a3b2ff8a44ed10b8200f3294b6327498b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ImageLoaded</b> (QString sPath, QModelIndex index, QVariant userData1, QVariant userData2)</td></tr>
<tr class="separator:a3b2ff8a44ed10b8200f3294b6327498b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ba80c7581254cceea986bcb481f635d"><td class="memItemLeft" align="right" valign="top"><a id="a1ba80c7581254cceea986bcb481f635d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ImageInvalidated</b> (QString sPath, unsigned int uiImageID)</td></tr>
<tr class="separator:a1ba80c7581254cceea986bcb481f635d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab42395a0e845a0c70cf5ae653d49101a"><td class="memItemLeft" align="right" valign="top"><a id="ab42395a0e845a0c70cf5ae653d49101a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#ab42395a0e845a0c70cf5ae653d49101a">SetFallbackImages</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sLoading, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sUnavailable)</td></tr>
<tr class="memdesc:ab42395a0e845a0c70cf5ae653d49101a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies which images to return when a requested image is currently not available (loading) or could not be found (unavailable). <br /></td></tr>
<tr class="separator:ab42395a0e845a0c70cf5ae653d49101a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a2d065eccef5e5f557c41f6725bc9d3"><td class="memItemLeft" align="right" valign="top">const QPixmap *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#a9a2d065eccef5e5f557c41f6725bc9d3">QueryPixmap</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sAbsolutePath, QModelIndex index=QModelIndex(), QVariant userData1=QVariant(), QVariant userData2=QVariant(), xiiUInt32 *out_pImageID=nullptr)</td></tr>
<tr class="memdesc:a9a2d065eccef5e5f557c41f6725bc9d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries an image by an absolute path. If the image is cached, it is returned right away.  <a href="../../d1/d47/classxii_qt_image_cache.htm#a9a2d065eccef5e5f557c41f6725bc9d3">More...</a><br /></td></tr>
<tr class="separator:a9a2d065eccef5e5f557c41f6725bc9d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae16fc033c195b0f1127769b27d76a882"><td class="memItemLeft" align="right" valign="top"><a id="ae16fc033c195b0f1127769b27d76a882"></a>
const QPixmap *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#ae16fc033c195b0f1127769b27d76a882">QueryPixmapForType</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sType, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sAbsolutePath, QModelIndex index=QModelIndex(), QVariant userData1=QVariant(), QVariant userData2=QVariant(), xiiUInt32 *out_pImageID=nullptr)</td></tr>
<tr class="memdesc:ae16fc033c195b0f1127769b27d76a882"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#a9a2d065eccef5e5f557c41f6725bc9d3" title="Queries an image by an absolute path. If the image is cached, it is returned right away.">QueryPixmap()</a>, but first <em>szType</em> is used to call <a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#a9cd058e760b5b4ee73145af765c7df5b" title="Returns a pixmap or nullptr that was registered with RegisterTypeImage()">QueryTypeImage()</a> and check whether a type specific image was registerd. If yes, that is used instead of szAbsolutePath. <br /></td></tr>
<tr class="separator:ae16fc033c195b0f1127769b27d76a882"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63e53419f5cc5018fe38b19c57dc86ea"><td class="memItemLeft" align="right" valign="top"><a id="a63e53419f5cc5018fe38b19c57dc86ea"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#a63e53419f5cc5018fe38b19c57dc86ea">InvalidateCache</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sAbsolutePath)</td></tr>
<tr class="memdesc:a63e53419f5cc5018fe38b19c57dc86ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invalidate the cached image with the given path. This is typically done when a thumbnail was just written to disk, to inform this system to reload the latest image from disk. <br /></td></tr>
<tr class="separator:a63e53419f5cc5018fe38b19c57dc86ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addfb75d752e853a3d2302d7638a70b7d"><td class="memItemLeft" align="right" valign="top"><a id="addfb75d752e853a3d2302d7638a70b7d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#addfb75d752e853a3d2302d7638a70b7d">SetMemoryUsageThreshold</a> (xiiUInt64 uiMemoryThreshold)</td></tr>
<tr class="memdesc:addfb75d752e853a3d2302d7638a70b7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">When this threshold is reached, images that haven't been requested in a while are being evicted from the cache. <br /></td></tr>
<tr class="separator:addfb75d752e853a3d2302d7638a70b7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6185e5c5093793142ce37b45e7b81a14"><td class="memItemLeft" align="right" valign="top"><a id="a6185e5c5093793142ce37b45e7b81a14"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#a6185e5c5093793142ce37b45e7b81a14">StopRequestProcessing</a> (bool bPurgeExistingCache)</td></tr>
<tr class="memdesc:a6185e5c5093793142ce37b45e7b81a14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called whenever the application should stop or pause further image loading, e.g. before shutdown or during project loading. <br /></td></tr>
<tr class="separator:a6185e5c5093793142ce37b45e7b81a14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ba80cdf48916618df5d22c3e1c1f401"><td class="memItemLeft" align="right" valign="top"><a id="a8ba80cdf48916618df5d22c3e1c1f401"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#a8ba80cdf48916618df5d22c3e1c1f401">EnableRequestProcessing</a> ()</td></tr>
<tr class="memdesc:a8ba80cdf48916618df5d22c3e1c1f401"><td class="mdescLeft">&#160;</td><td class="mdescRight">Re-enables image loading if it was previously stopped. <br /></td></tr>
<tr class="separator:a8ba80cdf48916618df5d22c3e1c1f401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a617c198d81c0241ae1c20dd898c0baf0"><td class="memItemLeft" align="right" valign="top"><a id="a617c198d81c0241ae1c20dd898c0baf0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#a617c198d81c0241ae1c20dd898c0baf0">RegisterTypeImage</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sType, QPixmap pixmap)</td></tr>
<tr class="memdesc:a617c198d81c0241ae1c20dd898c0baf0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a pixmap to be used when an image for a certain type is requested. See QueryPixmapForType. <br /></td></tr>
<tr class="separator:a617c198d81c0241ae1c20dd898c0baf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cd058e760b5b4ee73145af765c7df5b"><td class="memItemLeft" align="right" valign="top"><a id="a9cd058e760b5b4ee73145af765c7df5b"></a>
const QPixmap *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#a9cd058e760b5b4ee73145af765c7df5b">QueryTypeImage</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sType) const</td></tr>
<tr class="memdesc:a9cd058e760b5b4ee73145af765c7df5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pixmap or nullptr that was registered with <a class="el" href="../../d1/d47/classxii_qt_image_cache.htm#a617c198d81c0241ae1c20dd898c0baf0" title="Registers a pixmap to be used when an image for a certain type is requested. See QueryPixmapForType.">RegisterTypeImage()</a> <br /></td></tr>
<tr class="separator:a9cd058e760b5b4ee73145af765c7df5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A singleton class that caches Qt images that are typically used for thumbnails. </p>
<p>When an image is not available right away, a fallback is returned and the requested image goes into a loading queue. When an image was finished loading, a signal is emitted to inform users to update their UI. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a9a2d065eccef5e5f557c41f6725bc9d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a2d065eccef5e5f557c41f6725bc9d3">&#9670;&nbsp;</a></span>QueryPixmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const QPixmap * xiiQtImageCache::QueryPixmap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sAbsolutePath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QModelIndex&#160;</td>
          <td class="paramname"><em>index</em> = <code>QModelIndex()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QVariant&#160;</td>
          <td class="paramname"><em>userData1</em> = <code>QVariant()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QVariant&#160;</td>
          <td class="paramname"><em>userData2</em> = <code>QVariant()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt32 *&#160;</td>
          <td class="paramname"><em>out_pImageID</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Queries an image by an absolute path. If the image is cached, it is returned right away. </p>
<p>If the image is not cached, a temporary image is returned and it is queued for loading. Once it is finished loading, the ImageLoaded() signal is emitted and <em>index</em>, <em>UserData1</em> and <em>UserData2</em> are passed through. Additionally an ImageID may be returned through <em>out_pImageID</em>. This can be used to identify an image when it is invalidated through the ImageInvalidated() signal. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Tools/Libs/GuiFoundation/UIServices/<a class="el" href="../../d1/d98/_image_cache_8moc_8h_source.htm">ImageCache.moc.h</a></li>
<li>/home/runner/work/XII/XII/Source/Tools/Libs/GuiFoundation/UIServices/Implementation/ImageCache.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d47/classxii_qt_image_cache.htm">xiiQtImageCache</a></li>
    <li class="footer">Generated on Thu May 16 2024 17:17:35 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
