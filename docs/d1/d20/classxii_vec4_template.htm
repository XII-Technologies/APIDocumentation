<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiVec4Template&lt; Type &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d20/classxii_vec4_template.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d4/d03/classxii_vec4_template-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiVec4Template&lt; Type &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A 4-component vector class.  
 <a href="../../d1/d20/classxii_vec4_template.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../df/d6a/_vec4_8h_source.htm">Vec4.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ae35b96b6505791e4c182acca457156a1"><td class="memItemLeft" align="right" valign="top"><a id="ae35b96b6505791e4c182acca457156a1"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ComponentType</b> = Type</td></tr>
<tr class="separator:ae35b96b6505791e4c182acca457156a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4540b7c5cde152a976002ce6a24b7e97"><td class="memItemLeft" align="right" valign="top"><a id="a4540b7c5cde152a976002ce6a24b7e97"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a4540b7c5cde152a976002ce6a24b7e97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b235b061d34b1d9dd51dfaf3f8484fe"><td class="memItemLeft" align="right" valign="top"><a id="a9b235b061d34b1d9dd51dfaf3f8484fe"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a9b235b061d34b1d9dd51dfaf3f8484fe">xiiVec4Template</a> ()</td></tr>
<tr class="memdesc:a9b235b061d34b1d9dd51dfaf3f8484fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default-constructed vector is uninitialized (for speed) <br /></td></tr>
<tr class="separator:a9b235b061d34b1d9dd51dfaf3f8484fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7f56cac647061fa08c4feeff4184f19"><td class="memItemLeft" align="right" valign="top"><a id="af7f56cac647061fa08c4feeff4184f19"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#af7f56cac647061fa08c4feeff4184f19">xiiVec4Template</a> (Type inX, Type inY, Type inZ, Type inW)</td></tr>
<tr class="memdesc:af7f56cac647061fa08c4feeff4184f19"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the vector with x,y,z,w. <br /></td></tr>
<tr class="separator:af7f56cac647061fa08c4feeff4184f19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28d05db94604994d73ae8d0be84262bc"><td class="memItemLeft" align="right" valign="top"><a id="a28d05db94604994d73ae8d0be84262bc"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a28d05db94604994d73ae8d0be84262bc">xiiVec4Template</a> (Type inV)</td></tr>
<tr class="memdesc:a28d05db94604994d73ae8d0be84262bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes all 4 components with xyzw. <br /></td></tr>
<tr class="separator:a28d05db94604994d73ae8d0be84262bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a435e2e6e13f4fcf1ed1762e5863c1e13"><td class="memItemLeft" align="right" valign="top"><a id="a435e2e6e13f4fcf1ed1762e5863c1e13"></a>
const <a class="el" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a435e2e6e13f4fcf1ed1762e5863c1e13">GetAsVec2</a> () const</td></tr>
<tr class="memdesc:a435e2e6e13f4fcf1ed1762e5863c1e13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a <a class="el" href="../../d1/d0d/classxii_vec2_template.htm" title="A 2-component vector class.">xiiVec2Template</a> with x and y from this vector. <br /></td></tr>
<tr class="separator:a435e2e6e13f4fcf1ed1762e5863c1e13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2896487eee341907faf5bc28d84f3b6"><td class="memItemLeft" align="right" valign="top"><a id="af2896487eee341907faf5bc28d84f3b6"></a>
const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#af2896487eee341907faf5bc28d84f3b6">GetAsVec3</a> () const</td></tr>
<tr class="memdesc:af2896487eee341907faf5bc28d84f3b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a <a class="el" href="../../d9/d9a/classxii_vec3_template.htm" title="A 3-component vector class.">xiiVec3Template</a> with x,y and z from this vector. <br /></td></tr>
<tr class="separator:af2896487eee341907faf5bc28d84f3b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7812b58c9adc791b7409b5d522bd5b5f"><td class="memItemLeft" align="right" valign="top"><a id="a7812b58c9adc791b7409b5d522bd5b5f"></a>
const Type *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a7812b58c9adc791b7409b5d522bd5b5f">GetData</a> () const</td></tr>
<tr class="memdesc:a7812b58c9adc791b7409b5d522bd5b5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the data as an array. <br /></td></tr>
<tr class="separator:a7812b58c9adc791b7409b5d522bd5b5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa59914423eaa3c4a23f7be4ff4c20874"><td class="memItemLeft" align="right" valign="top"><a id="aa59914423eaa3c4a23f7be4ff4c20874"></a>
Type *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#aa59914423eaa3c4a23f7be4ff4c20874">GetData</a> ()</td></tr>
<tr class="memdesc:aa59914423eaa3c4a23f7be4ff4c20874"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the data as an array. <br /></td></tr>
<tr class="separator:aa59914423eaa3c4a23f7be4ff4c20874"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc3f43eb01d70bc3f02b3f61e2a28743"><td class="memItemLeft" align="right" valign="top"><a id="adc3f43eb01d70bc3f02b3f61e2a28743"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#adc3f43eb01d70bc3f02b3f61e2a28743">Set</a> (Type xyzw)</td></tr>
<tr class="memdesc:adc3f43eb01d70bc3f02b3f61e2a28743"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets all 4 components to this value. <br /></td></tr>
<tr class="separator:adc3f43eb01d70bc3f02b3f61e2a28743"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d3071eb7dc8f6f0e0e9bf8d646c9259"><td class="memItemLeft" align="right" valign="top"><a id="a3d3071eb7dc8f6f0e0e9bf8d646c9259"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a3d3071eb7dc8f6f0e0e9bf8d646c9259">Set</a> (Type inX, Type inY, Type inZ, Type inW)</td></tr>
<tr class="memdesc:a3d3071eb7dc8f6f0e0e9bf8d646c9259"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the vector to these values. <br /></td></tr>
<tr class="separator:a3d3071eb7dc8f6f0e0e9bf8d646c9259"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dd46e17b61d664cfad9dbbad875a1de"><td class="memItemLeft" align="right" valign="top"><a id="a2dd46e17b61d664cfad9dbbad875a1de"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a2dd46e17b61d664cfad9dbbad875a1de">SetZero</a> ()</td></tr>
<tr class="memdesc:a2dd46e17b61d664cfad9dbbad875a1de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the vector to all zero. <br /></td></tr>
<tr class="separator:a2dd46e17b61d664cfad9dbbad875a1de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c4430e2dcd881457bb447cf73dd9d75"><td class="memItemLeft" align="right" valign="top"><a id="a5c4430e2dcd881457bb447cf73dd9d75"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a5c4430e2dcd881457bb447cf73dd9d75">GetLength</a> () const</td></tr>
<tr class="memdesc:a5c4430e2dcd881457bb447cf73dd9d75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the length of the vector. <br /></td></tr>
<tr class="separator:a5c4430e2dcd881457bb447cf73dd9d75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19fe0eb0b8d775d2cabf4006675fd964"><td class="memItemLeft" align="right" valign="top"><a id="a19fe0eb0b8d775d2cabf4006675fd964"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a19fe0eb0b8d775d2cabf4006675fd964">GetLengthSquared</a> () const</td></tr>
<tr class="memdesc:a19fe0eb0b8d775d2cabf4006675fd964"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compare the lengths of two vectors. <br /></td></tr>
<tr class="separator:a19fe0eb0b8d775d2cabf4006675fd964"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83ccf53ceb8f7592be1922928084d296"><td class="memItemLeft" align="right" valign="top"><a id="a83ccf53ceb8f7592be1922928084d296"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a83ccf53ceb8f7592be1922928084d296">GetLengthAndNormalize</a> ()</td></tr>
<tr class="memdesc:a83ccf53ceb8f7592be1922928084d296"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes this vector and returns its previous length in one operation. More efficient than calling GetLength and then Normalize. <br /></td></tr>
<tr class="separator:a83ccf53ceb8f7592be1922928084d296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc522e7ba73416337f21a777bb9e4878"><td class="memItemLeft" align="right" valign="top"><a id="afc522e7ba73416337f21a777bb9e4878"></a>
const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#afc522e7ba73416337f21a777bb9e4878">GetNormalized</a> () const</td></tr>
<tr class="memdesc:afc522e7ba73416337f21a777bb9e4878"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a normalized version of this vector, leaves the vector itself unchanged. <br /></td></tr>
<tr class="separator:afc522e7ba73416337f21a777bb9e4878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5c452872c01dddadb9cc5acdb7b46ae"><td class="memItemLeft" align="right" valign="top"><a id="aa5c452872c01dddadb9cc5acdb7b46ae"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#aa5c452872c01dddadb9cc5acdb7b46ae">Normalize</a> ()</td></tr>
<tr class="memdesc:aa5c452872c01dddadb9cc5acdb7b46ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes this vector. <br /></td></tr>
<tr class="separator:aa5c452872c01dddadb9cc5acdb7b46ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba2801977104e27d80657727ceabb4e9"><td class="memItemLeft" align="right" valign="top"><a id="aba2801977104e27d80657727ceabb4e9"></a>
<a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#aba2801977104e27d80657727ceabb4e9">NormalizeIfNotZero</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;vFallback=<a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;(1, 0, 0, 0), Type fEpsilon=xiiMath::SmallEpsilon&lt; Type &gt;())</td></tr>
<tr class="memdesc:aba2801977104e27d80657727ceabb4e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to normalize this vector. If the vector is too close to zero, XII_FAILURE is returned and the vector is set to the given fallback value. <br /></td></tr>
<tr class="separator:aba2801977104e27d80657727ceabb4e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90fd738a8d86863cd0671368f2f6274c"><td class="memItemLeft" align="right" valign="top"><a id="a90fd738a8d86863cd0671368f2f6274c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a90fd738a8d86863cd0671368f2f6274c">IsZero</a> () const</td></tr>
<tr class="memdesc:a90fd738a8d86863cd0671368f2f6274c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns, whether this vector is (0, 0, 0, 0). <br /></td></tr>
<tr class="separator:a90fd738a8d86863cd0671368f2f6274c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80890459bcfc38f332a2bc3f6a72af31"><td class="memItemLeft" align="right" valign="top"><a id="a80890459bcfc38f332a2bc3f6a72af31"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a80890459bcfc38f332a2bc3f6a72af31">IsZero</a> (Type fEpsilon) const</td></tr>
<tr class="memdesc:a80890459bcfc38f332a2bc3f6a72af31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns, whether this vector is (0, 0, 0, 0). <br /></td></tr>
<tr class="separator:a80890459bcfc38f332a2bc3f6a72af31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12d35bafe5a6b289d914a42b005ea49d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a12d35bafe5a6b289d914a42b005ea49d">IsNormalized</a> (Type fEpsilon=xiiMath::HugeEpsilon&lt; Type &gt;()) const</td></tr>
<tr class="memdesc:a12d35bafe5a6b289d914a42b005ea49d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns, whether the squared length of this vector is between 0.999f and 1.001f.  <a href="../../d1/d20/classxii_vec4_template.htm#a12d35bafe5a6b289d914a42b005ea49d">More...</a><br /></td></tr>
<tr class="separator:a12d35bafe5a6b289d914a42b005ea49d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada72f035c7f66fc97e374c90013b20fd"><td class="memItemLeft" align="right" valign="top"><a id="ada72f035c7f66fc97e374c90013b20fd"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#ada72f035c7f66fc97e374c90013b20fd">IsNaN</a> () const</td></tr>
<tr class="memdesc:ada72f035c7f66fc97e374c90013b20fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if any of x, y, z or w is NaN. <br /></td></tr>
<tr class="separator:ada72f035c7f66fc97e374c90013b20fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34a28e70e6c1a2b7c3856215ec9a3f38"><td class="memItemLeft" align="right" valign="top"><a id="a34a28e70e6c1a2b7c3856215ec9a3f38"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a34a28e70e6c1a2b7c3856215ec9a3f38">IsValid</a> () const</td></tr>
<tr class="memdesc:a34a28e70e6c1a2b7c3856215ec9a3f38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that all components are finite numbers. <br /></td></tr>
<tr class="separator:a34a28e70e6c1a2b7c3856215ec9a3f38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6312e7daf16df440101c11e6293fce11"><td class="memItemLeft" align="right" valign="top"><a id="a6312e7daf16df440101c11e6293fce11"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a6312e7daf16df440101c11e6293fce11">Distance</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;vPoint) const</td></tr>
<tr class="memdesc:a6312e7daf16df440101c11e6293fce11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the distance between two 3D Vectors. <br /></td></tr>
<tr class="separator:a6312e7daf16df440101c11e6293fce11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a702b32e7788c9964a70d3042da27c51d"><td class="memItemLeft" align="right" valign="top"><a id="a702b32e7788c9964a70d3042da27c51d"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a702b32e7788c9964a70d3042da27c51d">DistanceSquared</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;vPoint) const</td></tr>
<tr class="memdesc:a702b32e7788c9964a70d3042da27c51d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the squared distance between two 3D Vectors. Faster, since no square-root is taken. Useful, if one only wants to compare the distance of two vectors regardless of the magnitude. <br /></td></tr>
<tr class="separator:a702b32e7788c9964a70d3042da27c51d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe70096b77c7b35cbdd98fb7d09c1d70"><td class="memItemLeft" align="right" valign="top"><a id="abe70096b77c7b35cbdd98fb7d09c1d70"></a>
const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#abe70096b77c7b35cbdd98fb7d09c1d70">operator-</a> () const</td></tr>
<tr class="memdesc:abe70096b77c7b35cbdd98fb7d09c1d70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the negation of this vector. <br /></td></tr>
<tr class="separator:abe70096b77c7b35cbdd98fb7d09c1d70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff9fdbc856af85e03114d779181699ff"><td class="memItemLeft" align="right" valign="top"><a id="aff9fdbc856af85e03114d779181699ff"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#aff9fdbc856af85e03114d779181699ff">operator+=</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;vCc)</td></tr>
<tr class="memdesc:aff9fdbc856af85e03114d779181699ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds cc component-wise to this vector. <br /></td></tr>
<tr class="separator:aff9fdbc856af85e03114d779181699ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5844e543d82e0c1c570a6a507f8370f8"><td class="memItemLeft" align="right" valign="top"><a id="a5844e543d82e0c1c570a6a507f8370f8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a5844e543d82e0c1c570a6a507f8370f8">operator-=</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;vCc)</td></tr>
<tr class="memdesc:a5844e543d82e0c1c570a6a507f8370f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts cc component-wise from this vector. <br /></td></tr>
<tr class="separator:a5844e543d82e0c1c570a6a507f8370f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a86e4775d786205a99f05c16fdd22c0"><td class="memItemLeft" align="right" valign="top"><a id="a2a86e4775d786205a99f05c16fdd22c0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a2a86e4775d786205a99f05c16fdd22c0">operator*=</a> (Type f)</td></tr>
<tr class="memdesc:a2a86e4775d786205a99f05c16fdd22c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies all components of this vector with f. <br /></td></tr>
<tr class="separator:a2a86e4775d786205a99f05c16fdd22c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa19646e0e1d001c6547db64b6dd4d2b"><td class="memItemLeft" align="right" valign="top"><a id="aaa19646e0e1d001c6547db64b6dd4d2b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#aaa19646e0e1d001c6547db64b6dd4d2b">operator/=</a> (Type f)</td></tr>
<tr class="memdesc:aaa19646e0e1d001c6547db64b6dd4d2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides all components of this vector by f. <br /></td></tr>
<tr class="separator:aaa19646e0e1d001c6547db64b6dd4d2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a280a58b2ac97192072c5d01855702635"><td class="memItemLeft" align="right" valign="top"><a id="a280a58b2ac97192072c5d01855702635"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a280a58b2ac97192072c5d01855702635">IsIdentical</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a280a58b2ac97192072c5d01855702635"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality Check (bitwise). <br /></td></tr>
<tr class="separator:a280a58b2ac97192072c5d01855702635"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5fb940e9f11a3292a47180a6c9e0312"><td class="memItemLeft" align="right" valign="top"><a id="ad5fb940e9f11a3292a47180a6c9e0312"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#ad5fb940e9f11a3292a47180a6c9e0312">IsEqual</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;rhs, Type fEpsilon) const</td></tr>
<tr class="memdesc:ad5fb940e9f11a3292a47180a6c9e0312"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality Check with epsilon. <br /></td></tr>
<tr class="separator:ad5fb940e9f11a3292a47180a6c9e0312"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcd870cce46276520fcb38712748af50"><td class="memItemLeft" align="right" valign="top"><a id="abcd870cce46276520fcb38712748af50"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#abcd870cce46276520fcb38712748af50">Dot</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:abcd870cce46276520fcb38712748af50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the dot-product of the two vectors (commutative, order does not matter). <br /></td></tr>
<tr class="separator:abcd870cce46276520fcb38712748af50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13f044190648770d6f34dbeebda054f2"><td class="memItemLeft" align="right" valign="top"><a id="a13f044190648770d6f34dbeebda054f2"></a>
const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a13f044190648770d6f34dbeebda054f2">CompMin</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a13f044190648770d6f34dbeebda054f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise minimum of *this and rhs. <br /></td></tr>
<tr class="separator:a13f044190648770d6f34dbeebda054f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44c4bb0f7237f6337a8839e7937205a2"><td class="memItemLeft" align="right" valign="top"><a id="a44c4bb0f7237f6337a8839e7937205a2"></a>
const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a44c4bb0f7237f6337a8839e7937205a2">CompMax</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a44c4bb0f7237f6337a8839e7937205a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise maximum of *this and rhs. <br /></td></tr>
<tr class="separator:a44c4bb0f7237f6337a8839e7937205a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28213893fbcb128d7695412cc9c1510"><td class="memItemLeft" align="right" valign="top"><a id="aa28213893fbcb128d7695412cc9c1510"></a>
const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#aa28213893fbcb128d7695412cc9c1510">CompClamp</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;vLow, const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;vHigh) const</td></tr>
<tr class="memdesc:aa28213893fbcb128d7695412cc9c1510"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise clamped value of *this between low and high. <br /></td></tr>
<tr class="separator:aa28213893fbcb128d7695412cc9c1510"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58aa3ec6f5ba10c51c54706ed9a298da"><td class="memItemLeft" align="right" valign="top"><a id="a58aa3ec6f5ba10c51c54706ed9a298da"></a>
const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a58aa3ec6f5ba10c51c54706ed9a298da">CompMul</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a58aa3ec6f5ba10c51c54706ed9a298da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise multiplication of *this and rhs. <br /></td></tr>
<tr class="separator:a58aa3ec6f5ba10c51c54706ed9a298da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a7185e03fd2a1b35f58f8116e7c7f9a"><td class="memItemLeft" align="right" valign="top"><a id="a0a7185e03fd2a1b35f58f8116e7c7f9a"></a>
const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a0a7185e03fd2a1b35f58f8116e7c7f9a">CompDiv</a> (const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a0a7185e03fd2a1b35f58f8116e7c7f9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise division of *this and rhs. <br /></td></tr>
<tr class="separator:a0a7185e03fd2a1b35f58f8116e7c7f9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7cf5c995aa246d8b928b73f829c76a0"><td class="memItemLeft" align="right" valign="top"><a id="ac7cf5c995aa246d8b928b73f829c76a0"></a>
const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#ac7cf5c995aa246d8b928b73f829c76a0">Abs</a> () const</td></tr>
<tr class="memdesc:ac7cf5c995aa246d8b928b73f829c76a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">brief Returns the component-wise absolute of *this. <br /></td></tr>
<tr class="separator:ac7cf5c995aa246d8b928b73f829c76a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a3064d2afe2a3f30ab8629a8246e689da"><td class="memItemLeft" align="right" valign="top"><a id="a3064d2afe2a3f30ab8629a8246e689da"></a>
static const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a3064d2afe2a3f30ab8629a8246e689da">ZeroVector</a> ()</td></tr>
<tr class="memdesc:a3064d2afe2a3f30ab8629a8246e689da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector with all components set to zero. <br /></td></tr>
<tr class="separator:a3064d2afe2a3f30ab8629a8246e689da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafc07800a2265f8588c678cd7addfdb2"><td class="memItemLeft" align="right" valign="top"><a id="aafc07800a2265f8588c678cd7addfdb2"></a>
static const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#aafc07800a2265f8588c678cd7addfdb2">OneVector</a> ()</td></tr>
<tr class="memdesc:aafc07800a2265f8588c678cd7addfdb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector with all components set to one. <br /></td></tr>
<tr class="separator:aafc07800a2265f8588c678cd7addfdb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f6e3b05a0cf10439827cb16cfcf41e3"><td class="memItemLeft" align="right" valign="top"><a id="a7f6e3b05a0cf10439827cb16cfcf41e3"></a>
static const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a7f6e3b05a0cf10439827cb16cfcf41e3">OriginPoint</a> ()</td></tr>
<tr class="memdesc:a7f6e3b05a0cf10439827cb16cfcf41e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector initialized to the origin point (0, 0, 0, 1). <br /></td></tr>
<tr class="separator:a7f6e3b05a0cf10439827cb16cfcf41e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6592a8dc0a4a3521145e7300a732ca5c"><td class="memItemLeft" align="right" valign="top"><a id="a6592a8dc0a4a3521145e7300a732ca5c"></a>
static const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a6592a8dc0a4a3521145e7300a732ca5c">UnitXAxis</a> ()</td></tr>
<tr class="memdesc:a6592a8dc0a4a3521145e7300a732ca5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector initialized to the x unit vector (1, 0, 0, 0). <br /></td></tr>
<tr class="separator:a6592a8dc0a4a3521145e7300a732ca5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b6987736cff961dc545165beb4a7862"><td class="memItemLeft" align="right" valign="top"><a id="a7b6987736cff961dc545165beb4a7862"></a>
static const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a7b6987736cff961dc545165beb4a7862">UnitYAxis</a> ()</td></tr>
<tr class="memdesc:a7b6987736cff961dc545165beb4a7862"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector initialized to the y unit vector (0, 1, 0, 0). <br /></td></tr>
<tr class="separator:a7b6987736cff961dc545165beb4a7862"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ad1469bb780d300791ba4d9fd7845d8"><td class="memItemLeft" align="right" valign="top"><a id="a7ad1469bb780d300791ba4d9fd7845d8"></a>
static const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#a7ad1469bb780d300791ba4d9fd7845d8">UnitZAxis</a> ()</td></tr>
<tr class="memdesc:a7ad1469bb780d300791ba4d9fd7845d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector initialized to the z unit vector (1, 0, 0, 0). <br /></td></tr>
<tr class="separator:a7ad1469bb780d300791ba4d9fd7845d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae24fcdfbaeda2b501a52951c0eab80ca"><td class="memItemLeft" align="right" valign="top"><a id="ae24fcdfbaeda2b501a52951c0eab80ca"></a>
static const <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d20/classxii_vec4_template.htm#ae24fcdfbaeda2b501a52951c0eab80ca">UnitWAxis</a> ()</td></tr>
<tr class="memdesc:ae24fcdfbaeda2b501a52951c0eab80ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector initialized to the w unit vector (0, 0, 0, 1). <br /></td></tr>
<tr class="separator:ae24fcdfbaeda2b501a52951c0eab80ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ac246a4380148a305ac51419306424956"><td class="memItemLeft" align="right" valign="top"><a id="ac246a4380148a305ac51419306424956"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>x</b></td></tr>
<tr class="separator:ac246a4380148a305ac51419306424956"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf3a98760ccbaa9233cf59d0709185f8"><td class="memItemLeft" align="right" valign="top"><a id="adf3a98760ccbaa9233cf59d0709185f8"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>y</b></td></tr>
<tr class="separator:adf3a98760ccbaa9233cf59d0709185f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61186a385f35037c2b5925ef89b1db26"><td class="memItemLeft" align="right" valign="top"><a id="a61186a385f35037c2b5925ef89b1db26"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>z</b></td></tr>
<tr class="separator:a61186a385f35037c2b5925ef89b1db26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a146e4bd97a36b997c59fb1f67ad9b504"><td class="memItemLeft" align="right" valign="top"><a id="a146e4bd97a36b997c59fb1f67ad9b504"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>w</b></td></tr>
<tr class="separator:a146e4bd97a36b997c59fb1f67ad9b504"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename Type&gt;<br />
class xiiVec4Template&lt; Type &gt;</h3>

<p>A 4-component vector class. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a12d35bafe5a6b289d914a42b005ea49d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12d35bafe5a6b289d914a42b005ea49d">&#9670;&nbsp;</a></span>IsNormalized()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a>&lt; Type &gt;::IsNormalized </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>fEpsilon</em> = <code>xiiMath::HugeEpsilon&lt;Type&gt;()</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns, whether the squared length of this vector is between 0.999f and 1.001f. </p>
<dl class="section note"><dt>Note</dt><dd>Normalization, especially with SSE is not very precise. So this function checks whether the (squared) length is between a lower and upper limit. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Math/<a class="el" href="../../d4/dbc/_engine_2_foundation_2_math_2_declarations_8h_source.htm">Declarations.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Math/<a class="el" href="../../df/d6a/_vec4_8h_source.htm">Vec4.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Math/Implementation/<a class="el" href="../../db/dba/_vec4__inl_8h_source.htm">Vec4_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a></li>
    <li class="footer">Generated on Mon Aug 14 2023 15:54:54 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
