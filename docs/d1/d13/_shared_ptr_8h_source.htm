<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Engine/Foundation/Types/SharedPtr.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XII Engine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d13/_shared_ptr_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SharedPtr.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/RefCounted.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/UniquePtr.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm">    9</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr</a></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;{</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  XII_DECLARE_MEM_RELOCATABLE_TYPE();</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr</a>();</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#af93d496203d7b46f8c12a21f3a09756d">   19</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#af93d496203d7b46f8c12a21f3a09756d">xiiSharedPtr</a>(<span class="keyword">const</span> <a class="code" href="../../de/d3c/structxii_internal_1_1_new_instance.htm">xiiInternal::NewInstance&lt;U&gt;</a>&amp; instance);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#afe865f2aa622dd636b2044ba108ebcda">   24</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#afe865f2aa622dd636b2044ba108ebcda">xiiSharedPtr</a>(U* pInstance, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#ab49954c9680ebc7f4b7e8473d81df132">   31</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#ab49954c9680ebc7f4b7e8473d81df132">xiiSharedPtr</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;U&gt;</a>&amp; other);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#ad38902a6797745b7501bcfaae246223a">   35</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#ad38902a6797745b7501bcfaae246223a">xiiSharedPtr</a>(<a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;U&gt;</a>&amp;&amp; other);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#ab70f21d1fcac43e78559695f205a6187">   39</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#ab70f21d1fcac43e78559695f205a6187">xiiSharedPtr</a>(<a class="code" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr&lt;U&gt;</a>&amp;&amp; other);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr</a>(std::nullptr_t);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a15453b81368ad7f75903d80f070b5bdc">~xiiSharedPtr</a>();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#a2c09af6447a75d9b82b54068f4e7b9c9">   49</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a2c09af6447a75d9b82b54068f4e7b9c9">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../de/d3c/structxii_internal_1_1_new_instance.htm">xiiInternal::NewInstance&lt;U&gt;</a>&amp; instance);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a2c09af6447a75d9b82b54068f4e7b9c9">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#af212728940b2e70389eb1444e0aa38ca">   56</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#af212728940b2e70389eb1444e0aa38ca">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;U&gt;</a>&amp; other);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#a4490f39274f37b75ab8de047b17b1549">   60</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a4490f39274f37b75ab8de047b17b1549">operator=</a>(<a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;U&gt;</a>&amp;&amp; other);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#a03b71a64025a1d9e2265f81b02a0e480">   64</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a03b71a64025a1d9e2265f81b02a0e480">operator=</a>(<a class="code" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr&lt;U&gt;</a>&amp;&amp; other);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a2c09af6447a75d9b82b54068f4e7b9c9">operator=</a>(std::nullptr_t);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  T* <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#acdbc0ac2ce97ae9ba5894184acb9c89b">Borrow</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a3698c50c666c95a814628519b59b3965">Clear</a>();</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  T&amp; <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a10fb5dbbdca3877ade323060bc5610d7">operator*</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  T* <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#aecc0f49333d267fd0ece6e8a80d35b18">operator-&gt;</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keyword">operator</span> <span class="keyword">const</span> T*() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">operator</span> T*();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keyword">explicit</span> <span class="keyword">operator</span> bool() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#ad90d8f179cd03c79dafa8f4d96823c00">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  std::strong_ordering <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a9a0ee2c62d6105d2d8cd1e46aa5fc761">operator&lt;=&gt;</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#ad90d8f179cd03c79dafa8f4d96823c00">operator==</a>(std::nullptr_t) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  std::strong_ordering <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a9a0ee2c62d6105d2d8cd1e46aa5fc761">operator&lt;=&gt;</a>(std::nullptr_t) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> DERIVED&gt;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="../../d8/d9b/classxii_shared_ptr.htm#a346de2a8d6cf427c3cab804f094098ab">  106</a></span>&#160;  <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;DERIVED&gt;</a> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm#a346de2a8d6cf427c3cab804f094098ab">Downcast</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;DERIVED&gt;</a>(<span class="keyword">static_cast&lt;</span>DERIVED*<span class="keyword">&gt;</span>(m_pInstance), m_pAllocator);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr</a>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">void</span> AddReferenceIfValid();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">void</span> ReleaseReferenceIfValid();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  T*                m_pInstance;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* m_pAllocator;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;};</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/Implementation/SharedPtr_inl.h&gt;</span></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr</a></div><div class="ttdoc">A Shared ptr manages a shared object and destroys that object when no one references it anymore....</div><div class="ttdef"><b>Definition:</b> SharedPtr.h:10</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_a03b71a64025a1d9e2265f81b02a0e480"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#a03b71a64025a1d9e2265f81b02a0e480">xiiSharedPtr::operator=</a></div><div class="ttdeci">xiiSharedPtr&lt; T &gt; &amp; operator=(xiiUniquePtr&lt; U &gt; &amp;&amp;other)</div><div class="ttdoc">Move assigns a shared ptr from a unique ptr. The unique ptr will be empty afterwards.</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_a10fb5dbbdca3877ade323060bc5610d7"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#a10fb5dbbdca3877ade323060bc5610d7">xiiSharedPtr::operator*</a></div><div class="ttdeci">T &amp; operator*() const</div><div class="ttdoc">Provides access to the managed object.</div><div class="ttdef"><b>Definition:</b> SharedPtr_inl.h:180</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_a15453b81368ad7f75903d80f070b5bdc"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#a15453b81368ad7f75903d80f070b5bdc">xiiSharedPtr::~xiiSharedPtr</a></div><div class="ttdeci">~xiiSharedPtr()</div><div class="ttdoc">Destroys the managed object using the stored allocator if no one else references it anymore.</div><div class="ttdef"><b>Definition:</b> SharedPtr_inl.h:76</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_a2c09af6447a75d9b82b54068f4e7b9c9"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#a2c09af6447a75d9b82b54068f4e7b9c9">xiiSharedPtr::operator=</a></div><div class="ttdeci">xiiSharedPtr&lt; T &gt; &amp; operator=(const xiiInternal::NewInstance&lt; U &gt; &amp;instance)</div><div class="ttdoc">Sets the shared ptr from a freshly created instance through XII_NEW or XII_DEFAULT_NEW.</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_a346de2a8d6cf427c3cab804f094098ab"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#a346de2a8d6cf427c3cab804f094098ab">xiiSharedPtr::Downcast</a></div><div class="ttdeci">xiiSharedPtr&lt; DERIVED &gt; Downcast() const</div><div class="ttdoc">Returns a copy of this, as a xiiSharedPtr&lt;DERIVED&gt;. Downcasts the stored pointer (using static_cast).</div><div class="ttdef"><b>Definition:</b> SharedPtr.h:106</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_a3698c50c666c95a814628519b59b3965"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#a3698c50c666c95a814628519b59b3965">xiiSharedPtr::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destroys the managed object if no one else references it anymore and resets the shared ptr.</div><div class="ttdef"><b>Definition:</b> SharedPtr_inl.h:174</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_a4490f39274f37b75ab8de047b17b1549"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#a4490f39274f37b75ab8de047b17b1549">xiiSharedPtr::operator=</a></div><div class="ttdeci">xiiSharedPtr&lt; T &gt; &amp; operator=(xiiSharedPtr&lt; U &gt; &amp;&amp;other)</div><div class="ttdoc">Move assigns a shared ptr from another. The other shared ptr will be empty afterwards.</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_a9a0ee2c62d6105d2d8cd1e46aa5fc761"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#a9a0ee2c62d6105d2d8cd1e46aa5fc761">xiiSharedPtr::operator&lt;=&gt;</a></div><div class="ttdeci">std::strong_ordering operator&lt;=&gt;(const xiiSharedPtr&lt; T &gt; &amp;rhs) const</div><div class="ttdoc">Compares the shared ptr against another shared ptr.</div><div class="ttdef"><b>Definition:</b> SharedPtr_inl.h:216</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_ab49954c9680ebc7f4b7e8473d81df132"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#ab49954c9680ebc7f4b7e8473d81df132">xiiSharedPtr::xiiSharedPtr</a></div><div class="ttdeci">xiiSharedPtr(const xiiSharedPtr&lt; U &gt; &amp;other)</div><div class="ttdoc">Copy constructs a shared ptr from another. Both will hold a reference to the managed object afterward...</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_ab70f21d1fcac43e78559695f205a6187"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#ab70f21d1fcac43e78559695f205a6187">xiiSharedPtr::xiiSharedPtr</a></div><div class="ttdeci">xiiSharedPtr(xiiUniquePtr&lt; U &gt; &amp;&amp;other)</div><div class="ttdoc">Move constructs a shared ptr from a unique ptr. The unique ptr will be empty afterwards.</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_acdbc0ac2ce97ae9ba5894184acb9c89b"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#acdbc0ac2ce97ae9ba5894184acb9c89b">xiiSharedPtr::Borrow</a></div><div class="ttdeci">T * Borrow() const</div><div class="ttdoc">Borrows the managed object. The shared ptr stays unmodified.</div><div class="ttdef"><b>Definition:</b> SharedPtr_inl.h:168</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_ad38902a6797745b7501bcfaae246223a"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#ad38902a6797745b7501bcfaae246223a">xiiSharedPtr::xiiSharedPtr</a></div><div class="ttdeci">xiiSharedPtr(xiiSharedPtr&lt; U &gt; &amp;&amp;other)</div><div class="ttdoc">Move constructs a shared ptr from another. The other shared ptr will be empty afterwards.</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_ad90d8f179cd03c79dafa8f4d96823c00"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#ad90d8f179cd03c79dafa8f4d96823c00">xiiSharedPtr::operator==</a></div><div class="ttdeci">bool operator==(const xiiSharedPtr&lt; T &gt; &amp;rhs) const</div><div class="ttdoc">Compares the shared ptr against another shared ptr.</div><div class="ttdef"><b>Definition:</b> SharedPtr_inl.h:210</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_aecc0f49333d267fd0ece6e8a80d35b18"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#aecc0f49333d267fd0ece6e8a80d35b18">xiiSharedPtr::operator-&gt;</a></div><div class="ttdeci">T * operator-&gt;() const</div><div class="ttdoc">Provides access to the managed object.</div><div class="ttdef"><b>Definition:</b> SharedPtr_inl.h:186</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_af212728940b2e70389eb1444e0aa38ca"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#af212728940b2e70389eb1444e0aa38ca">xiiSharedPtr::operator=</a></div><div class="ttdeci">xiiSharedPtr&lt; T &gt; &amp; operator=(const xiiSharedPtr&lt; U &gt; &amp;other)</div><div class="ttdoc">Sets the shared ptr from another. Both will hold a reference to the managed object afterwards.</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_af93d496203d7b46f8c12a21f3a09756d"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#af93d496203d7b46f8c12a21f3a09756d">xiiSharedPtr::xiiSharedPtr</a></div><div class="ttdeci">xiiSharedPtr(const xiiInternal::NewInstance&lt; U &gt; &amp;instance)</div><div class="ttdoc">Creates a shared ptr from a freshly created instance through XII_NEW or XII_DEFAULT_NEW.</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm_afe865f2aa622dd636b2044ba108ebcda"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm#afe865f2aa622dd636b2044ba108ebcda">xiiSharedPtr::xiiSharedPtr</a></div><div class="ttdeci">xiiSharedPtr(U *pInstance, xiiAllocatorBase *pAllocator)</div><div class="ttdoc">Creates a shared ptr from a pointer and an allocator. The passed allocator will be used to destroy th...</div></div>
<div class="ttc" id="aclassxii_unique_ptr_htm"><div class="ttname"><a href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a></div><div class="ttdoc">A Unique ptr manages an object and destroys that object when it goes out of scope....</div><div class="ttdef"><b>Definition:</b> UniquePtr.h:9</div></div>
<div class="ttc" id="astructxii_internal_1_1_new_instance_htm"><div class="ttname"><a href="../../de/d3c/structxii_internal_1_1_new_instance.htm">xiiInternal::NewInstance</a></div><div class="ttdef"><b>Definition:</b> AllocatorBase_inl.h:18</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_fd654f0525c8869fa0409c81d19e3265.htm">Types</a></li><li class="navelem"><b>SharedPtr.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 12:12:50 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
