<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/SimdMath/Implementation/FPU/FPUFloat_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d21/_f_p_u_float__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">FPUFloat_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno"><a class="line" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">    3</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat::xiiSimdFloat</a>() {}</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="../../d2/d73/classxii_simd_float.htm#a17c6e0455b9473cf6e958c59922898c8">    5</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat::xiiSimdFloat</a>(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;{</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#adc3f43eb01d70bc3f02b3f61e2a28743">Set</a>(f);</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;}</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d2/d73/classxii_simd_float.htm#a6ddb014cf92cd55076eac1aff3ea589f">   10</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat::xiiSimdFloat</a>(xiiInt32 i)</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#adc3f43eb01d70bc3f02b3f61e2a28743">Set</a>((<span class="keywordtype">float</span>)i);</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d2/d73/classxii_simd_float.htm#a4bb778ef6f4b76fa991b9afb8ae13a9d">   15</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat::xiiSimdFloat</a>(xiiUInt32 i)</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#adc3f43eb01d70bc3f02b3f61e2a28743">Set</a>((<span class="keywordtype">float</span>)i);</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;}</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="../../d2/d73/classxii_simd_float.htm#a553e97e5b0f9daa5752403743a440fce">   20</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat::xiiSimdFloat</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a> a)</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#adc3f43eb01d70bc3f02b3f61e2a28743">Set</a>(a.<a class="code" href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">GetRadian</a>());</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../d2/d73/classxii_simd_float.htm#a3bc19f5eabb9f1aa51a99ec446f2a6b6">   25</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat::xiiSimdFloat</a>(<a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiInternal::QuadFloat</a> v)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  m_v = v;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../d2/d73/classxii_simd_float.htm#ac14b6e4c0c1fb60f7e76c08db21c1f41">   30</a></span>&#160;XII_ALWAYS_INLINE xiiSimdFloat::operator float()<span class="keyword"> const</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordflow">return</span> m_v.x;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::Zero()</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat</a>(0.0f);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::operator+(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordflow">return</span> m_v + f.m_v;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::operator-(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">return</span> m_v - f.m_v;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::operator*(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordflow">return</span> m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#a58aa3ec6f5ba10c51c54706ed9a298da">CompMul</a>(f.m_v);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::operator/(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordflow">return</span> m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#a0a7185e03fd2a1b35f58f8116e7c7f9a">CompDiv</a>(f.m_v);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; xiiSimdFloat::operator+=(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  m_v += f.m_v;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; xiiSimdFloat::operator-=(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  m_v -= f.m_v;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; xiiSimdFloat::operator*=(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  m_v = m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#a58aa3ec6f5ba10c51c54706ed9a298da">CompMul</a>(f.m_v);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; xiiSimdFloat::operator/=(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  m_v = m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#a0a7185e03fd2a1b35f58f8116e7c7f9a">CompDiv</a>(f.m_v);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::IsEqual(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; rhs, <span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordflow">return</span> m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#ad5fb940e9f11a3292a47180a6c9e0312">IsEqual</a>(rhs.m_v, fEpsilon);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator==(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordflow">return</span> m_v.x == f.m_v.x;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator!=(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordflow">return</span> m_v.x != f.m_v.x;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator&gt;=(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordflow">return</span> m_v.x &gt;= f.m_v.x;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator&gt;(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordflow">return</span> m_v.x &gt; f.m_v.x;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator&lt;=(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordflow">return</span> m_v.x &lt;= f.m_v.x;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator&lt;(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordflow">return</span> m_v.x &lt; f.m_v.x;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator==(<span class="keywordtype">float</span> f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordflow">return</span> m_v.x == f;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator!=(<span class="keywordtype">float</span> f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordflow">return</span> m_v.x != f;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator&gt;(<span class="keywordtype">float</span> f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keywordflow">return</span> m_v.x &gt; f;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator&gt;=(<span class="keywordtype">float</span> f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordflow">return</span> m_v.x &gt;= f;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator&lt;(<span class="keywordtype">float</span> f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordflow">return</span> m_v.x &lt; f;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdFloat::operator&lt;=(<span class="keywordtype">float</span> f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordflow">return</span> m_v.x &lt;= f;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">template</span> &lt;xiiMathFloatBits::Enum bits&gt;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::GetReciprocal()<span class="keyword"> const</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat</a>(1.0f / m_v.x);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keyword">template</span> &lt;xiiMathFloatBits::Enum bits&gt;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::GetSqrt()<span class="keyword"> const</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat</a>(<a class="code" href="../../d1/d37/namespacexii_math.htm#ae7fbda648b6f9bcc4dc23962d06c93f4">xiiMath::Sqrt</a>(m_v.x));</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">template</span> &lt;xiiMathFloatBits::Enum bits&gt;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::GetInvSqrt()<span class="keyword"> const</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat</a>(1.0f / <a class="code" href="../../d1/d37/namespacexii_math.htm#ae7fbda648b6f9bcc4dc23962d06c93f4">xiiMath::Sqrt</a>(m_v.x));</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::Max(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordflow">return</span> m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#a44c4bb0f7237f6337a8839e7937205a2">CompMax</a>(f.m_v);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::Min(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; f)<span class="keyword"> const</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">return</span> m_v.<a class="code" href="../../d1/d20/classxii_vec4_template.htm#a13f044190648770d6f34dbeebda054f2">CompMin</a>(f.m_v);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> xiiSimdFloat::Abs()<span class="keyword"> const</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat</a>(<a class="code" href="../../d1/d37/namespacexii_math.htm#a821b432e7a9c8ac292eb255ee11e9e10">xiiMath::Abs</a>(m_v.x));</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_simd_float_htm_ac417e15777dc473a842f8f6248a6129b"><div class="ttname"><a href="../../d2/d73/classxii_simd_float.htm#ac417e15777dc473a842f8f6248a6129b">xiiSimdFloat::xiiSimdFloat</a></div><div class="ttdeci">xiiSimdFloat()</div><div class="ttdoc">Default constructor, leaves the data uninitialized.</div><div class="ttdef"><b>Definition:</b> FPUFloat_inl.h:3</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a44c4bb0f7237f6337a8839e7937205a2"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a44c4bb0f7237f6337a8839e7937205a2">xiiVec4Template::CompMax</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; CompMax(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:327</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a58aa3ec6f5ba10c51c54706ed9a298da"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a58aa3ec6f5ba10c51c54706ed9a298da">xiiVec4Template::CompMul</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; CompMul(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:346</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_afaebb218561104c8b89d645dab3d8ded"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">xiiAngleTemplate::GetRadian</a></div><div class="ttdeci">constexpr Type GetRadian() const</div><div class="ttdoc">Returns the radian value. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:52</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_adc3f43eb01d70bc3f02b3f61e2a28743"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#adc3f43eb01d70bc3f02b3f61e2a28743">xiiVec4Template::Set</a></div><div class="ttdeci">void Set(Type xyzw)</div><div class="ttdoc">Sets all 4 components to this value.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:106</div></div>
<div class="ttc" id="aclassxii_simd_float_htm"><div class="ttname"><a href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a></div><div class="ttdef"><b>Definition:</b> SimdFloat.h:6</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a0a7185e03fd2a1b35f58f8116e7c7f9a"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a0a7185e03fd2a1b35f58f8116e7c7f9a">xiiVec4Template::CompDiv</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; CompDiv(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise division of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:357</div></div>
<div class="ttc" id="anamespacexii_math_htm_a821b432e7a9c8ac292eb255ee11e9e10"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a821b432e7a9c8ac292eb255ee11e9e10">xiiMath::Abs</a></div><div class="ttdeci">constexpr XII_ALWAYS_INLINE T Abs(T f)</div><div class="ttdoc">Returns the absolute value of f.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:41</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a13f044190648770d6f34dbeebda054f2"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a13f044190648770d6f34dbeebda054f2">xiiVec4Template::CompMin</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; CompMin(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:318</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_ad5fb940e9f11a3292a47180a6c9e0312"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#ad5fb940e9f11a3292a47180a6c9e0312">xiiVec4Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const xiiVec4Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:428</div></div>
<div class="ttc" id="anamespacexii_math_htm_ae7fbda648b6f9bcc4dc23962d06c93f4"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#ae7fbda648b6f9bcc4dc23962d06c93f4">xiiMath::Sqrt</a></div><div class="ttdeci">XII_ALWAYS_INLINE double Sqrt(double f)</div><div class="ttdoc">Returns the square root of f.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:84</div></div>
<div class="ttc" id="aclassxii_angle_template_htm"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt; float &gt;</a></div></div>
<div class="ttc" id="aclassxii_vec4_template_htm"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt; float &gt;</a></div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6571b00f9c254a01b1735d75b2065daf.htm">SimdMath</a></li><li class="navelem"><a class="el" href="../../dir_421677d30b51fc7bb4bb6333857496b6.htm">Implementation</a></li><li class="navelem"><a class="el" href="../../dir_a64711f4a2201bc7325eb48d27c1ca9a.htm">FPU</a></li><li class="navelem"><b>FPUFloat_inl.h</b></li>
    <li class="footer">Generated on Fri Jun 16 2023 14:12:44 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
