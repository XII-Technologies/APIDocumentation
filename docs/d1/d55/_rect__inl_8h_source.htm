<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Math/Implementation/Rect_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d55/_rect__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Rect_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a34ed761eda61993f1a0a8963e0e4bde0">xiiRectTemplate&lt;Type&gt;::xiiRectTemplate</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#abdf3d9bfd9eb4ff6f4d9030e218d8c39">    7</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a34ed761eda61993f1a0a8963e0e4bde0">xiiRectTemplate&lt;Type&gt;::xiiRectTemplate</a>(Type x, Type y, Type width, Type height) :</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  x(x), y(y), width(width), height(height)</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;{</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;}</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#ac46f5a7b5893417c4459cfb57f24ea6f">   13</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a34ed761eda61993f1a0a8963e0e4bde0">xiiRectTemplate&lt;Type&gt;::xiiRectTemplate</a>(Type width, Type height) :</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  x(0), y(0), width(width), height(height)</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;::operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keywordflow">return</span> x == rhs.x &amp;&amp; y == rhs.y &amp;&amp; width == rhs.width &amp;&amp; height == rhs.height;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;::operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == rhs);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a6bec19149629f54bd760769c8f72ddca">   31</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a6bec19149629f54bd760769c8f72ddca">xiiRectTemplate&lt;Type&gt;::HasNonZeroArea</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordflow">return</span> (width &gt; 0) &amp;&amp; (height &gt; 0);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a39b74918c1bec1c63327ec4ffc663d5b">   37</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a39b74918c1bec1c63327ec4ffc663d5b">xiiRectTemplate&lt;Type&gt;::Contains</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordflow">if</span> (vPoint.x &gt;= x &amp;&amp; vPoint.x &lt;= Right())</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">if</span> (vPoint.y &gt;= y &amp;&amp; vPoint.y &lt;= Bottom())</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a96e46128ebc6ae9f46e8cf83e8d7b1bd">   49</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a96e46128ebc6ae9f46e8cf83e8d7b1bd">xiiRectTemplate&lt;Type&gt;::Overlaps</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;</a>&amp; other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordflow">if</span> (x &lt; other.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#abbcffeffd37dea2c7e7d859214c0b36b">Right</a>() &amp;&amp; Right() &gt; other.x &amp;&amp; y &lt; other.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a12b5988fa1f1929f72e967c3e1c6d93b">Bottom</a>() &amp;&amp; Bottom() &gt; other.y)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a1d21a40703e16a8a078831a0ac0d29a0">   58</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a1d21a40703e16a8a078831a0ac0d29a0">xiiRectTemplate&lt;Type&gt;::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;</a>&amp; other)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  Type thisRight  = Right();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  Type thisBottom = Bottom();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordflow">if</span> (other.x &lt; x)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    x = other.x;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordflow">if</span> (other.y &lt; y)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    y = other.y;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordflow">if</span> (other.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#abbcffeffd37dea2c7e7d859214c0b36b">Right</a>() &gt; thisRight)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    width = other.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#abbcffeffd37dea2c7e7d859214c0b36b">Right</a>() - x;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    width = thisRight - x;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordflow">if</span> (other.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a12b5988fa1f1929f72e967c3e1c6d93b">Bottom</a>() &gt; thisBottom)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    height = other.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a12b5988fa1f1929f72e967c3e1c6d93b">Bottom</a>() - y;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    height = thisBottom - y;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a1920bbf409e461eb00fb58e0aed0fd3e">   81</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a1920bbf409e461eb00fb58e0aed0fd3e">xiiRectTemplate&lt;Type&gt;::Clip</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;</a>&amp; clipRect)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  Type newLeft = xiiMath::Max&lt;Type&gt;(x, clipRect.x);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  Type newTop  = xiiMath::Max&lt;Type&gt;(y, clipRect.y);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  Type newRight  = xiiMath::Min&lt;Type&gt;(Right(), clipRect.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#abbcffeffd37dea2c7e7d859214c0b36b">Right</a>());</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  Type newBottom = xiiMath::Min&lt;Type&gt;(Bottom(), clipRect.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a12b5988fa1f1929f72e967c3e1c6d93b">Bottom</a>());</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  x      = newLeft;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  y      = newTop;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  width  = newRight - newLeft;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  height = newBottom - newTop;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a13fe09852998299da94ed532589b2694">   96</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a13fe09852998299da94ed532589b2694">xiiRectTemplate&lt;Type&gt;::SetInvalid</a>()</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keyword">const</span> Type fLargeValue = xiiMath::MaxValue&lt;Type&gt;() / 2;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  x                      = fLargeValue;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  y                      = fLargeValue;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  width                  = -fLargeValue;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  height                 = -fLargeValue;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a06c07bcb355bc58c324b9e29cddf9aa2">  108</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a06c07bcb355bc58c324b9e29cddf9aa2">xiiRectTemplate&lt;Type&gt;::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordflow">return</span> width &gt;= 0 &amp;&amp; height &gt;= 0;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a6216509334479cabaf997dfca6fb0831">  116</a></span>&#160;XII_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a6216509334479cabaf997dfca6fb0831">xiiRectTemplate&lt;Type&gt;::GetClampedPoint</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>(<a class="code" href="../../d1/d37/namespacexii_math.htm#a0543392160b2254da61b3ec76579f0d2">xiiMath::Clamp</a>(vPoint.x, Left(), Right()), <a class="code" href="../../d1/d37/namespacexii_math.htm#a0543392160b2254da61b3ec76579f0d2">xiiMath::Clamp</a>(vPoint.y, Top(), Bottom()));</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a4143da04e2215d5388edea34d26ad62c">  124</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a4143da04e2215d5388edea34d26ad62c">xiiRectTemplate&lt;Type&gt;::SetIntersection</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;</a>&amp; r0, <span class="keyword">const</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;</a>&amp; r1)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  Type x1 = <a class="code" href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max</a>(r0.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a0bf9f19126954191f882f6f2f3f8c67c">GetX1</a>(), r1.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a0bf9f19126954191f882f6f2f3f8c67c">GetX1</a>());</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  Type y1 = <a class="code" href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max</a>(r0.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a5f6e3452cb1fa3198a1a963b91be5ee4">GetY1</a>(), r1.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a5f6e3452cb1fa3198a1a963b91be5ee4">GetY1</a>());</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  Type x2 = <a class="code" href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a>(r0.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a5981417e5e98a61b147c5a871d8f1431">GetX2</a>(), r1.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a5981417e5e98a61b147c5a871d8f1431">GetX2</a>());</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  Type y2 = <a class="code" href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a>(r0.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a39527adf3158c823eb9ac484ae107449">GetY2</a>(), r1.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a39527adf3158c823eb9ac484ae107449">GetY2</a>());</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  x      = x1;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  y      = y1;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  width  = x2 - x1;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  height = y2 - y1;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#aa4903651f9dcc28d5ca4c1a30d579ea4">  140</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#aa4903651f9dcc28d5ca4c1a30d579ea4">xiiRectTemplate&lt;Type&gt;::SetUnion</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;</a>&amp; r0, <span class="keyword">const</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate&lt;Type&gt;</a>&amp; r1)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  Type x1 = <a class="code" href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a>(r0.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a0bf9f19126954191f882f6f2f3f8c67c">GetX1</a>(), r1.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a0bf9f19126954191f882f6f2f3f8c67c">GetX1</a>());</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  Type y1 = <a class="code" href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a>(r0.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a5f6e3452cb1fa3198a1a963b91be5ee4">GetY1</a>(), r1.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a5f6e3452cb1fa3198a1a963b91be5ee4">GetY1</a>());</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  Type x2 = <a class="code" href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max</a>(r0.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a5981417e5e98a61b147c5a871d8f1431">GetX2</a>(), r1.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a5981417e5e98a61b147c5a871d8f1431">GetX2</a>());</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  Type y2 = <a class="code" href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max</a>(r0.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a39527adf3158c823eb9ac484ae107449">GetY2</a>(), r1.<a class="code" href="../../d2/d1d/classxii_rect_template.htm#a39527adf3158c823eb9ac484ae107449">GetY2</a>());</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  x      = x1;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  y      = y1;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  width  = x2 - x1;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  height = y2 - y1;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#aa7d3a6d07925b2a6dae845afa8f16192">  156</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#aa7d3a6d07925b2a6dae845afa8f16192">xiiRectTemplate&lt;Type&gt;::Translate</a>(Type tX, Type tY)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  x += tX;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  y += tY;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="../../d2/d1d/classxii_rect_template.htm#a155a95280c63d917b740f9739d65e774">  165</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/d1d/classxii_rect_template.htm#a155a95280c63d917b740f9739d65e774">xiiRectTemplate&lt;Type&gt;::Scale</a>(Type sX, Type sY)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  x *= sX;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  y *= sY;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  width *= sX;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  height *= sY;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_rect_template_htm_aa4903651f9dcc28d5ca4c1a30d579ea4"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#aa4903651f9dcc28d5ca4c1a30d579ea4">xiiRectTemplate::SetUnion</a></div><div class="ttdeci">void SetUnion(const xiiRectTemplate&lt; Type &gt; &amp;r0, const xiiRectTemplate&lt; Type &gt; &amp;r1)</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:140</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a12b5988fa1f1929f72e967c3e1c6d93b"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a12b5988fa1f1929f72e967c3e1c6d93b">xiiRectTemplate::Bottom</a></div><div class="ttdeci">Type Bottom() const</div><div class="ttdoc">The larger value along y.</div><div class="ttdef"><b>Definition:</b> Rect.h:44</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a5f6e3452cb1fa3198a1a963b91be5ee4"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a5f6e3452cb1fa3198a1a963b91be5ee4">xiiRectTemplate::GetY1</a></div><div class="ttdeci">Type GetY1() const</div><div class="ttdoc">The smaller value along y. Same as Top().</div><div class="ttdef"><b>Definition:</b> Rect.h:53</div></div>
<div class="ttc" id="anamespacexii_math_htm_a0543392160b2254da61b3ec76579f0d2"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a0543392160b2254da61b3ec76579f0d2">xiiMath::Clamp</a></div><div class="ttdeci">constexpr XII_ALWAYS_INLINE T Clamp(T value, T min_val, T max_val)</div><div class="ttdoc">Clamps &quot;value&quot; to the range [min; max]. Returns &quot;value&quot;, if it is inside the range already.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:71</div></div>
<div class="ttc" id="anamespacexii_math_htm_a4d6f8bf4858245e40a706a3aabd0a59e"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max</a></div><div class="ttdeci">constexpr XII_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:59</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a13fe09852998299da94ed532589b2694"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a13fe09852998299da94ed532589b2694">xiiRectTemplate::SetInvalid</a></div><div class="ttdeci">void SetInvalid()</div><div class="ttdoc">Sets the rect to invalid values.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:96</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a6bec19149629f54bd760769c8f72ddca"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a6bec19149629f54bd760769c8f72ddca">xiiRectTemplate::HasNonZeroArea</a></div><div class="ttdeci">bool HasNonZeroArea() const</div><div class="ttdoc">Returns true if the area of the rectangle is non zero.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:31</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a34ed761eda61993f1a0a8963e0e4bde0"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a34ed761eda61993f1a0a8963e0e4bde0">xiiRectTemplate::xiiRectTemplate</a></div><div class="ttdeci">xiiRectTemplate()</div><div class="ttdoc">Default constructor does not initialize the data.</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a6216509334479cabaf997dfca6fb0831"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a6216509334479cabaf997dfca6fb0831">xiiRectTemplate::GetClampedPoint</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; GetClampedPoint(const xiiVec2Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">The given point is clamped to the area of the rect, i.e. it will be either inside the rect or on its ...</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:116</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a06c07bcb355bc58c324b9e29cddf9aa2"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a06c07bcb355bc58c324b9e29cddf9aa2">xiiRectTemplate::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether the position and size contain valid values.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:108</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_abbcffeffd37dea2c7e7d859214c0b36b"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#abbcffeffd37dea2c7e7d859214c0b36b">xiiRectTemplate::Right</a></div><div class="ttdeci">Type Right() const</div><div class="ttdoc">The larger value along x.</div><div class="ttdef"><b>Definition:</b> Rect.h:38</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a96e46128ebc6ae9f46e8cf83e8d7b1bd"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a96e46128ebc6ae9f46e8cf83e8d7b1bd">xiiRectTemplate::Overlaps</a></div><div class="ttdeci">bool Overlaps(const xiiRectTemplate&lt; Type &gt; &amp;other) const</div><div class="ttdoc">Returns true if the rectangle overlaps the provided rectangle. Also returns true if the rectangles ar...</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:49</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_aa7d3a6d07925b2a6dae845afa8f16192"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#aa7d3a6d07925b2a6dae845afa8f16192">xiiRectTemplate::Translate</a></div><div class="ttdeci">void Translate(Type tX, Type tY)</div><div class="ttdoc">Moves the rectangle.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:156</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a39527adf3158c823eb9ac484ae107449"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a39527adf3158c823eb9ac484ae107449">xiiRectTemplate::GetY2</a></div><div class="ttdeci">Type GetY2() const</div><div class="ttdoc">The larger value along y. Same as Bottom().</div><div class="ttdef"><b>Definition:</b> Rect.h:56</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a0bf9f19126954191f882f6f2f3f8c67c"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a0bf9f19126954191f882f6f2f3f8c67c">xiiRectTemplate::GetX1</a></div><div class="ttdeci">Type GetX1() const</div><div class="ttdoc">The smaller value along x. Same as Left().</div><div class="ttdef"><b>Definition:</b> Rect.h:47</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a1d21a40703e16a8a078831a0ac0d29a0"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a1d21a40703e16a8a078831a0ac0d29a0">xiiRectTemplate::ExpandToInclude</a></div><div class="ttdeci">void ExpandToInclude(const xiiRectTemplate&lt; Type &gt; &amp;other)</div><div class="ttdoc">Extends this rectangle so that the provided rectangle is completely contained within it.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:58</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a1920bbf409e461eb00fb58e0aed0fd3e"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a1920bbf409e461eb00fb58e0aed0fd3e">xiiRectTemplate::Clip</a></div><div class="ttdeci">void Clip(const xiiRectTemplate&lt; Type &gt; &amp;clipRect)</div><div class="ttdoc">Clips this rect so that it is fully inside the provided rectangle.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:81</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a39b74918c1bec1c63327ec4ffc663d5b"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a39b74918c1bec1c63327ec4ffc663d5b">xiiRectTemplate::Contains</a></div><div class="ttdeci">bool Contains(const xiiVec2Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns true if the rectangle contains the provided point.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:37</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a5981417e5e98a61b147c5a871d8f1431"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a5981417e5e98a61b147c5a871d8f1431">xiiRectTemplate::GetX2</a></div><div class="ttdeci">Type GetX2() const</div><div class="ttdoc">The larger value along x. Same as Right().</div><div class="ttdef"><b>Definition:</b> Rect.h:50</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a155a95280c63d917b740f9739d65e774"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a155a95280c63d917b740f9739d65e774">xiiRectTemplate::Scale</a></div><div class="ttdeci">void Scale(Type sX, Type sY)</div><div class="ttdoc">Scales width and height, and moves the position as well.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:165</div></div>
<div class="ttc" id="aclassxii_rect_template_htm"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm">xiiRectTemplate</a></div><div class="ttdoc">A simple rectangle class templated on the type for x, y and width, height.</div><div class="ttdef"><b>Definition:</b> Rect.h:9</div></div>
<div class="ttc" id="anamespacexii_math_htm_a2c660f80f0df5bb91a751d12a93cb9cb"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a></div><div class="ttdeci">constexpr XII_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:47</div></div>
<div class="ttc" id="aclassxii_rect_template_htm_a4143da04e2215d5388edea34d26ad62c"><div class="ttname"><a href="../../d2/d1d/classxii_rect_template.htm#a4143da04e2215d5388edea34d26ad62c">xiiRectTemplate::SetIntersection</a></div><div class="ttdeci">void SetIntersection(const xiiRectTemplate&lt; Type &gt; &amp;r0, const xiiRectTemplate&lt; Type &gt; &amp;r1)</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:124</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:127</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c1b0860bb61ff24e678d996d14e4bcdd.htm">Math</a></li><li class="navelem"><a class="el" href="../../dir_fb7e93d80251333452775ccd3b7c417a.htm">Implementation</a></li><li class="navelem"><b>Rect_inl.h</b></li>
    <li class="footer">Generated on Sun Aug 20 2023 01:11:58 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
