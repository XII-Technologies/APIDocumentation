<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiEndianHelper Struct Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d45/structxii_endian_helper.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../de/de2/structxii_endian_helper-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiEndianHelper Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Collection of helper methods when working with endianess "problems".  
 <a href="../../d1/d45/structxii_endian_helper.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/dad/_endian_helper_8h_source.htm">EndianHelper.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a607da5aa302290ca1cbf6a4954bd5c8d"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#a607da5aa302290ca1cbf6a4954bd5c8d">IsBigEndian</a> ()</td></tr>
<tr class="memdesc:a607da5aa302290ca1cbf6a4954bd5c8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if called on a big endian system, false otherwise.  <a href="../../d1/d45/structxii_endian_helper.htm#a607da5aa302290ca1cbf6a4954bd5c8d">More...</a><br /></td></tr>
<tr class="separator:a607da5aa302290ca1cbf6a4954bd5c8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a287d44e7d1f9cb390dcba9ac8685c65d"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#a287d44e7d1f9cb390dcba9ac8685c65d">IsLittleEndian</a> ()</td></tr>
<tr class="memdesc:a287d44e7d1f9cb390dcba9ac8685c65d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if called on a little endian system, false otherwise.  <a href="../../d1/d45/structxii_endian_helper.htm#a287d44e7d1f9cb390dcba9ac8685c65d">More...</a><br /></td></tr>
<tr class="separator:a287d44e7d1f9cb390dcba9ac8685c65d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a196faec10a91983a2cb3a8e457bceb80"><td class="memItemLeft" align="right" valign="top"><a id="a196faec10a91983a2cb3a8e457bceb80"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#a196faec10a91983a2cb3a8e457bceb80">SwitchWords</a> (xiiUInt16 *pWords, xiiUInt32 uiCount)</td></tr>
<tr class="memdesc:a196faec10a91983a2cb3a8e457bceb80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches endianess of the given array of words (16 bit values). <br /></td></tr>
<tr class="separator:a196faec10a91983a2cb3a8e457bceb80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a475d9cca1635052439290272dff3eb37"><td class="memItemLeft" align="right" valign="top"><a id="a475d9cca1635052439290272dff3eb37"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#a475d9cca1635052439290272dff3eb37">SwitchDWords</a> (xiiUInt32 *pDWords, xiiUInt32 uiCount)</td></tr>
<tr class="memdesc:a475d9cca1635052439290272dff3eb37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches endianess of the given array of double words (32 bit values). <br /></td></tr>
<tr class="separator:a475d9cca1635052439290272dff3eb37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4335b3fa729862ee6046d0a3faf53579"><td class="memItemLeft" align="right" valign="top"><a id="a4335b3fa729862ee6046d0a3faf53579"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#a4335b3fa729862ee6046d0a3faf53579">SwitchQWords</a> (xiiUInt64 *pQWords, xiiUInt32 uiCount)</td></tr>
<tr class="memdesc:a4335b3fa729862ee6046d0a3faf53579"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches endianess of the given array of quad words (64 bit values). <br /></td></tr>
<tr class="separator:a4335b3fa729862ee6046d0a3faf53579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d8b02dcd8d543e2e084262546b226ed"><td class="memItemLeft" align="right" valign="top"><a id="a1d8b02dcd8d543e2e084262546b226ed"></a>
static XII_ALWAYS_INLINE xiiUInt16&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#a1d8b02dcd8d543e2e084262546b226ed">Switch</a> (xiiUInt16 uiWord)</td></tr>
<tr class="memdesc:a1d8b02dcd8d543e2e084262546b226ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a single switched word (16 bit value). <br /></td></tr>
<tr class="separator:a1d8b02dcd8d543e2e084262546b226ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a850f61c865e735174307e0ca9c30d925"><td class="memItemLeft" align="right" valign="top"><a id="a850f61c865e735174307e0ca9c30d925"></a>
static XII_ALWAYS_INLINE xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#a850f61c865e735174307e0ca9c30d925">Switch</a> (xiiUInt32 uiDWord)</td></tr>
<tr class="memdesc:a850f61c865e735174307e0ca9c30d925"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a single switched double word (32 bit value). <br /></td></tr>
<tr class="separator:a850f61c865e735174307e0ca9c30d925"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae1b39a77e8264436c3379d0dc76fea8"><td class="memItemLeft" align="right" valign="top"><a id="aae1b39a77e8264436c3379d0dc76fea8"></a>
static XII_ALWAYS_INLINE xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#aae1b39a77e8264436c3379d0dc76fea8">Switch</a> (xiiUInt64 uiQWord)</td></tr>
<tr class="memdesc:aae1b39a77e8264436c3379d0dc76fea8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a single switched quad word (64 bit value). <br /></td></tr>
<tr class="separator:aae1b39a77e8264436c3379d0dc76fea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4348b30671167d268cb0a1cd64821f8"><td class="memTemplParams" colspan="2"><a id="af4348b30671167d268cb0a1cd64821f8"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:af4348b30671167d268cb0a1cd64821f8"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#af4348b30671167d268cb0a1cd64821f8">SwitchInPlace</a> (T *pValue)</td></tr>
<tr class="memdesc:af4348b30671167d268cb0a1cd64821f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches a value in place (template accepts pointers for 2, 4 &amp; 8 byte data types) <br /></td></tr>
<tr class="separator:af4348b30671167d268cb0a1cd64821f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac04b6c644a4a6486a0721a59da7f1f88"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#ac04b6c644a4a6486a0721a59da7f1f88">SwitchStruct</a> (void *pDataPointer, const char *szFormat)</td></tr>
<tr class="memdesc:ac04b6c644a4a6486a0721a59da7f1f88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches a given struct according to the layout described in the szFormat parameter.  <a href="../../d1/d45/structxii_endian_helper.htm#ac04b6c644a4a6486a0721a59da7f1f88">More...</a><br /></td></tr>
<tr class="separator:ac04b6c644a4a6486a0721a59da7f1f88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbfb9f56323b04a667cc3cb8d9aad66c"><td class="memTemplParams" colspan="2"><a id="acbfb9f56323b04a667cc3cb8d9aad66c"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:acbfb9f56323b04a667cc3cb8d9aad66c"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#acbfb9f56323b04a667cc3cb8d9aad66c">SwitchStruct</a> (T *pDataPointer, const char *szFormat)</td></tr>
<tr class="memdesc:acbfb9f56323b04a667cc3cb8d9aad66c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Templated helper method for SwitchStruct. <br /></td></tr>
<tr class="separator:acbfb9f56323b04a667cc3cb8d9aad66c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c5f61f3bf305708d84ace865af33d25"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#a2c5f61f3bf305708d84ace865af33d25">SwitchStructs</a> (void *pDataPointer, const char *szFormat, xiiUInt32 uiStride, xiiUInt32 uiCount)</td></tr>
<tr class="memdesc:a2c5f61f3bf305708d84ace865af33d25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches a given set of struct according to the layout described in the szFormat parameter.  <a href="../../d1/d45/structxii_endian_helper.htm#a2c5f61f3bf305708d84ace865af33d25">More...</a><br /></td></tr>
<tr class="separator:a2c5f61f3bf305708d84ace865af33d25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27742cde7e3d6ef5b066da6ce40a723c"><td class="memTemplParams" colspan="2"><a id="a27742cde7e3d6ef5b066da6ce40a723c"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a27742cde7e3d6ef5b066da6ce40a723c"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d45/structxii_endian_helper.htm#a27742cde7e3d6ef5b066da6ce40a723c">SwitchStructs</a> (T *pDataPointer, const char *szFormat, xiiUInt32 uiCount)</td></tr>
<tr class="memdesc:a27742cde7e3d6ef5b066da6ce40a723c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Templated helper method for SwitchStructs. <br /></td></tr>
<tr class="separator:a27742cde7e3d6ef5b066da6ce40a723c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Collection of helper methods when working with endianess "problems". </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a607da5aa302290ca1cbf6a4954bd5c8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a607da5aa302290ca1cbf6a4954bd5c8d">&#9670;&nbsp;</a></span>IsBigEndian()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool xiiEndianHelper::IsBigEndian </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if called on a big endian system, false otherwise. </p>
<dl class="section note"><dt>Note</dt><dd>Note that usually the compile time decisions with the defines XII_PLATFORM_LITTLE_ENDIAN, XII_PLATFORM_BIG_ENDIAN is preferred. </dd></dl>

</div>
</div>
<a id="a287d44e7d1f9cb390dcba9ac8685c65d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a287d44e7d1f9cb390dcba9ac8685c65d">&#9670;&nbsp;</a></span>IsLittleEndian()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool xiiEndianHelper::IsLittleEndian </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if called on a little endian system, false otherwise. </p>
<dl class="section note"><dt>Note</dt><dd>Note that usually the compile time decisions with the defines XII_PLATFORM_LITTLE_ENDIAN, XII_PLATFORM_BIG_ENDIAN is preferred. </dd></dl>

</div>
</div>
<a id="ac04b6c644a4a6486a0721a59da7f1f88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac04b6c644a4a6486a0721a59da7f1f88">&#9670;&nbsp;</a></span>SwitchStruct()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiEndianHelper::SwitchStruct </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pDataPointer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szFormat</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Switches a given struct according to the layout described in the szFormat parameter. </p>
<p>The format string may contain the characters:</p><ul>
<li>c, b for a member of 1 byte</li>
<li>w, s for a member of 2 bytes (word, xiiUInt16)</li>
<li>d for a member of 4 bytes (DWORD, xiiUInt32)</li>
<li>q for a member of 8 bytes (DWORD, xiiUInt64) </li>
</ul>

</div>
</div>
<a id="a2c5f61f3bf305708d84ace865af33d25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c5f61f3bf305708d84ace865af33d25">&#9670;&nbsp;</a></span>SwitchStructs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiEndianHelper::SwitchStructs </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pDataPointer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szFormat</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiStride</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Switches a given set of struct according to the layout described in the szFormat parameter. </p>
<p>The format string may contain the characters:</p><ul>
<li>c, b for a member of 1 byte</li>
<li>w, s for a member of 2 bytes (word, xiiUInt16)</li>
<li>d for a member of 4 bytes (DWORD, xiiUInt32)</li>
<li>q for a member of 8 bytes (DWORD, xiiUInt64) </li>
</ul>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Memory/<a class="el" href="../../db/dad/_endian_helper_8h_source.htm">EndianHelper.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Memory/Implementation/EndianHelper.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d45/structxii_endian_helper.htm">xiiEndianHelper</a></li>
    <li class="footer">Generated on Wed Aug 16 2023 02:47:10 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
