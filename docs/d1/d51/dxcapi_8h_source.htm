<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/ShaderCompiler/ThirdParty/dxcapi.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d51/dxcapi_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">dxcapi.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">//                                                                           //</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// dxcapi.h                                                                  //</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// Copyright (C) Microsoft Corporation. All rights reserved.                 //</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// This file is distributed under the University of Illinois Open Source     //</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// License. See LICENSE.TXT for details.                                     //</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//                                                                           //</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// Provides declarations for the DirectX Compiler API entry point.           //</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">//                                                                           //</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#ifndef __DXC_API__</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#define __DXC_API__</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#  ifndef DXC_API_IMPORT</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#    define DXC_API_IMPORT __declspec(dllimport)</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#  endif</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#  ifndef DXC_API_IMPORT</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#    define DXC_API_IMPORT __attribute__((visibility(&quot;default&quot;)))</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#  endif</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#  ifndef CROSS_PLATFORM_UUIDOF</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">// Warning: This macro exists in WinAdapter.h as well</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#    define CROSS_PLATFORM_UUIDOF(interface, spec) \</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">      struct __declspec(uuid(spec)) interface;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#  endif</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#  include &quot;dxc/Support/WinAdapter.h&quot;</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#  include &lt;dlfcn.h&gt;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">struct </span>IMalloc;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">struct </span><a class="code" href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">typedef</span> HRESULT(__stdcall* DxcCreateInstanceProc)(</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  _In_ REFCLSID rclsid,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  _In_ REFIID   riid,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  _Out_ LPVOID* ppv);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">typedef</span> HRESULT(__stdcall* DxcCreateInstance2Proc)(</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  _In_ IMalloc* pMalloc,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  _In_ REFCLSID rclsid,</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  _In_ REFIID   riid,</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  _Out_ LPVOID* ppv);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> DXC_API_IMPORT HRESULT __stdcall DxcCreateInstance(</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  _In_ REFCLSID rclsid,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  _In_ REFIID   riid,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  _Out_ LPVOID* ppv);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span> DXC_API_IMPORT HRESULT __stdcall DxcCreateInstance2(</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  _In_ IMalloc* pMalloc,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  _In_ REFCLSID rclsid,</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  _In_ REFIID   riid,</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  _Out_ LPVOID* ppv);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">// For convenience, equivalent definitions to CP_UTF8 and CP_UTF16.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">#define DXC_CP_UTF8  65001</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#define DXC_CP_UTF16 1200</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">#define DXC_CP_UTF32 12000</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">// Use DXC_CP_ACP for: Binary;  ANSI Text;  Autodetect UTF with BOM</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">#define DXC_CP_ACP 0</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">#  define DXC_CP_WIDE DXC_CP_UTF16</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">#  define DXC_CP_WIDE DXC_CP_UTF32</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="comment">// This flag indicates that the shader hash was computed taking into account source information (-Zss)</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#define DXC_HASHFLAG_INCLUDES_SOURCE 1</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">// Hash digest type for ShaderHash</span></div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="../../d9/db5/struct_dxc_shader_hash.htm">  101</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="../../d9/db5/struct_dxc_shader_hash.htm">DxcShaderHash</a></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  UINT32 Flags; <span class="comment">// DXC_HASHFLAG_*</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  BYTE   HashDigest[16];</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;} <a class="code" href="../../d9/db5/struct_dxc_shader_hash.htm">DxcShaderHash</a>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">#define DXC_FOURCC(ch0, ch1, ch2, ch3) (             \</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">  (UINT32)(UINT8)(ch0) | (UINT32)(UINT8)(ch1) &lt;&lt; 8 | \</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">  (UINT32)(UINT8)(ch2) &lt;&lt; 16 | (UINT32)(UINT8)(ch3) &lt;&lt; 24)</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#define DXC_PART_PDB                      DXC_FOURCC(&#39;I&#39;, &#39;L&#39;, &#39;D&#39;, &#39;B&#39;)</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#define DXC_PART_PDB_NAME                 DXC_FOURCC(&#39;I&#39;, &#39;L&#39;, &#39;D&#39;, &#39;N&#39;)</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#define DXC_PART_PRIVATE_DATA             DXC_FOURCC(&#39;P&#39;, &#39;R&#39;, &#39;I&#39;, &#39;V&#39;)</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">#define DXC_PART_ROOT_SIGNATURE           DXC_FOURCC(&#39;R&#39;, &#39;T&#39;, &#39;S&#39;, &#39;0&#39;)</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">#define DXC_PART_DXIL                     DXC_FOURCC(&#39;D&#39;, &#39;X&#39;, &#39;I&#39;, &#39;L&#39;)</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#define DXC_PART_REFLECTION_DATA          DXC_FOURCC(&#39;S&#39;, &#39;T&#39;, &#39;A&#39;, &#39;T&#39;)</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#define DXC_PART_SHADER_HASH              DXC_FOURCC(&#39;H&#39;, &#39;A&#39;, &#39;S&#39;, &#39;H&#39;)</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">#define DXC_PART_INPUT_SIGNATURE          DXC_FOURCC(&#39;I&#39;, &#39;S&#39;, &#39;G&#39;, &#39;1&#39;)</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">#define DXC_PART_OUTPUT_SIGNATURE         DXC_FOURCC(&#39;O&#39;, &#39;S&#39;, &#39;G&#39;, &#39;1&#39;)</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">#define DXC_PART_PATCH_CONSTANT_SIGNATURE DXC_FOURCC(&#39;P&#39;, &#39;S&#39;, &#39;G&#39;, &#39;1&#39;)</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">// Some option arguments are defined here for continuity with D3DCompile interface</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor">#define DXC_ARG_DEBUG                          L&quot;-Zi&quot;</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#define DXC_ARG_SKIP_VALIDATION                L&quot;-Vd&quot;</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">#define DXC_ARG_SKIP_OPTIMIZATIONS             L&quot;-Od&quot;</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#define DXC_ARG_PACK_MATRIX_ROW_MAJOR          L&quot;-Zpr&quot;</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor">#define DXC_ARG_PACK_MATRIX_COLUMN_MAJOR       L&quot;-Zpc&quot;</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#define DXC_ARG_AVOID_FLOW_CONTROL             L&quot;-Gfa&quot;</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">#define DXC_ARG_PREFER_FLOW_CONTROL            L&quot;-Gfp&quot;</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#define DXC_ARG_ENABLE_STRICTNESS              L&quot;-Ges&quot;</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor">#define DXC_ARG_ENABLE_BACKWARDS_COMPATIBILITY L&quot;-Gec&quot;</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#define DXC_ARG_IEEE_STRICTNESS                L&quot;-Gis&quot;</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#define DXC_ARG_OPTIMIZATION_LEVEL0            L&quot;-O0&quot;</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor">#define DXC_ARG_OPTIMIZATION_LEVEL1            L&quot;-O1&quot;</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor">#define DXC_ARG_OPTIMIZATION_LEVEL2            L&quot;-O2&quot;</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">#define DXC_ARG_OPTIMIZATION_LEVEL3            L&quot;-O3&quot;</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">#define DXC_ARG_WARNINGS_ARE_ERRORS            L&quot;-WX&quot;</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">#define DXC_ARG_RESOURCES_MAY_ALIAS            L&quot;-res_may_alias&quot;</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">#define DXC_ARG_ALL_RESOURCES_BOUND            L&quot;-all_resources_bound&quot;</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">#define DXC_ARG_DEBUG_NAME_FOR_SOURCE          L&quot;-Zss&quot;</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">#define DXC_ARG_DEBUG_NAME_FOR_BINARY          L&quot;-Zsb&quot;</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">// IDxcBlob is an alias of ID3D10Blob and ID3DBlob</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>, <span class="stringliteral">&quot;8BA5FB08-5195-40e2-AC58-0D989C3A0102&quot;</span>)</div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="../../dd/d0e/struct_i_dxc_blob.htm">  144</a></span>&#160;struct <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a> : public IUnknown</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keyword">virtual</span> LPVOID STDMETHODCALLTYPE GetBufferPointer(<span class="keywordtype">void</span>) = 0;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keyword">virtual</span> SIZE_T STDMETHODCALLTYPE GetBufferSize(<span class="keywordtype">void</span>)    = 0;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;};</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>, <span class="stringliteral">&quot;7241d424-2646-4191-97c0-98e96e42fc68&quot;</span>)</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">  152</a></span>&#160;struct <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a> : public <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetEncoding(_Out_ BOOL* pKnown,</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                                _Out_ UINT32* pCodePage) = 0;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;};</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">// Notes on IDxcBlobWide and IDxcBlobUtf8</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">// These guarantee null-terminated text and eithre utf8 or the native wide char encoding.</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment">// GetBufferSize() will return the size in bytes, including null-terminator</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">// GetStringLength() will return the length in characters, excluding the null-terminator</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">// Name strings will use IDxcBlobWide, while other string output blobs,</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">// such as errors/warnings, preprocessed HLSL, or other text will be based</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="comment">// on the -encoding option.</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="comment">// The API will use this interface for output name strings</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>, <span class="stringliteral">&quot;A3F84EAB-0FAA-497E-A39C-EE6ED60B2D84&quot;</span>)</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../d0/dce/struct_i_dxc_blob_wide.htm">  169</a></span>&#160;struct <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a> : public <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">virtual</span> LPCWSTR STDMETHODCALLTYPE GetStringPointer(<span class="keywordtype">void</span>) = 0;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">virtual</span> SIZE_T STDMETHODCALLTYPE  GetStringLength(<span class="keywordtype">void</span>)  = 0;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;};</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d5/d8c/struct_i_dxc_blob_utf8.htm">IDxcBlobUtf8</a>, <span class="stringliteral">&quot;3DA636C9-BA71-4024-A301-30CBF125305B&quot;</span>)</div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="../../d5/d8c/struct_i_dxc_blob_utf8.htm">  176</a></span>&#160;struct <a class="code" href="../../d5/d8c/struct_i_dxc_blob_utf8.htm">IDxcBlobUtf8</a> : public <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;{</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keyword">virtual</span> LPCSTR STDMETHODCALLTYPE GetStringPointer(<span class="keywordtype">void</span>) = 0;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">virtual</span> SIZE_T STDMETHODCALLTYPE GetStringLength(<span class="keywordtype">void</span>)  = 0;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;};</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="comment">// Define legacy name IDxcBlobUtf16 as IDxcBlobWide for Win32</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">typedef</span> <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a> IDxcBlobUtf16;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a>, <span class="stringliteral">&quot;7f61fc7d-950d-467f-b3e3-3c02fb49187c&quot;</span>)</div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="../../d3/d16/struct_i_dxc_include_handler.htm">  189</a></span>&#160;struct <a class="code" href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a> : public IUnknown</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;{</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE LoadSource(</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    _In_z_ LPCWSTR                pFilename,                 <span class="comment">// Candidate filename.</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    _COM_Outptr_result_maybenull_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppIncludeSource <span class="comment">// Resultant source object for included file, nullptr if not found.</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;};</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="comment">// Structure for supplying bytes or text input to Dxc APIs.</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">// Use Encoding = 0 for non-text bytes, ANSI text, or unknown with BOM.</span></div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="../../d4/df2/struct_dxc_buffer.htm">  199</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="../../d4/df2/struct_dxc_buffer.htm">DxcBuffer</a></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;{</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  LPCVOID Ptr;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  SIZE_T  Size;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  UINT    Encoding;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;} <a class="code" href="../../d4/df2/struct_dxc_buffer.htm">DxcText</a>;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="../../d5/d01/struct_dxc_define.htm">  206</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/d01/struct_dxc_define.htm">DxcDefine</a></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;{</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  LPCWSTR             Name;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  _Maybenull_ LPCWSTR Value;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;};</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d9/dc2/struct_i_dxc_compiler_args.htm">IDxcCompilerArgs</a>, <span class="stringliteral">&quot;73EFFE2A-70DC-45F8-9690-EFF64C02429D&quot;</span>)</div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="../../d9/dc2/struct_i_dxc_compiler_args.htm">  213</a></span>&#160;struct <a class="code" href="../../d9/dc2/struct_i_dxc_compiler_args.htm">IDxcCompilerArgs</a> : public IUnknown</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="comment">// Pass GetArguments() and GetCount() to Compile</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="keyword">virtual</span> LPCWSTR* STDMETHODCALLTYPE GetArguments() = 0;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keyword">virtual</span> UINT32 STDMETHODCALLTYPE   GetCount()     = 0;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="comment">// Add additional arguments or defines here, if desired.</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE AddArguments(</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    _In_opt_count_(argCount) LPCWSTR* pArguments, <span class="comment">// Array of pointers to arguments to add</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    _In_ UINT32                       argCount    <span class="comment">// Number of arguments to add</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE AddArgumentsUTF8(</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    _In_opt_count_(argCount) LPCSTR* pArguments, <span class="comment">// Array of pointers to UTF-8 arguments to add</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    _In_ UINT32                      argCount    <span class="comment">// Number of arguments to add</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE AddDefines(</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    _In_count_(defineCount) <span class="keyword">const</span> <a class="code" href="../../d5/d01/struct_dxc_define.htm">DxcDefine</a>* pDefines,   <span class="comment">// Array of defines</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    _In_ UINT32                              defineCount <span class="comment">// Number of defines</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;};</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">// Legacy Interfaces</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">// NOTE: IDxcUtils replaces IDxcLibrary</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../dd/d9d/struct_i_dxc_library.htm">IDxcLibrary</a>, <span class="stringliteral">&quot;e5204dc7-d18c-4c3c-bdfb-851673980fe7&quot;</span>)</div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="../../dd/d9d/struct_i_dxc_library.htm">  240</a></span>&#160;struct <a class="code" href="../../dd/d9d/struct_i_dxc_library.htm">IDxcLibrary</a> : public IUnknown</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;{</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE SetMalloc(_In_opt_ IMalloc* pMalloc) = 0;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateBlobFromBlob(</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    UINT32         offset,</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    UINT32         length,</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    _COM_Outptr_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppResult) = 0;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateBlobFromFile(</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    _In_z_ LPCWSTR pFileName,</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    _In_opt_ UINT32* codePage,</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateBlobWithEncodingFromPinned(</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    _In_bytecount_(size) LPCVOID pText,</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    UINT32                       size,</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    UINT32                       codePage,</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateBlobWithEncodingOnHeapCopy(</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    _In_bytecount_(size) LPCVOID pText,</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    UINT32                       size,</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    UINT32                       codePage,</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateBlobWithEncodingOnMalloc(</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    _In_bytecount_(size) LPCVOID pText,</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    IMalloc*                     pIMalloc,</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    UINT32                       size,</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    UINT32                       codePage,</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateIncludeHandler(</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    _COM_Outptr_ <a class="code" href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a>** ppResult) = 0;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateStreamFromBlobReadOnly(</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    _COM_Outptr_ IStream** ppStream) = 0;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetBlobAsUtf8(</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="comment">// Renamed from GetBlobAsUtf16 to GetBlobAsWide</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetBlobAsWide(</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="comment">// Alias to GetBlobAsWide on Win32</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  <span class="keyword">inline</span> HRESULT GetBlobAsUtf16(</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding)</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  {</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="keywordflow">return</span> this-&gt;GetBlobAsWide(pBlob, pBlobEncoding);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  }</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;};</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">// NOTE: IDxcResult replaces IDxcOperationResult</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a>, <span class="stringliteral">&quot;CEDB484A-D4E9-445A-B991-CA21CA157DC2&quot;</span>)</div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="../../de/dff/struct_i_dxc_operation_result.htm">  295</a></span>&#160;struct <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a> : public IUnknown</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetStatus(_Out_ HRESULT* pStatus) = 0;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="comment">// GetResult returns the main result of the operation.</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="comment">// This corresponds to:</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="comment">// DXC_OUT_OBJECT - Compile() with shader or library target</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="comment">// DXC_OUT_DISASSEMBLY - Disassemble()</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="comment">// DXC_OUT_HLSL - Compile() with -P</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="comment">// DXC_OUT_ROOT_SIGNATURE - Compile() with rootsig_* target</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetResult(_COM_Outptr_result_maybenull_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppResult) = 0;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="comment">// GetErrorBuffer Corresponds to DXC_OUT_ERRORS.</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetErrorBuffer(_COM_Outptr_result_maybenull_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** ppErrors) = 0;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;};</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">// NOTE: IDxcCompiler3 replaces IDxcCompiler and IDxcCompiler2</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d6/d90/struct_i_dxc_compiler.htm">IDxcCompiler</a>, <span class="stringliteral">&quot;8c210bf3-011f-4422-8d70-6f9acb8db617&quot;</span>)</div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="../../d6/d90/struct_i_dxc_compiler.htm">  313</a></span>&#160;struct <a class="code" href="../../d6/d90/struct_i_dxc_compiler.htm">IDxcCompiler</a> : public IUnknown</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;{</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  <span class="comment">// Compile a single entry point to the target shader model</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Compile(</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>*                    pSource,        <span class="comment">// Source text to compile</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    _In_opt_z_ LPCWSTR                pSourceName,    <span class="comment">// Optional file name for pSource. Used in errors and include handlers.</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    _In_opt_z_ LPCWSTR                pEntryPoint,    <span class="comment">// entry point name</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    _In_z_ LPCWSTR                    pTargetProfile, <span class="comment">// shader profile to compile</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    _In_opt_count_(argCount) LPCWSTR* pArguments,     <span class="comment">// Array of pointers to arguments</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    _In_ UINT32                       argCount,       <span class="comment">// Number of arguments</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    _In_count_(defineCount)</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d5/d01/struct_dxc_define.htm">DxcDefine</a>* pDefines,                  <span class="comment">// Array of defines</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    _In_ UINT32        defineCount,               <span class="comment">// Number of defines</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    _In_opt_ <a class="code" href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a>* pIncludeHandler, <span class="comment">// user-provided interface to handle #include directives (optional)</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    _COM_Outptr_ <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a>** ppResult   <span class="comment">// Compiler output status, buffer, and errors</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <span class="comment">// Preprocess source text</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Preprocess(</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>*                    pSource,     <span class="comment">// Source text to preprocess</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    _In_opt_z_ LPCWSTR                pSourceName, <span class="comment">// Optional file name for pSource. Used in errors and include handlers.</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    _In_opt_count_(argCount) LPCWSTR* pArguments,  <span class="comment">// Array of pointers to arguments</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    _In_ UINT32                       argCount,    <span class="comment">// Number of arguments</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    _In_count_(defineCount)</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d5/d01/struct_dxc_define.htm">DxcDefine</a>* pDefines,                  <span class="comment">// Array of defines</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    _In_ UINT32        defineCount,               <span class="comment">// Number of defines</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    _In_opt_ <a class="code" href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a>* pIncludeHandler, <span class="comment">// user-provided interface to handle #include directives (optional)</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    _COM_Outptr_ <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a>** ppResult   <span class="comment">// Preprocessor output status, buffer, and errors</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160; </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;  <span class="comment">// Disassemble a program.</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Disassemble(</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pSource,                       <span class="comment">// Program to disassemble.</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** ppDisassembly <span class="comment">// Disassembly text.</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;};</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160; </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">// NOTE: IDxcCompiler3 replaces IDxcCompiler and IDxcCompiler2</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../db/d5b/struct_i_dxc_compiler2.htm">IDxcCompiler2</a>, <span class="stringliteral">&quot;A005A9D9-B8BB-4594-B5C9-0E633BEC4D37&quot;</span>)</div>
<div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="../../db/d5b/struct_i_dxc_compiler2.htm">  352</a></span>&#160;struct <a class="code" href="../../db/d5b/struct_i_dxc_compiler2.htm">IDxcCompiler2</a> : public <a class="code" href="../../d6/d90/struct_i_dxc_compiler.htm">IDxcCompiler</a></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;{</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  <span class="comment">// Compile a single entry point to the target shader model with debug information.</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CompileWithDebug(</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>*                    pSource,        <span class="comment">// Source text to compile</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    _In_opt_z_ LPCWSTR                pSourceName,    <span class="comment">// Optional file name for pSource. Used in errors and include handlers.</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    _In_opt_z_ LPCWSTR                pEntryPoint,    <span class="comment">// Entry point name</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    _In_z_ LPCWSTR                    pTargetProfile, <span class="comment">// Shader profile to compile</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    _In_opt_count_(argCount) LPCWSTR* pArguments,     <span class="comment">// Array of pointers to arguments</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    _In_ UINT32                       argCount,       <span class="comment">// Number of arguments</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    _In_count_(defineCount)</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d5/d01/struct_dxc_define.htm">DxcDefine</a>* pDefines,                   <span class="comment">// Array of defines</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    _In_ UINT32        defineCount,                <span class="comment">// Number of defines</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    _In_opt_ <a class="code" href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a>* pIncludeHandler,  <span class="comment">// user-provided interface to handle #include directives (optional)</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    _COM_Outptr_ <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a>** ppResult,   <span class="comment">// Compiler output status, buffer, and errors</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    _Outptr_opt_result_z_ LPWSTR* ppDebugBlobName, <span class="comment">// Suggested file name for debug blob. (Must be CoTaskMemFree()&#39;d!)</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    _COM_Outptr_opt_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppDebugBlob        <span class="comment">// Debug blob</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;};</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160; </div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../dc/d22/struct_i_dxc_linker.htm">IDxcLinker</a>, <span class="stringliteral">&quot;F1B5BE2A-62DD-4327-A1C2-42AC1E1E78E6&quot;</span>)</div>
<div class="line"><a name="l00373"></a><span class="lineno"><a class="line" href="../../dc/d22/struct_i_dxc_linker.htm">  373</a></span>&#160;struct <a class="code" href="../../dc/d22/struct_i_dxc_linker.htm">IDxcLinker</a> : public IUnknown</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;{</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="comment">// Register a library with name to ref it later.</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  <span class="keyword">virtual</span> HRESULT RegisterLibrary(</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    _In_opt_ LPCWSTR pLibName, <span class="comment">// Name of the library.</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pLib        <span class="comment">// Library blob.</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160; </div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  <span class="comment">// Links the shader and produces a shader blob that the Direct3D runtime can</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;  <span class="comment">// use.</span></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Link(</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    _In_opt_ LPCWSTR pEntryName,     <span class="comment">// Entry point name</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    _In_ LPCWSTR     pTargetProfile, <span class="comment">// shader profile to link</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    _In_count_(libCount)</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;      <span class="keyword">const</span> LPCWSTR*                        pLibNames,  <span class="comment">// Array of library names to link</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    _In_ UINT32                             libCount,   <span class="comment">// Number of libraries to link</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    _In_opt_count_(argCount) <span class="keyword">const</span> LPCWSTR* pArguments, <span class="comment">// Array of pointers to arguments</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    _In_ UINT32                             argCount,   <span class="comment">// Number of arguments</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    _COM_Outptr_</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;      <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a>** ppResult <span class="comment">// Linker output status, buffer, and errors</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;};</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="comment">// Latest interfaces. Please use these</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="comment">// NOTE: IDxcUtils replaces IDxcLibrary</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../dd/d8e/struct_i_dxc_utils.htm">IDxcUtils</a>, <span class="stringliteral">&quot;4605C4CB-2019-492A-ADA4-65F20BB7D67F&quot;</span>)</div>
<div class="line"><a name="l00403"></a><span class="lineno"><a class="line" href="../../dd/d8e/struct_i_dxc_utils.htm">  403</a></span>&#160;struct <a class="code" href="../../dd/d8e/struct_i_dxc_utils.htm">IDxcUtils</a> : public IUnknown</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;{</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  <span class="comment">// Create a sub-blob that holds a reference to the outer blob and points to its memory.</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateBlobFromBlob(</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    UINT32         offset,</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    UINT32         length,</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    _COM_Outptr_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppResult) = 0;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160; </div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  <span class="comment">// For codePage, use 0 (or DXC_CP_ACP) for raw binary or ANSI code page</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160; </div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  <span class="comment">// Creates a blob referencing existing memory, with no copy.</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;  <span class="comment">// User must manage the memory lifetime separately.</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;  <span class="comment">// (was: CreateBlobWithEncodingFromPinned)</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateBlobFromPinned(</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    _In_bytecount_(size) LPCVOID pData,</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    UINT32                       size,</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    UINT32                       codePage,</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160; </div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  <span class="comment">// Create blob, taking ownership of memory allocated with supplied allocator.</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;  <span class="comment">// (was: CreateBlobWithEncodingOnMalloc)</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE MoveToBlob(</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    _In_bytecount_(size) LPCVOID pData,</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    IMalloc*                     pIMalloc,</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    UINT32                       size,</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    UINT32                       codePage,</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160; </div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  <span class="comment">// New blobs and copied contents are allocated with the current allocator</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160; </div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  <span class="comment">// Copy blob contents to memory owned by the new blob.</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  <span class="comment">// (was: CreateBlobWithEncodingOnHeapCopy)</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateBlob(</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    _In_bytecount_(size) LPCVOID pData,</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    UINT32                       size,</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    UINT32                       codePage,</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160; </div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;  <span class="comment">// (was: CreateBlobFromFile)</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE LoadFile(</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    _In_z_ LPCWSTR pFileName,</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    _In_opt_ UINT32* pCodePage,</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160; </div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateReadOnlyStreamFromBlob(</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    _COM_Outptr_ IStream** ppStream) = 0;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;  <span class="comment">// Create default file-based include handler</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateDefaultIncludeHandler(</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    _COM_Outptr_ <a class="code" href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a>** ppResult) = 0;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160; </div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;  <span class="comment">// Convert or return matching encoded text blobs</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetBlobAsUtf8(</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    _COM_Outptr_ <a class="code" href="../../d5/d8c/struct_i_dxc_blob_utf8.htm">IDxcBlobUtf8</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160; </div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  <span class="comment">// Renamed from GetBlobAsUtf16 to GetBlobAsWide</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetBlobAsWide(</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    _COM_Outptr_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** pBlobEncoding) = 0;</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160; </div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  <span class="comment">// Alias to GetBlobAsWide on Win32</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;  <span class="keyword">inline</span> HRESULT GetBlobAsUtf16(</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pBlob,</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    _COM_Outptr_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** pBlobEncoding)</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;  {</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    <span class="keywordflow">return</span> this-&gt;GetBlobAsWide(pBlob, pBlobEncoding);</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  }</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160; </div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetDxilContainerPart(</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    _In_ <span class="keyword">const</span> <a class="code" href="../../d4/df2/struct_dxc_buffer.htm">DxcBuffer</a>*                pShader,</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    _In_ UINT32                          DxcPart,</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    _Outptr_result_nullonfailure_ <span class="keywordtype">void</span>** ppPartData,</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    _Out_ UINT32* pPartSizeInBytes) = 0;</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160; </div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;  <span class="comment">// Create reflection interface from serialized Dxil container, or DXC_PART_REFLECTION_DATA.</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;  <span class="comment">// TBD: Require part header for RDAT?  (leaning towards yes)</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CreateReflection(</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    _In_ <span class="keyword">const</span> <a class="code" href="../../d4/df2/struct_dxc_buffer.htm">DxcBuffer</a>* pData,</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    REFIID                iid,</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="keywordtype">void</span>**                ppvReflection) = 0;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160; </div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE BuildArguments(</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    _In_opt_z_ LPCWSTR                pSourceName,    <span class="comment">// Optional file name for pSource. Used in errors and include handlers.</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    _In_opt_z_ LPCWSTR                pEntryPoint,    <span class="comment">// Entry point name. (-E)</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    _In_z_ LPCWSTR                    pTargetProfile, <span class="comment">// Shader profile to compile. (-T)</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    _In_opt_count_(argCount) LPCWSTR* pArguments,     <span class="comment">// Array of pointers to arguments</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    _In_ UINT32                       argCount,       <span class="comment">// Number of arguments</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    _In_count_(defineCount)</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d5/d01/struct_dxc_define.htm">DxcDefine</a>* pDefines,           <span class="comment">// Array of defines</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    _In_ UINT32        defineCount,        <span class="comment">// Number of defines</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    _COM_Outptr_ <a class="code" href="../../d9/dc2/struct_i_dxc_compiler_args.htm">IDxcCompilerArgs</a>** ppArgs <span class="comment">// Arguments you can use with Compile() method</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160; </div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="comment">// Takes the shader PDB and returns the hash and the container inside it</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetPDBContents(</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pPDBBlob,</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    _COM_Outptr_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppHash,</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    _COM_Outptr_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppContainer) = 0;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;};</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160; </div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="comment">// For use with IDxcResult::[Has|Get]Output dxcOutKind argument</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="comment">// Note: text outputs returned from version 2 APIs are UTF-8 or UTF-16 based on -encoding option</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="keyword">typedef</span> <span class="keyword">enum</span> DXC_OUT_KIND</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;{</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;  DXC_OUT_NONE           = 0,</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  DXC_OUT_OBJECT         = 1,  <span class="comment">// IDxcBlob - Shader or library object</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;  DXC_OUT_ERRORS         = 2,  <span class="comment">// IDxcBlobUtf8 or IDxcBlobWide</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;  DXC_OUT_PDB            = 3,  <span class="comment">// IDxcBlob</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;  DXC_OUT_SHADER_HASH    = 4,  <span class="comment">// IDxcBlob - DxcShaderHash of shader or shader with source info (-Zsb/-Zss)</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;  DXC_OUT_DISASSEMBLY    = 5,  <span class="comment">// IDxcBlobUtf8 or IDxcBlobWide - from Disassemble</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;  DXC_OUT_HLSL           = 6,  <span class="comment">// IDxcBlobUtf8 or IDxcBlobWide - from Preprocessor or Rewriter</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;  DXC_OUT_TEXT           = 7,  <span class="comment">// IDxcBlobUtf8 or IDxcBlobWide - other text, such as -ast-dump or -Odump</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;  DXC_OUT_REFLECTION     = 8,  <span class="comment">// IDxcBlob - RDAT part with reflection data</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;  DXC_OUT_ROOT_SIGNATURE = 9,  <span class="comment">// IDxcBlob - Serialized root signature output</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;  DXC_OUT_EXTRA_OUTPUTS  = 10, <span class="comment">// IDxcExtraResults - Extra outputs</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;  DXC_OUT_REMARKS        = 11, <span class="comment">// IDxcBlobUtf8 or IDxcBlobWide - text directed at stdout</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;  DXC_OUT_TIME_REPORT    = 12, <span class="comment">// IDxcBlobUtf8 or IDxcBlobWide - text directed at stdout</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  DXC_OUT_TIME_TRACE     = 13, <span class="comment">// IDxcBlobUtf8 or IDxcBlobWide - text directed at stdout</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160; </div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;  DXC_OUT_LAST = DXC_OUT_TIME_TRACE, <span class="comment">// Last value for a counter</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160; </div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;  DXC_OUT_NUM_ENUMS,</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;  DXC_OUT_FORCE_DWORD = 0xFFFFFFFF</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;} DXC_OUT_KIND;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160; </div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;static_assert(DXC_OUT_NUM_ENUMS == DXC_OUT_LAST + 1,</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;              <span class="stringliteral">&quot;DXC_OUT_* Enum added and last value not updated.&quot;</span>);</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160; </div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d7/d55/struct_i_dxc_result.htm">IDxcResult</a>, <span class="stringliteral">&quot;58346CDA-DDE7-4497-9461-6F87AF5E0659&quot;</span>)</div>
<div class="line"><a name="l00538"></a><span class="lineno"><a class="line" href="../../d7/d55/struct_i_dxc_result.htm">  538</a></span>&#160;struct <a class="code" href="../../d7/d55/struct_i_dxc_result.htm">IDxcResult</a> : public <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;{</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;  <span class="keyword">virtual</span> BOOL STDMETHODCALLTYPE    HasOutput(_In_ DXC_OUT_KIND dxcOutKind)             = 0;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetOutput(_In_ DXC_OUT_KIND                        dxcOutKind,</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                                              _In_ REFIID                              iid,</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;                                              _COM_Outptr_opt_result_maybenull_ <span class="keywordtype">void</span>** ppvObject,</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                                              _COM_Outptr_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppOutputName) = 0;</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160; </div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  <span class="keyword">virtual</span> UINT32       GetNumOutputs()                = 0;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  <span class="keyword">virtual</span> DXC_OUT_KIND GetOutputByIndex(UINT32 Index) = 0;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  <span class="keyword">virtual</span> DXC_OUT_KIND PrimaryOutput()                = 0;</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;};</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160; </div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="comment">// Special names for extra output that should get written to specific streams</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;<span class="preprocessor">#define DXC_EXTRA_OUTPUT_NAME_STDOUT L&quot;*stdout*&quot;</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;<span class="preprocessor">#define DXC_EXTRA_OUTPUT_NAME_STDERR L&quot;*stderr*&quot;</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160; </div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../df/d90/struct_i_dxc_extra_outputs.htm">IDxcExtraOutputs</a>, <span class="stringliteral">&quot;319b37a2-a5c2-494a-a5de-4801b2faf989&quot;</span>)</div>
<div class="line"><a name="l00556"></a><span class="lineno"><a class="line" href="../../df/d90/struct_i_dxc_extra_outputs.htm">  556</a></span>&#160;struct <a class="code" href="../../df/d90/struct_i_dxc_extra_outputs.htm">IDxcExtraOutputs</a> : public IUnknown</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;{</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160; </div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;  <span class="keyword">virtual</span> UINT32 STDMETHODCALLTYPE  GetOutputCount()                                                         = 0;</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetOutput(_In_ UINT32                              uIndex,</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                                              _In_ REFIID                              iid,</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                                              _COM_Outptr_opt_result_maybenull_ <span class="keywordtype">void</span>** ppvObject,</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                                              _COM_Outptr_opt_result_maybenull_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppOutputType,</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                                              _COM_Outptr_opt_result_maybenull_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppOutputName) = 0;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;};</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160; </div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../dc/d13/struct_i_dxc_compiler3.htm">IDxcCompiler3</a>, <span class="stringliteral">&quot;228B4687-5A6A-4730-900C-9702B2203F54&quot;</span>)</div>
<div class="line"><a name="l00568"></a><span class="lineno"><a class="line" href="../../dc/d13/struct_i_dxc_compiler3.htm">  568</a></span>&#160;struct <a class="code" href="../../dc/d13/struct_i_dxc_compiler3.htm">IDxcCompiler3</a> : public IUnknown</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;{</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;  <span class="comment">// Compile a single entry point to the target shader model,</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;  <span class="comment">// Compile a library to a library target (-T lib_*),</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;  <span class="comment">// Compile a root signature (-T rootsig_*), or</span></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;  <span class="comment">// Preprocess HLSL source (-P)</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Compile(</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;    _In_ <span class="keyword">const</span> <a class="code" href="../../d4/df2/struct_dxc_buffer.htm">DxcBuffer</a>*             pSource,    <span class="comment">// Source text to compile</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    _In_opt_count_(argCount) LPCWSTR* pArguments, <span class="comment">// Array of pointers to arguments</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    _In_ UINT32                       argCount,   <span class="comment">// Number of arguments</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    _In_opt_ <a class="code" href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a>* pIncludeHandler, <span class="comment">// user-provided interface to handle #include directives (optional)</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    _In_ REFIID                  riid,</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    _Out_ LPVOID* ppResult <span class="comment">// IDxcResult: status, buffer, and errors</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160; </div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;  <span class="comment">// Disassemble a program.</span></div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Disassemble(</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    _In_ <span class="keyword">const</span> <a class="code" href="../../d4/df2/struct_dxc_buffer.htm">DxcBuffer</a>* pObject, <span class="comment">// Program to disassemble: dxil container or bitcode.</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    _In_ REFIID           riid,</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    _Out_ LPVOID* ppResult <span class="comment">// IDxcResult: status, disassembly text, and errors</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;};</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160; </div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> UINT32 DxcValidatorFlags_Default           = 0;</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> UINT32 DxcValidatorFlags_InPlaceEdit       = 1; <span class="comment">// Validator is allowed to update shader blob in-place.</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> UINT32 DxcValidatorFlags_RootSignatureOnly = 2;</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> UINT32 DxcValidatorFlags_ModuleOnly        = 4;</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> UINT32 DxcValidatorFlags_ValidMask         = 0x7;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160; </div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../de/d6c/struct_i_dxc_validator.htm">IDxcValidator</a>, <span class="stringliteral">&quot;A6E82BD2-1FD7-4826-9811-2857E797F49A&quot;</span>)</div>
<div class="line"><a name="l00598"></a><span class="lineno"><a class="line" href="../../de/d6c/struct_i_dxc_validator.htm">  598</a></span>&#160;struct <a class="code" href="../../de/d6c/struct_i_dxc_validator.htm">IDxcValidator</a> : public IUnknown</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;{</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;  <span class="comment">// Validate a shader.</span></div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Validate(</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pShader,                     <span class="comment">// Shader to validate.</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    _In_ UINT32    Flags,                       <span class="comment">// Validation flags.</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    _COM_Outptr_ <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a>** ppResult <span class="comment">// Validation output status, buffer, and errors</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;};</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160; </div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d7/d74/struct_i_dxc_validator2.htm">IDxcValidator2</a>, <span class="stringliteral">&quot;458e1fd1-b1b2-4750-a6e1-9c10f03bed92&quot;</span>)</div>
<div class="line"><a name="l00609"></a><span class="lineno"><a class="line" href="../../d7/d74/struct_i_dxc_validator2.htm">  609</a></span>&#160;struct <a class="code" href="../../d7/d74/struct_i_dxc_validator2.htm">IDxcValidator2</a> : public <a class="code" href="../../de/d6c/struct_i_dxc_validator.htm">IDxcValidator</a></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;{</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;  <span class="comment">// Validate a shader.</span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE ValidateWithDebug(</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pShader,                     <span class="comment">// Shader to validate.</span></div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    _In_ UINT32    Flags,                       <span class="comment">// Validation flags.</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;    _In_opt_ <a class="code" href="../../d4/df2/struct_dxc_buffer.htm">DxcBuffer</a>* pOptDebugBitcode,       <span class="comment">// Optional debug module bitcode to provide line numbers</span></div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    _COM_Outptr_ <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a>** ppResult <span class="comment">// Validation output status, buffer, and errors</span></div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;};</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160; </div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../dd/d8d/struct_i_dxc_container_builder.htm">IDxcContainerBuilder</a>, <span class="stringliteral">&quot;334b1f50-2292-4b35-99a1-25588d8c17fe&quot;</span>)</div>
<div class="line"><a name="l00621"></a><span class="lineno"><a class="line" href="../../dd/d8d/struct_i_dxc_container_builder.htm">  621</a></span>&#160;struct <a class="code" href="../../dd/d8d/struct_i_dxc_container_builder.htm">IDxcContainerBuilder</a> : public IUnknown</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;{</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Load(_In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pDxilContainerHeader)                = 0; <span class="comment">// Loads DxilContainer to the builder</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE AddPart(_In_ UINT32 fourCC, _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pSource)      = 0; <span class="comment">// Part to add to the container</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE RemovePart(_In_ UINT32 fourCC)                           = 0; <span class="comment">// Remove the part with fourCC</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE SerializeContainer(_Out_ <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a>** ppResult) = 0; <span class="comment">// Builds a container of the given container builder state</span></div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;};</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160; </div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d5/d6e/struct_i_dxc_assembler.htm">IDxcAssembler</a>, <span class="stringliteral">&quot;091f7a26-1c1f-4948-904b-e6e3a8a771d5&quot;</span>)</div>
<div class="line"><a name="l00630"></a><span class="lineno"><a class="line" href="../../d5/d6e/struct_i_dxc_assembler.htm">  630</a></span>&#160;struct <a class="code" href="../../d5/d6e/struct_i_dxc_assembler.htm">IDxcAssembler</a> : public IUnknown</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;{</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;  <span class="comment">// Assemble dxil in ll or llvm bitcode to DXIL container.</span></div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE AssembleToContainer(</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    _In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pShader,                     <span class="comment">// Shader to assemble.</span></div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    _COM_Outptr_ <a class="code" href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a>** ppResult <span class="comment">// Assembly output status, buffer, and errors</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;};</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160; </div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d4/dde/struct_i_dxc_container_reflection.htm">IDxcContainerReflection</a>, <span class="stringliteral">&quot;d2c21b26-8350-4bdc-976a-331ce6f4c54c&quot;</span>)</div>
<div class="line"><a name="l00640"></a><span class="lineno"><a class="line" href="../../d4/dde/struct_i_dxc_container_reflection.htm">  640</a></span>&#160;struct <a class="code" href="../../d4/dde/struct_i_dxc_container_reflection.htm">IDxcContainerReflection</a> : public IUnknown</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;{</div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Load(_In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pContainer)                              = 0; <span class="comment">// Container to load.</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetPartCount(_Out_ UINT32* pResult)                          = 0;</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetPartKind(UINT32 idx, _Out_ UINT32* pResult)               = 0;</div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetPartContent(UINT32 idx, _COM_Outptr_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppResult) = 0;</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE FindFirstPartKind(UINT32 kind, _Out_ UINT32* pResult)        = 0;</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetPartReflection(UINT32 idx, REFIID iid, <span class="keywordtype">void</span>** ppvObject)  = 0;</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;};</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160; </div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d9/de1/struct_i_dxc_optimizer_pass.htm">IDxcOptimizerPass</a>, <span class="stringliteral">&quot;AE2CD79F-CC22-453F-9B6B-B124E7A5204C&quot;</span>)</div>
<div class="line"><a name="l00651"></a><span class="lineno"><a class="line" href="../../d9/de1/struct_i_dxc_optimizer_pass.htm">  651</a></span>&#160;struct <a class="code" href="../../d9/de1/struct_i_dxc_optimizer_pass.htm">IDxcOptimizerPass</a> : public IUnknown</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;{</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetOptionName(_COM_Outptr_ LPWSTR* ppResult)                            = 0;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetDescription(_COM_Outptr_ LPWSTR* ppResult)                           = 0;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetOptionArgCount(_Out_ UINT32* pCount)                                 = 0;</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetOptionArgName(UINT32 argIndex, _COM_Outptr_ LPWSTR* ppResult)        = 0;</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetOptionArgDescription(UINT32 argIndex, _COM_Outptr_ LPWSTR* ppResult) = 0;</div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;};</div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160; </div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d8/d43/struct_i_dxc_optimizer.htm">IDxcOptimizer</a>, <span class="stringliteral">&quot;25740E2E-9CBA-401B-9119-4FB42F39F270&quot;</span>)</div>
<div class="line"><a name="l00661"></a><span class="lineno"><a class="line" href="../../d8/d43/struct_i_dxc_optimizer.htm">  661</a></span>&#160;struct <a class="code" href="../../d8/d43/struct_i_dxc_optimizer.htm">IDxcOptimizer</a> : public IUnknown</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;{</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetAvailablePassCount(_Out_ UINT32* pCount)                               = 0;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetAvailablePass(UINT32 index, _COM_Outptr_ <a class="code" href="../../d9/de1/struct_i_dxc_optimizer_pass.htm">IDxcOptimizerPass</a>** ppResult) = 0;</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE RunOptimizer(<a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>*                        pBlob,</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;                                                 _In_count_(optionCount) LPCWSTR* ppOptions,</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                                                 UINT32                           optionCount,</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;                                                 _COM_Outptr_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** pOutputModule,</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;                                                 _COM_Outptr_opt_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** ppOutputText)            = 0;</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;};</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160; </div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> UINT32 DxcVersionInfoFlags_None     = 0;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> UINT32 DxcVersionInfoFlags_Debug    = 1; <span class="comment">// Matches VS_FF_DEBUG</span></div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> UINT32 DxcVersionInfoFlags_Internal = 2; <span class="comment">// Internal Validator (non-signing)</span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160; </div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../da/d87/struct_i_dxc_version_info.htm">IDxcVersionInfo</a>, <span class="stringliteral">&quot;b04f5b50-2059-4f12-a8ff-a1e0cde1cc7e&quot;</span>)</div>
<div class="line"><a name="l00677"></a><span class="lineno"><a class="line" href="../../da/d87/struct_i_dxc_version_info.htm">  677</a></span>&#160;struct <a class="code" href="../../da/d87/struct_i_dxc_version_info.htm">IDxcVersionInfo</a> : public IUnknown</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;{</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetVersion(_Out_ UINT32* pMajor, _Out_ UINT32* pMinor) = 0;</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetFlags(_Out_ UINT32* pFlags)                         = 0;</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;};</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160; </div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d5/d58/struct_i_dxc_version_info2.htm">IDxcVersionInfo2</a>, <span class="stringliteral">&quot;fb6904c4-42f0-4b62-9c46-983af7da7c83&quot;</span>)</div>
<div class="line"><a name="l00684"></a><span class="lineno"><a class="line" href="../../d5/d58/struct_i_dxc_version_info2.htm">  684</a></span>&#160;struct <a class="code" href="../../d5/d58/struct_i_dxc_version_info2.htm">IDxcVersionInfo2</a> : public <a class="code" href="../../da/d87/struct_i_dxc_version_info.htm">IDxcVersionInfo</a></div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;{</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetCommitInfo(</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    _Out_ UINT32*            pCommitCount, <span class="comment">// The total number commits.</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    _Outptr_result_z_ <span class="keywordtype">char</span>** pCommitHash   <span class="comment">// The SHA of the latest commit. (Must be CoTaskMemFree()&#39;d!)</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;};</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160; </div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../da/ddb/struct_i_dxc_version_info3.htm">IDxcVersionInfo3</a>, <span class="stringliteral">&quot;5e13e843-9d25-473c-9ad2-03b2d0b44b1e&quot;</span>)</div>
<div class="line"><a name="l00693"></a><span class="lineno"><a class="line" href="../../da/ddb/struct_i_dxc_version_info3.htm">  693</a></span>&#160;struct <a class="code" href="../../da/ddb/struct_i_dxc_version_info3.htm">IDxcVersionInfo3</a> : public IUnknown</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;{</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetCustomVersionString(</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    _Outptr_result_z_ <span class="keywordtype">char</span>** pVersionString <span class="comment">// Custom version string for compiler. (Must be CoTaskMemFree()&#39;d!)</span></div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    ) = 0;</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;};</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160; </div>
<div class="line"><a name="l00700"></a><span class="lineno"><a class="line" href="../../d6/d0d/struct_dxc_arg_pair.htm">  700</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d6/d0d/struct_dxc_arg_pair.htm">DxcArgPair</a></div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;{</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;  <span class="keyword">const</span> WCHAR* pName;</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;  <span class="keyword">const</span> WCHAR* pValue;</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;};</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160; </div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d9/daa/struct_i_dxc_pdb_utils.htm">IDxcPdbUtils</a>, <span class="stringliteral">&quot;E6C9647E-9D6A-4C3B-B94C-524B5A6C343D&quot;</span>)</div>
<div class="line"><a name="l00707"></a><span class="lineno"><a class="line" href="../../d9/daa/struct_i_dxc_pdb_utils.htm">  707</a></span>&#160;struct <a class="code" href="../../d9/daa/struct_i_dxc_pdb_utils.htm">IDxcPdbUtils</a> : public IUnknown</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;{</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Load(_In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pPdbOrDxil) = 0;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160; </div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetSourceCount(_Out_ UINT32* pCount)                                    = 0;</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetSource(_In_ UINT32 uIndex, _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** ppResult) = 0;</div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetSourceName(_In_ UINT32 uIndex, _Outptr_result_z_ BSTR* pResult)      = 0;</div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160; </div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetFlagCount(_Out_ UINT32* pCount)                           = 0;</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetFlag(_In_ UINT32 uIndex, _Outptr_result_z_ BSTR* pResult) = 0;</div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160; </div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetArgCount(_Out_ UINT32* pCount)                           = 0;</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetArg(_In_ UINT32 uIndex, _Outptr_result_z_ BSTR* pResult) = 0;</div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160; </div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetArgPairCount(_Out_ UINT32* pCount)                                                         = 0;</div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetArgPair(_In_ UINT32 uIndex, _Outptr_result_z_ BSTR* pName, _Outptr_result_z_ BSTR* pValue) = 0;</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160; </div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetDefineCount(_Out_ UINT32* pCount)                           = 0;</div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetDefine(_In_ UINT32 uIndex, _Outptr_result_z_ BSTR* pResult) = 0;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160; </div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetTargetProfile(_Outptr_result_z_ BSTR* pResult) = 0;</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetEntryPoint(_Outptr_result_z_ BSTR* pResult)    = 0;</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetMainFileName(_Outptr_result_z_ BSTR* pResult)  = 0;</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160; </div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetHash(_COM_Outptr_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppResult) = 0;</div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetName(_Outptr_result_z_ BSTR* pResult)  = 0;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160; </div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;  <span class="keyword">virtual</span> BOOL STDMETHODCALLTYPE    IsFullPDB()                                   = 0;</div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetFullPDB(_COM_Outptr_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppFullPDB) = 0;</div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160; </div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetVersionInfo(_COM_Outptr_ <a class="code" href="../../da/d87/struct_i_dxc_version_info.htm">IDxcVersionInfo</a>** ppVersionInfo) = 0;</div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160; </div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE SetCompiler(_In_ <a class="code" href="../../dc/d13/struct_i_dxc_compiler3.htm">IDxcCompiler3</a>* pCompiler)                    = 0;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE CompileForFullPDB(_COM_Outptr_ <a class="code" href="../../d7/d55/struct_i_dxc_result.htm">IDxcResult</a>** ppResult)         = 0;</div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE OverrideArgs(_In_ <a class="code" href="../../d6/d0d/struct_dxc_arg_pair.htm">DxcArgPair</a>* pArgPairs, UINT32 uNumArgPairs) = 0;</div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE OverrideRootSignature(_In_ <span class="keyword">const</span> WCHAR* pRootSignature)       = 0;</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;};</div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160; </div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;CROSS_PLATFORM_UUIDOF(<a class="code" href="../../d6/d77/struct_i_dxc_pdb_utils2.htm">IDxcPdbUtils2</a>, <span class="stringliteral">&quot;4315D938-F369-4F93-95A2-252017CC3807&quot;</span>)</div>
<div class="line"><a name="l00746"></a><span class="lineno"><a class="line" href="../../d6/d77/struct_i_dxc_pdb_utils2.htm">  746</a></span>&#160;struct <a class="code" href="../../d6/d77/struct_i_dxc_pdb_utils2.htm">IDxcPdbUtils2</a> : public IUnknown</div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;{</div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE Load(_In_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>* pPdbOrDxil) = 0;</div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160; </div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetSourceCount(_Out_ UINT32* pCount)                                    = 0;</div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetSource(_In_ UINT32 uIndex, _COM_Outptr_ <a class="code" href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a>** ppResult) = 0;</div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetSourceName(_In_ UINT32 uIndex, _COM_Outptr_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppResult) = 0;</div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160; </div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetLibraryPDBCount(UINT32* pCount)                                                                                                            = 0;</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetLibraryPDB(_In_ UINT32 uIndex, _COM_Outptr_ <a class="code" href="../../d6/d77/struct_i_dxc_pdb_utils2.htm">IDxcPdbUtils2</a>** ppOutPdbUtils, _COM_Outptr_opt_result_maybenull_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppLibraryName) = 0;</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160; </div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetFlagCount(_Out_ UINT32* pCount)                                = 0;</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetFlag(_In_ UINT32 uIndex, _COM_Outptr_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppResult) = 0;</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160; </div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetArgCount(_Out_ UINT32* pCount)                                = 0;</div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetArg(_In_ UINT32 uIndex, _COM_Outptr_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppResult) = 0;</div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160; </div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetArgPairCount(_Out_ UINT32* pCount)                                                                                                     = 0;</div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetArgPair(_In_ UINT32 uIndex, _COM_Outptr_result_maybenull_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppName, _COM_Outptr_result_maybenull_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppValue) = 0;</div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160; </div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetDefineCount(_Out_ UINT32* pCount)                                = 0;</div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetDefine(_In_ UINT32 uIndex, _COM_Outptr_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppResult) = 0;</div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160; </div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetTargetProfile(_COM_Outptr_result_maybenull_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppResult) = 0;</div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetEntryPoint(_COM_Outptr_result_maybenull_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppResult)    = 0;</div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetMainFileName(_COM_Outptr_result_maybenull_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppResult)  = 0;</div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160; </div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetHash(_COM_Outptr_result_maybenull_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppResult)     = 0;</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetName(_COM_Outptr_result_maybenull_ <a class="code" href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a>** ppResult) = 0;</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160; </div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetVersionInfo(_COM_Outptr_result_maybenull_ <a class="code" href="../../da/d87/struct_i_dxc_version_info.htm">IDxcVersionInfo</a>** ppVersionInfo) = 0;</div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160; </div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetCustomToolchainID(_Out_ UINT32* pID)                                 = 0;</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetCustomToolchainData(_COM_Outptr_result_maybenull_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppBlob) = 0;</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160; </div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;  <span class="keyword">virtual</span> HRESULT STDMETHODCALLTYPE GetWholeDxil(_COM_Outptr_result_maybenull_ <a class="code" href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a>** ppResult) = 0;</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160; </div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;  <span class="keyword">virtual</span> BOOL STDMETHODCALLTYPE IsFullPDB() = 0;</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;  <span class="keyword">virtual</span> BOOL STDMETHODCALLTYPE IsPDBRef()  = 0;</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;};</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160; </div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;<span class="comment">// Note: __declspec(selectany) requires &#39;extern&#39;</span></div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;<span class="comment">// On Linux __declspec(selectany) is removed and using &#39;extern&#39; results in link error.</span></div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;<span class="preprocessor">#  define CLSID_SCOPE __declspec(selectany) extern</span></div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;<span class="preprocessor">#  define CLSID_SCOPE</span></div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160; </div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;CLSID_SCOPE <span class="keyword">const</span> CLSID CLSID_DxcCompiler = {</div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;  0x73e22d93,</div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;  0xe6ce,</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;  0x47f3,</div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;  {0xb5, 0xbf, 0xf0, 0x66, 0x4f, 0x39, 0xc1, 0xb0}};</div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160; </div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;<span class="comment">// {EF6A8087-B0EA-4D56-9E45-D07E1A8B7806}</span></div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;CLSID_SCOPE <span class="keyword">const</span> GUID CLSID_DxcLinker = {</div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;  0xef6a8087,</div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;  0xb0ea,</div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;  0x4d56,</div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;  {0x9e, 0x45, 0xd0, 0x7e, 0x1a, 0x8b, 0x78, 0x6}};</div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160; </div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="comment">// {CD1F6B73-2AB0-484D-8EDC-EBE7A43CA09F}</span></div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;CLSID_SCOPE <span class="keyword">const</span> CLSID CLSID_DxcDiaDataSource = {</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;  0xcd1f6b73,</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;  0x2ab0,</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;  0x484d,</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;  {0x8e, 0xdc, 0xeb, 0xe7, 0xa4, 0x3c, 0xa0, 0x9f}};</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160; </div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;<span class="comment">// {3E56AE82-224D-470F-A1A1-FE3016EE9F9D}</span></div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;CLSID_SCOPE <span class="keyword">const</span> CLSID CLSID_DxcCompilerArgs = {</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;  0x3e56ae82,</div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;  0x224d,</div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;  0x470f,</div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;  {0xa1, 0xa1, 0xfe, 0x30, 0x16, 0xee, 0x9f, 0x9d}};</div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160; </div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;<span class="comment">// {6245D6AF-66E0-48FD-80B4-4D271796748C}</span></div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;CLSID_SCOPE <span class="keyword">const</span> GUID CLSID_DxcLibrary = {</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;  0x6245d6af,</div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;  0x66e0,</div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;  0x48fd,</div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;  {0x80, 0xb4, 0x4d, 0x27, 0x17, 0x96, 0x74, 0x8c}};</div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160; </div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;CLSID_SCOPE <span class="keyword">const</span> GUID CLSID_DxcUtils = CLSID_DxcLibrary;</div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160; </div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;<span class="comment">// {8CA3E215-F728-4CF3-8CDD-88AF917587A1}</span></div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;CLSID_SCOPE <span class="keyword">const</span> GUID CLSID_DxcValidator = {</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;  0x8ca3e215,</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;  0xf728,</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;  0x4cf3,</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;  {0x8c, 0xdd, 0x88, 0xaf, 0x91, 0x75, 0x87, 0xa1}};</div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160; </div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;<span class="comment">// {D728DB68-F903-4F80-94CD-DCCF76EC7151}</span></div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;CLSID_SCOPE <span class="keyword">const</span> GUID CLSID_DxcAssembler = {</div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;  0xd728db68,</div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;  0xf903,</div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;  0x4f80,</div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;  {0x94, 0xcd, 0xdc, 0xcf, 0x76, 0xec, 0x71, 0x51}};</div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160; </div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;<span class="comment">// {b9f54489-55b8-400c-ba3a-1675e4728b91}</span></div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;CLSID_SCOPE <span class="keyword">const</span> GUID CLSID_DxcContainerReflection = {</div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;  0xb9f54489,</div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;  0x55b8,</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;  0x400c,</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;  {0xba, 0x3a, 0x16, 0x75, 0xe4, 0x72, 0x8b, 0x91}};</div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160; </div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;<span class="comment">// {AE2CD79F-CC22-453F-9B6B-B124E7A5204C}</span></div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;CLSID_SCOPE <span class="keyword">const</span> GUID CLSID_DxcOptimizer = {</div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;  0xae2cd79f,</div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;  0xcc22,</div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;  0x453f,</div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;  {0x9b, 0x6b, 0xb1, 0x24, 0xe7, 0xa5, 0x20, 0x4c}};</div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160; </div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;<span class="comment">// {94134294-411f-4574-b4d0-8741e25240d2}</span></div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;CLSID_SCOPE <span class="keyword">const</span> GUID CLSID_DxcContainerBuilder = {</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;  0x94134294,</div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;  0x411f,</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;  0x4574,</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;  {0xb4, 0xd0, 0x87, 0x41, 0xe2, 0x52, 0x40, 0xd2}};</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160; </div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;<span class="comment">// {54621dfb-f2ce-457e-ae8c-ec355faeec7c}</span></div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;CLSID_SCOPE <span class="keyword">const</span> GUID CLSID_DxcPdbUtils = {</div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;  0x54621dfb,</div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;  0xf2ce,</div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;  0x457e,</div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;  {0xae, 0x8c, 0xec, 0x35, 0x5f, 0xae, 0xec, 0x7c}};</div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160; </div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astruct_i_dxc_blob_wide_htm"><div class="ttname"><a href="../../d0/dce/struct_i_dxc_blob_wide.htm">IDxcBlobWide</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:169</div></div>
<div class="ttc" id="astruct_i_dxc_validator2_htm"><div class="ttname"><a href="../../d7/d74/struct_i_dxc_validator2.htm">IDxcValidator2</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:609</div></div>
<div class="ttc" id="astruct_i_dxc_pdb_utils2_htm"><div class="ttname"><a href="../../d6/d77/struct_i_dxc_pdb_utils2.htm">IDxcPdbUtils2</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:746</div></div>
<div class="ttc" id="astruct_i_dxc_utils_htm"><div class="ttname"><a href="../../dd/d8e/struct_i_dxc_utils.htm">IDxcUtils</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:403</div></div>
<div class="ttc" id="astruct_i_dxc_version_info3_htm"><div class="ttname"><a href="../../da/ddb/struct_i_dxc_version_info3.htm">IDxcVersionInfo3</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:693</div></div>
<div class="ttc" id="astruct_i_dxc_pdb_utils_htm"><div class="ttname"><a href="../../d9/daa/struct_i_dxc_pdb_utils.htm">IDxcPdbUtils</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:707</div></div>
<div class="ttc" id="astruct_i_dxc_version_info2_htm"><div class="ttname"><a href="../../d5/d58/struct_i_dxc_version_info2.htm">IDxcVersionInfo2</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:684</div></div>
<div class="ttc" id="astruct_i_dxc_compiler3_htm"><div class="ttname"><a href="../../dc/d13/struct_i_dxc_compiler3.htm">IDxcCompiler3</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:568</div></div>
<div class="ttc" id="astruct_dxc_shader_hash_htm"><div class="ttname"><a href="../../d9/db5/struct_dxc_shader_hash.htm">DxcShaderHash</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:101</div></div>
<div class="ttc" id="astruct_i_dxc_result_htm"><div class="ttname"><a href="../../d7/d55/struct_i_dxc_result.htm">IDxcResult</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:538</div></div>
<div class="ttc" id="astruct_i_dxc_compiler2_htm"><div class="ttname"><a href="../../db/d5b/struct_i_dxc_compiler2.htm">IDxcCompiler2</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:352</div></div>
<div class="ttc" id="astruct_i_dxc_compiler_args_htm"><div class="ttname"><a href="../../d9/dc2/struct_i_dxc_compiler_args.htm">IDxcCompilerArgs</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:213</div></div>
<div class="ttc" id="astruct_dxc_arg_pair_htm"><div class="ttname"><a href="../../d6/d0d/struct_dxc_arg_pair.htm">DxcArgPair</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:700</div></div>
<div class="ttc" id="astruct_i_dxc_container_reflection_htm"><div class="ttname"><a href="../../d4/dde/struct_i_dxc_container_reflection.htm">IDxcContainerReflection</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:640</div></div>
<div class="ttc" id="astruct_i_dxc_blob_htm"><div class="ttname"><a href="../../dd/d0e/struct_i_dxc_blob.htm">IDxcBlob</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:144</div></div>
<div class="ttc" id="astruct_i_dxc_validator_htm"><div class="ttname"><a href="../../de/d6c/struct_i_dxc_validator.htm">IDxcValidator</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:598</div></div>
<div class="ttc" id="astruct_i_dxc_blob_encoding_htm"><div class="ttname"><a href="../../d5/d0c/struct_i_dxc_blob_encoding.htm">IDxcBlobEncoding</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:152</div></div>
<div class="ttc" id="astruct_i_dxc_operation_result_htm"><div class="ttname"><a href="../../de/dff/struct_i_dxc_operation_result.htm">IDxcOperationResult</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:295</div></div>
<div class="ttc" id="astruct_i_dxc_extra_outputs_htm"><div class="ttname"><a href="../../df/d90/struct_i_dxc_extra_outputs.htm">IDxcExtraOutputs</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:556</div></div>
<div class="ttc" id="astruct_i_dxc_optimizer_pass_htm"><div class="ttname"><a href="../../d9/de1/struct_i_dxc_optimizer_pass.htm">IDxcOptimizerPass</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:651</div></div>
<div class="ttc" id="astruct_dxc_buffer_htm"><div class="ttname"><a href="../../d4/df2/struct_dxc_buffer.htm">DxcBuffer</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:199</div></div>
<div class="ttc" id="astruct_i_dxc_blob_utf8_htm"><div class="ttname"><a href="../../d5/d8c/struct_i_dxc_blob_utf8.htm">IDxcBlobUtf8</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:176</div></div>
<div class="ttc" id="astruct_i_dxc_include_handler_htm"><div class="ttname"><a href="../../d3/d16/struct_i_dxc_include_handler.htm">IDxcIncludeHandler</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:189</div></div>
<div class="ttc" id="astruct_dxc_define_htm"><div class="ttname"><a href="../../d5/d01/struct_dxc_define.htm">DxcDefine</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:206</div></div>
<div class="ttc" id="astruct_i_dxc_compiler_htm"><div class="ttname"><a href="../../d6/d90/struct_i_dxc_compiler.htm">IDxcCompiler</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:313</div></div>
<div class="ttc" id="astruct_i_dxc_optimizer_htm"><div class="ttname"><a href="../../d8/d43/struct_i_dxc_optimizer.htm">IDxcOptimizer</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:661</div></div>
<div class="ttc" id="astruct_i_dxc_library_htm"><div class="ttname"><a href="../../dd/d9d/struct_i_dxc_library.htm">IDxcLibrary</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:240</div></div>
<div class="ttc" id="astruct_i_dxc_container_builder_htm"><div class="ttname"><a href="../../dd/d8d/struct_i_dxc_container_builder.htm">IDxcContainerBuilder</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:621</div></div>
<div class="ttc" id="astruct_i_dxc_version_info_htm"><div class="ttname"><a href="../../da/d87/struct_i_dxc_version_info.htm">IDxcVersionInfo</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:677</div></div>
<div class="ttc" id="astruct_i_dxc_linker_htm"><div class="ttname"><a href="../../dc/d22/struct_i_dxc_linker.htm">IDxcLinker</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:373</div></div>
<div class="ttc" id="astruct_i_dxc_assembler_htm"><div class="ttname"><a href="../../d5/d6e/struct_i_dxc_assembler.htm">IDxcAssembler</a></div><div class="ttdef"><b>Definition:</b> dxcapi.h:630</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_c9f61176a4f20333564ea897f2d5f334.htm">ShaderCompiler</a></li><li class="navelem"><a class="el" href="../../dir_a7f57c3c2cbc1ff46aa3599cd330c916.htm">ThirdParty</a></li><li class="navelem"><b>dxcapi.h</b></li>
    <li class="footer">Generated on Mon Jul 10 2023 23:02:52 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
