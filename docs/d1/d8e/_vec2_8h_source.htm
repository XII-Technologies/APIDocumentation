<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Math/Vec2.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d8e/_vec2_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Vec2.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#  define XII_VEC2_CHECK_FOR_NAN(obj) (obj)-&gt;AssertNotNaN();</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#  define XII_VEC2_CHECK_FOR_NAN(obj)</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template</a></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="comment">// Means that vectors can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keyword">using</span> ComponentType = Type;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="comment">// *** Data ***</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  Type x;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  Type y;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>(Type inX, Type inY); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>(Type inV); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="comment">// no copy-constructor and operator= since the default-generated ones will be faster</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="../../d1/d0d/classxii_vec2_template.htm#a6923198918b90676514cd437586d7eac">   40</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a6923198918b90676514cd437586d7eac">ZeroVector</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#ab563984d6d779f64ab67d82ceb384aa0">xiiVec2Template</a>(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    XII_ASSERT_ALWAYS(!<a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a78e9bae3485f5b02ac864c5341fa2273">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please &quot;</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                                <span class="stringliteral">&quot;check that all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="comment">// *** Conversions ***</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#af8a78e35aadce917af5864e775ca8c0c">GetAsVec3</a>(Type inZ) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a84835d6bdbe78b6b22d0808f17630071">GetAsVec4</a>(Type inZ, Type inW) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d1/d0d/classxii_vec2_template.htm#a3ae468490e7d309422b8429a24ea6a4d">   59</a></span>&#160;  <span class="keyword">const</span> Type* <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a3ae468490e7d309422b8429a24ea6a4d">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d1/d0d/classxii_vec2_template.htm#a0f63946b0787479e79932098417e2bfd">   62</a></span>&#160;  Type* <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a0f63946b0787479e79932098417e2bfd">GetData</a>() { <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="comment">// *** Functions to set the vector to specific values ***</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a4fe70680e4be1f88a1e878816ba77dc4">Set</a>(Type xy); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a4fe70680e4be1f88a1e878816ba77dc4">Set</a>(Type inX, Type inY); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a23729487b42eb699808346ea1e0902c7">SetZero</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="comment">// *** Functions dealing with length ***</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE Type <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a2a933cec269257237759ba6b3c4fc7c7">GetLength</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#aed740a62e6e237abd688d6700ecfcc52">SetLength</a>(Type fNewLength, Type fEpsilon = xiiMath::DefaultEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  Type <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#adc3894b5226e1833035b09c036ca9d84">GetLengthSquared</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE Type <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a7fede154da6dbab1acc9c841c018d116">GetLengthAndNormalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#acb7aacbddd4de81a45e5abe0613a94e9">GetNormalized</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#adc5355aee3ce86d017a94ded063b17fb">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#af6b78eebd48872f4c2ed9d45bfbff599">NormalizeIfNotZero</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vFallback = <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>(1, 0), Type fEpsilon = xiiMath::DefaultEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a2bb93a40f09265cb2368682241cc4011">IsZero</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a2bb93a40f09265cb2368682241cc4011">IsZero</a>(Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE <span class="keywordtype">bool</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#adbb197ee424f7f48f36f637fadb2c735">IsNormalized</a>(Type fEpsilon = xiiMath::HugeEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a78e9bae3485f5b02ac864c5341fa2273">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a84fde443875292bbaf1da11562a3a2db">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE Type <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a836ba4bba3a71c71529b677f9d76c278">Distance</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  Type <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a5fca7e509d217416d767dc038afa95ab">DistanceSquared</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#af2714f676201b570e0b931dd3e58c05d">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#ab14953e0d722466f7ae9a934da7a6e45">operator+=</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vCc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a277c26a02d10b67275d4cd3b575c37a0">operator-=</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vCc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#abd7d20f569aea08fb26c3401ec763791">operator*=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#adeff5daa4b13dc6c6d5252a90f245af9">operator/=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#ad722164290abb9d10cade94c75117116">IsIdentical</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#af28c1db86c646aa5292dc02a504ff996">IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="comment">// *** Common vector operations ***</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#adf1017dcf1e1063b65b02f3d584e5f19">GetAngleBetween</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  Type <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a45f41d82d03628e0f69a6ff95d97a5c3">Dot</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a30bb7d2ee971d1e5e94769179dfe5deb">CompMin</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#aaf84986496367330b8efef590c8766d5">CompMax</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a56fe0bf4f262bceb2d87504d74b81040">CompClamp</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vLow, <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vHigh) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a450c26561f54515cdb0b8ca80435e247">CompMul</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#ab68b22a7d00246979168db4e06e273f6">CompDiv</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a80268c93bfea5c0102c47a63b604ad83">Abs</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="comment">// *** Other common operations ***</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE <span class="keywordtype">void</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a5e99afb67f6269e2eedc27d6e5729005">MakeOrthogonalTo</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#a2291ef6f9ff7a35b42f850b001d8c8ba">GetOrthogonalVector</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  XII_DECLARE_IF_FLOAT_TYPE <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm#af904c43cb6692012489860f1e42ce2b5">GetReflectedVector</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; vNormal) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;};</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a>&amp; v2);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Vec2_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_vec2_template_htm_a3ae468490e7d309422b8429a24ea6a4d"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a3ae468490e7d309422b8429a24ea6a4d">xiiVec2Template::GetData</a></div><div class="ttdeci">const Type * GetData() const</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec2.h:59</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a84fde443875292bbaf1da11562a3a2db"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a84fde443875292bbaf1da11562a3a2db">xiiVec2Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks that all components are finite numbers.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:144</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_abd7d20f569aea08fb26c3401ec763791"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#abd7d20f569aea08fb26c3401ec763791">xiiVec2Template::operator*=</a></div><div class="ttdeci">void operator*=(Type f)</div><div class="ttdoc">Multiplies all components of this vector with f.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:196</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a30bb7d2ee971d1e5e94769179dfe5deb"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a30bb7d2ee971d1e5e94769179dfe5deb">xiiVec2Template::CompMin</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; CompMin(const xiiVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:268</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a2bb93a40f09265cb2368682241cc4011"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a2bb93a40f09265cb2368682241cc4011">xiiVec2Template::IsZero</a></div><div class="ttdeci">bool IsZero() const</div><div class="ttdoc">Returns, whether this vector is (0, 0).</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:119</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_adbb197ee424f7f48f36f637fadb2c735"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#adbb197ee424f7f48f36f637fadb2c735">xiiVec2Template::IsNormalized</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE bool IsNormalized(Type fEpsilon=xiiMath::HugeEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns, whether the squared length of this vector is between 0.999f and 1.001f.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:112</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a23729487b42eb699808346ea1e0902c7"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a23729487b42eb699808346ea1e0902c7">xiiVec2Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets the vector to all zero.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:41</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a5fca7e509d217416d767dc038afa95ab"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a5fca7e509d217416d767dc038afa95ab">xiiVec2Template::DistanceSquared</a></div><div class="ttdeci">Type DistanceSquared(const xiiVec2Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the squared distance between two 2D Vectors. Faster, since no square-root is taken....</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:161</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a5e99afb67f6269e2eedc27d6e5729005"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a5e99afb67f6269e2eedc27d6e5729005">xiiVec2Template::MakeOrthogonalTo</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE void MakeOrthogonalTo(const xiiVec2Template&lt; Type &gt; &amp;vNormal)</div><div class="ttdoc">Modifies this direction vector to be orthogonal to the given (normalized) direction vector....</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:224</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_af904c43cb6692012489860f1e42ce2b5"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#af904c43cb6692012489860f1e42ce2b5">xiiVec2Template::GetReflectedVector</a></div><div class="ttdeci">const XII_DECLARE_IF_FLOAT_TYPE xiiVec2Template&lt; Type &gt; GetReflectedVector(const xiiVec2Template&lt; Type &gt; &amp;vNormal) const</div><div class="ttdoc">Returns this vector reflected at vNormal.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:242</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a45f41d82d03628e0f69a6ff95d97a5c3"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a45f41d82d03628e0f69a6ff95d97a5c3">xiiVec2Template::Dot</a></div><div class="ttdeci">Type Dot(const xiiVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the Dot-product of the two vectors (commutative, order does not matter)</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:250</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a56fe0bf4f262bceb2d87504d74b81040"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a56fe0bf4f262bceb2d87504d74b81040">xiiVec2Template::CompClamp</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; CompClamp(const xiiVec2Template&lt; Type &gt; &amp;vLow, const xiiVec2Template&lt; Type &gt; &amp;vHigh) const</div><div class="ttdoc">Returns the component-wise clamped value of *this between low and high.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:286</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_ab563984d6d779f64ab67d82ceb384aa0"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#ab563984d6d779f64ab67d82ceb384aa0">xiiVec2Template::xiiVec2Template</a></div><div class="ttdeci">xiiVec2Template()</div><div class="ttdoc">default-constructed vector is uninitialized (for speed)</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:4</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_ab14953e0d722466f7ae9a934da7a6e45"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#ab14953e0d722466f7ae9a934da7a6e45">xiiVec2Template::operator+=</a></div><div class="ttdeci">void operator+=(const xiiVec2Template&lt; Type &gt; &amp;vCc)</div><div class="ttdoc">Adds cc component-wise to this vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:178</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_adc3894b5226e1833035b09c036ca9d84"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#adc3894b5226e1833035b09c036ca9d84">xiiVec2Template::GetLengthSquared</a></div><div class="ttdeci">Type GetLengthSquared() const</div><div class="ttdoc">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compa...</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:63</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_af2714f676201b570e0b931dd3e58c05d"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#af2714f676201b570e0b931dd3e58c05d">xiiVec2Template::operator-</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; operator-() const</div><div class="ttdoc">Returns the negation of this vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:170</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a7fede154da6dbab1acc9c841c018d116"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a7fede154da6dbab1acc9c841c018d116">xiiVec2Template::GetLengthAndNormalize</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE Type GetLengthAndNormalize()</div><div class="ttdoc">Normalizes this vector and returns its previous length in one operation. More efficient than calling ...</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:69</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a0f63946b0787479e79932098417e2bfd"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a0f63946b0787479e79932098417e2bfd">xiiVec2Template::GetData</a></div><div class="ttdeci">Type * GetData()</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec2.h:62</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_aaf84986496367330b8efef590c8766d5"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#aaf84986496367330b8efef590c8766d5">xiiVec2Template::CompMax</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; CompMax(const xiiVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:277</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_adf1017dcf1e1063b65b02f3d584e5f19"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#adf1017dcf1e1063b65b02f3d584e5f19">xiiVec2Template::GetAngleBetween</a></div><div class="ttdeci">xiiAngle GetAngleBetween(const xiiVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the positive angle between *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:259</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a836ba4bba3a71c71529b677f9d76c278"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a836ba4bba3a71c71529b677f9d76c278">xiiVec2Template::Distance</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE Type Distance(const xiiVec2Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the distance between two 2D Vectors.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:155</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_ab68b22a7d00246979168db4e06e273f6"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#ab68b22a7d00246979168db4e06e273f6">xiiVec2Template::CompDiv</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; CompDiv(const xiiVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise division of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:305</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_af6b78eebd48872f4c2ed9d45bfbff599"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#af6b78eebd48872f4c2ed9d45bfbff599">xiiVec2Template::NormalizeIfNotZero</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE xiiResult NormalizeIfNotZero(const xiiVec2Template&lt; Type &gt; &amp;vFallback=xiiVec2Template&lt; Type &gt;(1, 0), Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to normalize this vector. If the vector is too close to zero, XII_FAILURE is returned and the v...</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:92</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a450c26561f54515cdb0b8ca80435e247"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a450c26561f54515cdb0b8ca80435e247">xiiVec2Template::CompMul</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; CompMul(const xiiVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:296</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a6923198918b90676514cd437586d7eac"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a6923198918b90676514cd437586d7eac">xiiVec2Template::ZeroVector</a></div><div class="ttdeci">static const xiiVec2Template&lt; Type &gt; ZeroVector()</div><div class="ttdoc">Static function that returns a zero-vector.</div><div class="ttdef"><b>Definition:</b> Vec2.h:40</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a2a933cec269257237759ba6b3c4fc7c7"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a2a933cec269257237759ba6b3c4fc7c7">xiiVec2Template::GetLength</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:47</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_aed740a62e6e237abd688d6700ecfcc52"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#aed740a62e6e237abd688d6700ecfcc52">xiiVec2Template::SetLength</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE xiiResult SetLength(Type fNewLength, Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to rescale the vector to the given length. If the vector is too close to zero,...</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:53</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a84835d6bdbe78b6b22d0808f17630071"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a84835d6bdbe78b6b22d0808f17630071">xiiVec2Template::GetAsVec4</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; GetAsVec4(Type inZ, Type inW) const</div><div class="ttdoc">Returns a xiiVec4Template with x,y from this vector and z and w set by the parameters.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:18</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a78e9bae3485f5b02ac864c5341fa2273"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a78e9bae3485f5b02ac864c5341fa2273">xiiVec2Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns true, if any of x or y is NaN.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:133</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_adeff5daa4b13dc6c6d5252a90f245af9"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#adeff5daa4b13dc6c6d5252a90f245af9">xiiVec2Template::operator/=</a></div><div class="ttdeci">void operator/=(Type f)</div><div class="ttdoc">Divides all components of this vector by f.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:205</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_af8a78e35aadce917af5864e775ca8c0c"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#af8a78e35aadce917af5864e775ca8c0c">xiiVec2Template::GetAsVec3</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; GetAsVec3(Type inZ) const</div><div class="ttdoc">Returns a xiiVec3Template with x,y from this vector and z set by the parameter.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:10</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a277c26a02d10b67275d4cd3b575c37a0"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a277c26a02d10b67275d4cd3b575c37a0">xiiVec2Template::operator-=</a></div><div class="ttdeci">void operator-=(const xiiVec2Template&lt; Type &gt; &amp;vCc)</div><div class="ttdoc">Subtracts cc component-wise from this vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:187</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a80268c93bfea5c0102c47a63b604ad83"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a80268c93bfea5c0102c47a63b604ad83">xiiVec2Template::Abs</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; Abs() const</div><div class="ttdoc">brief Returns the component-wise absolute of *this.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:314</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:55</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a2291ef6f9ff7a35b42f850b001d8c8ba"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a2291ef6f9ff7a35b42f850b001d8c8ba">xiiVec2Template::GetOrthogonalVector</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; GetOrthogonalVector() const</div><div class="ttdoc">Returns some arbitrary vector orthogonal to this one. The vector is NOT normalized.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:233</div></div>
<div class="ttc" id="aclassxii_angle_template_htm"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt; float &gt;</a></div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_acb7aacbddd4de81a45e5abe0613a94e9"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#acb7aacbddd4de81a45e5abe0613a94e9">xiiVec2Template::GetNormalized</a></div><div class="ttdeci">const XII_DECLARE_IF_FLOAT_TYPE xiiVec2Template&lt; Type &gt; GetNormalized() const</div><div class="ttdoc">Returns a normalized version of this vector, leaves the vector itself unchanged.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:77</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_af28c1db86c646aa5292dc02a504ff996"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#af28c1db86c646aa5292dc02a504ff996">xiiVec2Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const xiiVec2Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:382</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_ad722164290abb9d10cade94c75117116"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#ad722164290abb9d10cade94c75117116">xiiVec2Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const xiiVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check (bitwise)</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:373</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_adc5355aee3ce86d017a94ded063b17fb"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#adc5355aee3ce86d017a94ded063b17fb">xiiVec2Template::Normalize</a></div><div class="ttdeci">XII_DECLARE_IF_FLOAT_TYPE void Normalize()</div><div class="ttdoc">Normalizes this vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:86</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:152</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:141</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:130</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm_a4fe70680e4be1f88a1e878816ba77dc4"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm#a4fe70680e4be1f88a1e878816ba77dc4">xiiVec2Template::Set</a></div><div class="ttdeci">void Set(Type xy)</div><div class="ttdoc">Sets all components to this value.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:27</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c1b0860bb61ff24e678d996d14e4bcdd.htm">Math</a></li><li class="navelem"><b>Vec2.h</b></li>
    <li class="footer">Generated on Tue Apr 30 2024 17:34:31 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
