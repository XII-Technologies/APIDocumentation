<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiHybridStringBase&lt; Size &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('df/d4f/structxii_hybrid_string_base.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../d6/d5f/structxii_hybrid_string_base-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiHybridStringBase&lt; Size &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A string class for storing and passing around strings.  
 <a href="../../df/d4f/structxii_hybrid_string_base.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/db5/_string_8h_source.htm">String.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for xiiHybridStringBase&lt; Size &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d4/d05/structxii_hybrid_string_base__inherit__graph.png" border="0" usemap="#xii_hybrid_string_base_3_01_size_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="xii_hybrid_string_base_3_01_size_01_4_inherit__map" id="xii_hybrid_string_base_3_01_size_01_4_inherit__map">
<area shape="rect" title="A string class for storing and passing around strings." alt="" coords="21,169,172,211"/>
<area shape="rect" href="../../d2/d29/structxii_string_base.htm" title=" " alt="" coords="5,80,188,121"/>
<area shape="rect" href="../../d5/d12/structxii_this_is_a_string.htm" title="Base class which marks a class as containing string data." alt="" coords="35,5,158,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3e3c71d8981b8bbbca81a9c55421860d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a3e3c71d8981b8bbbca81a9c55421860d">Clear</a> ()</td></tr>
<tr class="memdesc:a3e3c71d8981b8bbbca81a9c55421860d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets this string to an empty string.  <a href="../../df/d4f/structxii_hybrid_string_base.htm#a3e3c71d8981b8bbbca81a9c55421860d">More...</a><br /></td></tr>
<tr class="separator:a3e3c71d8981b8bbbca81a9c55421860d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b5d233da03c9c8de3a264ec2aa3a854"><td class="memItemLeft" align="right" valign="top"><a id="a0b5d233da03c9c8de3a264ec2aa3a854"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a0b5d233da03c9c8de3a264ec2aa3a854">GetData</a> () const</td></tr>
<tr class="memdesc:a0b5d233da03c9c8de3a264ec2aa3a854"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the internal Utf8 string. <br /></td></tr>
<tr class="separator:a0b5d233da03c9c8de3a264ec2aa3a854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8615de56509497abe4e25ff08955a025"><td class="memItemLeft" align="right" valign="top"><a id="a8615de56509497abe4e25ff08955a025"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a8615de56509497abe4e25ff08955a025">GetElementCount</a> () const</td></tr>
<tr class="memdesc:a8615de56509497abe4e25ff08955a025"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that this string takes (excluding the '\0' terminator). <br /></td></tr>
<tr class="separator:a8615de56509497abe4e25ff08955a025"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a086838cd056f14619fdb74147286f2bb"><td class="memItemLeft" align="right" valign="top"><a id="a086838cd056f14619fdb74147286f2bb"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a086838cd056f14619fdb74147286f2bb">GetCharacterCount</a> () const</td></tr>
<tr class="memdesc:a086838cd056f14619fdb74147286f2bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of characters in this string. <br /></td></tr>
<tr class="separator:a086838cd056f14619fdb74147286f2bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ef058523f39c1996329cd0c33974f32"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a6ef058523f39c1996329cd0c33974f32">GetSubString</a> (xiiUInt32 uiFirstCharacter, xiiUInt32 uiNumCharacters) const</td></tr>
<tr class="memdesc:a6ef058523f39c1996329cd0c33974f32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a view to a sub-string of this string, starting at character uiFirstCharacter, up until uiFirstCharacter + uiNumCharacters.  <a href="../../df/d4f/structxii_hybrid_string_base.htm#a6ef058523f39c1996329cd0c33974f32">More...</a><br /></td></tr>
<tr class="separator:a6ef058523f39c1996329cd0c33974f32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff03462c0d48940f7f12af313135107"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a8ff03462c0d48940f7f12af313135107">GetFirst</a> (xiiUInt32 uiNumCharacters) const</td></tr>
<tr class="memdesc:a8ff03462c0d48940f7f12af313135107"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a view to the sub-string containing the first uiNumCharacters characters of this string.  <a href="../../df/d4f/structxii_hybrid_string_base.htm#a8ff03462c0d48940f7f12af313135107">More...</a><br /></td></tr>
<tr class="separator:a8ff03462c0d48940f7f12af313135107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa093d081e97ec9e0a86a29e6fedccee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#aaa093d081e97ec9e0a86a29e6fedccee">GetLast</a> (xiiUInt32 uiNumCharacters) const</td></tr>
<tr class="memdesc:aaa093d081e97ec9e0a86a29e6fedccee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a view to the sub-string containing the last uiNumCharacters characters of this string.  <a href="../../df/d4f/structxii_hybrid_string_base.htm#aaa093d081e97ec9e0a86a29e6fedccee">More...</a><br /></td></tr>
<tr class="separator:aaa093d081e97ec9e0a86a29e6fedccee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd77513023512269df5bd1a13c52a255"><td class="memItemLeft" align="right" valign="top"><a id="afd77513023512269df5bd1a13c52a255"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#afd77513023512269df5bd1a13c52a255">ReadAll</a> (<a class="el" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a> &amp;ref_stream)</td></tr>
<tr class="memdesc:afd77513023512269df5bd1a13c52a255"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replaces the current string with the content from the stream. Reads the stream to its end. <br /></td></tr>
<tr class="separator:afd77513023512269df5bd1a13c52a255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23af029cf9011b12d88278fd23e59c98"><td class="memItemLeft" align="right" valign="top"><a id="a23af029cf9011b12d88278fd23e59c98"></a>
xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a23af029cf9011b12d88278fd23e59c98">GetHeapMemoryUsage</a> () const</td></tr>
<tr class="memdesc:a23af029cf9011b12d88278fd23e59c98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a23af029cf9011b12d88278fd23e59c98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structxii_string_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_structxii_string_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d2/d29/structxii_string_base.htm">xiiStringBase&lt; xiiHybridStringBase&lt; Size &gt; &gt;</a></td></tr>
<tr class="memitem:a52ad52604f0b98226a0342393b8db662 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a52ad52604f0b98226a0342393b8db662"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a52ad52604f0b98226a0342393b8db662">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a52ad52604f0b98226a0342393b8db662 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the string is an empty string. <br /></td></tr>
<tr class="separator:a52ad52604f0b98226a0342393b8db662 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bf41eb3d6781a8aaff8a4d2f7f4df4f inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a5bf41eb3d6781a8aaff8a4d2f7f4df4f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a5bf41eb3d6781a8aaff8a4d2f7f4df4f">StartsWith</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStartsWith) const</td></tr>
<tr class="memdesc:a5bf41eb3d6781a8aaff8a4d2f7f4df4f inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string starts with the given string. <br /></td></tr>
<tr class="separator:a5bf41eb3d6781a8aaff8a4d2f7f4df4f inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4d582fedf5b825d1efd0dde2b25b556 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="aa4d582fedf5b825d1efd0dde2b25b556"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#aa4d582fedf5b825d1efd0dde2b25b556">StartsWith_NoCase</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStartsWith) const</td></tr>
<tr class="memdesc:aa4d582fedf5b825d1efd0dde2b25b556 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string starts with the given string. Case insensitive. <br /></td></tr>
<tr class="separator:aa4d582fedf5b825d1efd0dde2b25b556 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59e350b8f45c88d18eacebc160e1b07f inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a59e350b8f45c88d18eacebc160e1b07f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a59e350b8f45c88d18eacebc160e1b07f">EndsWith</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sEndsWith) const</td></tr>
<tr class="memdesc:a59e350b8f45c88d18eacebc160e1b07f inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string ends with the given string. <br /></td></tr>
<tr class="separator:a59e350b8f45c88d18eacebc160e1b07f inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4016efe160cf9159193586c907d382d6 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a4016efe160cf9159193586c907d382d6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a4016efe160cf9159193586c907d382d6">EndsWith_NoCase</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sEndsWith) const</td></tr>
<tr class="memdesc:a4016efe160cf9159193586c907d382d6 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string ends with the given string. Case insensitive. <br /></td></tr>
<tr class="separator:a4016efe160cf9159193586c907d382d6 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5238f8a363653f249eaaa5a97dc036d inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#aa5238f8a363653f249eaaa5a97dc036d">FindSubString</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:aa5238f8a363653f249eaaa5a97dc036d inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bc02e9477b8b4db57f52cb9fe5ed2cb inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a1bc02e9477b8b4db57f52cb9fe5ed2cb">FindSubString_NoCase</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a1bc02e9477b8b4db57f52cb9fe5ed2cb inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afad820068dbab7f0c94f8d34a4308600 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#afad820068dbab7f0c94f8d34a4308600">FindLastSubString</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:afad820068dbab7f0c94f8d34a4308600 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ff1da418cd57f629e049c0cab04673c inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a4ff1da418cd57f629e049c0cab04673c">FindLastSubString_NoCase</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a4ff1da418cd57f629e049c0cab04673c inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f5893d90cc94a9a187f08fa6c13ec34 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a5f5893d90cc94a9a187f08fa6c13ec34">FindWholeWord</a> (const char *szSearchFor, <a class="el" href="../../df/d65/classxii_string_utils.htm#af474cd805cbd076c00d508adacd057bd">xiiStringUtils::XII_CHARACTER_FILTER</a> isDelimiterCB, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a5f5893d90cc94a9a187f08fa6c13ec34 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5005429360824b1798bef85dea712cd inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#ad5005429360824b1798bef85dea712cd">FindWholeWord_NoCase</a> (const char *szSearchFor, <a class="el" href="../../df/d65/classxii_string_utils.htm#af474cd805cbd076c00d508adacd057bd">xiiStringUtils::XII_CHARACTER_FILTER</a> isDelimiterCB, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:ad5005429360824b1798bef85dea712cd inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae27a79e330beec66d9d813022e83cb69 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="ae27a79e330beec66d9d813022e83cb69"></a>
xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#ae27a79e330beec66d9d813022e83cb69">Compare</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther) const</td></tr>
<tr class="memdesc:ae27a79e330beec66d9d813022e83cb69 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller', 1 otherwise. <br /></td></tr>
<tr class="separator:ae27a79e330beec66d9d813022e83cb69 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d435ef63aff0219d0f0668f37eef0a2 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top">xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a3d435ef63aff0219d0f0668f37eef0a2">CompareN</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther, xiiUInt32 uiCharsToCompare) const</td></tr>
<tr class="separator:a3d435ef63aff0219d0f0668f37eef0a2 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8aff83ea5b80b6dc110a9e2924fedc7b inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a8aff83ea5b80b6dc110a9e2924fedc7b"></a>
xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a8aff83ea5b80b6dc110a9e2924fedc7b">Compare_NoCase</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther) const</td></tr>
<tr class="memdesc:a8aff83ea5b80b6dc110a9e2924fedc7b inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller', 1 otherwise. Case insensitive. <br /></td></tr>
<tr class="separator:a8aff83ea5b80b6dc110a9e2924fedc7b inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66531b825a9378c78a6e2b411fe991d1 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top">xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a66531b825a9378c78a6e2b411fe991d1">CompareN_NoCase</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther, xiiUInt32 uiCharsToCompare) const</td></tr>
<tr class="separator:a66531b825a9378c78a6e2b411fe991d1 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c217f8e171dabae88d440998890ba18 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a9c217f8e171dabae88d440998890ba18"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a9c217f8e171dabae88d440998890ba18">IsEqual</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther) const</td></tr>
<tr class="memdesc:a9c217f8e171dabae88d440998890ba18 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other string for equality. <br /></td></tr>
<tr class="separator:a9c217f8e171dabae88d440998890ba18 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a546fd06f96d7467ecbfe3f1c6d7a2d68 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a546fd06f96d7467ecbfe3f1c6d7a2d68"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a546fd06f96d7467ecbfe3f1c6d7a2d68">IsEqualN</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther, xiiUInt32 uiCharsToCompare) const</td></tr>
<tr class="memdesc:a546fd06f96d7467ecbfe3f1c6d7a2d68 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares up to a given number of characters of this string with the other string for equality. Case insensitive. <br /></td></tr>
<tr class="separator:a546fd06f96d7467ecbfe3f1c6d7a2d68 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec455922ec33da6c7a57d5a9d8475c11 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="aec455922ec33da6c7a57d5a9d8475c11"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#aec455922ec33da6c7a57d5a9d8475c11">IsEqual_NoCase</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther) const</td></tr>
<tr class="memdesc:aec455922ec33da6c7a57d5a9d8475c11 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other string for equality. <br /></td></tr>
<tr class="separator:aec455922ec33da6c7a57d5a9d8475c11 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43ff7190c8ec4e85d323b1a08e2093da inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a43ff7190c8ec4e85d323b1a08e2093da"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a43ff7190c8ec4e85d323b1a08e2093da">IsEqualN_NoCase</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther, xiiUInt32 uiCharsToCompare) const</td></tr>
<tr class="memdesc:a43ff7190c8ec4e85d323b1a08e2093da inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares up to a given number of characters of this string with the other string for equality. Case insensitive. <br /></td></tr>
<tr class="separator:a43ff7190c8ec4e85d323b1a08e2093da inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae818af714c3eb8b52272c05b44d75b22 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="ae818af714c3eb8b52272c05b44d75b22"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#ae818af714c3eb8b52272c05b44d75b22">ComputeCharacterPosition</a> (xiiUInt32 uiCharacterIndex) const</td></tr>
<tr class="memdesc:ae818af714c3eb8b52272c05b44d75b22 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the pointer to the n-th character in the string. This is a linear search from the start. <br /></td></tr>
<tr class="separator:ae818af714c3eb8b52272c05b44d75b22 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66c88bf405b01062374937660dbb0cf5 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/d81/structxii_string_iterator.htm">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a66c88bf405b01062374937660dbb0cf5">GetIteratorFront</a> () const</td></tr>
<tr class="memdesc:a66c88bf405b01062374937660dbb0cf5 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator to this string, which points to the very first character.  <a href="../../d2/d29/structxii_string_base.htm#a66c88bf405b01062374937660dbb0cf5">More...</a><br /></td></tr>
<tr class="separator:a66c88bf405b01062374937660dbb0cf5 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a540637e5f22defeb32af069704c700d8 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/d78/structxii_string_reverse_iterator.htm">reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a540637e5f22defeb32af069704c700d8">GetIteratorBack</a> () const</td></tr>
<tr class="memdesc:a540637e5f22defeb32af069704c700d8 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator to this string, which points to the very last character (NOT the end).  <a href="../../d2/d29/structxii_string_base.htm#a540637e5f22defeb32af069704c700d8">More...</a><br /></td></tr>
<tr class="separator:a540637e5f22defeb32af069704c700d8 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a654d0fd5e7d4f179cc8df5cbce2aab50 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a654d0fd5e7d4f179cc8df5cbce2aab50"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a654d0fd5e7d4f179cc8df5cbce2aab50">operator xiiStringView</a> () const</td></tr>
<tr class="memdesc:a654d0fd5e7d4f179cc8df5cbce2aab50 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string view to this string's data. <br /></td></tr>
<tr class="separator:a654d0fd5e7d4f179cc8df5cbce2aab50 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d45f20d65204861deb1bed94305408a inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a6d45f20d65204861deb1bed94305408a"></a>
<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a6d45f20d65204861deb1bed94305408a">GetView</a> () const</td></tr>
<tr class="memdesc:a6d45f20d65204861deb1bed94305408a inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string view to this string's data. <br /></td></tr>
<tr class="separator:a6d45f20d65204861deb1bed94305408a inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79c664c6c0055a477110e1849771f9eb inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a79c664c6c0055a477110e1849771f9eb"></a>
XII_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a79c664c6c0055a477110e1849771f9eb">operator const char *</a> () const</td></tr>
<tr class="memdesc:a79c664c6c0055a477110e1849771f9eb inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the internal Utf8 string. <br /></td></tr>
<tr class="separator:a79c664c6c0055a477110e1849771f9eb inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c8e89db84402b1901a58bd0c7faaaac inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a3c8e89db84402b1901a58bd0c7faaaac"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a3c8e89db84402b1901a58bd0c7faaaac">Split</a> (bool bReturnEmptyStrings, Container &amp;ref_output, const char *szSeparator1, const char *szSeparator2=nullptr, const char *szSeparator3=nullptr, const char *szSeparator4=nullptr, const char *szSeparator5=nullptr, const char *szSeparator6=nullptr) const</td></tr>
<tr class="memdesc:a3c8e89db84402b1901a58bd0c7faaaac inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills the given container with <a class="el" href="../../da/d9d/structxii_string_view.htm" title="xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...">xiiStringView</a>'s which represent each found substring. If bReturnEmptyStrings is true, even empty strings between separators are returned. Output must be a container that stores <a class="el" href="../../da/d9d/structxii_string_view.htm" title="xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...">xiiStringView</a>'s and provides the functions 'Clear' and 'Append'. szSeparator1 to szSeparator6 are strings which act as separators and indicate where to split the string. This string itself will not be modified. <br /></td></tr>
<tr class="separator:a3c8e89db84402b1901a58bd0c7faaaac inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a492be752bac284a275f78166b67e1406 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a492be752bac284a275f78166b67e1406"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a492be752bac284a275f78166b67e1406">HasAnyExtension</a> () const</td></tr>
<tr class="memdesc:a492be752bac284a275f78166b67e1406 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path has any file extension. <br /></td></tr>
<tr class="separator:a492be752bac284a275f78166b67e1406 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37dd75fbe694bc0d922d50a4ec0ff277 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a37dd75fbe694bc0d922d50a4ec0ff277"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a37dd75fbe694bc0d922d50a4ec0ff277">HasExtension</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sExtension) const</td></tr>
<tr class="memdesc:a37dd75fbe694bc0d922d50a4ec0ff277 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path ends with the given extension. szExtension should start with a '.' for performance reasons, but it will work without a '.' too. <br /></td></tr>
<tr class="separator:a37dd75fbe694bc0d922d50a4ec0ff277 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ef1a78330f1b3a875e5979dc640f3e2 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a1ef1a78330f1b3a875e5979dc640f3e2"></a>
<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a1ef1a78330f1b3a875e5979dc640f3e2">GetFileExtension</a> () const</td></tr>
<tr class="memdesc:a1ef1a78330f1b3a875e5979dc640f3e2 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file extension of the given path. Will be empty, if the path does not end with a proper extension. <br /></td></tr>
<tr class="separator:a1ef1a78330f1b3a875e5979dc640f3e2 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acadc8a4b5aab5156ac33af352c7f3410 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#acadc8a4b5aab5156ac33af352c7f3410">GetFileName</a> () const</td></tr>
<tr class="memdesc:acadc8a4b5aab5156ac33af352c7f3410 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file name of a path, excluding the path and extension.  <a href="../../d2/d29/structxii_string_base.htm#acadc8a4b5aab5156ac33af352c7f3410">More...</a><br /></td></tr>
<tr class="separator:acadc8a4b5aab5156ac33af352c7f3410 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fae3e4e1da823bd30d5322872eda70e inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a3fae3e4e1da823bd30d5322872eda70e">GetFileNameAndExtension</a> () const</td></tr>
<tr class="memdesc:a3fae3e4e1da823bd30d5322872eda70e inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the substring that represents the file name including the file extension.  <a href="../../d2/d29/structxii_string_base.htm#a3fae3e4e1da823bd30d5322872eda70e">More...</a><br /></td></tr>
<tr class="separator:a3fae3e4e1da823bd30d5322872eda70e inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6daecf61eb300775ecaced2e95c1ed54 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a6daecf61eb300775ecaced2e95c1ed54">GetFileDirectory</a> () const</td></tr>
<tr class="memdesc:a6daecf61eb300775ecaced2e95c1ed54 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the directory of the given file, which is the substring up to the last path separator.  <a href="../../d2/d29/structxii_string_base.htm#a6daecf61eb300775ecaced2e95c1ed54">More...</a><br /></td></tr>
<tr class="separator:a6daecf61eb300775ecaced2e95c1ed54 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a101e9caaeb85898455be66067f6cbf24 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a101e9caaeb85898455be66067f6cbf24"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a101e9caaeb85898455be66067f6cbf24">IsAbsolutePath</a> () const</td></tr>
<tr class="memdesc:a101e9caaeb85898455be66067f6cbf24 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents an absolute path on the current OS. <br /></td></tr>
<tr class="separator:a101e9caaeb85898455be66067f6cbf24 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a080a07482e950dd521c144ad5e5df772 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a080a07482e950dd521c144ad5e5df772"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#a080a07482e950dd521c144ad5e5df772">IsRelativePath</a> () const</td></tr>
<tr class="memdesc:a080a07482e950dd521c144ad5e5df772 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents a relative path on the current OS. <br /></td></tr>
<tr class="separator:a080a07482e950dd521c144ad5e5df772 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acebb3080896bb6ff7ef2ab5d17332678 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="acebb3080896bb6ff7ef2ab5d17332678"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#acebb3080896bb6ff7ef2ab5d17332678">IsRootedPath</a> () const</td></tr>
<tr class="memdesc:acebb3080896bb6ff7ef2ab5d17332678 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents a 'rooted' path. See <a class="el" href="../../d7/d0a/classxii_file_system.htm" title="The xiiFileSystem provides high-level functionality to manage files in a virtual file system.">xiiFileSystem</a> for details. <br /></td></tr>
<tr class="separator:acebb3080896bb6ff7ef2ab5d17332678 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdf4b32536d34fd6e30a2343504b5f61 inherit pub_methods_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d29/structxii_string_base.htm#abdf4b32536d34fd6e30a2343504b5f61">GetRootedPathRootName</a> () const</td></tr>
<tr class="memdesc:abdf4b32536d34fd6e30a2343504b5f61 inherit pub_methods_structxii_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts the root name from a rooted path.  <a href="../../d2/d29/structxii_string_base.htm#abdf4b32536d34fd6e30a2343504b5f61">More...</a><br /></td></tr>
<tr class="separator:abdf4b32536d34fd6e30a2343504b5f61 inherit pub_methods_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a34f65955e06e31dfecec3bd3f801712a"><td class="memItemLeft" align="right" valign="top"><a id="a34f65955e06e31dfecec3bd3f801712a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a34f65955e06e31dfecec3bd3f801712a">xiiHybridStringBase</a> (<a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a34f65955e06e31dfecec3bd3f801712a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty string. <br /></td></tr>
<tr class="separator:a34f65955e06e31dfecec3bd3f801712a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21c36e17422fb9f231f3c7a1ec2d3549"><td class="memItemLeft" align="right" valign="top"><a id="a21c36e17422fb9f231f3c7a1ec2d3549"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a21c36e17422fb9f231f3c7a1ec2d3549">xiiHybridStringBase</a> (const <a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a> &amp;rhs, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a21c36e17422fb9f231f3c7a1ec2d3549"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a21c36e17422fb9f231f3c7a1ec2d3549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a890905ee1de009c97d5ef044051c0800"><td class="memItemLeft" align="right" valign="top"><a id="a890905ee1de009c97d5ef044051c0800"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a890905ee1de009c97d5ef044051c0800">xiiHybridStringBase</a> (<a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a> &amp;&amp;rhs, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a890905ee1de009c97d5ef044051c0800"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a890905ee1de009c97d5ef044051c0800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a305074df26bf31cc4badf91b2d3f1978"><td class="memItemLeft" align="right" valign="top"><a id="a305074df26bf31cc4badf91b2d3f1978"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a305074df26bf31cc4badf91b2d3f1978">xiiHybridStringBase</a> (const char *rhs, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a305074df26bf31cc4badf91b2d3f1978"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a305074df26bf31cc4badf91b2d3f1978"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7b788d1daa37ed87ae07baddb67f38f"><td class="memItemLeft" align="right" valign="top"><a id="ab7b788d1daa37ed87ae07baddb67f38f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#ab7b788d1daa37ed87ae07baddb67f38f">xiiHybridStringBase</a> (const wchar_t *rhs, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:ab7b788d1daa37ed87ae07baddb67f38f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ab7b788d1daa37ed87ae07baddb67f38f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a193202aaf09d9d7976e2d47cea91f1c7"><td class="memItemLeft" align="right" valign="top"><a id="a193202aaf09d9d7976e2d47cea91f1c7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a193202aaf09d9d7976e2d47cea91f1c7">xiiHybridStringBase</a> (const <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> &amp;rhs, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a193202aaf09d9d7976e2d47cea91f1c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a193202aaf09d9d7976e2d47cea91f1c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60a8a877f424d31af149f36d20e5b457"><td class="memItemLeft" align="right" valign="top"><a id="a60a8a877f424d31af149f36d20e5b457"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a60a8a877f424d31af149f36d20e5b457">xiiHybridStringBase</a> (const <a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;rhs, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a60a8a877f424d31af149f36d20e5b457"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a60a8a877f424d31af149f36d20e5b457"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadea647a43218f8019966aad287f3992"><td class="memItemLeft" align="right" valign="top"><a id="aadea647a43218f8019966aad287f3992"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#aadea647a43218f8019966aad287f3992">xiiHybridStringBase</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;&amp;rhs, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:aadea647a43218f8019966aad287f3992"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:aadea647a43218f8019966aad287f3992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4df07698a7751857afeb872ef08053d3"><td class="memItemLeft" align="right" valign="top"><a id="a4df07698a7751857afeb872ef08053d3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a4df07698a7751857afeb872ef08053d3">~xiiHybridStringBase</a> ()</td></tr>
<tr class="memdesc:a4df07698a7751857afeb872ef08053d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a4df07698a7751857afeb872ef08053d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82ca74a23c1efe09ca1a2f7998ad2f2f"><td class="memItemLeft" align="right" valign="top"><a id="a82ca74a23c1efe09ca1a2f7998ad2f2f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a82ca74a23c1efe09ca1a2f7998ad2f2f">operator=</a> (const <a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a> &amp;rhs)</td></tr>
<tr class="memdesc:a82ca74a23c1efe09ca1a2f7998ad2f2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a82ca74a23c1efe09ca1a2f7998ad2f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc3c84e912233afa04cfb344402d14da"><td class="memItemLeft" align="right" valign="top"><a id="abc3c84e912233afa04cfb344402d14da"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#abc3c84e912233afa04cfb344402d14da">operator=</a> (<a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a> &amp;&amp;rhs)</td></tr>
<tr class="memdesc:abc3c84e912233afa04cfb344402d14da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:abc3c84e912233afa04cfb344402d14da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad01a0083b9221b4e4ac60981d4bcca41"><td class="memItemLeft" align="right" valign="top"><a id="ad01a0083b9221b4e4ac60981d4bcca41"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#ad01a0083b9221b4e4ac60981d4bcca41">operator=</a> (const char *rhs)</td></tr>
<tr class="memdesc:ad01a0083b9221b4e4ac60981d4bcca41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ad01a0083b9221b4e4ac60981d4bcca41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3335c9bf91fbba3794e27957e10fd439"><td class="memItemLeft" align="right" valign="top"><a id="a3335c9bf91fbba3794e27957e10fd439"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a3335c9bf91fbba3794e27957e10fd439">operator=</a> (const wchar_t *rhs)</td></tr>
<tr class="memdesc:a3335c9bf91fbba3794e27957e10fd439"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a3335c9bf91fbba3794e27957e10fd439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe050796950d0116a3267a57af955a0a"><td class="memItemLeft" align="right" valign="top"><a id="afe050796950d0116a3267a57af955a0a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#afe050796950d0116a3267a57af955a0a">operator=</a> (const <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> &amp;rhs)</td></tr>
<tr class="memdesc:afe050796950d0116a3267a57af955a0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:afe050796950d0116a3267a57af955a0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07f3fe26ea0b9ef4be7e7bdcb40e5752"><td class="memItemLeft" align="right" valign="top"><a id="a07f3fe26ea0b9ef4be7e7bdcb40e5752"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#a07f3fe26ea0b9ef4be7e7bdcb40e5752">operator=</a> (const <a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;rhs)</td></tr>
<tr class="memdesc:a07f3fe26ea0b9ef4be7e7bdcb40e5752"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a07f3fe26ea0b9ef4be7e7bdcb40e5752"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa835ff9b820b2c7dcbbd808fbd1bf154"><td class="memItemLeft" align="right" valign="top"><a id="aa835ff9b820b2c7dcbbd808fbd1bf154"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm#aa835ff9b820b2c7dcbbd808fbd1bf154">operator=</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;&amp;rhs)</td></tr>
<tr class="memdesc:aa835ff9b820b2c7dcbbd808fbd1bf154"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:aa835ff9b820b2c7dcbbd808fbd1bf154"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ac47f61ebaab9b4a8ee83ad94d6ec85b7"><td class="memItemLeft" align="right" valign="top"><a id="ac47f61ebaab9b4a8ee83ad94d6ec85b7"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>xiiStringBuilder</b></td></tr>
<tr class="separator:ac47f61ebaab9b4a8ee83ad94d6ec85b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_structxii_string_base"><td colspan="2" onclick="javascript:toggleInherit('pub_types_structxii_string_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d2/d29/structxii_string_base.htm">xiiStringBase&lt; xiiHybridStringBase&lt; Size &gt; &gt;</a></td></tr>
<tr class="memitem:aa2e5eecaf640177d7bfdeec6fb862b54 inherit pub_types_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="aa2e5eecaf640177d7bfdeec6fb862b54"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = <a class="el" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a></td></tr>
<tr class="separator:aa2e5eecaf640177d7bfdeec6fb862b54 inherit pub_types_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a384460e6505642b62a1d45197706cd5e inherit pub_types_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a384460e6505642b62a1d45197706cd5e"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = <a class="el" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a></td></tr>
<tr class="separator:a384460e6505642b62a1d45197706cd5e inherit pub_types_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86fcd6d22ade63a1ad65432ba050590a inherit pub_types_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a86fcd6d22ade63a1ad65432ba050590a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a></td></tr>
<tr class="separator:a86fcd6d22ade63a1ad65432ba050590a inherit pub_types_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada258fb50185398b647a256c5c682318 inherit pub_types_structxii_string_base"><td class="memItemLeft" align="right" valign="top"><a id="ada258fb50185398b647a256c5c682318"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a></td></tr>
<tr class="separator:ada258fb50185398b647a256c5c682318 inherit pub_types_structxii_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;xiiUInt16 Size&gt;<br />
struct xiiHybridStringBase&lt; Size &gt;</h3>

<p>A string class for storing and passing around strings. </p>
<p>This class only allows read-access to its data. It does not allow modifications. To build / modify strings, use the <a class="el" href="../../d4/dbb/classxii_string_builder.htm" title="xiiStringBuilder is a class that is meant for creating and modifying strings.">xiiStringBuilder</a> class. <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a> has an internal array to store short strings without any memory allocations, it will dynamically allocate additional memory, if that cache is insufficient. Thus a hybrid string will always take up a certain amount of memory, which might be of concern when it is used as a member variable, in such cases you might want to use an <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a> with a very small internal array (1 would basically make it into a completely dynamic string). On the other hand, creating <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a> instances on the stack and working locally with them, is quite fast. Prefer to use the aliased string types <em>xiiString</em>, <em>xiiDynamicString</em>, <em>xiiString32</em> etc. Most strings in an application are rather short, typically shorter than 20 characters. Use <em>xiiString</em>, which is an aliased <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a> to use a cache size that is sufficient for more than 90% of all use cases. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a3e3c71d8981b8bbbca81a9c55421860d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e3c71d8981b8bbbca81a9c55421860d">&#9670;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;xiiUInt16 Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&lt; Size &gt;::Clear</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets this string to an empty string. </p>
<p>This will not deallocate any previously allocated data, but reuse that memory. </p>

</div>
</div>
<a id="a8ff03462c0d48940f7f12af313135107"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ff03462c0d48940f7f12af313135107">&#9670;&nbsp;</a></span>GetFirst()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;xiiUInt16 Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&lt; Size &gt;::GetFirst </td>
          <td>(</td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiNumCharacters</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a view to the sub-string containing the first uiNumCharacters characters of this string. </p>
<p>Note that this view will only be valid as long as this <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a> lives. Once the original string is destroyed, all views to them will point into invalid memory. </p>

</div>
</div>
<a id="aaa093d081e97ec9e0a86a29e6fedccee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa093d081e97ec9e0a86a29e6fedccee">&#9670;&nbsp;</a></span>GetLast()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;xiiUInt16 Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&lt; Size &gt;::GetLast </td>
          <td>(</td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiNumCharacters</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a view to the sub-string containing the last uiNumCharacters characters of this string. </p>
<p>Note that this view will only be valid as long as this <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a> lives. Once the original string is destroyed, all views to them will point into invalid memory. </p>

</div>
</div>
<a id="a6ef058523f39c1996329cd0c33974f32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6ef058523f39c1996329cd0c33974f32">&#9670;&nbsp;</a></span>GetSubString()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;xiiUInt16 Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>&lt; Size &gt;::GetSubString </td>
          <td>(</td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiFirstCharacter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiNumCharacters</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a view to a sub-string of this string, starting at character uiFirstCharacter, up until uiFirstCharacter + uiNumCharacters. </p>
<p>Note that this view will only be valid as long as this <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a> lives. Once the original string is destroyed, all views to them will point into invalid memory. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Strings/<a class="el" href="../../db/db5/_string_8h_source.htm">String.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d7/dec/_all_strings__inl_8h_source.htm">AllStrings_inl.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d7/d4f/_string__inl_8h_source.htm">String_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a></li>
    <li class="footer">Generated on Fri Nov 17 2023 03:01:31 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
