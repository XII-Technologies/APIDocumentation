<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Math/Vec4.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('df/d6a/_vec4_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Vec4.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Vec3.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;{</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="comment">// Means that vectors can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">using</span> ComponentType = Type;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="comment">// *** Data ***</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  Type x, y, z, w;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a9b235b061d34b1d9dd51dfaf3f8484fe">xiiVec4Template</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a9b235b061d34b1d9dd51dfaf3f8484fe">xiiVec4Template</a>(Type inX, Type inY, Type inZ, Type inW); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a9b235b061d34b1d9dd51dfaf3f8484fe">xiiVec4Template</a>(Type inV); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="comment">// no copy-constructor and operator= since the default-generated ones will be faster</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../d1/d20/classxii_vec4_template.htm#a3064d2afe2a3f30ab8629a8246e689da">   33</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a3064d2afe2a3f30ab8629a8246e689da">ZeroVector</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../d1/d20/classxii_vec4_template.htm#aafc07800a2265f8588c678cd7addfdb2">   35</a></span>&#160;<span class="comment"></span>  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#aafc07800a2265f8588c678cd7addfdb2">OneVector</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(1); }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d1/d20/classxii_vec4_template.htm#a7f6e3b05a0cf10439827cb16cfcf41e3">   38</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a7f6e3b05a0cf10439827cb16cfcf41e3">OriginPoint</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(0, 0, 0, 1); }</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="../../d1/d20/classxii_vec4_template.htm#a6592a8dc0a4a3521145e7300a732ca5c">   40</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a6592a8dc0a4a3521145e7300a732ca5c">UnitXAxis</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(1, 0, 0, 0); }</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="../../d1/d20/classxii_vec4_template.htm#a7b6987736cff961dc545165beb4a7862">   42</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a7b6987736cff961dc545165beb4a7862">UnitYAxis</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(0, 1, 0, 0); }</div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="../../d1/d20/classxii_vec4_template.htm#a7ad1469bb780d300791ba4d9fd7845d8">   44</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a7ad1469bb780d300791ba4d9fd7845d8">UnitZAxis</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(0, 0, 1, 0); }</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../d1/d20/classxii_vec4_template.htm#ae24fcdfbaeda2b501a52951c0eab80ca">   46</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#ae24fcdfbaeda2b501a52951c0eab80ca">UnitWAxis</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(0, 0, 0, 1); }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    XII_ASSERT_ALWAYS(!<a class="code" href="../../d1/d20/classxii_vec4_template.htm#ada72f035c7f66fc97e374c90013b20fd">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please &quot;</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                <span class="stringliteral">&quot;check that all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="comment">// *** Conversions ***</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a435e2e6e13f4fcf1ed1762e5863c1e13">GetAsVec2</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#af2896487eee341907faf5bc28d84f3b6">GetAsVec3</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../d1/d20/classxii_vec4_template.htm#a7812b58c9adc791b7409b5d522bd5b5f">   65</a></span>&#160;  <span class="keyword">const</span> Type* <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a7812b58c9adc791b7409b5d522bd5b5f">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="../../d1/d20/classxii_vec4_template.htm#aa59914423eaa3c4a23f7be4ff4c20874">   68</a></span>&#160;  Type* <a class="code" href="../../d1/d20/classxii_vec4_template.htm#aa59914423eaa3c4a23f7be4ff4c20874">GetData</a>() { <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="comment">// *** Functions to set the vector to specific values ***</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#adc3f43eb01d70bc3f02b3f61e2a28743">Set</a>(Type xyzw); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#adc3f43eb01d70bc3f02b3f61e2a28743">Set</a>(Type inX, Type inY, Type inZ, Type inW); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a2dd46e17b61d664cfad9dbbad875a1de">SetZero</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="comment">// *** Functions dealing with length ***</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  Type <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a5c4430e2dcd881457bb447cf73dd9d75">GetLength</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  Type <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a19fe0eb0b8d775d2cabf4006675fd964">GetLengthSquared</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  Type <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a83ccf53ceb8f7592be1922928084d296">GetLengthAndNormalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#afc522e7ba73416337f21a777bb9e4878">GetNormalized</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#aa5c452872c01dddadb9cc5acdb7b46ae">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#aba2801977104e27d80657727ceabb4e9">NormalizeIfNotZero</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vFallback = <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(1, 0, 0, 0), Type fEpsilon = xiiMath::SmallEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a90fd738a8d86863cd0671368f2f6274c">IsZero</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a90fd738a8d86863cd0671368f2f6274c">IsZero</a>(Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a12d35bafe5a6b289d914a42b005ea49d">IsNormalized</a>(Type fEpsilon = xiiMath::HugeEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#ada72f035c7f66fc97e374c90013b20fd">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a34a28e70e6c1a2b7c3856215ec9a3f38">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  Type <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a6312e7daf16df440101c11e6293fce11">Distance</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  Type <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a702b32e7788c9964a70d3042da27c51d">DistanceSquared</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#abe70096b77c7b35cbdd98fb7d09c1d70">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#aff9fdbc856af85e03114d779181699ff">operator+=</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vCc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a5844e543d82e0c1c570a6a507f8370f8">operator-=</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vCc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a2a86e4775d786205a99f05c16fdd22c0">operator*=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#aaa19646e0e1d001c6547db64b6dd4d2b">operator/=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a280a58b2ac97192072c5d01855702635">IsIdentical</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#ad5fb940e9f11a3292a47180a6c9e0312">IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="comment">// *** Common vector operations ***</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  Type <a class="code" href="../../d1/d20/classxii_vec4_template.htm#abcd870cce46276520fcb38712748af50">Dot</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a13f044190648770d6f34dbeebda054f2">CompMin</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a44c4bb0f7237f6337a8839e7937205a2">CompMax</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#aa28213893fbcb128d7695412cc9c1510">CompClamp</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vLow, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vHigh) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a58aa3ec6f5ba10c51c54706ed9a298da">CompMul</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#a0a7185e03fd2a1b35f58f8116e7c7f9a">CompDiv</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/d20/classxii_vec4_template.htm#ac7cf5c995aa246d8b928b73f829c76a0">Abs</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;};</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Vec4_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_vec4_template_htm_aa59914423eaa3c4a23f7be4ff4c20874"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#aa59914423eaa3c4a23f7be4ff4c20874">xiiVec4Template::GetData</a></div><div class="ttdeci">Type * GetData()</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec4.h:68</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a7f6e3b05a0cf10439827cb16cfcf41e3"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a7f6e3b05a0cf10439827cb16cfcf41e3">xiiVec4Template::OriginPoint</a></div><div class="ttdeci">static const xiiVec4Template&lt; Type &gt; OriginPoint()</div><div class="ttdoc">Returns a vector initialized to the origin point (0, 0, 0, 1).</div><div class="ttdef"><b>Definition:</b> Vec4.h:38</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a83ccf53ceb8f7592be1922928084d296"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a83ccf53ceb8f7592be1922928084d296">xiiVec4Template::GetLengthAndNormalize</a></div><div class="ttdeci">Type GetLengthAndNormalize()</div><div class="ttdoc">Normalizes this vector and returns its previous length in one operation. More efficient than calling ...</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:144</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_aa28213893fbcb128d7695412cc9c1510"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#aa28213893fbcb128d7695412cc9c1510">xiiVec4Template::CompClamp</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; CompClamp(const xiiVec4Template&lt; Type &gt; &amp;vLow, const xiiVec4Template&lt; Type &gt; &amp;vHigh) const</div><div class="ttdoc">Returns the component-wise clamped value of *this between low and high.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:336</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a44c4bb0f7237f6337a8839e7937205a2"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a44c4bb0f7237f6337a8839e7937205a2">xiiVec4Template::CompMax</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; CompMax(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:327</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a2a86e4775d786205a99f05c16fdd22c0"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a2a86e4775d786205a99f05c16fdd22c0">xiiVec4Template::operator*=</a></div><div class="ttdeci">void operator*=(Type f)</div><div class="ttdoc">Multiplies all components of this vector with f.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:285</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a6312e7daf16df440101c11e6293fce11"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a6312e7daf16df440101c11e6293fce11">xiiVec4Template::Distance</a></div><div class="ttdeci">Type Distance(const xiiVec4Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the distance between two 3D Vectors.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:240</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a58aa3ec6f5ba10c51c54706ed9a298da"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a58aa3ec6f5ba10c51c54706ed9a298da">xiiVec4Template::CompMul</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; CompMul(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:346</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_af2896487eee341907faf5bc28d84f3b6"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#af2896487eee341907faf5bc28d84f3b6">xiiVec4Template::GetAsVec3</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; GetAsVec3() const</div><div class="ttdoc">Returns a xiiVec3Template with x,y and z from this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:97</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a7812b58c9adc791b7409b5d522bd5b5f"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a7812b58c9adc791b7409b5d522bd5b5f">xiiVec4Template::GetData</a></div><div class="ttdeci">const Type * GetData() const</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec4.h:65</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a3064d2afe2a3f30ab8629a8246e689da"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a3064d2afe2a3f30ab8629a8246e689da">xiiVec4Template::ZeroVector</a></div><div class="ttdeci">static const xiiVec4Template&lt; Type &gt; ZeroVector()</div><div class="ttdoc">Returns a vector with all components set to zero.</div><div class="ttdef"><b>Definition:</b> Vec4.h:33</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a12d35bafe5a6b289d914a42b005ea49d"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a12d35bafe5a6b289d914a42b005ea49d">xiiVec4Template::IsNormalized</a></div><div class="ttdeci">bool IsNormalized(Type fEpsilon=xiiMath::HugeEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns, whether the squared length of this vector is between 0.999f and 1.001f.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:187</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a280a58b2ac97192072c5d01855702635"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a280a58b2ac97192072c5d01855702635">xiiVec4Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check (bitwise).</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:419</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_ae24fcdfbaeda2b501a52951c0eab80ca"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#ae24fcdfbaeda2b501a52951c0eab80ca">xiiVec4Template::UnitWAxis</a></div><div class="ttdeci">static const xiiVec4Template&lt; Type &gt; UnitWAxis()</div><div class="ttdoc">Returns a vector initialized to the w unit vector (0, 0, 0, 1).</div><div class="ttdef"><b>Definition:</b> Vec4.h:46</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_ac7cf5c995aa246d8b928b73f829c76a0"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#ac7cf5c995aa246d8b928b73f829c76a0">xiiVec4Template::Abs</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; Abs() const</div><div class="ttdoc">brief Returns the component-wise absolute of *this.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:367</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a90fd738a8d86863cd0671368f2f6274c"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a90fd738a8d86863cd0671368f2f6274c">xiiVec4Template::IsZero</a></div><div class="ttdeci">bool IsZero() const</div><div class="ttdoc">Returns, whether this vector is (0, 0, 0, 0).</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:194</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_adc3f43eb01d70bc3f02b3f61e2a28743"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#adc3f43eb01d70bc3f02b3f61e2a28743">xiiVec4Template::Set</a></div><div class="ttdeci">void Set(Type xyzw)</div><div class="ttdoc">Sets all 4 components to this value.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:106</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_afc522e7ba73416337f21a777bb9e4878"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#afc522e7ba73416337f21a777bb9e4878">xiiVec4Template::GetNormalized</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; GetNormalized() const</div><div class="ttdoc">Returns a normalized version of this vector, leaves the vector itself unchanged.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:152</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a6592a8dc0a4a3521145e7300a732ca5c"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a6592a8dc0a4a3521145e7300a732ca5c">xiiVec4Template::UnitXAxis</a></div><div class="ttdeci">static const xiiVec4Template&lt; Type &gt; UnitXAxis()</div><div class="ttdoc">Returns a vector initialized to the x unit vector (1, 0, 0, 0).</div><div class="ttdef"><b>Definition:</b> Vec4.h:40</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a0a7185e03fd2a1b35f58f8116e7c7f9a"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a0a7185e03fd2a1b35f58f8116e7c7f9a">xiiVec4Template::CompDiv</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; CompDiv(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise division of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:357</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_abcd870cce46276520fcb38712748af50"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#abcd870cce46276520fcb38712748af50">xiiVec4Template::Dot</a></div><div class="ttdeci">Type Dot(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the dot-product of the two vectors (commutative, order does not matter).</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:309</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a13f044190648770d6f34dbeebda054f2"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a13f044190648770d6f34dbeebda054f2">xiiVec4Template::CompMin</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; CompMin(const xiiVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:318</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_ad5fb940e9f11a3292a47180a6c9e0312"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#ad5fb940e9f11a3292a47180a6c9e0312">xiiVec4Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const xiiVec4Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:428</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a702b32e7788c9964a70d3042da27c51d"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a702b32e7788c9964a70d3042da27c51d">xiiVec4Template::DistanceSquared</a></div><div class="ttdeci">Type DistanceSquared(const xiiVec4Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the squared distance between two 3D Vectors. Faster, since no square-root is taken....</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:246</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_aff9fdbc856af85e03114d779181699ff"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#aff9fdbc856af85e03114d779181699ff">xiiVec4Template::operator+=</a></div><div class="ttdeci">void operator+=(const xiiVec4Template&lt; Type &gt; &amp;vCc)</div><div class="ttdoc">Adds cc component-wise to this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:263</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a34a28e70e6c1a2b7c3856215ec9a3f38"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a34a28e70e6c1a2b7c3856215ec9a3f38">xiiVec4Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks that all components are finite numbers.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:225</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a9b235b061d34b1d9dd51dfaf3f8484fe"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a9b235b061d34b1d9dd51dfaf3f8484fe">xiiVec4Template::xiiVec4Template</a></div><div class="ttdeci">xiiVec4Template()</div><div class="ttdoc">Default-constructed vector is uninitialized (for speed)</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:63</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a7b6987736cff961dc545165beb4a7862"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a7b6987736cff961dc545165beb4a7862">xiiVec4Template::UnitYAxis</a></div><div class="ttdeci">static const xiiVec4Template&lt; Type &gt; UnitYAxis()</div><div class="ttdoc">Returns a vector initialized to the y unit vector (0, 1, 0, 0).</div><div class="ttdef"><b>Definition:</b> Vec4.h:42</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a5c4430e2dcd881457bb447cf73dd9d75"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a5c4430e2dcd881457bb447cf73dd9d75">xiiVec4Template::GetLength</a></div><div class="ttdeci">Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:130</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_aafc07800a2265f8588c678cd7addfdb2"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#aafc07800a2265f8588c678cd7addfdb2">xiiVec4Template::OneVector</a></div><div class="ttdeci">static const xiiVec4Template&lt; Type &gt; OneVector()</div><div class="ttdoc">Returns a vector with all components set to one.</div><div class="ttdef"><b>Definition:</b> Vec4.h:35</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a2dd46e17b61d664cfad9dbbad875a1de"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a2dd46e17b61d664cfad9dbbad875a1de">xiiVec4Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets the vector to all zero.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:124</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_aa5c452872c01dddadb9cc5acdb7b46ae"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#aa5c452872c01dddadb9cc5acdb7b46ae">xiiVec4Template::Normalize</a></div><div class="ttdeci">void Normalize()</div><div class="ttdoc">Normalizes this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:161</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_aba2801977104e27d80657727ceabb4e9"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#aba2801977104e27d80657727ceabb4e9">xiiVec4Template::NormalizeIfNotZero</a></div><div class="ttdeci">xiiResult NormalizeIfNotZero(const xiiVec4Template&lt; Type &gt; &amp;vFallback=xiiVec4Template&lt; Type &gt;(1, 0, 0, 0), Type fEpsilon=xiiMath::SmallEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to normalize this vector. If the vector is too close to zero, XII_FAILURE is returned and the v...</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:167</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:54</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_aaa19646e0e1d001c6547db64b6dd4d2b"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#aaa19646e0e1d001c6547db64b6dd4d2b">xiiVec4Template::operator/=</a></div><div class="ttdeci">void operator/=(Type f)</div><div class="ttdoc">Divides all components of this vector by f.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:296</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_ada72f035c7f66fc97e374c90013b20fd"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#ada72f035c7f66fc97e374c90013b20fd">xiiVec4Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns true, if any of x, y, z or w is NaN.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:210</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a435e2e6e13f4fcf1ed1762e5863c1e13"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a435e2e6e13f4fcf1ed1762e5863c1e13">xiiVec4Template::GetAsVec2</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; GetAsVec2() const</div><div class="ttdoc">Returns a xiiVec2Template with x and y from this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:88</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a7ad1469bb780d300791ba4d9fd7845d8"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a7ad1469bb780d300791ba4d9fd7845d8">xiiVec4Template::UnitZAxis</a></div><div class="ttdeci">static const xiiVec4Template&lt; Type &gt; UnitZAxis()</div><div class="ttdoc">Returns a vector initialized to the z unit vector (1, 0, 0, 0).</div><div class="ttdef"><b>Definition:</b> Vec4.h:44</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a19fe0eb0b8d775d2cabf4006675fd964"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a19fe0eb0b8d775d2cabf4006675fd964">xiiVec4Template::GetLengthSquared</a></div><div class="ttdeci">Type GetLengthSquared() const</div><div class="ttdoc">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compa...</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:136</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_a5844e543d82e0c1c570a6a507f8370f8"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#a5844e543d82e0c1c570a6a507f8370f8">xiiVec4Template::operator-=</a></div><div class="ttdeci">void operator-=(const xiiVec4Template&lt; Type &gt; &amp;vCc)</div><div class="ttdoc">Subtracts cc component-wise from this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:274</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm_abe70096b77c7b35cbdd98fb7d09c1d70"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm#abe70096b77c7b35cbdd98fb7d09c1d70">xiiVec4Template::operator-</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; operator-() const</div><div class="ttdoc">Returns the negation of this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:255</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:149</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:138</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:127</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c1b0860bb61ff24e678d996d14e4bcdd.htm">Math</a></li><li class="navelem"><b>Vec4.h</b></li>
    <li class="footer">Generated on Sun Nov 19 2023 19:17:23 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
