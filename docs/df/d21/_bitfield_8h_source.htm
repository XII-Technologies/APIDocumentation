<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Containers/Bitfield.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('df/d21/_bitfield_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Bitfield.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/DynamicArray.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/Stream.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Constants.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> Container&gt;</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d9/d8d/classxii_bitfield.htm">   15</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/d8d/classxii_bitfield.htm">xiiBitfield</a></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <a class="code" href="../../d9/d8d/classxii_bitfield.htm">xiiBitfield</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  xiiUInt32 <a class="code" href="../../d9/d8d/classxii_bitfield.htm#adcdf30c8f58cdbbf3e77d8d209857e2e">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = <span class="keywordtype">void</span>&gt;                        <span class="comment">// Template is used to only conditionally compile this function in when it is actually used.</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#afa50cc0f06e3b478b90983a356f37799">SetCountUninitialized</a>(xiiUInt32 uiBitCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a9ad2778e76beb59fbbb3e9d5f2b51f3a">SetCount</a>(xiiUInt32 uiBitCount, <span class="keywordtype">bool</span> bSetNew = <span class="keyword">false</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a9b41ce94d73f61a55f267a39d4b023bf">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a1ca04bb6b3023ec53ba2add1c639245f">IsAnyBitSet</a>(xiiUInt32 uiFirstBit = 0, xiiUInt32 uiNumBits = 0xFFFFFFFF) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a1a4a344392e8592dc494b49afd2907fd">IsNoBitSet</a>(xiiUInt32 uiFirstBit = 0, xiiUInt32 uiNumBits = 0xFFFFFFFF) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a5b5bc21358817b1b2550fe501c29ba24">AreAllBitsSet</a>(xiiUInt32 uiFirstBit = 0, xiiUInt32 uiNumBits = 0xFFFFFFFF) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a14d058b16b33c9bd32e5194ec06a5c45">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a48826facb0abb3ed53e095ca0b6ef281">SetBit</a>(xiiUInt32 uiBit); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a95603758703fdbe17becb1bbb58ad064">ClearBit</a>(xiiUInt32 uiBit); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a20bc8e770be3e20b7489109de3122e71">SetBitValue</a>(xiiUInt32 uiBit, <span class="keywordtype">bool</span> bValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a5a00c7b5ba184dc51afbcca71517a10e">IsBitSet</a>(xiiUInt32 uiBit) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a0baa4b7ad887af67b8347346f874d4ac">ClearAllBits</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#af8750e3e8bc835a04571fede728a6992">SetAllBits</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a16626b5ef28cd30717e4708d17f4f30c">SetBitRange</a>(xiiUInt32 uiFirstBit, xiiUInt32 uiNumBits); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm#a68a80b4a141a4d1aa78aa49195537259">ClearBitRange</a>(xiiUInt32 uiFirstBit, xiiUInt32 uiNumBits); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  xiiUInt32 GetBitInt(xiiUInt32 uiBitIndex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  xiiUInt32 GetBitMask(xiiUInt32 uiBitIndex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  xiiUInt32 m_uiCount = 0;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  Container m_Container;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;};</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm">xiiDynamicBitfield</a> = <a class="code" href="../../d9/d8d/classxii_bitfield.htm">xiiBitfield&lt;xiiDynamicArray&lt;xiiUInt32&gt;</a>&gt;;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">template</span> &lt;xiiUInt32 BITS&gt;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d9/d8d/classxii_bitfield.htm">xiiHybridBitfield</a> = <a class="code" href="../../d9/d8d/classxii_bitfield.htm">xiiBitfield</a>&lt;<a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a>&lt;xiiUInt32, (BITS + 31) / 32&gt;&gt;;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../dc/d89/classxii_static_bitfield.htm">   89</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield</a></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keyword">using</span> StorageType = T;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keyword">static</span> constexpr xiiUInt32 GetStorageTypeBitCount() { <span class="keywordflow">return</span> xiiMath::NumBits&lt;T&gt;(); }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#afa023aa31311e4ea9b128adbbed30bf3">xiiStaticBitfield</a>();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> FromMask(StorageType bits);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a98ad8751c579e3e8379b406ef73ee822">IsAnyBitSet</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#af710ee3ba89aafdaf7a48ac1e061a5a0">IsNoBitSet</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a4933b988bb8b8594c89044198fa906d3">AreAllBitsSet</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a100b257649f6a1c6af482550845fa95a">SetBit</a>(xiiUInt32 uiBit); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#aa06087b8da370a5795a87359e4e85004">ClearBit</a>(xiiUInt32 uiBit); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#ae7850ac181d7b0f0f831c6492422b633">SetBitValue</a>(xiiUInt32 uiBit, <span class="keywordtype">bool</span> bValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#abf2ae68489eac187c9299e543b66d67d">IsBitSet</a>(xiiUInt32 uiBit) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a164636966f2a80fb2defe497e469fab9">ClearAllBits</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a5038c722b70146e68f18133c9957a0d1">SetAllBits</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a311ca558d446e73e892f3c2ea5fa66c1">SetBitRange</a>(xiiUInt32 uiFirstBit, xiiUInt32 uiNumBits); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#ace268b63f77f3c8b99c3b4126b5cbbf3">ClearBitRange</a>(xiiUInt32 uiFirstBit, xiiUInt32 uiNumBits); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  xiiUInt32 <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#aa73bcf8631b38114ca3a59a770a3aabc">GetLowestBitSet</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  xiiUInt32 <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a7fbbd498913708ea0ee8f9c2e567541c">GetHighestBitSet</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  xiiUInt32 <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a652bbb96aed09bac597cc937a7ec5843">GetNumBitsSet</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  T <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a8157d97230c4ca70a1790cc366565a02">GetValue</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a5d9a492a876bafd334821dd913514583">SetValue</a>(T value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="../../dc/d89/classxii_static_bitfield.htm#a261514beec231c32c26608f595b38533">  149</a></span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a261514beec231c32c26608f595b38533">operator|=</a>(<span class="keyword">const</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a>&amp; rhs) { m_Storage |= rhs.m_Storage; }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="../../dc/d89/classxii_static_bitfield.htm#a1cd4e8078232410b373a7659cdde5dd7">  152</a></span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#a1cd4e8078232410b373a7659cdde5dd7">operator&amp;=</a>(<span class="keyword">const</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a>&amp; rhs) { m_Storage &amp;= rhs.m_Storage; }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> Serialize(<a class="code" href="../../d0/d18/classxii_stream_writer.htm">xiiStreamWriter</a>&amp; ref_writer)<span class="keyword"> const</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    ref_writer.<a class="code" href="../../d0/d18/classxii_stream_writer.htm#ab60561c5808fa4e41da6c8fc9bd4f49c">WriteVersion</a>(s_Version);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    ref_writer &lt;&lt; m_Storage;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">return</span> XII_SUCCESS;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> Deserialize(<a class="code" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>&amp; ref_reader)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">/*auto version =*/</span>ref_reader.ReadVersion(s_Version);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    ref_reader &gt;&gt; m_Storage;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> XII_SUCCESS;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keyword">static</span> constexpr xiiTypeVersion s_Version = 1;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <a class="code" href="../../dc/d89/classxii_static_bitfield.htm#afa023aa31311e4ea9b128adbbed30bf3">xiiStaticBitfield</a>(StorageType initValue) :</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    m_Storage(initValue)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keyword">friend</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> operator|(<a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> lhs, <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> rhs);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">friend</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> operator&amp;(<a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> lhs, <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> rhs);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keyword">friend</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> operator^(<a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> lhs, <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> rhs);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keyword">friend</span> <span class="keywordtype">bool</span> operator==(<a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> lhs, <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;U&gt;</a> rhs);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  StorageType m_Storage = 0;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;};</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> operator|(<a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> lhs, <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> rhs)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a>(lhs.m_Storage | rhs.m_Storage);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> operator&amp;(<a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> lhs, <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> rhs)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;{</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a>(lhs.m_Storage &amp; rhs.m_Storage);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> operator^(<a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> lhs, <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> rhs)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a>(lhs.m_Storage ^ rhs.m_Storage);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;}</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> operator==(<a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> lhs, <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;T&gt;</a> rhs)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;{</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keywordflow">return</span> lhs.m_Storage == rhs.m_Storage;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keyword">using</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield8</a>  = <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;xiiUInt8&gt;</a>;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keyword">using</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield16</a> = <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;xiiUInt16&gt;</a>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keyword">using</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield32</a> = <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;xiiUInt32&gt;</a>;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keyword">using</span> <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield64</a> = <a class="code" href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield&lt;xiiUInt64&gt;</a>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/Bitfield_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_static_bitfield_htm_ace268b63f77f3c8b99c3b4126b5cbbf3"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#ace268b63f77f3c8b99c3b4126b5cbbf3">xiiStaticBitfield::ClearBitRange</a></div><div class="ttdeci">void ClearBitRange(xiiUInt32 uiFirstBit, xiiUInt32 uiNumBits)</div><div class="ttdoc">Clears the range starting at uiFirstBit up to (and including) uiLastBit to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:337</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_af8750e3e8bc835a04571fede728a6992"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#af8750e3e8bc835a04571fede728a6992">xiiBitfield::SetAllBits</a></div><div class="ttdeci">void SetAllBits()</div><div class="ttdoc">Sets all bits to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:219</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a5038c722b70146e68f18133c9957a0d1"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a5038c722b70146e68f18133c9957a0d1">xiiStaticBitfield::SetAllBits</a></div><div class="ttdeci">void SetAllBits()</div><div class="ttdoc">Sets all bits to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:376</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_af710ee3ba89aafdaf7a48ac1e061a5a0"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#af710ee3ba89aafdaf7a48ac1e061a5a0">xiiStaticBitfield::IsNoBitSet</a></div><div class="ttdeci">bool IsNoBitSet() const</div><div class="ttdoc">Returns true, if the bitfield is all zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:324</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a0baa4b7ad887af67b8347346f874d4ac"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a0baa4b7ad887af67b8347346f874d4ac">xiiBitfield::ClearAllBits</a></div><div class="ttdeci">void ClearAllBits()</div><div class="ttdoc">Clears all bits to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:212</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_adcdf30c8f58cdbbf3e77d8d209857e2e"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#adcdf30c8f58cdbbf3e77d8d209857e2e">xiiBitfield::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of bits that this bitfield stores.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:16</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a5b5bc21358817b1b2550fe501c29ba24"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a5b5bc21358817b1b2550fe501c29ba24">xiiBitfield::AreAllBitsSet</a></div><div class="ttdeci">bool AreAllBitsSet(xiiUInt32 uiFirstBit=0, xiiUInt32 uiNumBits=0xFFFFFFFF) const</div><div class="ttdoc">Returns true, if the bitfield is not empty and all bits are set to one.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:116</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a7fbbd498913708ea0ee8f9c2e567541c"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a7fbbd498913708ea0ee8f9c2e567541c">xiiStaticBitfield::GetHighestBitSet</a></div><div class="ttdeci">xiiUInt32 GetHighestBitSet() const</div><div class="ttdoc">Returns the index of the highest bit that is set. Returns the max index+1 in case no bit is set,...</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:364</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a16626b5ef28cd30717e4708d17f4f30c"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a16626b5ef28cd30717e4708d17f4f30c">xiiBitfield::SetBitRange</a></div><div class="ttdeci">void SetBitRange(xiiUInt32 uiFirstBit, xiiUInt32 uiNumBits)</div><div class="ttdoc">Sets the range starting at uiFirstBit up to (and including) uiLastBit to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:226</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition:</b> HybridArray.h:11</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a1a4a344392e8592dc494b49afd2907fd"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a1a4a344392e8592dc494b49afd2907fd">xiiBitfield::IsNoBitSet</a></div><div class="ttdeci">bool IsNoBitSet(xiiUInt32 uiFirstBit=0, xiiUInt32 uiNumBits=0xFFFFFFFF) const</div><div class="ttdoc">Returns true, if the bitfield is empty or all bits are set to zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:110</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a311ca558d446e73e892f3c2ea5fa66c1"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a311ca558d446e73e892f3c2ea5fa66c1">xiiStaticBitfield::SetBitRange</a></div><div class="ttdeci">void SetBitRange(xiiUInt32 uiFirstBit, xiiUInt32 uiNumBits)</div><div class="ttdoc">Sets the range starting at uiFirstBit up to (and including) uiLastBit to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:348</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_ae7850ac181d7b0f0f831c6492422b633"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#ae7850ac181d7b0f0f831c6492422b633">xiiStaticBitfield::SetBitValue</a></div><div class="ttdeci">void SetBitValue(xiiUInt32 uiBit, bool bValue)</div><div class="ttdoc">Sets the given bit to 1 or 0 depending on the given value.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:404</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm">xiiStaticBitfield</a></div><div class="ttdef"><b>Definition:</b> Bitfield.h:89</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_abf2ae68489eac187c9299e543b66d67d"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#abf2ae68489eac187c9299e543b66d67d">xiiStaticBitfield::IsBitSet</a></div><div class="ttdeci">bool IsBitSet(xiiUInt32 uiBit) const</div><div class="ttdoc">Returns true, if the given bit is set to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:388</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_aa73bcf8631b38114ca3a59a770a3aabc"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#aa73bcf8631b38114ca3a59a770a3aabc">xiiStaticBitfield::GetLowestBitSet</a></div><div class="ttdeci">xiiUInt32 GetLowestBitSet() const</div><div class="ttdoc">Returns the index of the lowest bit that is set. Returns the max index+1 in case no bit is set,...</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:370</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a68a80b4a141a4d1aa78aa49195537259"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a68a80b4a141a4d1aa78aa49195537259">xiiBitfield::ClearBitRange</a></div><div class="ttdeci">void ClearBitRange(xiiUInt32 uiFirstBit, xiiUInt32 uiNumBits)</div><div class="ttdoc">Clears the range starting at uiFirstBit up to (and including) uiLastBit to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:264</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a9b41ce94d73f61a55f267a39d4b023bf"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a9b41ce94d73f61a55f267a39d4b023bf">xiiBitfield::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the bitfield does not store any bits.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:52</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a1ca04bb6b3023ec53ba2add1c639245f"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a1ca04bb6b3023ec53ba2add1c639245f">xiiBitfield::IsAnyBitSet</a></div><div class="ttdeci">bool IsAnyBitSet(xiiUInt32 uiFirstBit=0, xiiUInt32 uiNumBits=0xFFFFFFFF) const</div><div class="ttdoc">Returns true, if the bitfield is not empty and any bit is 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:58</div></div>
<div class="ttc" id="aclassxii_stream_writer_htm"><div class="ttname"><a href="../../d0/d18/classxii_stream_writer.htm">xiiStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:106</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a98ad8751c579e3e8379b406ef73ee822"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a98ad8751c579e3e8379b406ef73ee822">xiiStaticBitfield::IsAnyBitSet</a></div><div class="ttdeci">bool IsAnyBitSet() const</div><div class="ttdoc">Returns true, if the bitfield is not zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:318</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_aa06087b8da370a5795a87359e4e85004"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#aa06087b8da370a5795a87359e4e85004">xiiStaticBitfield::ClearBit</a></div><div class="ttdeci">void ClearBit(xiiUInt32 uiBit)</div><div class="ttdoc">Clears the given bit to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:396</div></div>
<div class="ttc" id="aclassxii_bitfield_htm"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm">xiiBitfield</a></div><div class="ttdoc">A template interface, that turns any array class into a bitfield.</div><div class="ttdef"><b>Definition:</b> Bitfield.h:15</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a5d9a492a876bafd334821dd913514583"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a5d9a492a876bafd334821dd913514583">xiiStaticBitfield::SetValue</a></div><div class="ttdeci">void SetValue(T value)</div><div class="ttdoc">Sets the raw uint that stores all bits.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:425</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a8157d97230c4ca70a1790cc366565a02"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a8157d97230c4ca70a1790cc366565a02">xiiStaticBitfield::GetValue</a></div><div class="ttdeci">T GetValue() const</div><div class="ttdoc">Returns the raw uint that stores all bits.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:431</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a4933b988bb8b8594c89044198fa906d3"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a4933b988bb8b8594c89044198fa906d3">xiiStaticBitfield::AreAllBitsSet</a></div><div class="ttdeci">bool AreAllBitsSet() const</div><div class="ttdoc">Returns true, if the bitfield is not empty and all bits are set to one.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:330</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a95603758703fdbe17becb1bbb58ad064"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a95603758703fdbe17becb1bbb58ad064">xiiBitfield::ClearBit</a></div><div class="ttdeci">void ClearBit(xiiUInt32 uiBit)</div><div class="ttdoc">Clears the given bit to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:183</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a652bbb96aed09bac597cc937a7ec5843"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a652bbb96aed09bac597cc937a7ec5843">xiiStaticBitfield::GetNumBitsSet</a></div><div class="ttdeci">xiiUInt32 GetNumBitsSet() const</div><div class="ttdoc">Returns the count of how many bits are set in total.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:358</div></div>
<div class="ttc" id="aclassxii_stream_reader_htm"><div class="ttname"><a href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_afa50cc0f06e3b478b90983a356f37799"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#afa50cc0f06e3b478b90983a356f37799">xiiBitfield::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(xiiUInt32 uiBitCount)</div><div class="ttdoc">Resizes the Bitfield to hold the given number of bits. This version does NOT initialize new bits!</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:23</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_afa023aa31311e4ea9b128adbbed30bf3"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#afa023aa31311e4ea9b128adbbed30bf3">xiiStaticBitfield::xiiStaticBitfield</a></div><div class="ttdeci">xiiStaticBitfield()</div><div class="ttdoc">Initializes the bitfield to all zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:306</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a261514beec231c32c26608f595b38533"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a261514beec231c32c26608f595b38533">xiiStaticBitfield::operator|=</a></div><div class="ttdeci">XII_ALWAYS_INLINE void operator|=(const xiiStaticBitfield&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Modifies this to also contain the bits from rhs.</div><div class="ttdef"><b>Definition:</b> Bitfield.h:149</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a14d058b16b33c9bd32e5194ec06a5c45"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a14d058b16b33c9bd32e5194ec06a5c45">xiiBitfield::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Discards all bits and sets count to zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:168</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a1cd4e8078232410b373a7659cdde5dd7"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a1cd4e8078232410b373a7659cdde5dd7">xiiStaticBitfield::operator&amp;=</a></div><div class="ttdeci">XII_ALWAYS_INLINE void operator&amp;=(const xiiStaticBitfield&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Modifies this to only contain the bits that were set in this and rhs.</div><div class="ttdef"><b>Definition:</b> Bitfield.h:152</div></div>
<div class="ttc" id="aclassxii_stream_writer_htm_ab60561c5808fa4e41da6c8fc9bd4f49c"><div class="ttname"><a href="../../d0/d18/classxii_stream_writer.htm#ab60561c5808fa4e41da6c8fc9bd4f49c">xiiStreamWriter::WriteVersion</a></div><div class="ttdeci">XII_ALWAYS_INLINE void WriteVersion(xiiTypeVersion version)</div><div class="ttdoc">Writes a type version to the stream.</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:154</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a48826facb0abb3ed53e095ca0b6ef281"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a48826facb0abb3ed53e095ca0b6ef281">xiiBitfield::SetBit</a></div><div class="ttdeci">void SetBit(xiiUInt32 uiBit)</div><div class="ttdoc">Sets the given bit to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:175</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:54</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a5a00c7b5ba184dc51afbcca71517a10e"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a5a00c7b5ba184dc51afbcca71517a10e">xiiBitfield::IsBitSet</a></div><div class="ttdeci">bool IsBitSet(xiiUInt32 uiBit) const</div><div class="ttdoc">Returns true, if the given bit is set to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:204</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a20bc8e770be3e20b7489109de3122e71"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a20bc8e770be3e20b7489109de3122e71">xiiBitfield::SetBitValue</a></div><div class="ttdeci">void SetBitValue(xiiUInt32 uiBit, bool bValue)</div><div class="ttdoc">Sets the given bit to 1 or 0 depending on the given value.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:191</div></div>
<div class="ttc" id="aclassxii_bitfield_htm_a9ad2778e76beb59fbbb3e9d5f2b51f3a"><div class="ttname"><a href="../../d9/d8d/classxii_bitfield.htm#a9ad2778e76beb59fbbb3e9d5f2b51f3a">xiiBitfield::SetCount</a></div><div class="ttdeci">void SetCount(xiiUInt32 uiBitCount, bool bSetNew=false)</div><div class="ttdoc">Resizes the Bitfield to hold the given number of bits. If bSetNew is true, new bits are set to 1,...</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:32</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a164636966f2a80fb2defe497e469fab9"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a164636966f2a80fb2defe497e469fab9">xiiStaticBitfield::ClearAllBits</a></div><div class="ttdeci">void ClearAllBits()</div><div class="ttdoc">Clears all bits to 0. Same as Clear().</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:382</div></div>
<div class="ttc" id="aclassxii_static_bitfield_htm_a100b257649f6a1c6af482550845fa95a"><div class="ttname"><a href="../../dc/d89/classxii_static_bitfield.htm#a100b257649f6a1c6af482550845fa95a">xiiStaticBitfield::SetBit</a></div><div class="ttdeci">void SetBit(xiiUInt32 uiBit)</div><div class="ttdoc">Sets the given bit to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:417</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_7f59ab18dbc50035dfc0ee7070867286.htm">Containers</a></li><li class="navelem"><b>Bitfield.h</b></li>
    <li class="footer">Generated on Thu Dec 28 2023 07:57:07 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
