<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Threading/Implementation/ParallelFor_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('df/d21/_parallel_for__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ParallelFor_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/FrameAllocator.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Profiling/Profiling.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType&gt;</div>
<div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="../../dd/dc9/class_array_ptr_task.htm">    7</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask</a> final : <span class="keyword">public</span> <a class="code" href="../../d3/d9b/classxii_task.htm">xiiTask</a></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;{</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <a class="code" href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask</a>(<a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;ElemType&gt;</a> payload, <a class="code" href="../../dc/d84/structxii_delegate.htm">xiiParallelForFunction&lt;ElemType&gt;</a> taskCallback, xiiUInt32 uiItemsPerInvocation) :</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    m_Payload(payload), m_uiItemsPerInvocation(uiItemsPerInvocation), m_TaskCallback(std::move(taskCallback))</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  }</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../dd/dc9/class_array_ptr_task.htm#ad75a86a3ec86ccaf55b22247249611b9">   15</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc9/class_array_ptr_task.htm#ad75a86a3ec86ccaf55b22247249611b9">Execute</a>()<span class="keyword"> override</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="comment">// Work through all of them.</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    m_TaskCallback(0, m_Payload);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  }</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../dd/dc9/class_array_ptr_task.htm#a784fceb6babe6a6920059a0bfca1c47c">   21</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc9/class_array_ptr_task.htm#a784fceb6babe6a6920059a0bfca1c47c">ExecuteWithMultiplicity</a>(xiiUInt32 uiInvocation)<span class="keyword"> const override</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">const</span> xiiUInt32 uiSliceStartIndex = uiInvocation * m_uiItemsPerInvocation;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">const</span> xiiUInt32 uiRemainingItems = uiSliceStartIndex &gt; m_Payload.<a class="code" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>() ? 0 : m_Payload.<a class="code" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>() - uiSliceStartIndex;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keyword">const</span> xiiUInt32 uiSliceItemCount = <a class="code" href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a>(m_uiItemsPerInvocation, uiRemainingItems);</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">if</span> (uiSliceItemCount &gt; 0)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <span class="comment">// Run through the calculated slice.</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keyword">auto</span> taskItemSlice = m_Payload.<a class="code" href="../../d0/d60/classxii_array_ptr.htm#adfae6225d64d4a97ab4c9dbfa40c0e74">GetSubArray</a>(uiSliceStartIndex, uiSliceItemCount);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      m_TaskCallback(uiSliceStartIndex, taskItemSlice);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    }</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  }</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;ElemType&gt;</a>            m_Payload;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  xiiUInt32                        m_uiItemsPerInvocation;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <a class="code" href="../../dc/d84/structxii_delegate.htm">xiiParallelForFunction&lt;ElemType&gt;</a> m_TaskCallback;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;};</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType&gt;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">void</span> xiiTaskSystem::ParallelForInternal(<a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;ElemType&gt;</a> taskItems, <a class="code" href="../../dc/d84/structxii_delegate.htm">xiiParallelForFunction&lt;ElemType&gt;</a> taskCallback, <span class="keyword">const</span> <span class="keywordtype">char</span>* taskName, <span class="keyword">const</span> <a class="code" href="../../d5/d62/structxii_parallel_for_params.htm">xiiParallelForParams</a>&amp; params)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordflow">if</span> (taskItems.<a class="code" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>() &lt;= params.<a class="code" href="../../d5/d62/structxii_parallel_for_params.htm#a1644654abd76fe9b4612a0211756b220">m_uiBinSize</a>)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask&lt;ElemType&gt;</a> arrayPtrTask(taskItems, std::move(taskCallback), taskItems.<a class="code" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>());</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    arrayPtrTask.ConfigureTask(taskName ? taskName : <span class="stringliteral">&quot;Generic ArrayPtr Task&quot;</span>, params.m_NestingMode);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    XII_PROFILE_SCOPE(arrayPtrTask.m_sTaskName);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    arrayPtrTask.Execute();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    xiiUInt32 uiMultiplicity;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    xiiUInt64 uiItemsPerInvocation;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    params.DetermineThreading(taskItems.<a class="code" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>(), uiMultiplicity, uiItemsPerInvocation);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = (params.<a class="code" href="../../d5/d62/structxii_parallel_for_params.htm#a29cdf822b65dcd444ede65403a6414f3">m_pTaskAllocator</a> != <span class="keyword">nullptr</span>) ? params.<a class="code" href="../../d5/d62/structxii_parallel_for_params.htm#a29cdf822b65dcd444ede65403a6414f3">m_pTaskAllocator</a> : <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;ArrayPtrTask&lt;ElemType&gt;</a>&gt; pArrayPtrTask = XII_NEW(pAllocator, <a class="code" href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask&lt;ElemType&gt;</a>, taskItems, std::move(taskCallback), <span class="keyword">static_cast&lt;</span>xiiUInt32<span class="keyword">&gt;</span>(uiItemsPerInvocation));</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    pArrayPtrTask-&gt;ConfigureTask(taskName ? taskName : <span class="stringliteral">&quot;Generic ArrayPtr Task&quot;</span>, params.m_NestingMode);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    pArrayPtrTask-&gt;SetMultiplicity(uiMultiplicity);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="../../d5/d4f/classxii_task_group_i_d.htm">xiiTaskGroupID</a> taskGroupId = <a class="code" href="../../d1/dc7/classxii_task_system.htm#a14d9cf61999e63f898e550e43f163c3c">xiiTaskSystem::StartSingleTask</a>(pArrayPtrTask, <a class="code" href="../../d9/d69/structxii_task_priority.htm#a304b3d2a30b7b8eb04bd741dc2c790acaa8b4c35b5ab0cf3076f03f8a213a40fd">xiiTaskPriority::EarlyThisFrame</a>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="../../d1/dc7/classxii_task_system.htm#ac0730ec443bcb574e67cc6d056353a6b">xiiTaskSystem::WaitForGroup</a>(taskGroupId);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType, <span class="keyword">typename</span> Callback&gt;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../d1/dc7/classxii_task_system.htm#a46596241a0106714af8f8126d0ff7cec">   71</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dc7/classxii_task_system.htm#a46596241a0106714af8f8126d0ff7cec">xiiTaskSystem::ParallelFor</a>(<a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;ElemType&gt;</a> taskItems, Callback taskCallback, <span class="keyword">const</span> <span class="keywordtype">char</span>* taskName, <span class="keyword">const</span> <a class="code" href="../../d5/d62/structxii_parallel_for_params.htm">xiiParallelForParams</a>&amp; params)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keyword">auto</span> wrappedCallback = [taskCallback = std::move(taskCallback)](</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                           xiiUInt32 <span class="comment">/*uiBaseIndex*/</span>, <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;ElemType&gt;</a> taskSlice) {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    taskCallback(taskSlice);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  };</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  ParallelForInternal&lt;ElemType&gt;(</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    taskItems, <a class="code" href="../../dc/d84/structxii_delegate.htm">xiiParallelForFunction&lt;ElemType&gt;</a>(std::move(wrappedCallback), xiiFrameAllocator::GetCurrentAllocator()), taskName, params);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType, <span class="keyword">typename</span> Callback&gt;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../d1/dc7/classxii_task_system.htm#a3ed38881536a5182dd89bf7caed30101">   83</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dc7/classxii_task_system.htm#a3ed38881536a5182dd89bf7caed30101">xiiTaskSystem::ParallelForSingle</a>(<a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;ElemType&gt;</a> taskItems, Callback taskCallback, <span class="keyword">const</span> <span class="keywordtype">char</span>* taskName, <span class="keyword">const</span> <a class="code" href="../../d5/d62/structxii_parallel_for_params.htm">xiiParallelForParams</a>&amp; params)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">auto</span> wrappedCallback = [taskCallback = std::move(taskCallback)](xiiUInt32 <span class="comment">/*uiBaseIndex*/</span>, <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;ElemType&gt;</a> taskSlice) {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// Handing in by non-const&amp; allows to use callbacks with (non-)const&amp; as well as value parameters.</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">for</span> (ElemType&amp; taskItem : taskSlice)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      taskCallback(taskItem);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  };</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  ParallelForInternal&lt;ElemType&gt;(</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    taskItems, <a class="code" href="../../dc/d84/structxii_delegate.htm">xiiParallelForFunction&lt;ElemType&gt;</a>(std::move(wrappedCallback), xiiFrameAllocator::GetCurrentAllocator()), taskName, params);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType, <span class="keyword">typename</span> Callback&gt;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../d1/dc7/classxii_task_system.htm#a4e2b8c0c70310dc5f1701b9bcba281ca">   98</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dc7/classxii_task_system.htm#a4e2b8c0c70310dc5f1701b9bcba281ca">xiiTaskSystem::ParallelForSingleIndex</a>(</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;ElemType&gt;</a>       taskItems,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  Callback                    taskCallback,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>*                 taskName,</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d5/d62/structxii_parallel_for_params.htm">xiiParallelForParams</a>&amp; params)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keyword">auto</span> wrappedCallback = [taskCallback = std::move(taskCallback)](xiiUInt32 uiBaseIndex, <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;ElemType&gt;</a> taskSlice) {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">for</span> (xiiUInt32 uiIndex = 0; uiIndex &lt; taskSlice.GetCount(); ++uiIndex)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="comment">// Handing in by dereferenced pointer allows to use callbacks with (non-)const&amp; as well as value parameters.</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      taskCallback(uiBaseIndex + uiIndex, *(taskSlice.GetPtr() + uiIndex));</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  };</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  ParallelForInternal&lt;ElemType&gt;(</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    taskItems, <a class="code" href="../../dc/d84/structxii_delegate.htm">xiiParallelForFunction&lt;ElemType&gt;</a>(std::move(wrappedCallback), xiiFrameAllocator::GetCurrentAllocator()), taskName, params);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructxii_parallel_for_params_htm"><div class="ttname"><a href="../../d5/d62/structxii_parallel_for_params.htm">xiiParallelForParams</a></div><div class="ttdoc">Settings for xiiTaskSystem::ParallelFor invocations.</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:166</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr</a></div><div class="ttdoc">A Shared ptr manages a shared object and destroys that object when no one references it anymore....</div><div class="ttdef"><b>Definition:</b> SharedPtr.h:9</div></div>
<div class="ttc" id="aclassxii_foundation_htm_a40d4e876d8aa817b36d04d0cac497fb8"><div class="ttname"><a href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a></div><div class="ttdeci">static XII_ALWAYS_INLINE xiiAllocatorBase * GetDefaultAllocator()</div><div class="ttdoc">The default allocator can be used for any kind of allocation if no alignment is required.</div><div class="ttdef"><b>Definition:</b> Basics.h:82</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt; ElemType &gt;</a></div></div>
<div class="ttc" id="astructxii_delegate_htm"><div class="ttname"><a href="../../dc/d84/structxii_delegate.htm">xiiDelegate</a></div><div class="ttdoc">A generic delegate class which supports static functions and member functions.</div><div class="ttdef"><b>Definition:</b> Delegate.h:75</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm_af1e072a93ee1a583d0db00e821c2d999"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">xiiArrayPtr::GetCount</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:142</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm_adfae6225d64d4a97ab4c9dbfa40c0e74"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm#adfae6225d64d4a97ab4c9dbfa40c0e74">xiiArrayPtr::GetSubArray</a></div><div class="ttdeci">XII_FORCE_INLINE xiiArrayPtr&lt; T &gt; GetSubArray(xiiUInt32 uiStart, xiiUInt32 uiCount) const</div><div class="ttdoc">Creates a sub-array from this array.</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:148</div></div>
<div class="ttc" id="aclassxii_task_system_htm_a4e2b8c0c70310dc5f1701b9bcba281ca"><div class="ttname"><a href="../../d1/dc7/classxii_task_system.htm#a4e2b8c0c70310dc5f1701b9bcba281ca">xiiTaskSystem::ParallelForSingleIndex</a></div><div class="ttdeci">static void ParallelForSingleIndex(xiiArrayPtr&lt; ElemType &gt; taskItems, Callback taskCallback, const char *taskName=nullptr, const xiiParallelForParams &amp;params=xiiParallelForParams())</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:98</div></div>
<div class="ttc" id="aclass_array_ptr_task_htm_ad75a86a3ec86ccaf55b22247249611b9"><div class="ttname"><a href="../../dd/dc9/class_array_ptr_task.htm#ad75a86a3ec86ccaf55b22247249611b9">ArrayPtrTask::Execute</a></div><div class="ttdeci">void Execute() override</div><div class="ttdoc">Override this to implement the task's supposed functionality.</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:15</div></div>
<div class="ttc" id="aclass_array_ptr_task_htm_a784fceb6babe6a6920059a0bfca1c47c"><div class="ttname"><a href="../../dd/dc9/class_array_ptr_task.htm#a784fceb6babe6a6920059a0bfca1c47c">ArrayPtrTask::ExecuteWithMultiplicity</a></div><div class="ttdeci">void ExecuteWithMultiplicity(xiiUInt32 uiInvocation) const override</div><div class="ttdoc">Override this to implement the task's supposed functionality.</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:21</div></div>
<div class="ttc" id="aclassxii_task_system_htm_ac0730ec443bcb574e67cc6d056353a6b"><div class="ttname"><a href="../../d1/dc7/classxii_task_system.htm#ac0730ec443bcb574e67cc6d056353a6b">xiiTaskSystem::WaitForGroup</a></div><div class="ttdeci">static void WaitForGroup(xiiTaskGroupID Group)</div><div class="ttdoc">Blocks until all tasks in the given group have finished.</div><div class="ttdef"><b>Definition:</b> TaskSystemGroups.cpp:274</div></div>
<div class="ttc" id="astructxii_task_priority_htm_a304b3d2a30b7b8eb04bd741dc2c790acaa8b4c35b5ab0cf3076f03f8a213a40fd"><div class="ttname"><a href="../../d9/d69/structxii_task_priority.htm#a304b3d2a30b7b8eb04bd741dc2c790acaa8b4c35b5ab0cf3076f03f8a213a40fd">xiiTaskPriority::EarlyThisFrame</a></div><div class="ttdeci">@ EarlyThisFrame</div><div class="ttdoc">Highest priority, guaranteed to get finished in this frame.</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:42</div></div>
<div class="ttc" id="astructxii_parallel_for_params_htm_a1644654abd76fe9b4612a0211756b220"><div class="ttname"><a href="../../d5/d62/structxii_parallel_for_params.htm#a1644654abd76fe9b4612a0211756b220">xiiParallelForParams::m_uiBinSize</a></div><div class="ttdeci">xiiUInt32 m_uiBinSize</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:173</div></div>
<div class="ttc" id="aclassxii_task_htm"><div class="ttname"><a href="../../d3/d9b/classxii_task.htm">xiiTask</a></div><div class="ttdoc">Base class for custom tasks.</div><div class="ttdef"><b>Definition:</b> Task.h:8</div></div>
<div class="ttc" id="astructxii_parallel_for_params_htm_a29cdf822b65dcd444ede65403a6414f3"><div class="ttname"><a href="../../d5/d62/structxii_parallel_for_params.htm#a29cdf822b65dcd444ede65403a6414f3">xiiParallelForParams::m_pTaskAllocator</a></div><div class="ttdeci">xiiAllocatorBase * m_pTaskAllocator</div><div class="ttdoc">The allocator used to for the tasks that the parallel-for uses internally. If null,...</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:186</div></div>
<div class="ttc" id="aclassxii_task_system_htm_a3ed38881536a5182dd89bf7caed30101"><div class="ttname"><a href="../../d1/dc7/classxii_task_system.htm#a3ed38881536a5182dd89bf7caed30101">xiiTaskSystem::ParallelForSingle</a></div><div class="ttdeci">static void ParallelForSingle(xiiArrayPtr&lt; ElemType &gt; taskItems, Callback taskCallback, const char *taskName=nullptr, const xiiParallelForParams &amp;params=xiiParallelForParams())</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:83</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassxii_task_system_htm_a14d9cf61999e63f898e550e43f163c3c"><div class="ttname"><a href="../../d1/dc7/classxii_task_system.htm#a14d9cf61999e63f898e550e43f163c3c">xiiTaskSystem::StartSingleTask</a></div><div class="ttdeci">static xiiTaskGroupID StartSingleTask(const xiiSharedPtr&lt; xiiTask &gt; &amp;pTask, xiiTaskPriority::Enum Priority, xiiOnTaskGroupFinishedCallback callback=xiiOnTaskGroupFinishedCallback())</div><div class="ttdoc">A helper function to insert a single task into the system and start it right away....</div><div class="ttdef"><b>Definition:</b> TaskSystemTasks.cpp:19</div></div>
<div class="ttc" id="aclassxii_task_group_i_d_htm"><div class="ttname"><a href="../../d5/d4f/classxii_task_group_i_d.htm">xiiTaskGroupID</a></div><div class="ttdoc">Given out by xiiTaskSystem::CreateTaskGroup to identify a task group.</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:102</div></div>
<div class="ttc" id="anamespacexii_math_htm_a2c660f80f0df5bb91a751d12a93cb9cb"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a2c660f80f0df5bb91a751d12a93cb9cb">xiiMath::Min</a></div><div class="ttdeci">constexpr XII_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:47</div></div>
<div class="ttc" id="aclass_array_ptr_task_htm"><div class="ttname"><a href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask</a></div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:7</div></div>
<div class="ttc" id="aclassxii_task_system_htm_a46596241a0106714af8f8126d0ff7cec"><div class="ttname"><a href="../../d1/dc7/classxii_task_system.htm#a46596241a0106714af8f8126d0ff7cec">xiiTaskSystem::ParallelFor</a></div><div class="ttdeci">static void ParallelFor(xiiArrayPtr&lt; ElemType &gt; taskItems, Callback taskCallback, const char *taskName=nullptr, const xiiParallelForParams &amp;params=xiiParallelForParams())</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:71</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c8751045d2b8443d4309f8d6fe6804f4.htm">Threading</a></li><li class="navelem"><a class="el" href="../../dir_e80ef092f2b4be82827a9ef66877a380.htm">Implementation</a></li><li class="navelem"><b>ParallelFor_inl.h</b></li>
    <li class="footer">Generated on Mon Apr 17 2023 20:10:31 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
