<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Containers/Map.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d63/_map_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Map.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Deque.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../d6/d86/classxii_map_base.htm">   17</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase</a></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keyword">struct </span>Node;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keyword">struct </span>NilNode</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    Node*    m_pParent  = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    Node*    m_pLink[2] = {<span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    xiiUInt8 m_uiLevel  = 0;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  };</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">struct </span>Node : <span class="keyword">public</span> NilNode</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    KeyType   m_Key;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    ValueType m_Value;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  };</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">   39</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">ConstIterator</a></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">using</span> iterator_category = std::forward_iterator_tag;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">value_type</a>        = <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#aaa4c26de9c81d9c1ac8012cd9991c91f">ConstIterator</a>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">using</span> difference_type   = std::ptrdiff_t;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">pointer</a>           = <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">ConstIterator</a>*;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">reference</a>         = <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">ConstIterator</a>&amp;;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#aaa4c26de9c81d9c1ac8012cd9991c91f">   50</a></span>&#160;    XII_ALWAYS_INLINE <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#aaa4c26de9c81d9c1ac8012cd9991c91f">ConstIterator</a>() :</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      m_pElement(nullptr)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a1e20ca39f845f2fccc7d2b5c58746f42">   56</a></span>&#160;    XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a1e20ca39f845f2fccc7d2b5c58746f42">IsValid</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement != <span class="keyword">nullptr</span>); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#ade2a322e28149badbc44b71b8b525695">   59</a></span>&#160;    XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#ade2a322e28149badbc44b71b8b525695">operator==</a>(<span class="keyword">const</span> <span class="keyword">typename</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a>&amp; it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement == it2.m_pElement); }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a9358353cdb3a4726457a33800a9c23bf">   62</a></span>&#160;    XII_FORCE_INLINE <span class="keyword">const</span> KeyType&amp; <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a9358353cdb3a4726457a33800a9c23bf">Key</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      XII_ASSERT_DEBUG(<a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a1e20ca39f845f2fccc7d2b5c58746f42">IsValid</a>(), <span class="stringliteral">&quot;Cannot access the &#39;key&#39; of an invalid iterator.&quot;</span>);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordflow">return</span> m_pElement-&gt;m_Key;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#accebefa541dbb3ffe2d7b36ce0a31573">   69</a></span>&#160;    XII_FORCE_INLINE <span class="keyword">const</span> ValueType&amp; <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#accebefa541dbb3ffe2d7b36ce0a31573">Value</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      XII_ASSERT_DEBUG(<a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a1e20ca39f845f2fccc7d2b5c58746f42">IsValid</a>(), <span class="stringliteral">&quot;Cannot access the &#39;value&#39; of an invalid iterator.&quot;</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordflow">return</span> m_pElement-&gt;m_Value;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a56ec56c320d887a8c801154b29ac35a7">   76</a></span>&#160;    XII_ALWAYS_INLINE <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">ConstIterator</a>&amp; <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a56ec56c320d887a8c801154b29ac35a7">operator*</a>() { <span class="keywordflow">return</span> *<span class="keyword">this</span>; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#ab1b6ea0cea4b9554516799477bb4afda">Next</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#aea91494e8ac7fb37cc1b84e2353a81fa">Prev</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a74cbe1294b79370092aeb939fb0748bd">   85</a></span>&#160;    XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a74cbe1294b79370092aeb939fb0748bd">operator++</a>() { <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#ab1b6ea0cea4b9554516799477bb4afda">Next</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a982b2afd27ea445ce2815a65783490fd">   88</a></span>&#160;    XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a982b2afd27ea445ce2815a65783490fd">operator--</a>() { <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#aea91494e8ac7fb37cc1b84e2353a81fa">Prev</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase</a>&lt;KeyType, ValueType, Comparer&gt;;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    XII_ALWAYS_INLINE <span class="keyword">explicit</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#aaa4c26de9c81d9c1ac8012cd9991c91f">ConstIterator</a>(Node* pInit) :</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      m_pElement(pInit)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    Node* m_pElement;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  };</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../d8/d70/structxii_map_base_1_1_iterator.htm">  102</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm">Iterator</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">ConstIterator</a></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">using</span> iterator_category = std::forward_iterator_tag;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">value_type</a>        = <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm#a9cda021dfb5e48e6495bec34b3878118">Iterator</a>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">using</span> difference_type   = std::ptrdiff_t;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">pointer</a>           = <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm">Iterator</a>*;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">reference</a>         = <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm">Iterator</a>&amp;;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// this is required to pull in the const version of this function</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#accebefa541dbb3ffe2d7b36ce0a31573">ConstIterator::Value</a>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="../../d8/d70/structxii_map_base_1_1_iterator.htm#a9cda021dfb5e48e6495bec34b3878118">  116</a></span>&#160;    XII_ALWAYS_INLINE <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm#a9cda021dfb5e48e6495bec34b3878118">Iterator</a>() :</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">ConstIterator</a>()</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="../../d8/d70/structxii_map_base_1_1_iterator.htm#abb7ffa8d038d181ee9e7e11eeae29ba2">  122</a></span>&#160;    XII_FORCE_INLINE ValueType&amp; <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm#abb7ffa8d038d181ee9e7e11eeae29ba2">Value</a>()</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      XII_ASSERT_DEBUG(this-&gt;<a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a1e20ca39f845f2fccc7d2b5c58746f42">IsValid</a>(), <span class="stringliteral">&quot;Cannot access the &#39;value&#39; of an invalid iterator.&quot;</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordflow">return</span> this-&gt;m_pElement-&gt;m_Value;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../d8/d70/structxii_map_base_1_1_iterator.htm#a350db0bb0196446b61ab1b879e2167b0">  129</a></span>&#160;    XII_ALWAYS_INLINE <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm">Iterator</a>&amp; <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm#a350db0bb0196446b61ab1b879e2167b0">operator*</a>() { <span class="keywordflow">return</span> *<span class="keyword">this</span>; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase</a>&lt;KeyType, ValueType, Comparer&gt;;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    XII_ALWAYS_INLINE <span class="keyword">explicit</span> <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm#a9cda021dfb5e48e6495bec34b3878118">Iterator</a>(Node* pInit) :</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">ConstIterator</a>(pInit)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  };</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <a class="code" href="../../d6/d86/classxii_map_base.htm#a410b0029baf0fc48b11d34b0bf2b358f">xiiMapBase</a>(<span class="keyword">const</span> Comparer&amp; comparer, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <a class="code" href="../../d6/d86/classxii_map_base.htm#a410b0029baf0fc48b11d34b0bf2b358f">xiiMapBase</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; cc, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <a class="code" href="../../d6/d86/classxii_map_base.htm#a9e03d781b5af9c23f74142225c3e8501">~xiiMapBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#a42de6e40e64b9d4b6f92685a2664c0c9">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#a749be38b6f8d77ab0cf04f47b98483c4">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  xiiUInt32 <a class="code" href="../../d6/d86/classxii_map_base.htm#a7d45470ae96a09b661b5fb92fad8d694">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#a6df7dde5c973d1e39914cad08fa129e9">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  Iterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a9882892562b88132844077c2d6cc811e">GetIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  ConstIterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a9882892562b88132844077c2d6cc811e">GetIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  Iterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a10a3abaf4c929a76bbf7b29573bb476c">GetLastIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  ConstIterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a10a3abaf4c929a76bbf7b29573bb476c">GetLastIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType, <span class="keyword">typename</span> CompatibleValueType&gt;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  Iterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a7e48397530157eae5193f83fdced2ed1">Insert</a>(CompatibleKeyType&amp;&amp; key, CompatibleValueType&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#a0b42808ba9fffccdce603c115d4d633b">Remove</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  Iterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a0b42808ba9fffccdce603c115d4d633b">Remove</a>(<span class="keyword">const</span> Iterator&amp; pos); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  Iterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a0f2538fb01cd98917a7229f2d286ebfb">FindOrAdd</a>(CompatibleKeyType&amp;&amp; key, <span class="keywordtype">bool</span>* pExisted = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  ValueType&amp; <a class="code" href="../../d6/d86/classxii_map_base.htm#a385d4c074fa20d80552f6d10f5b18c4a">operator[]</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#a8486122183f672ce30a3e44d3080fe07">TryGetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, ValueType&amp; out_value) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#a8486122183f672ce30a3e44d3080fe07">TryGetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keyword">const</span> ValueType*&amp; out_pValue) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#a8486122183f672ce30a3e44d3080fe07">TryGetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, ValueType*&amp; out_pValue) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keyword">const</span> ValueType* <a class="code" href="../../d6/d86/classxii_map_base.htm#a9ff02fce8f1acfd28cb41ef6351ddcee">GetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  ValueType* <a class="code" href="../../d6/d86/classxii_map_base.htm#a9ff02fce8f1acfd28cb41ef6351ddcee">GetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="keyword">const</span> ValueType&amp; <a class="code" href="../../d6/d86/classxii_map_base.htm#acbbdfe2e828a405c62402fa7962cf857">GetValueOrDefault</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keyword">const</span> ValueType&amp; defaultValue) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  Iterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a99957cb652f5a4a0ba01cf150f19808b">Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  Iterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a0ee3bc4968714ea9177324c0a3c47a89">LowerBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  Iterator <a class="code" href="../../d6/d86/classxii_map_base.htm#afc5ea0e967ac1fe4f15554a9bc2e5c45">UpperBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  ConstIterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a99957cb652f5a4a0ba01cf150f19808b">Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#aa6e27dc54ec8cc3f247e2e70e7ef0968">Contains</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  ConstIterator <a class="code" href="../../d6/d86/classxii_map_base.htm#a0ee3bc4968714ea9177324c0a3c47a89">LowerBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  ConstIterator <a class="code" href="../../d6/d86/classxii_map_base.htm#afc5ea0e967ac1fe4f15554a9bc2e5c45">UpperBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="../../d6/d86/classxii_map_base.htm#ab2fd6d4223ca42409cf0a33299f58438">  254</a></span>&#160;  <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* <a class="code" href="../../d6/d86/classxii_map_base.htm#ab2fd6d4223ca42409cf0a33299f58438">GetAllocator</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code" href="../../d1/d7d/classxii_deque_base.htm#ac6bd66726793b411f2df0cfdb23dfbaa">GetAllocator</a>(); }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#ac42e4240eb233666e23caeef7d12153d">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="../../d6/d86/classxii_map_base.htm#a0127200a605bcedf21568f6d6b5c6ea3">  260</a></span>&#160;  xiiUInt64 <a class="code" href="../../d6/d86/classxii_map_base.htm#a0127200a605bcedf21568f6d6b5c6ea3">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code" href="../../d1/d7d/classxii_deque_base.htm#abe5332bb093bdfed4202c5fdd3739a12">GetHeapMemoryUsage</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d6/d86/classxii_map_base.htm#a33390b11390f80b3cce774156097c90a">Swap</a>(<a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; other); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  Node* Internal_Find(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  Node* Internal_LowerBound(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  Node* Internal_UpperBound(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <span class="keywordtype">void</span> Constructor();</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  Node* AcquireNode(CompatibleKeyType&amp;&amp; key, ValueType&amp;&amp; value, xiiUInt8 uiLevel, Node* pParent);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="keywordtype">void</span> ReleaseNode(Node* pNode);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="comment">// \brief Red-Black Tree stuff(Anderson Tree to be exact).</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  <span class="comment">// Code taken from here: http://eternallyconfuzzled.com/tuts/datastructures/jsw_tut_andersson.aspx</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  Node* SkewNode(Node* root);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  Node* SplitNode(Node* root);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  <span class="keywordtype">void</span>  <a class="code" href="../../d6/d86/classxii_map_base.htm#a7e48397530157eae5193f83fdced2ed1">Insert</a>(<span class="keyword">const</span> KeyType&amp; key, <span class="keyword">const</span> ValueType&amp; value, Node*&amp; pInsertedNode);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  Node* <a class="code" href="../../d6/d86/classxii_map_base.htm#a0b42808ba9fffccdce603c115d4d633b">Remove</a>(Node* root, <span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keywordtype">bool</span>&amp; bRemoved);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  Node* GetLeftMost() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  Node* GetRightMost() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="keywordtype">void</span> SwapNilNode(Node*&amp; pCurNode, NilNode* pOld, NilNode* pNew);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  Node* m_pRoot;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  Node* m_pFreeElementStack;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  NilNode m_NilNode;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <a class="code" href="../../d8/df8/classxii_deque.htm">xiiDeque&lt;Node, xiiNullAllocatorWrapper, false&gt;</a> m_Elements;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  xiiUInt32 m_uiCount;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  Comparer m_Comparer;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;};</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer = xiiCompareHelper&lt;KeyType&gt;, <span class="keyword">typename</span> AllocatorWrapper = xiiDefaultAllocatorWrapper&gt;</div>
<div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="../../d6/df7/classxii_map.htm">  322</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/df7/classxii_map.htm">xiiMap</a> : <span class="keyword">public</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase</a>&lt;KeyType, ValueType, Comparer&gt;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;{</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <a class="code" href="../../d6/df7/classxii_map.htm">xiiMap</a>();</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d6/df7/classxii_map.htm">xiiMap</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  <a class="code" href="../../d6/df7/classxii_map.htm">xiiMap</a>(<span class="keyword">const</span> Comparer&amp; comparer, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <a class="code" href="../../d6/df7/classxii_map.htm">xiiMap</a>(<span class="keyword">const</span> <a class="code" href="../../d6/df7/classxii_map.htm">xiiMap&lt;KeyType, ValueType, Comparer, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <a class="code" href="../../d6/df7/classxii_map.htm">xiiMap</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; other);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d6/df7/classxii_map.htm">xiiMap&lt;KeyType, ValueType, Comparer, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;};</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::Iterator</a> begin(<a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;{</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  <span class="keywordflow">return</span> ref_container.<a class="code" href="../../d6/d86/classxii_map_base.htm#a9882892562b88132844077c2d6cc811e">GetIterator</a>();</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;}</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a> begin(<span class="keyword">const</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;{</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d6/d86/classxii_map_base.htm#a9882892562b88132844077c2d6cc811e">GetIterator</a>();</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;}</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; </div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a> cbegin(<span class="keyword">const</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;{</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d6/d86/classxii_map_base.htm#a9882892562b88132844077c2d6cc811e">GetIterator</a>();</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;}</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; </div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::Iterator</a> end(<a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;{</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d8/d70/structxii_map_base_1_1_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::Iterator</a>();</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;}</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a> end(<span class="keyword">const</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;{</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a>();</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;}</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a> cend(<span class="keyword">const</span> <a class="code" href="../../d6/d86/classxii_map_base.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;{</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">xiiMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a>();</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;}</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160; </div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/Map_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_map_base_htm_ab2fd6d4223ca42409cf0a33299f58438"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#ab2fd6d4223ca42409cf0a33299f58438">xiiMapBase::GetAllocator</a></div><div class="ttdeci">xiiAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> Map.h:254</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a749be38b6f8d77ab0cf04f47b98483c4"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a749be38b6f8d77ab0cf04f47b98483c4">xiiMapBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether there are no elements in the map. O(1) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:178</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a7d45470ae96a09b661b5fb92fad8d694"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a7d45470ae96a09b661b5fb92fad8d694">xiiMapBase::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements currently stored in the map. O(1) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:184</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a0b42808ba9fffccdce603c115d4d633b"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a0b42808ba9fffccdce603c115d4d633b">xiiMapBase::Remove</a></div><div class="ttdeci">bool Remove(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Erases the key/value pair with the given key, if it exists. O(log n) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:529</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a9e03d781b5af9c23f74142225c3e8501"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a9e03d781b5af9c23f74142225c3e8501">xiiMapBase::~xiiMapBase</a></div><div class="ttdeci">~xiiMapBase()</div><div class="ttdoc">Destroys all elements from the map.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:144</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a6df7dde5c973d1e39914cad08fa129e9"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a6df7dde5c973d1e39914cad08fa129e9">xiiMapBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destroys all elements in the map and resets its size to zero.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:159</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_accebefa541dbb3ffe2d7b36ce0a31573"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#accebefa541dbb3ffe2d7b36ce0a31573">xiiMapBase::ConstIterator::Value</a></div><div class="ttdeci">const XII_FORCE_INLINE ValueType &amp; Value() const</div><div class="ttdoc">Returns the 'value' of the element that this iterator points to.</div><div class="ttdef"><b>Definition:</b> Map.h:69</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a7e48397530157eae5193f83fdced2ed1"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a7e48397530157eae5193f83fdced2ed1">xiiMapBase::Insert</a></div><div class="ttdeci">Iterator Insert(CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</div><div class="ttdoc">Inserts the key/value pair into the tree and returns an Iterator to it. O(log n) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:519</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm">xiiMapBase::ConstIterator</a></div><div class="ttdoc">Base class for all iterators.</div><div class="ttdef"><b>Definition:</b> Map.h:39</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a42de6e40e64b9d4b6f92685a2664c0c9"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a42de6e40e64b9d4b6f92685a2664c0c9">xiiMapBase::operator=</a></div><div class="ttdeci">void operator=(const xiiMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;rhs)</div><div class="ttdoc">Copies all key/value pairs from the given map into this one.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:150</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_a74cbe1294b79370092aeb939fb0748bd"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a74cbe1294b79370092aeb939fb0748bd">xiiMapBase::ConstIterator::operator++</a></div><div class="ttdeci">XII_ALWAYS_INLINE void operator++()</div><div class="ttdoc">Shorthand for 'Next'.</div><div class="ttdef"><b>Definition:</b> Map.h:85</div></div>
<div class="ttc" id="aclassxii_map_base_htm"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm">xiiMapBase</a></div><div class="ttdoc">An associative container. Similar to STL::map.</div><div class="ttdef"><b>Definition:</b> Map.h:17</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a10a3abaf4c929a76bbf7b29573bb476c"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a10a3abaf4c929a76bbf7b29573bb476c">xiiMapBase::GetLastIterator</a></div><div class="ttdeci">Iterator GetLastIterator()</div><div class="ttdoc">Returns an Iterator to the very last element. For reverse traversal.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:203</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a410b0029baf0fc48b11d34b0bf2b358f"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a410b0029baf0fc48b11d34b0bf2b358f">xiiMapBase::xiiMapBase</a></div><div class="ttdeci">xiiMapBase(const Comparer &amp;comparer, xiiAllocatorBase *pAllocator)</div><div class="ttdoc">Initializes the map to be empty.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:128</div></div>
<div class="ttc" id="aclassxii_map_base_htm_ac42e4240eb233666e23caeef7d12153d"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#ac42e4240eb233666e23caeef7d12153d">xiiMapBase::operator==</a></div><div class="ttdeci">bool operator==(const xiiMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;rhs) const</div><div class="ttdoc">Comparison operator.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:788</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_aea91494e8ac7fb37cc1b84e2353a81fa"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#aea91494e8ac7fb37cc1b84e2353a81fa">xiiMapBase::ConstIterator::Prev</a></div><div class="ttdeci">void Prev()</div><div class="ttdoc">Advances the iterator to the previous element in the map. The iterator will not be valid anymore,...</div><div class="ttdef"><b>Definition:</b> Map_inl.h:61</div></div>
<div class="ttc" id="aclassxii_map_htm"><div class="ttname"><a href="../../d6/df7/classxii_map.htm">xiiMap</a></div><div class="ttdef"><b>Definition:</b> Map.h:322</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_a1e20ca39f845f2fccc7d2b5c58746f42"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a1e20ca39f845f2fccc7d2b5c58746f42">xiiMapBase::ConstIterator::IsValid</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool IsValid() const</div><div class="ttdoc">Checks whether this iterator points to a valid element.</div><div class="ttdef"><b>Definition:</b> Map.h:56</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a0f2538fb01cd98917a7229f2d286ebfb"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a0f2538fb01cd98917a7229f2d286ebfb">xiiMapBase::FindOrAdd</a></div><div class="ttdeci">Iterator FindOrAdd(CompatibleKeyType &amp;&amp;key, bool *pExisted=nullptr)</div><div class="ttdoc">Searches for the given key and returns an iterator to it. If it did not exist yet,...</div><div class="ttdef"><b>Definition:</b> Map_inl.h:441</div></div>
<div class="ttc" id="aclassxii_map_base_htm_acbbdfe2e828a405c62402fa7962cf857"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#acbbdfe2e828a405c62402fa7962cf857">xiiMapBase::GetValueOrDefault</a></div><div class="ttdeci">const ValueType &amp; GetValueOrDefault(const CompatibleKeyType &amp;key, const ValueType &amp;defaultValue) const</div><div class="ttdoc">Either returns the value of the entry with the given key, if found, or the provided default value.</div></div>
<div class="ttc" id="aclassxii_map_base_htm_afc5ea0e967ac1fe4f15554a9bc2e5c45"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#afc5ea0e967ac1fe4f15554a9bc2e5c45">xiiMapBase::UpperBound</a></div><div class="ttdeci">Iterator UpperBound(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid i...</div></div>
<div class="ttc" id="astructxii_map_base_1_1_iterator_htm_a350db0bb0196446b61ab1b879e2167b0"><div class="ttname"><a href="../../d8/d70/structxii_map_base_1_1_iterator.htm#a350db0bb0196446b61ab1b879e2167b0">xiiMapBase::Iterator::operator*</a></div><div class="ttdeci">XII_ALWAYS_INLINE Iterator &amp; operator*()</div><div class="ttdoc">Returns '*this' to enable foreach.</div><div class="ttdef"><b>Definition:</b> Map.h:129</div></div>
<div class="ttc" id="aclassxii_deque_base_htm_ac6bd66726793b411f2df0cfdb23dfbaa"><div class="ttname"><a href="../../d1/d7d/classxii_deque_base.htm#ac6bd66726793b411f2df0cfdb23dfbaa">xiiDequeBase::GetAllocator</a></div><div class="ttdeci">xiiAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> Deque.h:167</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_aaa4c26de9c81d9c1ac8012cd9991c91f"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#aaa4c26de9c81d9c1ac8012cd9991c91f">xiiMapBase::ConstIterator::ConstIterator</a></div><div class="ttdeci">XII_ALWAYS_INLINE ConstIterator()</div><div class="ttdoc">Constructs an invalid iterator.</div><div class="ttdef"><b>Definition:</b> Map.h:50</div></div>
<div class="ttc" id="astructxii_map_base_1_1_iterator_htm"><div class="ttname"><a href="../../d8/d70/structxii_map_base_1_1_iterator.htm">xiiMapBase::Iterator</a></div><div class="ttdoc">Forward Iterator to iterate over all elements in sorted order.</div><div class="ttdef"><b>Definition:</b> Map.h:102</div></div>
<div class="ttc" id="aclassxii_deque_htm"><div class="ttname"><a href="../../d8/df8/classxii_deque.htm">xiiDeque&lt; Node, xiiNullAllocatorWrapper, false &gt;</a></div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_a9358353cdb3a4726457a33800a9c23bf"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a9358353cdb3a4726457a33800a9c23bf">xiiMapBase::ConstIterator::Key</a></div><div class="ttdeci">const XII_FORCE_INLINE KeyType &amp; Key() const</div><div class="ttdoc">Returns the 'key' of the element that this iterator points to.</div><div class="ttdef"><b>Definition:</b> Map.h:62</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a0127200a605bcedf21568f6d6b5c6ea3"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a0127200a605bcedf21568f6d6b5c6ea3">xiiMapBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> Map.h:260</div></div>
<div class="ttc" id="aclassxii_map_base_htm_aa6e27dc54ec8cc3f247e2e70e7ef0968"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#aa6e27dc54ec8cc3f247e2e70e7ef0968">xiiMapBase::Contains</a></div><div class="ttdeci">bool Contains(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Checks whether the given key is in the container.</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a8486122183f672ce30a3e44d3080fe07"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a8486122183f672ce30a3e44d3080fe07">xiiMapBase::TryGetValue</a></div><div class="ttdeci">bool TryGetValue(const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</div><div class="ttdoc">Returns whether an entry with the given key was found and if found writes out the corresponding value...</div></div>
<div class="ttc" id="astructxii_map_base_1_1_iterator_htm_abb7ffa8d038d181ee9e7e11eeae29ba2"><div class="ttname"><a href="../../d8/d70/structxii_map_base_1_1_iterator.htm#abb7ffa8d038d181ee9e7e11eeae29ba2">xiiMapBase::Iterator::Value</a></div><div class="ttdeci">XII_FORCE_INLINE ValueType &amp; Value()</div><div class="ttdoc">Returns the 'value' of the element that this iterator points to.</div><div class="ttdef"><b>Definition:</b> Map.h:122</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a99957cb652f5a4a0ba01cf150f19808b"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a99957cb652f5a4a0ba01cf150f19808b">xiiMapBase::Find</a></div><div class="ttdeci">Iterator Find(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found....</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:21</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a9882892562b88132844077c2d6cc811e"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a9882892562b88132844077c2d6cc811e">xiiMapBase::GetIterator</a></div><div class="ttdeci">Iterator GetIterator()</div><div class="ttdoc">Returns an Iterator to the very first element.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:191</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_ade2a322e28149badbc44b71b8b525695"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#ade2a322e28149badbc44b71b8b525695">xiiMapBase::ConstIterator::operator==</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool operator==(const typename xiiMapBase&lt; KeyType, ValueType, Comparer &gt;::ConstIterator &amp;it2) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition:</b> Map.h:59</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a33390b11390f80b3cce774156097c90a"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a33390b11390f80b3cce774156097c90a">xiiMapBase::Swap</a></div><div class="ttdeci">void Swap(xiiMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;other)</div><div class="ttdoc">Swaps this map with the other one.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:857</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_a982b2afd27ea445ce2815a65783490fd"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a982b2afd27ea445ce2815a65783490fd">xiiMapBase::ConstIterator::operator--</a></div><div class="ttdeci">XII_ALWAYS_INLINE void operator--()</div><div class="ttdoc">Shorthand for 'Prev'.</div><div class="ttdef"><b>Definition:</b> Map.h:88</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_a56ec56c320d887a8c801154b29ac35a7"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#a56ec56c320d887a8c801154b29ac35a7">xiiMapBase::ConstIterator::operator*</a></div><div class="ttdeci">XII_ALWAYS_INLINE ConstIterator &amp; operator*()</div><div class="ttdoc">Returns '*this' to enable foreach.</div><div class="ttdef"><b>Definition:</b> Map.h:76</div></div>
<div class="ttc" id="aclassxii_deque_base_htm_abe5332bb093bdfed4202c5fdd3739a12"><div class="ttname"><a href="../../d1/d7d/classxii_deque_base.htm#abe5332bb093bdfed4202c5fdd3739a12">xiiDequeBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> Deque_inl.h:961</div></div>
<div class="ttc" id="astructxii_map_base_1_1_const_iterator_htm_ab1b6ea0cea4b9554516799477bb4afda"><div class="ttname"><a href="../../d8/d0f/structxii_map_base_1_1_const_iterator.htm#ab1b6ea0cea4b9554516799477bb4afda">xiiMapBase::ConstIterator::Next</a></div><div class="ttdeci">void Next()</div><div class="ttdoc">Advances the iterator to the next element in the map. The iterator will not be valid anymore,...</div><div class="ttdef"><b>Definition:</b> Map_inl.h:10</div></div>
<div class="ttc" id="astructxii_map_base_1_1_iterator_htm_a9cda021dfb5e48e6495bec34b3878118"><div class="ttname"><a href="../../d8/d70/structxii_map_base_1_1_iterator.htm#a9cda021dfb5e48e6495bec34b3878118">xiiMapBase::Iterator::Iterator</a></div><div class="ttdeci">XII_ALWAYS_INLINE Iterator()</div><div class="ttdoc">Constructs an invalid iterator.</div><div class="ttdef"><b>Definition:</b> Map.h:116</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a385d4c074fa20d80552f6d10f5b18c4a"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a385d4c074fa20d80552f6d10f5b18c4a">xiiMapBase::operator[]</a></div><div class="ttdeci">ValueType &amp; operator[](const CompatibleKeyType &amp;key)</div><div class="ttdoc">Allows read/write access to the value stored under the given key. If there is no such key,...</div><div class="ttdef"><b>Definition:</b> Map_inl.h:434</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a0ee3bc4968714ea9177324c0a3c47a89"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a0ee3bc4968714ea9177324c0a3c47a89">xiiMapBase::LowerBound</a></div><div class="ttdeci">Iterator LowerBound(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid ...</div></div>
<div class="ttc" id="aclassxii_map_base_htm_a9ff02fce8f1acfd28cb41ef6351ddcee"><div class="ttname"><a href="../../d6/d86/classxii_map_base.htm#a9ff02fce8f1acfd28cb41ef6351ddcee">xiiMapBase::GetValue</a></div><div class="ttdeci">const ValueType * GetValue(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns a pointer to the value of the entry with the given key if found, otherwise returns nullptr.</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_7f59ab18dbc50035dfc0ee7070867286.htm">Containers</a></li><li class="navelem"><b>Map.h</b></li>
    <li class="footer">Generated on Thu Dec 21 2023 16:40:31 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
