<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Reflection/ReflectionUtils.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d43/_reflection_utils_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ReflectionUtils.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Set.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/Reflection.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d3/d93/classxii_reflection_utils.htm">   10</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../d3/d93/classxii_reflection_utils.htm">xiiReflectionUtils</a></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* GetCommonBaseType(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pRtti1, <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pRtti2);</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsBasicType(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pRtti);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsValueType(<span class="keyword">const</span> <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>* pProp);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* GetTypeFromVariant(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* GetTypeFromVariant(<a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariantType::Enum</a> type);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keyword">static</span> xiiUInt32 GetComponentCount(<a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariantType::Enum</a> type);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span>      SetComponent(<a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; ref_vector, xiiUInt32 uiComponent, <span class="keywordtype">double</span> fValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">double</span>    GetComponent(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; vector, xiiUInt32 uiComponent);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> GetMemberPropertyValue(<span class="keyword">const</span> <a class="code" href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a>* pProp, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject);                    <span class="comment">// [tested] via ToolsFoundation</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span>       SetMemberPropertyValue(<span class="keyword">const</span> <a class="code" href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value); <span class="comment">// [tested] via ToolsFoundation</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> GetArrayPropertyValue(<span class="keyword">const</span> <a class="code" href="../../df/da8/classxii_abstract_array_property.htm">xiiAbstractArrayProperty</a>* pProp, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, xiiUInt32 uiIndex);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span>       SetArrayPropertyValue(<a class="code" href="../../df/da8/classxii_abstract_array_property.htm">xiiAbstractArrayProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, xiiUInt32 uiIndex, <span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> InsertSetPropertyValue(<a class="code" href="../../dd/d45/classxii_abstract_set_property.htm">xiiAbstractSetProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> RemoveSetPropertyValue(<a class="code" href="../../dd/d45/classxii_abstract_set_property.htm">xiiAbstractSetProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> GetMapPropertyValue(<span class="keyword">const</span> <a class="code" href="../../da/d76/classxii_abstract_map_property.htm">xiiAbstractMapProperty</a>* pProp, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span>       SetMapPropertyValue(<a class="code" href="../../da/d76/classxii_abstract_map_property.htm">xiiAbstractMapProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey, <span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> InsertArrayPropertyValue(<a class="code" href="../../df/da8/classxii_abstract_array_property.htm">xiiAbstractArrayProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, xiiUInt32 uiIndex);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> RemoveArrayPropertyValue(<a class="code" href="../../df/da8/classxii_abstract_array_property.htm">xiiAbstractArrayProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, xiiUInt32 uiIndex);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a>* GetMemberProperty(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pRtti, xiiUInt32 uiPropertyIndex);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a>* GetMemberProperty(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pRtti, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName); <span class="comment">// [tested] via ToolsFoundation</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> GatherTypesDerivedFromClass(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pBaseRtti, <a class="code" href="../../d6/d31/classxii_set.htm">xiiSet&lt;const xiiRTTI*&gt;</a>&amp; out_types, <span class="keywordtype">bool</span> bIncludeDependencies);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> GatherDependentTypes(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pRtti, <a class="code" href="../../d6/d31/classxii_set.htm">xiiSet&lt;const xiiRTTI*&gt;</a>&amp; inout_types);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> CreateDependencySortedTypeArray(<span class="keyword">const</span> <a class="code" href="../../d6/d31/classxii_set.htm">xiiSet&lt;const xiiRTTI*&gt;</a>&amp; types, <a class="code" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;const xiiRTTI*&gt;</a>&amp; out_sortedTypes);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../dd/d61/structxii_reflection_utils_1_1_enum_conversion_mode.htm">   71</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../dd/d61/structxii_reflection_utils_1_1_enum_conversion_mode.htm">EnumConversionMode</a></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">enum</span> Enum</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      FullyQualifiedName,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      ValueNameOnly,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      Default = FullyQualifiedName</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    };</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keyword">using</span> StorageType = xiiUInt8;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  };</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> EnumerationToString(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pEnumerationRtti, xiiInt64 iValue, <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; out_sOutput, <a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../d3/d93/classxii_reflection_utils.htm#a7bfabd24c9c543abcf56e5550cfb9c7b">   90</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/d93/classxii_reflection_utils.htm#a7bfabd24c9c543abcf56e5550cfb9c7b">EnumerationToString</a>(<a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;T&gt;</a> value, <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; out_sOutput, <a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">return</span> EnumerationToString(xiiGetStaticRTTI&lt;T&gt;(), value.<a class="code" href="../../de/dfd/structxii_enum.htm#a2643cb33f38a4feba80a79879895bfac">GetValue</a>(), out_sOutput, conversionMode);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="../../d3/d93/classxii_reflection_utils.htm#a5ddda7fc64ddc0a5068fbf2d0aace11f">   97</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/d93/classxii_reflection_utils.htm#a5ddda7fc64ddc0a5068fbf2d0aace11f">BitflagsToString</a>(<a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;T&gt;</a> value, <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; out_sOutput, <a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> EnumerationToString(xiiGetStaticRTTI&lt;T&gt;(), value.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a6914e5bc6af6cb913a8a5f4264a6b836">GetValue</a>(), out_sOutput, conversionMode);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../df/d67/structxii_reflection_utils_1_1_enum_key_value_pair.htm">  102</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../df/d67/structxii_reflection_utils_1_1_enum_key_value_pair.htm">EnumKeyValuePair</a></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> m_sKey;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    xiiInt32  m_iValue = 0;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  };</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> GetEnumKeysAndValues(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pEnumerationRtti, <a class="code" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;EnumKeyValuePair&gt;</a>&amp; ref_entries, <a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> StringToEnumeration(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pEnumerationRtti, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sValue, xiiInt64&amp; out_iValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="../../d3/d93/classxii_reflection_utils.htm#a7c4f702a40514456bff4eaaa48a9e74d">  118</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/d93/classxii_reflection_utils.htm#a7c4f702a40514456bff4eaaa48a9e74d">StringToEnumeration</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sValue, <a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;T&gt;</a>&amp; out_value)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    xiiInt64   value;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> retval = StringToEnumeration(xiiGetStaticRTTI&lt;T&gt;(), sValue, value);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    out_value         = <span class="keyword">static_cast&lt;</span>typename T::Enum<span class="keyword">&gt;</span>(value);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> retval;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keyword">static</span> xiiInt64 DefaultEnumerationValue(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pEnumerationRtti); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keyword">static</span> xiiInt64 MakeEnumerationValid(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pEnumerationRtti, xiiInt64 iValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="../../d3/d93/classxii_reflection_utils.htm#acca1a8348ff96ffedc0b055cd296c97a">  136</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/d93/classxii_reflection_utils.htm#acca1a8348ff96ffedc0b055cd296c97a">IsEqual</a>(<span class="keyword">const</span> T* pObject, <span class="keyword">const</span> T* pObject2)</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span> IsEqual(pObject, pObject2, xiiGetStaticRTTI&lt;T&gt;());</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual(<span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject2, <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pType); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual(<span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject2, <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>* pProp);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> DeleteObject(<span class="keywordtype">void</span>* pObject, <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>* pOwnerProperty);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> GetDefaultVariantFromType(<a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariant::Type::Enum</a> type); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> GetDefaultVariantFromType(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pRtti);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> GetDefaultValue(<span class="keyword">const</span> <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>* pProperty, <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> index = <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>());</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SetAllMemberPropertiesToDefault(<span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pRtti, <span class="keywordtype">void</span>* pObject);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> ClampValue(<a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <span class="keyword">const</span> <a class="code" href="../../db/d19/classxii_clamp_value_attribute.htm">xiiClampValueAttribute</a>* pAttrib);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructxii_enum_htm"><div class="ttname"><a href="../../de/dfd/structxii_enum.htm">xiiEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition:</b> Enum.h:37</div></div>
<div class="ttc" id="aclassxii_reflection_utils_htm_a5ddda7fc64ddc0a5068fbf2d0aace11f"><div class="ttname"><a href="../../d3/d93/classxii_reflection_utils.htm#a5ddda7fc64ddc0a5068fbf2d0aace11f">xiiReflectionUtils::BitflagsToString</a></div><div class="ttdeci">static bool BitflagsToString(xiiBitflags&lt; T &gt; value, xiiStringBuilder &amp;out_sOutput, xiiEnum&lt; EnumConversionMode &gt; conversionMode=EnumConversionMode::Default)</div><div class="ttdoc">Helper template to shorten the call for xiiBitflags.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:97</div></div>
<div class="ttc" id="aclassxii_variant_htm"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm">xiiVariant</a></div><div class="ttdoc">xiiVariant is a class that can store different types of variables, which is useful in situations wher...</div><div class="ttdef"><b>Definition:</b> Variant.h:47</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6b"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariantType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdoc">This enum describes the type of data that is currently stored inside the variant. Note that changes t...</div><div class="ttdef"><b>Definition:</b> VariantType.h:25</div></div>
<div class="ttc" id="aclassxii_reflection_utils_htm"><div class="ttname"><a href="../../d3/d93/classxii_reflection_utils.htm">xiiReflectionUtils</a></div><div class="ttdoc">Helper functions for handling reflection related operations.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:10</div></div>
<div class="ttc" id="aclassxii_set_htm"><div class="ttname"><a href="../../d6/d31/classxii_set.htm">xiiSet&lt; const xiiRTTI * &gt;</a></div></div>
<div class="ttc" id="aclassxii_reflection_utils_htm_a7c4f702a40514456bff4eaaa48a9e74d"><div class="ttname"><a href="../../d3/d93/classxii_reflection_utils.htm#a7c4f702a40514456bff4eaaa48a9e74d">xiiReflectionUtils::StringToEnumeration</a></div><div class="ttdeci">static bool StringToEnumeration(xiiStringView sValue, xiiEnum&lt; T &gt; &amp;out_value)</div><div class="ttdoc">Helper template to shorten the call for xiiEnums.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:118</div></div>
<div class="ttc" id="astructxii_hybrid_string_htm"><div class="ttname"><a href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt; 32, xiiDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="aclassxii_abstract_set_property_htm"><div class="ttname"><a href="../../dd/d45/classxii_abstract_set_property.htm">xiiAbstractSetProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:311</div></div>
<div class="ttc" id="aclassxii_r_t_t_i_htm"><div class="ttname"><a href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition:</b> RTTI.h:29</div></div>
<div class="ttc" id="astructxii_bitflags_htm_a6914e5bc6af6cb913a8a5f4264a6b836"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm#a6914e5bc6af6cb913a8a5f4264a6b836">xiiBitflags::GetValue</a></div><div class="ttdeci">XII_ALWAYS_INLINE StorageType GetValue() const</div><div class="ttdoc">Returns the stored value as the underlying integer type.</div><div class="ttdef"><b>Definition:</b> Bitflags.h:204</div></div>
<div class="ttc" id="aclassxii_reflection_utils_htm_acca1a8348ff96ffedc0b055cd296c97a"><div class="ttname"><a href="../../d3/d93/classxii_reflection_utils.htm#acca1a8348ff96ffedc0b055cd296c97a">xiiReflectionUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const T *pObject, const T *pObject2)</div><div class="ttdoc">Templated convenience function that calls IsEqual and automatically deduces the type.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:136</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="aclassxii_abstract_map_property_htm"><div class="ttname"><a href="../../da/d76/classxii_abstract_map_property.htm">xiiAbstractMapProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:346</div></div>
<div class="ttc" id="aclassxii_abstract_member_property_htm"><div class="ttname"><a href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a></div><div class="ttdoc">This is the base class for all properties that are members of a class. It provides more information a...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:235</div></div>
<div class="ttc" id="aclassxii_abstract_property_htm"><div class="ttname"><a href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></div><div class="ttdoc">This is the base interface for all properties in the reflection system. It provides enough informatio...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:149</div></div>
<div class="ttc" id="aclassxii_dynamic_array_htm"><div class="ttname"><a href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a></div><div class="ttdef"><b>Definition:</b> DynamicArray.h:80</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:54</div></div>
<div class="ttc" id="astructxii_bitflags_htm"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a></div><div class="ttdoc">The xiiBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition:</b> Bitflags.h:80</div></div>
<div class="ttc" id="astructxii_enum_htm_a2643cb33f38a4feba80a79879895bfac"><div class="ttname"><a href="../../de/dfd/structxii_enum.htm#a2643cb33f38a4feba80a79879895bfac">xiiEnum::GetValue</a></div><div class="ttdeci">XII_ALWAYS_INLINE StorageType GetValue() const</div><div class="ttdoc">Returns the enum value as an integer.</div><div class="ttdef"><b>Definition:</b> Enum.h:99</div></div>
<div class="ttc" id="astructxii_reflection_utils_1_1_enum_conversion_mode_htm"><div class="ttname"><a href="../../dd/d61/structxii_reflection_utils_1_1_enum_conversion_mode.htm">xiiReflectionUtils::EnumConversionMode</a></div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:71</div></div>
<div class="ttc" id="aclassxii_reflection_utils_htm_a7bfabd24c9c543abcf56e5550cfb9c7b"><div class="ttname"><a href="../../d3/d93/classxii_reflection_utils.htm#a7bfabd24c9c543abcf56e5550cfb9c7b">xiiReflectionUtils::EnumerationToString</a></div><div class="ttdeci">static bool EnumerationToString(xiiEnum&lt; T &gt; value, xiiStringBuilder &amp;out_sOutput, xiiEnum&lt; EnumConversionMode &gt; conversionMode=EnumConversionMode::Default)</div><div class="ttdoc">Helper template to shorten the call for xiiEnums.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:90</div></div>
<div class="ttc" id="aclassxii_clamp_value_attribute_htm"><div class="ttname"><a href="../../db/d19/classxii_clamp_value_attribute.htm">xiiClampValueAttribute</a></div><div class="ttdoc">A property attribute that allows to define min and max values for the UI. Min or max may be set to an...</div><div class="ttdef"><b>Definition:</b> PropertyAttributes.h:236</div></div>
<div class="ttc" id="aclassxii_string_builder_htm"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a></div><div class="ttdoc">xiiStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="aclassxii_abstract_array_property_htm"><div class="ttname"><a href="../../df/da8/classxii_abstract_array_property.htm">xiiAbstractArrayProperty</a></div><div class="ttdoc">The base class for a property that represents an array of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:271</div></div>
<div class="ttc" id="astructxii_reflection_utils_1_1_enum_key_value_pair_htm"><div class="ttname"><a href="../../df/d67/structxii_reflection_utils_1_1_enum_key_value_pair.htm">xiiReflectionUtils::EnumKeyValuePair</a></div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:102</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_f1e13142959a2e7970d979e1f6f7bcb1.htm">Reflection</a></li><li class="navelem"><b>ReflectionUtils.h</b></li>
    <li class="footer">Generated on Fri Nov 17 2023 03:01:25 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
