<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiBlobPtr&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d93/classxii_blob_ptr.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d9/d65/classxii_blob_ptr-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiBlobPtr&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class encapsulates a blob's storage and it's size. It is recommended to use this class instead of directly working on the void* of the blob.  
 <a href="../../d3/d93/classxii_blob_ptr.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/da9/_blob_8h_source.htm">Blob.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aa3335a4cc5a335aca6e66c955f6051d7"><td class="memItemLeft" align="right" valign="top"><a id="aa3335a4cc5a335aca6e66c955f6051d7"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ByteType</b> = typename <a class="el" href="../../d0/d1f/structxii_array_ptr_detail_1_1_byte_type_helper.htm">xiiArrayPtrDetail::ByteTypeHelper</a>&lt; T &gt;::type</td></tr>
<tr class="separator:aa3335a4cc5a335aca6e66c955f6051d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0cb094a61a82648b110b295632c5b1a"><td class="memItemLeft" align="right" valign="top"><a id="ab0cb094a61a82648b110b295632c5b1a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ValueType</b> = T</td></tr>
<tr class="separator:ab0cb094a61a82648b110b295632c5b1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3d6e87361dcf801d4c214369dba7df5"><td class="memItemLeft" align="right" valign="top"><a id="ad3d6e87361dcf801d4c214369dba7df5"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>PointerType</b> = T *</td></tr>
<tr class="separator:ad3d6e87361dcf801d4c214369dba7df5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ebe862f858b4612bc6fe489a96158bb"><td class="memItemLeft" align="right" valign="top"><a id="a7ebe862f858b4612bc6fe489a96158bb"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T *</td></tr>
<tr class="separator:a7ebe862f858b4612bc6fe489a96158bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40084ce2223f6d7cc77d18c8b02e23c6"><td class="memItemLeft" align="right" valign="top"><a id="a40084ce2223f6d7cc77d18c8b02e23c6"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:a40084ce2223f6d7cc77d18c8b02e23c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e3507c738d848bb713e5ed26d32cf16"><td class="memItemLeft" align="right" valign="top"><a id="a0e3507c738d848bb713e5ed26d32cf16"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T *</td></tr>
<tr class="separator:a0e3507c738d848bb713e5ed26d32cf16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb9924361529deac014e42df66369871"><td class="memItemLeft" align="right" valign="top"><a id="afb9924361529deac014e42df66369871"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:afb9924361529deac014e42df66369871"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a70ec4236e369d65c8c81806e58f407e9"><td class="memItemLeft" align="right" valign="top"><a id="a70ec4236e369d65c8c81806e58f407e9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a70ec4236e369d65c8c81806e58f407e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc260bf3f97d20b73e656b1eb8a91485"><td class="memItemLeft" align="right" valign="top"><a id="acc260bf3f97d20b73e656b1eb8a91485"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#acc260bf3f97d20b73e656b1eb8a91485">xiiBlobPtr</a> ()=default</td></tr>
<tr class="memdesc:acc260bf3f97d20b73e656b1eb8a91485"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../d3/d93/classxii_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">xiiBlobPtr</a> to be empty. <br /></td></tr>
<tr class="separator:acc260bf3f97d20b73e656b1eb8a91485"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a696a9f67d62f621322e7c333e82b178f"><td class="memTemplParams" colspan="2"><a id="a696a9f67d62f621322e7c333e82b178f"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a696a9f67d62f621322e7c333e82b178f"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a696a9f67d62f621322e7c333e82b178f">xiiBlobPtr</a> (U *pPtr, xiiUInt64 uiCount)</td></tr>
<tr class="memdesc:a696a9f67d62f621322e7c333e82b178f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../d3/d93/classxii_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">xiiBlobPtr</a> with the given pointer and number of elements. No memory is allocated or copied. <br /></td></tr>
<tr class="separator:a696a9f67d62f621322e7c333e82b178f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ed8a66d5f0b910e5ff62451f8f3729a"><td class="memTemplParams" colspan="2"><a id="a7ed8a66d5f0b910e5ff62451f8f3729a"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a7ed8a66d5f0b910e5ff62451f8f3729a"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a7ed8a66d5f0b910e5ff62451f8f3729a">xiiBlobPtr</a> (ValueType(&amp;staticArray)[N])</td></tr>
<tr class="memdesc:a7ed8a66d5f0b910e5ff62451f8f3729a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../d3/d93/classxii_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">xiiBlobPtr</a> to encapsulate the given array. <br /></td></tr>
<tr class="separator:a7ed8a66d5f0b910e5ff62451f8f3729a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77579f53bc90ec636433cb8f5c1fbdaf"><td class="memItemLeft" align="right" valign="top"><a id="a77579f53bc90ec636433cb8f5c1fbdaf"></a>
XII_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a77579f53bc90ec636433cb8f5c1fbdaf">xiiBlobPtr</a> (const <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a77579f53bc90ec636433cb8f5c1fbdaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../d3/d93/classxii_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">xiiBlobPtr</a> to be a copy of <em>other</em>. No memory is allocated or copied. <br /></td></tr>
<tr class="separator:a77579f53bc90ec636433cb8f5c1fbdaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5793db83d656af6a251f1e26aec19c9"><td class="memItemLeft" align="right" valign="top"><a id="ad5793db83d656af6a251f1e26aec19c9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#ad5793db83d656af6a251f1e26aec19c9">operator xiiBlobPtr&lt; const T &gt;</a> () const</td></tr>
<tr class="memdesc:ad5793db83d656af6a251f1e26aec19c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to const version. <br /></td></tr>
<tr class="separator:ad5793db83d656af6a251f1e26aec19c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1aa3f21a92f5836c02149ad93a50c9"><td class="memItemLeft" align="right" valign="top"><a id="acc1aa3f21a92f5836c02149ad93a50c9"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#acc1aa3f21a92f5836c02149ad93a50c9">operator=</a> (const <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:acc1aa3f21a92f5836c02149ad93a50c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the pointer and size of /a other. Does not allocate any data. <br /></td></tr>
<tr class="separator:acc1aa3f21a92f5836c02149ad93a50c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2209c7b9f9affc080c3720c5071fc53d"><td class="memItemLeft" align="right" valign="top"><a id="a2209c7b9f9affc080c3720c5071fc53d"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a2209c7b9f9affc080c3720c5071fc53d">Clear</a> ()</td></tr>
<tr class="memdesc:a2209c7b9f9affc080c3720c5071fc53d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a2209c7b9f9affc080c3720c5071fc53d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05b95e1c29d6cc29169a555402d1eb62"><td class="memItemLeft" align="right" valign="top"><a id="a05b95e1c29d6cc29169a555402d1eb62"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (std::nullptr_t)</td></tr>
<tr class="separator:a05b95e1c29d6cc29169a555402d1eb62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1ea468639d437e2a169ac09bbaf4b97"><td class="memItemLeft" align="right" valign="top"><a id="aa1ea468639d437e2a169ac09bbaf4b97"></a>
XII_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#aa1ea468639d437e2a169ac09bbaf4b97">GetPtr</a> () const</td></tr>
<tr class="memdesc:aa1ea468639d437e2a169ac09bbaf4b97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the array. <br /></td></tr>
<tr class="separator:aa1ea468639d437e2a169ac09bbaf4b97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc690c26de4f32985da3be4069a6cd35"><td class="memItemLeft" align="right" valign="top"><a id="adc690c26de4f32985da3be4069a6cd35"></a>
XII_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#adc690c26de4f32985da3be4069a6cd35">GetPtr</a> ()</td></tr>
<tr class="memdesc:adc690c26de4f32985da3be4069a6cd35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the array. <br /></td></tr>
<tr class="separator:adc690c26de4f32985da3be4069a6cd35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02866879ec983ae031a6df86a48eb38a"><td class="memItemLeft" align="right" valign="top"><a id="a02866879ec983ae031a6df86a48eb38a"></a>
XII_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a02866879ec983ae031a6df86a48eb38a">GetEndPtr</a> ()</td></tr>
<tr class="memdesc:a02866879ec983ae031a6df86a48eb38a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer behind the last element of the array. <br /></td></tr>
<tr class="separator:a02866879ec983ae031a6df86a48eb38a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab51f003b2377e46807348a4aaf52d379"><td class="memItemLeft" align="right" valign="top"><a id="ab51f003b2377e46807348a4aaf52d379"></a>
XII_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#ab51f003b2377e46807348a4aaf52d379">GetEndPtr</a> () const</td></tr>
<tr class="memdesc:ab51f003b2377e46807348a4aaf52d379"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer behind the last element of the array. <br /></td></tr>
<tr class="separator:ab51f003b2377e46807348a4aaf52d379"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bc168e82555fea14ac3852e994ab948"><td class="memItemLeft" align="right" valign="top"><a id="a6bc168e82555fea14ac3852e994ab948"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a6bc168e82555fea14ac3852e994ab948">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a6bc168e82555fea14ac3852e994ab948"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the array is empty. <br /></td></tr>
<tr class="separator:a6bc168e82555fea14ac3852e994ab948"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf3f0fd86c7a9a1feb69d614d86ec2b"><td class="memItemLeft" align="right" valign="top"><a id="a3bf3f0fd86c7a9a1feb69d614d86ec2b"></a>
XII_ALWAYS_INLINE xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a3bf3f0fd86c7a9a1feb69d614d86ec2b">GetCount</a> () const</td></tr>
<tr class="memdesc:a3bf3f0fd86c7a9a1feb69d614d86ec2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements in the array. <br /></td></tr>
<tr class="separator:a3bf3f0fd86c7a9a1feb69d614d86ec2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af83454044faa22eaaa6977096aa6e726"><td class="memItemLeft" align="right" valign="top"><a id="af83454044faa22eaaa6977096aa6e726"></a>
XII_FORCE_INLINE <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#af83454044faa22eaaa6977096aa6e726">GetSubArray</a> (xiiUInt64 uiStart, xiiUInt64 uiCount) const</td></tr>
<tr class="memdesc:af83454044faa22eaaa6977096aa6e726"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sub-array from this array. <br /></td></tr>
<tr class="separator:af83454044faa22eaaa6977096aa6e726"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad51dd300f3c7282db2ea6c5937544782"><td class="memItemLeft" align="right" valign="top">XII_FORCE_INLINE <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#ad51dd300f3c7282db2ea6c5937544782">GetSubArray</a> (xiiUInt64 uiStart) const</td></tr>
<tr class="memdesc:ad51dd300f3c7282db2ea6c5937544782"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sub-array from this array.  <a href="../../d3/d93/classxii_blob_ptr.htm#ad51dd300f3c7282db2ea6c5937544782">More...</a><br /></td></tr>
<tr class="separator:ad51dd300f3c7282db2ea6c5937544782"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71a36623f98cbb79f03ce32d5e59dbb5"><td class="memItemLeft" align="right" valign="top"><a id="a71a36623f98cbb79f03ce32d5e59dbb5"></a>
XII_ALWAYS_INLINE <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; const ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a71a36623f98cbb79f03ce32d5e59dbb5">ToByteBlob</a> () const</td></tr>
<tr class="memdesc:a71a36623f98cbb79f03ce32d5e59dbb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reinterprets this array as a byte array. <br /></td></tr>
<tr class="separator:a71a36623f98cbb79f03ce32d5e59dbb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5239a964b01057da403d6e36f5eb1014"><td class="memItemLeft" align="right" valign="top"><a id="a5239a964b01057da403d6e36f5eb1014"></a>
XII_ALWAYS_INLINE <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a5239a964b01057da403d6e36f5eb1014">ToByteBlob</a> ()</td></tr>
<tr class="memdesc:a5239a964b01057da403d6e36f5eb1014"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reinterprets this array as a byte array. <br /></td></tr>
<tr class="separator:a5239a964b01057da403d6e36f5eb1014"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af65b2b3f3277c492a54f9ac2548b9c32"><td class="memTemplParams" colspan="2"><a id="af65b2b3f3277c492a54f9ac2548b9c32"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:af65b2b3f3277c492a54f9ac2548b9c32"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#af65b2b3f3277c492a54f9ac2548b9c32">Cast</a> ()</td></tr>
<tr class="memdesc:af65b2b3f3277c492a54f9ac2548b9c32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cast an BlobPtr to an BlobPtr to a different, but same size, type. <br /></td></tr>
<tr class="separator:af65b2b3f3277c492a54f9ac2548b9c32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a849d340b8acb75f2331a1b8e8d894336"><td class="memTemplParams" colspan="2"><a id="a849d340b8acb75f2331a1b8e8d894336"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a849d340b8acb75f2331a1b8e8d894336"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; const U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a849d340b8acb75f2331a1b8e8d894336">Cast</a> () const</td></tr>
<tr class="memdesc:a849d340b8acb75f2331a1b8e8d894336"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cast an BlobPtr to an BlobPtr to a different, but same size, type. <br /></td></tr>
<tr class="separator:a849d340b8acb75f2331a1b8e8d894336"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c6f284381cc283443b56068902faba3"><td class="memItemLeft" align="right" valign="top"><a id="a0c6f284381cc283443b56068902faba3"></a>
const XII_FORCE_INLINE ValueType &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a0c6f284381cc283443b56068902faba3">operator[]</a> (xiiUInt64 uiIndex) const</td></tr>
<tr class="memdesc:a0c6f284381cc283443b56068902faba3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index access. <br /></td></tr>
<tr class="separator:a0c6f284381cc283443b56068902faba3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07419bca62c1e522879972b038ef838c"><td class="memItemLeft" align="right" valign="top"><a id="a07419bca62c1e522879972b038ef838c"></a>
XII_FORCE_INLINE ValueType &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a07419bca62c1e522879972b038ef838c">operator[]</a> (xiiUInt64 uiIndex)</td></tr>
<tr class="memdesc:a07419bca62c1e522879972b038ef838c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index access. <br /></td></tr>
<tr class="separator:a07419bca62c1e522879972b038ef838c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3fc093be9edc88b641bdf2874853e57"><td class="memItemLeft" align="right" valign="top"><a id="ab3fc093be9edc88b641bdf2874853e57"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#ab3fc093be9edc88b641bdf2874853e57">operator==</a> (const <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; const T &gt; &amp;other) const</td></tr>
<tr class="memdesc:ab3fc093be9edc88b641bdf2874853e57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the two arrays for equality. <br /></td></tr>
<tr class="separator:ab3fc093be9edc88b641bdf2874853e57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7880f67c4bc9dc37fd425192c7d6f78"><td class="memItemLeft" align="right" valign="top"><a id="ad7880f67c4bc9dc37fd425192c7d6f78"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#ad7880f67c4bc9dc37fd425192c7d6f78">operator!=</a> (const <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; const T &gt; &amp;other) const</td></tr>
<tr class="memdesc:ad7880f67c4bc9dc37fd425192c7d6f78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the two arrays for inequality. <br /></td></tr>
<tr class="separator:ad7880f67c4bc9dc37fd425192c7d6f78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c653c53f2113ffe02008170bf5c906e"><td class="memItemLeft" align="right" valign="top"><a id="a2c653c53f2113ffe02008170bf5c906e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm#a2c653c53f2113ffe02008170bf5c906e">CopyFrom</a> (const <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; const T &gt; &amp;other)</td></tr>
<tr class="memdesc:a2c653c53f2113ffe02008170bf5c906e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>other</em> into this array. The arrays must have the exact same size. <br /></td></tr>
<tr class="separator:a2c653c53f2113ffe02008170bf5c906e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca9ffee671454a1dac4c7e2204f63be2"><td class="memItemLeft" align="right" valign="top"><a id="aca9ffee671454a1dac4c7e2204f63be2"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="separator:aca9ffee671454a1dac4c7e2204f63be2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
class xiiBlobPtr&lt; T &gt;</h3>

<p>This class encapsulates a blob's storage and it's size. It is recommended to use this class instead of directly working on the void* of the blob. </p>
<p>No data is deallocated at destruction, the <a class="el" href="../../d3/d93/classxii_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">xiiBlobPtr</a> only allows for easier access. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ad51dd300f3c7282db2ea6c5937544782"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad51dd300f3c7282db2ea6c5937544782">&#9670;&nbsp;</a></span>GetSubArray()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_FORCE_INLINE <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt;T&gt; <a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a>&lt; T &gt;::GetSubArray </td>
          <td>(</td>
          <td class="paramtype">xiiUInt64&#160;</td>
          <td class="paramname"><em>uiStart</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a sub-array from this array. </p>
<dl class="section note"><dt>Note</dt><dd><div class="fragment"><div class="line">ap.GetSubArray(i) </div>
</div><!-- fragment --> is equivalent to<div class="fragment"><div class="line">ap.GetSubArray(i, ap.GetCount() - i) </div>
</div><!-- fragment -->. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Containers/<a class="el" href="../../d3/da9/_blob_8h_source.htm">Blob.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr</a></li>
    <li class="footer">Generated on Thu Aug 17 2023 02:03:13 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
