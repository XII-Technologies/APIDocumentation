<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Math/Vec3.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d42/_vec3_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Vec3.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Vec2.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;{</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="comment">// Means that vectors can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">using</span> ComponentType = Type;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="comment">// *** Data ***</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  Type x, y, z;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template</a>(Type inX, Type inY, Type inZ); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template</a>(Type inV); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="comment">// no copy-constructor and operator= since the default-generated ones will be faster</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../d9/d9a/classxii_vec3_template.htm#ae11f5900a8e3748216ebdd2d5caa6c02">   33</a></span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ae11f5900a8e3748216ebdd2d5caa6c02">ZeroVector</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template</a>(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../d9/d9a/classxii_vec3_template.htm#a8dbd8aaeb6f81b22c97adc53df37636c">   35</a></span>&#160;<span class="comment"></span>  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a8dbd8aaeb6f81b22c97adc53df37636c">OneVector</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template</a>(1); }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d9/d9a/classxii_vec3_template.htm#a54586fad3ab80352062c4146aed46886">   38</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a54586fad3ab80352062c4146aed46886">UnitXAxis</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template</a>(1, 0, 0); }</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="../../d9/d9a/classxii_vec3_template.htm#ab9cf131d01e75466fd089d31a89d4634">   40</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ab9cf131d01e75466fd089d31a89d4634">UnitYAxis</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template</a>(0, 1, 0); }</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="../../d9/d9a/classxii_vec3_template.htm#a934f17adf7425eb3e17ca4ff77aaf68d">   42</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a934f17adf7425eb3e17ca4ff77aaf68d">UnitZAxis</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template</a>(0, 0, 1); }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    XII_ASSERT_ALWAYS(!<a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a232995c2778f2228e488ef26e420a3ea">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please &quot;</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                                <span class="stringliteral">&quot;check that all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="comment">// *** Conversions ***</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a310f1db58daa2760df13d537eec2172d">GetAsVec2</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#aeae6dfb09614607cd88598aa6784ee90">GetAsVec4</a>(Type inW) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ac573110bf3756761ad5192fa3c5111f4">GetAsPositionVec4</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#adc8e373ab4945206938ecd03a9c7d28c">GetAsDirectionVec4</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../d9/d9a/classxii_vec3_template.htm#a865d1025db5b648919cb43de929e2187">   67</a></span>&#160;  <span class="keyword">const</span> Type* <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a865d1025db5b648919cb43de929e2187">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../d9/d9a/classxii_vec3_template.htm#a19498f4f27aacc479fca27859e91cb05">   70</a></span>&#160;  Type* <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a19498f4f27aacc479fca27859e91cb05">GetData</a>() { <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="comment">// *** Functions to set the vector to specific values ***</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a31110d5b5e1de3cad4fe3546aec520f1">Set</a>(Type xyz); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a31110d5b5e1de3cad4fe3546aec520f1">Set</a>(Type inX, Type inY, Type inZ); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a988bf2dfd781e2f4565cb6bd74ea861d">SetZero</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="comment">// *** Functions dealing with length ***</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  Type <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ab6a3315443618ff3876ebbe346b30b49">GetLength</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a5efd19f2924205cfa1145e0593236761">SetLength</a>(Type fNewLength, Type fEpsilon = xiiMath::DefaultEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  Type <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a20c6aefe09afd9ee32cee75ac3490b61">GetLengthSquared</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  Type <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ae23563a33590ac8a7ffa9a079c2c83ee">GetLengthSquared2D</a>() <span class="keyword">const</span>; <span class="comment">// [untest]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  Type <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a6b0f884fe98ccb70c264d38f66eeae86">GetLengthAndNormalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a048401ec3520d90da1333889b30c7513">GetNormalized</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#aa3b3c4d4d9981e220759a56dba1c38d5">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#aadde51f8d8275e1030e080e7044490c0">NormalizeIfNotZero</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vFallback = <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template</a>(1, 0, 0), Type fEpsilon = xiiMath::SmallEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ab9f4e0928979082607eae058b8140daa">IsZero</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ab9f4e0928979082607eae058b8140daa">IsZero</a>(Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a87cdc5a0c4bf781b495dfbb7617d5414">IsNormalized</a>(Type fEpsilon = xiiMath::HugeEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a232995c2778f2228e488ef26e420a3ea">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ada4983624dd9914c854b8e7fafa38b2b">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  Type <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#afd03dbcd881849a206593819b84d5eb3">Distance</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  Type <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a4884b528402c7b319a0f0b9399f79000">DistanceSquared</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#afa1ff4789f04b383f5ce76a79796181b">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a43497c7554912a12b0046a8ab93d19eb">operator+=</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a62abcbb2c4cf31a17d61a6844ee1b90c">operator-=</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ae123e96eaa13e2880166aa7203f701b9">operator*=</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a64c100864c6f13e9feb3a26d69b489d6">operator/=</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ae123e96eaa13e2880166aa7203f701b9">operator*=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a64c100864c6f13e9feb3a26d69b489d6">operator/=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a627258e981f04e4031a3edbf13aef857">IsIdentical</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#aa298cc63bf4b22e7c9548096d774317f">IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="comment">// *** Common vector operations ***</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ab1ea6f59052d3ea4298f07a25f8fe51e">GetAngleBetween</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  Type <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a29f0f6353abb8f23538f847533b56b4a">Dot</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a658acf243e57aea0c7252d6918eca809">CrossRH</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a75cf0f0f0fca371b839b4edf0d6b685a">CompMin</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a94b65e6009b72ab20d130257d723c59d">CompMax</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a5dacdc5d321dd53396fdffc1c3a3742f">CompClamp</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vLow, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vHigh) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a0de1a7609f8dbaaa7c1c29081fa582f4">CompMul</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#aa3c3977fc19eafd6a0412563fadcb09a">CompDiv</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a6d00afc5de43fd995bf63081a695a5b9">Abs</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="comment">// *** Other common operations ***</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a91beded9a00f4961e3809386c789f06e">CalculateNormal</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v2, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v3); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ad01449cbcf124cf79ccecd2552731f9d">MakeOrthogonalTo</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a2ee3a6f0f4eb43ded3f7e7f4834a6bf6">GetOrthogonalVector</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a80d60cbb09196fbbe4dfebe04d417345">GetReflectedVector</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vNormal) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a8665b04a02b6a6e0e4d489ce6654c240">GetRefractedVector</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vNormal, Type fRefIndex1, Type fRefIndex2) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a2e99338ae04afb62bd7b240e24072354">CreateRandomPointInSphere</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a258b3b102bb18875bef9ffb47b540d8e">CreateRandomDirection</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a312bf2ccd92f49eb0c43cece791ef962">CreateRandomDeviationX</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a312bf2ccd92f49eb0c43cece791ef962">CreateRandomDeviationX</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngled</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a1806015299e7764f1eee8e71a0478a22">CreateRandomDeviationY</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a1806015299e7764f1eee8e71a0478a22">CreateRandomDeviationY</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngled</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#aaebf4bf2aaf81e6a29e037027bd716b0">CreateRandomDeviationZ</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#aaebf4bf2aaf81e6a29e037027bd716b0">CreateRandomDeviationZ</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngled</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a4a52b449694a7c64f04f76c293ad84a3">CreateRandomDeviation</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a>&amp; maxDeviation, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a4a52b449694a7c64f04f76c293ad84a3">CreateRandomDeviation</a>(<a class="code" href="../../d5/de7/classxii_random.htm">xiiRandom</a>&amp; ref_rng, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngled</a>&amp; maxDeviation, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;};</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Vec3_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_vec3_template_htm_a64c100864c6f13e9feb3a26d69b489d6"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a64c100864c6f13e9feb3a26d69b489d6">xiiVec3Template::operator/=</a></div><div class="ttdeci">void operator/=(const xiiVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Divides this vector component-wise by rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:229</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a934f17adf7425eb3e17ca4ff77aaf68d"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a934f17adf7425eb3e17ca4ff77aaf68d">xiiVec3Template::UnitZAxis</a></div><div class="ttdeci">static const xiiVec3Template&lt; Type &gt; UnitZAxis()</div><div class="ttdoc">Returns a vector initialized to the z unit vector (0, 0, 1).</div><div class="ttdef"><b>Definition:</b> Vec3.h:42</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a75cf0f0f0fca371b839b4edf0d6b685a"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a75cf0f0f0fca371b839b4edf0d6b685a">xiiVec3Template::CompMin</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; CompMin(const xiiVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:327</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a627258e981f04e4031a3edbf13aef857"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a627258e981f04e4031a3edbf13aef857">xiiVec3Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const xiiVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check (bitwise)</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:425</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a2e99338ae04afb62bd7b240e24072354"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a2e99338ae04afb62bd7b240e24072354">xiiVec3Template::CreateRandomPointInSphere</a></div><div class="ttdeci">static xiiVec3Template&lt; Type &gt; CreateRandomPointInSphere(xiiRandom &amp;ref_rng)</div><div class="ttdoc">Sets the vector to a random point inside a unit sphere (radius 1).</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:8</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a91beded9a00f4961e3809386c789f06e"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a91beded9a00f4961e3809386c789f06e">xiiVec3Template::CalculateNormal</a></div><div class="ttdeci">xiiResult CalculateNormal(const xiiVec3Template&lt; Type &gt; &amp;v1, const xiiVec3Template&lt; Type &gt; &amp;v2, const xiiVec3Template&lt; Type &gt; &amp;v3)</div><div class="ttdoc">Calculates the normal of the triangle defined by the three vertices. Vertices are assumed to be order...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:264</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_aadde51f8d8275e1030e080e7044490c0"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#aadde51f8d8275e1030e080e7044490c0">xiiVec3Template::NormalizeIfNotZero</a></div><div class="ttdeci">xiiResult NormalizeIfNotZero(const xiiVec3Template&lt; Type &gt; &amp;vFallback=xiiVec3Template(1, 0, 0), Type fEpsilon=xiiMath::SmallEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to normalize this vector. If the vector is too close to zero, XII_FAILURE is returned and the v...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:105</div></div>
<div class="ttc" id="aclassxii_random_htm"><div class="ttname"><a href="../../d5/de7/classxii_random.htm">xiiRandom</a></div><div class="ttdoc">A random number generator. Currently uses the WELL512 algorithm.</div><div class="ttdef"><b>Definition:</b> Random.h:8</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a6b0f884fe98ccb70c264d38f66eeae86"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a6b0f884fe98ccb70c264d38f66eeae86">xiiVec3Template::GetLengthAndNormalize</a></div><div class="ttdeci">Type GetLengthAndNormalize()</div><div class="ttdoc">Normalizes this vector and returns its previous length in one operation. More efficient than calling ...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:82</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a53bfbab7f6139591acf9433eff4e728d"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a53bfbab7f6139591acf9433eff4e728d">xiiVec3Template::xiiVec3Template</a></div><div class="ttdeci">xiiVec3Template()</div><div class="ttdoc">default-constructed vector is uninitialized (for speed)</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:4</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a20c6aefe09afd9ee32cee75ac3490b61"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a20c6aefe09afd9ee32cee75ac3490b61">xiiVec3Template::GetLengthSquared</a></div><div class="ttdeci">Type GetLengthSquared() const</div><div class="ttdoc">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compa...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:66</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a80d60cbb09196fbbe4dfebe04d417345"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a80d60cbb09196fbbe4dfebe04d417345">xiiVec3Template::GetReflectedVector</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; GetReflectedVector(const xiiVec3Template&lt; Type &gt; &amp;vNormal) const</div><div class="ttdoc">Returns this vector reflected at vNormal.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:292</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a1806015299e7764f1eee8e71a0478a22"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a1806015299e7764f1eee8e71a0478a22">xiiVec3Template::CreateRandomDeviationY</a></div><div class="ttdeci">static xiiVec3Template&lt; Type &gt; CreateRandomDeviationY(xiiRandom &amp;ref_rng, const xiiAngle &amp;maxDeviation)</div><div class="ttdoc">Creates a random vector around the y axis with a maximum deviation angle of maxDeviation....</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:66</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_adc8e373ab4945206938ecd03a9c7d28c"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#adc8e373ab4945206938ecd03a9c7d28c">xiiVec3Template::GetAsDirectionVec4</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; GetAsDirectionVec4() const</div><div class="ttdoc">Returns a xiiVec4Template with x,y,z from this vector and w set 0.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:52</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_aa3b3c4d4d9981e220759a56dba1c38d5"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#aa3b3c4d4d9981e220759a56dba1c38d5">xiiVec3Template::Normalize</a></div><div class="ttdeci">void Normalize()</div><div class="ttdoc">Normalizes this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:99</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a988bf2dfd781e2f4565cb6bd74ea861d"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a988bf2dfd781e2f4565cb6bd74ea861d">xiiVec3Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets the vector to all zero.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:44</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a865d1025db5b648919cb43de929e2187"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a865d1025db5b648919cb43de929e2187">xiiVec3Template::GetData</a></div><div class="ttdeci">const Type * GetData() const</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec3.h:67</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ae123e96eaa13e2880166aa7203f701b9"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ae123e96eaa13e2880166aa7203f701b9">xiiVec3Template::operator*=</a></div><div class="ttdeci">void operator*=(const xiiVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Multiplies rhs component-wise to this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:217</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_aaebf4bf2aaf81e6a29e037027bd716b0"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#aaebf4bf2aaf81e6a29e037027bd716b0">xiiVec3Template::CreateRandomDeviationZ</a></div><div class="ttdeci">static xiiVec3Template&lt; Type &gt; CreateRandomDeviationZ(xiiRandom &amp;ref_rng, const xiiAngle &amp;maxDeviation)</div><div class="ttdoc">Creates a random vector around the z axis with a maximum deviation angle of maxDeviation....</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:82</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_aa3c3977fc19eafd6a0412563fadcb09a"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#aa3c3977fc19eafd6a0412563fadcb09a">xiiVec3Template::CompDiv</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; CompDiv(const xiiVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise division of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:364</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ae11f5900a8e3748216ebdd2d5caa6c02"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ae11f5900a8e3748216ebdd2d5caa6c02">xiiVec3Template::ZeroVector</a></div><div class="ttdeci">static xiiVec3Template&lt; Type &gt; ZeroVector()</div><div class="ttdoc">Returns a vector with all components set to zero.</div><div class="ttdef"><b>Definition:</b> Vec3.h:33</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a54586fad3ab80352062c4146aed46886"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a54586fad3ab80352062c4146aed46886">xiiVec3Template::UnitXAxis</a></div><div class="ttdeci">static const xiiVec3Template&lt; Type &gt; UnitXAxis()</div><div class="ttdoc">Returns a vector initialized to the x unit vector (1, 0, 0).</div><div class="ttdef"><b>Definition:</b> Vec3.h:38</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a258b3b102bb18875bef9ffb47b540d8e"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a258b3b102bb18875bef9ffb47b540d8e">xiiVec3Template::CreateRandomDirection</a></div><div class="ttdeci">static xiiVec3Template&lt; Type &gt; CreateRandomDirection(xiiRandom &amp;ref_rng)</div><div class="ttdoc">Creates a random direction vector. The vector is normalized.</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:26</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a8665b04a02b6a6e0e4d489ce6654c240"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a8665b04a02b6a6e0e4d489ce6654c240">xiiVec3Template::GetRefractedVector</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; GetRefractedVector(const xiiVec3Template&lt; Type &gt; &amp;vNormal, Type fRefIndex1, Type fRefIndex2) const</div><div class="ttdoc">Returns this vector, refracted at vNormal, using the refraction index of the current medium and the m...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:473</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a5efd19f2924205cfa1145e0593236761"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a5efd19f2924205cfa1145e0593236761">xiiVec3Template::SetLength</a></div><div class="ttdeci">xiiResult SetLength(Type fNewLength, Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to rescale the vector to the given length. If the vector is too close to zero,...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:56</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ab9f4e0928979082607eae058b8140daa"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ab9f4e0928979082607eae058b8140daa">xiiVec3Template::IsZero</a></div><div class="ttdeci">bool IsZero() const</div><div class="ttdoc">Returns, whether this vector is (0, 0, 0).</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:132</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ac573110bf3756761ad5192fa3c5111f4"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ac573110bf3756761ad5192fa3c5111f4">xiiVec3Template::GetAsPositionVec4</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; GetAsPositionVec4() const</div><div class="ttdoc">Returns a xiiVec4Template with x,y,z from this vector and w set 1.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:43</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a6d00afc5de43fd995bf63081a695a5b9"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a6d00afc5de43fd995bf63081a695a5b9">xiiVec3Template::Abs</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; Abs() const</div><div class="ttdoc">brief Returns the component-wise absolute of *this.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:373</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a5dacdc5d321dd53396fdffc1c3a3742f"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a5dacdc5d321dd53396fdffc1c3a3742f">xiiVec3Template::CompClamp</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; CompClamp(const xiiVec3Template&lt; Type &gt; &amp;vLow, const xiiVec3Template&lt; Type &gt; &amp;vHigh) const</div><div class="ttdoc">Returns the component-wise clamped value of *this between low and high.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:345</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_afd03dbcd881849a206593819b84d5eb3"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#afd03dbcd881849a206593819b84d5eb3">xiiVec3Template::Distance</a></div><div class="ttdeci">Type Distance(const xiiVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the distance between two 3D Vectors.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:174</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a8dbd8aaeb6f81b22c97adc53df37636c"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a8dbd8aaeb6f81b22c97adc53df37636c">xiiVec3Template::OneVector</a></div><div class="ttdeci">static xiiVec3Template&lt; Type &gt; OneVector()</div><div class="ttdoc">Returns a vector with all components set to one.</div><div class="ttdef"><b>Definition:</b> Vec3.h:35</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a0de1a7609f8dbaaa7c1c29081fa582f4"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a0de1a7609f8dbaaa7c1c29081fa582f4">xiiVec3Template::CompMul</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; CompMul(const xiiVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:355</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a87cdc5a0c4bf781b495dfbb7617d5414"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a87cdc5a0c4bf781b495dfbb7617d5414">xiiVec3Template::IsNormalized</a></div><div class="ttdeci">bool IsNormalized(Type fEpsilon=xiiMath::HugeEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns, whether the squared length of this vector is between 0.999f and 1.001f.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:125</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a232995c2778f2228e488ef26e420a3ea"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a232995c2778f2228e488ef26e420a3ea">xiiVec3Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns true, if any of x, y or z is NaN.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:148</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a43497c7554912a12b0046a8ab93d19eb"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a43497c7554912a12b0046a8ab93d19eb">xiiVec3Template::operator+=</a></div><div class="ttdeci">void operator+=(const xiiVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Adds rhs component-wise to this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:197</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ab1ea6f59052d3ea4298f07a25f8fe51e"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ab1ea6f59052d3ea4298f07a25f8fe51e">xiiVec3Template::GetAngleBetween</a></div><div class="ttdeci">xiiAngle GetAngleBetween(const xiiVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the positive angle between *this and rhs. Both this and rhs must be normalized.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:318</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a048401ec3520d90da1333889b30c7513"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a048401ec3520d90da1333889b30c7513">xiiVec3Template::GetNormalized</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; GetNormalized() const</div><div class="ttdoc">Returns a normalized version of this vector, leaves the vector itself unchanged.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:90</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_aeae6dfb09614607cd88598aa6784ee90"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#aeae6dfb09614607cd88598aa6784ee90">xiiVec3Template::GetAsVec4</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; GetAsVec4(Type inW) const</div><div class="ttdoc">Returns a xiiVec4Template with x,y,z from this vector and w set to the parameter.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:35</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_afa1ff4789f04b383f5ce76a79796181b"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#afa1ff4789f04b383f5ce76a79796181b">xiiVec3Template::operator-</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; operator-() const</div><div class="ttdoc">Returns the negation of this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:189</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a658acf243e57aea0c7252d6918eca809"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a658acf243e57aea0c7252d6918eca809">xiiVec3Template::CrossRH</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; CrossRH(const xiiVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the Cross-product of the two vectors (NOT commutative, order DOES matter)</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:309</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a29f0f6353abb8f23538f847533b56b4a"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a29f0f6353abb8f23538f847533b56b4a">xiiVec3Template::Dot</a></div><div class="ttdeci">Type Dot(const xiiVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the Dot-product of the two vectors (commutative, order does not matter)</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:300</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a62abcbb2c4cf31a17d61a6844ee1b90c"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a62abcbb2c4cf31a17d61a6844ee1b90c">xiiVec3Template::operator-=</a></div><div class="ttdeci">void operator-=(const xiiVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Subtracts rhs component-wise from this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:207</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ada4983624dd9914c854b8e7fafa38b2b"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ada4983624dd9914c854b8e7fafa38b2b">xiiVec3Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks that all components are finite numbers.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:161</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:54</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_aa298cc63bf4b22e7c9548096d774317f"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#aa298cc63bf4b22e7c9548096d774317f">xiiVec3Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const xiiVec3Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:434</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a310f1db58daa2760df13d537eec2172d"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a310f1db58daa2760df13d537eec2172d">xiiVec3Template::GetAsVec2</a></div><div class="ttdeci">const xiiVec2Template&lt; Type &gt; GetAsVec2() const</div><div class="ttdoc">Returns a xiiVec2Template with x and y from this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:26</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a4a52b449694a7c64f04f76c293ad84a3"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a4a52b449694a7c64f04f76c293ad84a3">xiiVec3Template::CreateRandomDeviation</a></div><div class="ttdeci">static xiiVec3Template&lt; Type &gt; CreateRandomDeviation(xiiRandom &amp;ref_rng, const xiiAngle &amp;maxDeviation, const xiiVec3Template&lt; Type &gt; &amp;vNormal)</div><div class="ttdoc">Creates a random vector around the given normal with a maximum deviation.</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:98</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a19498f4f27aacc479fca27859e91cb05"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a19498f4f27aacc479fca27859e91cb05">xiiVec3Template::GetData</a></div><div class="ttdeci">Type * GetData()</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec3.h:70</div></div>
<div class="ttc" id="aclassxii_angle_template_htm"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a></div><div class="ttdoc">Wrapper class for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:10</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ae23563a33590ac8a7ffa9a079c2c83ee"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ae23563a33590ac8a7ffa9a079c2c83ee">xiiVec3Template::GetLengthSquared2D</a></div><div class="ttdeci">Type GetLengthSquared2D() const</div><div class="ttdoc">Returns the squared length in the XY plane. Faster, since no square-root is taken....</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:74</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ad01449cbcf124cf79ccecd2552731f9d"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ad01449cbcf124cf79ccecd2552731f9d">xiiVec3Template::MakeOrthogonalTo</a></div><div class="ttdeci">void MakeOrthogonalTo(const xiiVec3Template&lt; Type &gt; &amp;vNormal)</div><div class="ttdoc">Modifies this direction vector to be orthogonal to the given (normalized) direction vector....</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:271</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a31110d5b5e1de3cad4fe3546aec520f1"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a31110d5b5e1de3cad4fe3546aec520f1">xiiVec3Template::Set</a></div><div class="ttdeci">void Set(Type xyz)</div><div class="ttdoc">Sets all 3 components to this value.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:28</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a4884b528402c7b319a0f0b9399f79000"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a4884b528402c7b319a0f0b9399f79000">xiiVec3Template::DistanceSquared</a></div><div class="ttdeci">Type DistanceSquared(const xiiVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the squared distance between two 3D Vectors. Faster, since no square-root is taken....</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:180</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a94b65e6009b72ab20d130257d723c59d"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a94b65e6009b72ab20d130257d723c59d">xiiVec3Template::CompMax</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; CompMax(const xiiVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:336</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ab9cf131d01e75466fd089d31a89d4634"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ab9cf131d01e75466fd089d31a89d4634">xiiVec3Template::UnitYAxis</a></div><div class="ttdeci">static const xiiVec3Template&lt; Type &gt; UnitYAxis()</div><div class="ttdoc">Returns a vector initialized to the y unit vector (0, 1, 0).</div><div class="ttdef"><b>Definition:</b> Vec3.h:40</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a312bf2ccd92f49eb0c43cece791ef962"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a312bf2ccd92f49eb0c43cece791ef962">xiiVec3Template::CreateRandomDeviationX</a></div><div class="ttdeci">static xiiVec3Template&lt; Type &gt; CreateRandomDeviationX(xiiRandom &amp;ref_rng, const xiiAngle &amp;maxDeviation)</div><div class="ttdoc">Creates a random vector around the x axis with a maximum deviation angle of maxDeviation....</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:34</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ab6a3315443618ff3876ebbe346b30b49"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ab6a3315443618ff3876ebbe346b30b49">xiiVec3Template::GetLength</a></div><div class="ttdeci">Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:50</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a2ee3a6f0f4eb43ded3f7e7f4834a6bf6"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a2ee3a6f0f4eb43ded3f7e7f4834a6bf6">xiiVec3Template::GetOrthogonalVector</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; GetOrthogonalVector() const</div><div class="ttdoc">Returns some arbitrary vector orthogonal to this one. The vector is NOT normalized.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:280</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:149</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:138</div></div>
<div class="ttc" id="aclassxii_vec2_template_htm"><div class="ttname"><a href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:127</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c1b0860bb61ff24e678d996d14e4bcdd.htm">Math</a></li><li class="navelem"><b>Vec3.h</b></li>
    <li class="footer">Generated on Mon Oct 9 2023 06:45:51 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
