<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiJoltDefaultCharacterComponent Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d7/d7c/classxii_jolt_default_character_component.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d2/dfb/classxii_jolt_default_character_component-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiJoltDefaultCharacterComponent Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for xiiJoltDefaultCharacterComponent:</div>
<div class="dyncontent">
<div class="center"><img src="../../dd/d2a/classxii_jolt_default_character_component__inherit__graph.png" border="0" usemap="#xii_jolt_default_character_component_inherit__map" alt="Inheritance graph"/></div>
<map name="xii_jolt_default_character_component_inherit__map" id="xii_jolt_default_character_component_inherit__map">
<area shape="rect" title=" " alt="" coords="5,319,251,345"/>
<area shape="rect" href="../../d3/d80/classxii_jolt_character_controller_component.htm" title=" " alt="" coords="35,229,221,271"/>
<area shape="rect" href="../../db/d60/classxii_component.htm" title="Base class of all component types." alt="" coords="71,155,185,181"/>
<area shape="rect" href="../../dc/d71/classxii_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="61,80,195,107"/>
<area shape="rect" href="../../d2/d38/classxii_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="84,5,172,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/df6/structxii_jolt_default_character_component_1_1_config.htm">Config</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a53e6de7882366154318a5b8721b2e919"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a53e6de7882366154318a5b8721b2e919">GroundState</a> : xiiUInt8 { <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a53e6de7882366154318a5b8721b2e919a2b9beed57034f5727573d7ded76cf777">GroundState::OnGround</a>, 
<a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a53e6de7882366154318a5b8721b2e919ad82906db8c91bad0508406f71a9f3b7f">GroundState::Sliding</a>, 
<a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a53e6de7882366154318a5b8721b2e919aee4e669a07b061d70b9b79dfed9cb5e7">GroundState::InAir</a>
 }</td></tr>
<tr class="separator:a53e6de7882366154318a5b8721b2e919"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac5307f5b4598411c110b65792b1041f6"><td class="memItemLeft" align="right" valign="top"><a id="ac5307f5b4598411c110b65792b1041f6"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#ac5307f5b4598411c110b65792b1041f6">SerializeComponent</a> (<a class="el" href="../../de/d8c/classxii_world_writer.htm">xiiWorldWriter</a> &amp;inout_stream) const override</td></tr>
<tr class="memdesc:ac5307f5b4598411c110b65792b1041f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to save the current state of the component to the given stream. <br /></td></tr>
<tr class="separator:ac5307f5b4598411c110b65792b1041f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3592160495e72e4704203d6bee88aab5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a3592160495e72e4704203d6bee88aab5">DeserializeComponent</a> (<a class="el" href="../../df/df8/classxii_world_reader.htm">xiiWorldReader</a> &amp;inout_stream) override</td></tr>
<tr class="memdesc:a3592160495e72e4704203d6bee88aab5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to load the current state of the component from the given stream.  <a href="../../d7/d7c/classxii_jolt_default_character_component.htm#a3592160495e72e4704203d6bee88aab5">More...</a><br /></td></tr>
<tr class="separator:a3592160495e72e4704203d6bee88aab5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a338301509f6246b04512ae28f5b4ed5c"><td class="memItemLeft" align="right" valign="top"><a id="a338301509f6246b04512ae28f5b4ed5c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetWalkSurfaceInteraction</b> (const char *szSz)</td></tr>
<tr class="separator:a338301509f6246b04512ae28f5b4ed5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa11dfd8ab27e48c4c3bba085d56bdc54"><td class="memItemLeft" align="right" valign="top"><a id="aa11dfd8ab27e48c4c3bba085d56bdc54"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWalkSurfaceInteraction</b> () const</td></tr>
<tr class="separator:aa11dfd8ab27e48c4c3bba085d56bdc54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec8195655522f5492bdf55637078c51e"><td class="memItemLeft" align="right" valign="top"><a id="aec8195655522f5492bdf55637078c51e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetFallbackWalkSurfaceFile</b> (const char *szFile)</td></tr>
<tr class="separator:aec8195655522f5492bdf55637078c51e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57a035815eb86c189f9cf5b680a60b3b"><td class="memItemLeft" align="right" valign="top"><a id="a57a035815eb86c189f9cf5b680a60b3b"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetFallbackWalkSurfaceFile</b> () const</td></tr>
<tr class="separator:a57a035815eb86c189f9cf5b680a60b3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d27269785aadaae14985f6310d0b416"><td class="memItemLeft" align="right" valign="top"><a id="a9d27269785aadaae14985f6310d0b416"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetHeadObjectReference</b> (const char *szReference)</td></tr>
<tr class="separator:a9d27269785aadaae14985f6310d0b416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c658e7e8f2f4fd75b16f61a04fc5d33"><td class="memItemLeft" align="right" valign="top"><a id="a5c658e7e8f2f4fd75b16f61a04fc5d33"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetInputState</b> (<a class="el" href="../../d4/d2e/structxii_msg_move_character_controller.htm">xiiMsgMoveCharacterController</a> &amp;ref_msg)</td></tr>
<tr class="separator:a5c658e7e8f2f4fd75b16f61a04fc5d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace5486e553bea441e47c7c2e962b81c5"><td class="memItemLeft" align="right" valign="top"><a id="ace5486e553bea441e47c7c2e962b81c5"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#ace5486e553bea441e47c7c2e962b81c5">GetCurrentCapsuleHeight</a> () const</td></tr>
<tr class="memdesc:ace5486e553bea441e47c7c2e962b81c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current height of the entire capsule (crouching or standing). <br /></td></tr>
<tr class="separator:ace5486e553bea441e47c7c2e962b81c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42a181ebe050d6da5ec98af3ebe1d89e"><td class="memItemLeft" align="right" valign="top"><a id="a42a181ebe050d6da5ec98af3ebe1d89e"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a42a181ebe050d6da5ec98af3ebe1d89e">GetCurrentCylinderHeight</a> () const</td></tr>
<tr class="memdesc:a42a181ebe050d6da5ec98af3ebe1d89e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current height of the cylindrical part of the capsule (crouching or standing). <br /></td></tr>
<tr class="separator:a42a181ebe050d6da5ec98af3ebe1d89e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a91ce9796c9037b1508a6d15c641ce"><td class="memItemLeft" align="right" valign="top"><a id="a45a91ce9796c9037b1508a6d15c641ce"></a>
virtual float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a45a91ce9796c9037b1508a6d15c641ce">GetShapeRadius</a> () const override</td></tr>
<tr class="memdesc:a45a91ce9796c9037b1508a6d15c641ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the radius of the shape. This never changes at runtime. <br /></td></tr>
<tr class="separator:a45a91ce9796c9037b1508a6d15c641ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a659f6736958b7eb86645b6dacbc26d77"><td class="memItemLeft" align="right" valign="top"><a id="a659f6736958b7eb86645b6dacbc26d77"></a>
<a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a53e6de7882366154318a5b8721b2e919">GroundState</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetGroundState</b> () const</td></tr>
<tr class="separator:a659f6736958b7eb86645b6dacbc26d77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7b4317b76f1a3d8642fd101d42241c0"><td class="memItemLeft" align="right" valign="top"><a id="ac7b4317b76f1a3d8642fd101d42241c0"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsStandingOnGround</b> () const</td></tr>
<tr class="separator:ac7b4317b76f1a3d8642fd101d42241c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54eec0fbce0177ffddc5ef02ba46348b"><td class="memItemLeft" align="right" valign="top"><a id="a54eec0fbce0177ffddc5ef02ba46348b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsSlidingOnGround</b> () const</td></tr>
<tr class="separator:a54eec0fbce0177ffddc5ef02ba46348b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a044f82413704dbc2a809c21fe0575487"><td class="memItemLeft" align="right" valign="top"><a id="a044f82413704dbc2a809c21fe0575487"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInAir</b> () const</td></tr>
<tr class="separator:a044f82413704dbc2a809c21fe0575487"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02002b2de94f018ca91584e01d260ba3"><td class="memItemLeft" align="right" valign="top"><a id="a02002b2de94f018ca91584e01d260ba3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsCrouching</b> () const</td></tr>
<tr class="separator:a02002b2de94f018ca91584e01d260ba3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bbc172ea02fb2260f030cea8bf622e3"><td class="memItemLeft" align="right" valign="top"><a id="a3bbc172ea02fb2260f030cea8bf622e3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>TeleportCharacter</b> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a> &amp;vGlobalFootPosition)</td></tr>
<tr class="separator:a3bbc172ea02fb2260f030cea8bf622e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa29b300ded604f12d8805cf9dce59ea9"><td class="memItemLeft" align="right" valign="top"><a id="aa29b300ded604f12d8805cf9dce59ea9"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>DetermineConfig</b> (<a class="el" href="../../dc/df6/structxii_jolt_default_character_component_1_1_config.htm">Config</a> &amp;out_inputs)</td></tr>
<tr class="separator:aa29b300ded604f12d8805cf9dce59ea9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classxii_jolt_character_controller_component"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classxii_jolt_character_controller_component')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm">xiiJoltCharacterControllerComponent</a></td></tr>
<tr class="memitem:a0e944b6cc478aca9e41e47a3210430ab inherit pub_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a0e944b6cc478aca9e41e47a3210430ab">SetObjectToIgnore</a> (xiiUInt32 uiObjectFilterID)</td></tr>
<tr class="memdesc:a0e944b6cc478aca9e41e47a3210430ab inherit pub_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks what the ground state would be at the given position. If there is any contact, returns the most interesting contact point.  <a href="../../d3/d80/classxii_jolt_character_controller_component.htm#a0e944b6cc478aca9e41e47a3210430ab">More...</a><br /></td></tr>
<tr class="separator:a0e944b6cc478aca9e41e47a3210430ab inherit pub_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae47ede6036e5df5f03292d857ef3e49d inherit pub_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="ae47ede6036e5df5f03292d857ef3e49d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearObjectToIgnore</b> ()</td></tr>
<tr class="separator:ae47ede6036e5df5f03292d857ef3e49d inherit pub_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52c9a167e55b1ad16ebb9f3a836e74d6 inherit pub_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a52c9a167e55b1ad16ebb9f3a836e74d6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a52c9a167e55b1ad16ebb9f3a836e74d6">SetMaxClimbingSlope</a> (<a class="el" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a> slope)</td></tr>
<tr class="memdesc:a52c9a167e55b1ad16ebb9f3a836e74d6 inherit pub_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum slope that the character can walk up. <br /></td></tr>
<tr class="separator:a52c9a167e55b1ad16ebb9f3a836e74d6 inherit pub_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4856c7b20c7652ed7aea7cd24abd84e5 inherit pub_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a4856c7b20c7652ed7aea7cd24abd84e5"></a>
<a class="el" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetMaxClimbingSlope</b> () const</td></tr>
<tr class="separator:a4856c7b20c7652ed7aea7cd24abd84e5 inherit pub_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affd26c611debadf08b60ca46d38cf446 inherit pub_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="affd26c611debadf08b60ca46d38cf446"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#affd26c611debadf08b60ca46d38cf446">SetMass</a> (float fMass)</td></tr>
<tr class="memdesc:affd26c611debadf08b60ca46d38cf446 inherit pub_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">The mass with which the character will push down on objects that it is standing on. <br /></td></tr>
<tr class="separator:affd26c611debadf08b60ca46d38cf446 inherit pub_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aecc2ca9a4ade38726d19848a0121db inherit pub_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a2aecc2ca9a4ade38726d19848a0121db"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetMass</b> () const</td></tr>
<tr class="separator:a2aecc2ca9a4ade38726d19848a0121db inherit pub_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68192f968fe7a5745b403afd90ae8745 inherit pub_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a68192f968fe7a5745b403afd90ae8745"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a68192f968fe7a5745b403afd90ae8745">SetStrength</a> (float fStrength)</td></tr>
<tr class="memdesc:a68192f968fe7a5745b403afd90ae8745 inherit pub_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">The strength with which the character will push against objects that it is running into. <br /></td></tr>
<tr class="separator:a68192f968fe7a5745b403afd90ae8745 inherit pub_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a899d8830bf848ad54e93671d5c84cd7d inherit pub_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a899d8830bf848ad54e93671d5c84cd7d"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetStrength</b> () const</td></tr>
<tr class="separator:a899d8830bf848ad54e93671d5c84cd7d inherit pub_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classxii_component"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classxii_component')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../db/d60/classxii_component.htm">xiiComponent</a></td></tr>
<tr class="memitem:a650a7ec0f1f32f320e41d41274c59129 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a650a7ec0f1f32f320e41d41274c59129">SetActiveFlag</a> (bool bEnabled)</td></tr>
<tr class="memdesc:a650a7ec0f1f32f320e41d41274c59129 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the active flag of the component, which affects its active state.  <a href="../../db/d60/classxii_component.htm#a650a7ec0f1f32f320e41d41274c59129">More...</a><br /></td></tr>
<tr class="separator:a650a7ec0f1f32f320e41d41274c59129 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad58f243cebb8f50c84f793c93eab5645 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#ad58f243cebb8f50c84f793c93eab5645">GetActiveFlag</a> () const</td></tr>
<tr class="memdesc:ad58f243cebb8f50c84f793c93eab5645 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the 'active flag' is set on this component. Note that this does not mean that the component is also 'active'.  <a href="../../db/d60/classxii_component.htm#ad58f243cebb8f50c84f793c93eab5645">More...</a><br /></td></tr>
<tr class="separator:ad58f243cebb8f50c84f793c93eab5645 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1bbb9dd59cbb51462694a94f1108fce inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#ab1bbb9dd59cbb51462694a94f1108fce">IsActive</a> () const</td></tr>
<tr class="memdesc:ab1bbb9dd59cbb51462694a94f1108fce inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether this component is in an active state.  <a href="../../db/d60/classxii_component.htm#ab1bbb9dd59cbb51462694a94f1108fce">More...</a><br /></td></tr>
<tr class="separator:ab1bbb9dd59cbb51462694a94f1108fce inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1868eab3e096e1e46fddbce4d2f08918 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a1868eab3e096e1e46fddbce4d2f08918">IsActiveAndInitialized</a> () const</td></tr>
<tr class="memdesc:a1868eab3e096e1e46fddbce4d2f08918 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this component is active and initialized.  <a href="../../db/d60/classxii_component.htm#a1868eab3e096e1e46fddbce4d2f08918">More...</a><br /></td></tr>
<tr class="separator:a1868eab3e096e1e46fddbce4d2f08918 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4903100bd56d97c4c9ae18829364c46a inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a4903100bd56d97c4c9ae18829364c46a">IsActiveAndSimulating</a> () const</td></tr>
<tr class="memdesc:a4903100bd56d97c4c9ae18829364c46a inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the component is currently active and simulation has been started as well.  <a href="../../db/d60/classxii_component.htm#a4903100bd56d97c4c9ae18829364c46a">More...</a><br /></td></tr>
<tr class="separator:a4903100bd56d97c4c9ae18829364c46a inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcb4cc3fe89cc6de26deea8fc6d5aba6 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="abcb4cc3fe89cc6de26deea8fc6d5aba6"></a>
<a class="el" href="../../d4/d61/classxii_component_manager_base.htm">xiiComponentManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#abcb4cc3fe89cc6de26deea8fc6d5aba6">GetOwningManager</a> ()</td></tr>
<tr class="memdesc:abcb4cc3fe89cc6de26deea8fc6d5aba6 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding manager for this component. <br /></td></tr>
<tr class="separator:abcb4cc3fe89cc6de26deea8fc6d5aba6 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5763bc24f184bde9c95d079c4c3be17e inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a5763bc24f184bde9c95d079c4c3be17e"></a>
const <a class="el" href="../../d4/d61/classxii_component_manager_base.htm">xiiComponentManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a5763bc24f184bde9c95d079c4c3be17e">GetOwningManager</a> () const</td></tr>
<tr class="memdesc:a5763bc24f184bde9c95d079c4c3be17e inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding manager for this component. <br /></td></tr>
<tr class="separator:a5763bc24f184bde9c95d079c4c3be17e inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9ad3375d7130b79582b551639800a70 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="ad9ad3375d7130b79582b551639800a70"></a>
<a class="el" href="../../d0/d91/classxii_game_object.htm">xiiGameObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#ad9ad3375d7130b79582b551639800a70">GetOwner</a> ()</td></tr>
<tr class="memdesc:ad9ad3375d7130b79582b551639800a70 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the owner game object if the component is attached to one or nullptr. <br /></td></tr>
<tr class="separator:ad9ad3375d7130b79582b551639800a70 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa26346130fe7db60a52f600a7ab8a6ac inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="aa26346130fe7db60a52f600a7ab8a6ac"></a>
const <a class="el" href="../../d0/d91/classxii_game_object.htm">xiiGameObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#aa26346130fe7db60a52f600a7ab8a6ac">GetOwner</a> () const</td></tr>
<tr class="memdesc:aa26346130fe7db60a52f600a7ab8a6ac inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the owner game object if the component is attached to one or nullptr. <br /></td></tr>
<tr class="separator:aa26346130fe7db60a52f600a7ab8a6ac inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fd0bc12583d9bee8da02b38a17240b3 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a7fd0bc12583d9bee8da02b38a17240b3"></a>
<a class="el" href="../../d6/d89/classxii_world.htm">xiiWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a7fd0bc12583d9bee8da02b38a17240b3">GetWorld</a> ()</td></tr>
<tr class="memdesc:a7fd0bc12583d9bee8da02b38a17240b3 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding world for this component. <br /></td></tr>
<tr class="separator:a7fd0bc12583d9bee8da02b38a17240b3 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcebc955d6b28b14abc174f33f541285 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="afcebc955d6b28b14abc174f33f541285"></a>
const <a class="el" href="../../d6/d89/classxii_world.htm">xiiWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#afcebc955d6b28b14abc174f33f541285">GetWorld</a> () const</td></tr>
<tr class="memdesc:afcebc955d6b28b14abc174f33f541285 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding world for this component. <br /></td></tr>
<tr class="separator:afcebc955d6b28b14abc174f33f541285 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfa80208ef9797c9b981d0e0810983d1 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="acfa80208ef9797c9b981d0e0810983d1"></a>
<a class="el" href="../../da/d8d/structxii_component_handle.htm">xiiComponentHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#acfa80208ef9797c9b981d0e0810983d1">GetHandle</a> () const</td></tr>
<tr class="memdesc:acfa80208ef9797c9b981d0e0810983d1 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a handle to this component. <br /></td></tr>
<tr class="separator:acfa80208ef9797c9b981d0e0810983d1 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8646c14434b92c3f341a03dc38d92a92 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a8646c14434b92c3f341a03dc38d92a92"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a8646c14434b92c3f341a03dc38d92a92">GetUniqueID</a> () const</td></tr>
<tr class="memdesc:a8646c14434b92c3f341a03dc38d92a92 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the unique id for this component. <br /></td></tr>
<tr class="separator:a8646c14434b92c3f341a03dc38d92a92 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5109d0be441a3605c0a6433561cb389 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="af5109d0be441a3605c0a6433561cb389"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#af5109d0be441a3605c0a6433561cb389">SetUniqueID</a> (xiiUInt32 uiUniqueID)</td></tr>
<tr class="memdesc:af5109d0be441a3605c0a6433561cb389 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the unique id for this component. <br /></td></tr>
<tr class="separator:af5109d0be441a3605c0a6433561cb389 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad447ceab55bc400ab373ca31e2684190 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="ad447ceab55bc400ab373ca31e2684190"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#ad447ceab55bc400ab373ca31e2684190">EnsureInitialized</a> ()</td></tr>
<tr class="memdesc:ad447ceab55bc400ab373ca31e2684190 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures that the component is initialized. Must only be called from another component's Initialize callback. <br /></td></tr>
<tr class="separator:ad447ceab55bc400ab373ca31e2684190 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64fe5d352205439e419dd66139f8bc7b inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a64fe5d352205439e419dd66139f8bc7b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a64fe5d352205439e419dd66139f8bc7b">EnsureSimulationStarted</a> ()</td></tr>
<tr class="memdesc:a64fe5d352205439e419dd66139f8bc7b inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures that the OnSimulationStarted method has been called. Must only be called from another component's OnSimulationStarted callback. <br /></td></tr>
<tr class="separator:a64fe5d352205439e419dd66139f8bc7b inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa66af35fbe2b15861004fef2a77e319 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="afa66af35fbe2b15861004fef2a77e319"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#afa66af35fbe2b15861004fef2a77e319">SendMessage</a> (<a class="el" href="../../d9/d55/classxii_message.htm">xiiMessage</a> &amp;msg)</td></tr>
<tr class="memdesc:afa66af35fbe2b15861004fef2a77e319 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message to this component. <br /></td></tr>
<tr class="separator:afa66af35fbe2b15861004fef2a77e319 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a140b09a18f49fbf718d32b0ff4a8510d inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a140b09a18f49fbf718d32b0ff4a8510d"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>SendMessage</b> (<a class="el" href="../../d9/d55/classxii_message.htm">xiiMessage</a> &amp;msg) const</td></tr>
<tr class="separator:a140b09a18f49fbf718d32b0ff4a8510d inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6c6e95e1ffc0f204a8ee1c321052e5f inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="ae6c6e95e1ffc0f204a8ee1c321052e5f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#ae6c6e95e1ffc0f204a8ee1c321052e5f">PostMessage</a> (const <a class="el" href="../../d9/d55/classxii_message.htm">xiiMessage</a> &amp;msg, <a class="el" href="../../d7/dc1/structxii_time.htm">xiiTime</a> delay=<a class="el" href="../../d7/dc1/structxii_time.htm#a98ce26844e549b2f590dc01bbe6b742d">xiiTime::Zero</a>(), <a class="el" href="../../dc/de3/structxii_object_msg_queue_type.htm#ac9e989f6c985a7752fee18b3b1a2b48c">xiiObjectMsgQueueType::Enum</a> queueType=<a class="el" href="../../dc/de3/structxii_object_msg_queue_type.htm#ac9e989f6c985a7752fee18b3b1a2b48ca6e15cf406df6d2e05d38fa50e235ffc0">xiiObjectMsgQueueType::NextFrame</a>) const</td></tr>
<tr class="memdesc:ae6c6e95e1ffc0f204a8ee1c321052e5f inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queues the message for the given phase. The message is processed after the given delay in the corresponding phase. <br /></td></tr>
<tr class="separator:ae6c6e95e1ffc0f204a8ee1c321052e5f inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38bdcf00886279d05b71bcd76dcf22c7 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a38bdcf00886279d05b71bcd76dcf22c7"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a38bdcf00886279d05b71bcd76dcf22c7">HandlesMessage</a> (const <a class="el" href="../../d9/d55/classxii_message.htm">xiiMessage</a> &amp;msg) const</td></tr>
<tr class="memdesc:a38bdcf00886279d05b71bcd76dcf22c7 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the given Message is handled by this component. <br /></td></tr>
<tr class="separator:a38bdcf00886279d05b71bcd76dcf22c7 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9971aef36435e1070e41736bda0b252b inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a9971aef36435e1070e41736bda0b252b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a9971aef36435e1070e41736bda0b252b">SetUserFlag</a> (xiiUInt8 flagIndex, bool set)</td></tr>
<tr class="memdesc:a9971aef36435e1070e41736bda0b252b inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Be careful to check which flags may already be in use by base classes. <br /></td></tr>
<tr class="separator:a9971aef36435e1070e41736bda0b252b inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdf13fca498ad47a5501f832be434cd9 inherit pub_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="acdf13fca498ad47a5501f832be434cd9"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#acdf13fca498ad47a5501f832be434cd9">GetUserFlag</a> (xiiUInt8 flagIndex) const</td></tr>
<tr class="memdesc:acdf13fca498ad47a5501f832be434cd9 inherit pub_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a custom flag. Index must be between 0 and 7. <br /></td></tr>
<tr class="separator:acdf13fca498ad47a5501f832be434cd9 inherit pub_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classxii_reflected_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classxii_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dc/d71/classxii_reflected_class.htm">xiiReflectedClass</a></td></tr>
<tr class="memitem:a1faaa412c7d2f4d506ebe3656dadb429 inherit pub_methods_classxii_reflected_class"><td class="memItemLeft" align="right" valign="top"><a id="a1faaa412c7d2f4d506ebe3656dadb429"></a>
virtual const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a1faaa412c7d2f4d506ebe3656dadb429 inherit pub_methods_classxii_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e0f7cbc734bb4dd62b0d583bbbe2ade inherit pub_methods_classxii_reflected_class"><td class="memItemLeft" align="right" valign="top"><a id="a8e0f7cbc734bb4dd62b0d583bbbe2ade"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d71/classxii_reflected_class.htm#a8e0f7cbc734bb4dd62b0d583bbbe2ade">IsInstanceOf</a> (const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *pType) const</td></tr>
<tr class="memdesc:a8e0f7cbc734bb4dd62b0d583bbbe2ade inherit pub_methods_classxii_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:a8e0f7cbc734bb4dd62b0d583bbbe2ade inherit pub_methods_classxii_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0a423d0f813feb28b200d9a9756eab8 inherit pub_methods_classxii_reflected_class"><td class="memTemplParams" colspan="2"><a id="ac0a423d0f813feb28b200d9a9756eab8"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:ac0a423d0f813feb28b200d9a9756eab8 inherit pub_methods_classxii_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dc/d71/classxii_reflected_class.htm#ac0a423d0f813feb28b200d9a9756eab8">IsInstanceOf</a> () const</td></tr>
<tr class="memdesc:ac0a423d0f813feb28b200d9a9756eab8 inherit pub_methods_classxii_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:ac0a423d0f813feb28b200d9a9756eab8 inherit pub_methods_classxii_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a3cf334af9b7f2d7e81d33ed52408ab95"><td class="memItemLeft" align="right" valign="top"><a id="a3cf334af9b7f2d7e81d33ed52408ab95"></a>
<a class="el" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a3cf334af9b7f2d7e81d33ed52408ab95">m_RotateSpeed</a> = <a class="el" href="../../d3/ddb/classxii_angle_template.htm#a186b3138db53d77de01facd1026240c0">xiiAngle::Degree</a>(90.0f)</td></tr>
<tr class="memdesc:a3cf334af9b7f2d7e81d33ed52408ab95"><td class="mdescLeft">&#160;</td><td class="mdescRight">[ property ] How many degrees per second the character turns <br /></td></tr>
<tr class="separator:a3cf334af9b7f2d7e81d33ed52408ab95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32c19700e80c96e5e146ebbd5aa1a56a"><td class="memItemLeft" align="right" valign="top"><a id="a32c19700e80c96e5e146ebbd5aa1a56a"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fShapeRadius</b> = 0.25f</td></tr>
<tr class="separator:a32c19700e80c96e5e146ebbd5aa1a56a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad08b73c91108c958e082d74cf3e2d67d"><td class="memItemLeft" align="right" valign="top"><a id="ad08b73c91108c958e082d74cf3e2d67d"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fCylinderHeightCrouch</b> = 0.9f</td></tr>
<tr class="separator:ad08b73c91108c958e082d74cf3e2d67d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8acc53dbadf9cd953e13e75350d192c"><td class="memItemLeft" align="right" valign="top"><a id="ad8acc53dbadf9cd953e13e75350d192c"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fCylinderHeightStand</b> = 1.7f</td></tr>
<tr class="separator:ad8acc53dbadf9cd953e13e75350d192c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf771bab001081403340b418ccf2b221"><td class="memItemLeft" align="right" valign="top"><a id="aaf771bab001081403340b418ccf2b221"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fFootRadius</b> = 0.15f</td></tr>
<tr class="separator:aaf771bab001081403340b418ccf2b221"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d4da7649cd4b0580ff4c07564721ddd"><td class="memItemLeft" align="right" valign="top"><a id="a5d4da7649cd4b0580ff4c07564721ddd"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fWalkSpeedCrouching</b> = 0.5f</td></tr>
<tr class="separator:a5d4da7649cd4b0580ff4c07564721ddd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af882483cde4f3b3016eb19c2390ac021"><td class="memItemLeft" align="right" valign="top"><a id="af882483cde4f3b3016eb19c2390ac021"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fWalkSpeedStanding</b> = 1.5f</td></tr>
<tr class="separator:af882483cde4f3b3016eb19c2390ac021"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a629c969b6325f10ebd157e19b0636c4c"><td class="memItemLeft" align="right" valign="top"><a id="a629c969b6325f10ebd157e19b0636c4c"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fWalkSpeedRunning</b> = 3.5f</td></tr>
<tr class="separator:a629c969b6325f10ebd157e19b0636c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aface77b0f5c1e8e5a60f56d66d628107"><td class="memItemLeft" align="right" valign="top"><a id="aface77b0f5c1e8e5a60f56d66d628107"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fMaxStepUp</b> = 0.25f</td></tr>
<tr class="separator:aface77b0f5c1e8e5a60f56d66d628107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab41bedeb644c63a8f6e367d26c81f839"><td class="memItemLeft" align="right" valign="top"><a id="ab41bedeb644c63a8f6e367d26c81f839"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fMaxStepDown</b> = 0.25f</td></tr>
<tr class="separator:ab41bedeb644c63a8f6e367d26c81f839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0bf034d4dd0a939042d65ac4213a56d"><td class="memItemLeft" align="right" valign="top"><a id="ad0bf034d4dd0a939042d65ac4213a56d"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fJumpImpulse</b> = 5.0f</td></tr>
<tr class="separator:ad0bf034d4dd0a939042d65ac4213a56d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72d16ad1436770eb2ff3e709f96acf0b"><td class="memItemLeft" align="right" valign="top"><a id="a72d16ad1436770eb2ff3e709f96acf0b"></a>
<a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a72d16ad1436770eb2ff3e709f96acf0b">m_sWalkSurfaceInteraction</a></td></tr>
<tr class="memdesc:a72d16ad1436770eb2ff3e709f96acf0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">[ property ] The surface interaction to spawn regularly when walking <br /></td></tr>
<tr class="separator:a72d16ad1436770eb2ff3e709f96acf0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a116a6ff1d3f0037aa58ed6714aac0e9d"><td class="memItemLeft" align="right" valign="top"><a id="a116a6ff1d3f0037aa58ed6714aac0e9d"></a>
<a class="el" href="../../d6/d16/classxii_typed_resource_handle.htm">xiiSurfaceResourceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a116a6ff1d3f0037aa58ed6714aac0e9d">m_hFallbackWalkSurface</a></td></tr>
<tr class="memdesc:a116a6ff1d3f0037aa58ed6714aac0e9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">[ property ] The surface type to use for interactions, when no other surface type is available <br /></td></tr>
<tr class="separator:a116a6ff1d3f0037aa58ed6714aac0e9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8975482db915dfe4f05df2e858a7f7db"><td class="memItemLeft" align="right" valign="top"><a id="a8975482db915dfe4f05df2e858a7f7db"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a8975482db915dfe4f05df2e858a7f7db">m_fWalkInteractionDistance</a> = 1.0f</td></tr>
<tr class="memdesc:a8975482db915dfe4f05df2e858a7f7db"><td class="mdescLeft">&#160;</td><td class="mdescRight">[ property ] How far the CC has to walk for spawning another surface interaction <br /></td></tr>
<tr class="separator:a8975482db915dfe4f05df2e858a7f7db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70c727da9e33957c2d4715ac2a20afda"><td class="memItemLeft" align="right" valign="top"><a id="a70c727da9e33957c2d4715ac2a20afda"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a70c727da9e33957c2d4715ac2a20afda">m_fRunInteractionDistance</a> = 3.0f</td></tr>
<tr class="memdesc:a70c727da9e33957c2d4715ac2a20afda"><td class="mdescLeft">&#160;</td><td class="mdescRight">[ property ] How far the CC has to run for spawning another surface interaction <br /></td></tr>
<tr class="separator:a70c727da9e33957c2d4715ac2a20afda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7da417e05277276c428943157ab9d15"><td class="memItemLeft" align="right" valign="top"><a id="ab7da417e05277276c428943157ab9d15"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fAirSpeed</b> = 2.5f</td></tr>
<tr class="separator:ab7da417e05277276c428943157ab9d15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7682dfdeb7b07706b60455205bfb159"><td class="memItemLeft" align="right" valign="top"><a id="ab7682dfdeb7b07706b60455205bfb159"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fAirFriction</b> = 0.5f</td></tr>
<tr class="separator:ab7682dfdeb7b07706b60455205bfb159"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classxii_jolt_character_controller_component"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classxii_jolt_character_controller_component')"><img src="../../closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm">xiiJoltCharacterControllerComponent</a></td></tr>
<tr class="memitem:ac7eca45e6d04b34ecb433479a37e5cb3 inherit pub_attribs_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="ac7eca45e6d04b34ecb433479a37e5cb3"></a>
xiiUInt8&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCollisionLayer</b> = 0</td></tr>
<tr class="separator:ac7eca45e6d04b34ecb433479a37e5cb3 inherit pub_attribs_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a51d795b6251c7e00bd62772be4850b inherit pub_attribs_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a6a51d795b6251c7e00bd62772be4850b"></a>
xiiUInt8&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiPresenceCollisionLayer</b> = 0</td></tr>
<tr class="separator:a6a51d795b6251c7e00bd62772be4850b inherit pub_attribs_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50036cccf3af01a626e24446fa8468c2 inherit pub_attribs_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a50036cccf3af01a626e24446fa8468c2"></a>
<a class="el" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a>&lt; xiiJoltCharacterDebugFlags &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_DebugFlags</b></td></tr>
<tr class="separator:a50036cccf3af01a626e24446fa8468c2 inherit pub_attribs_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aade05e6123dfe1670a3ecdddfe276d20"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20">OnSimulationStarted</a> () override</td></tr>
<tr class="memdesc:aade05e6123dfe1670a3ecdddfe276d20"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called once for active components, at the start of the next world update, but only when the world is simulated.  <a href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20">More...</a><br /></td></tr>
<tr class="separator:aade05e6123dfe1670a3ecdddfe276d20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2884f015b1eea8a8d0008e78f97c9489"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489">OnActivated</a> () override</td></tr>
<tr class="memdesc:a2884f015b1eea8a8d0008e78f97c9489"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called when the component gets activated.  <a href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489">More...</a><br /></td></tr>
<tr class="separator:a2884f015b1eea8a8d0008e78f97c9489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd85d588ffae234ab8b28f1d7acc1433"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#abd85d588ffae234ab8b28f1d7acc1433">OnDeactivated</a> () override</td></tr>
<tr class="memdesc:abd85d588ffae234ab8b28f1d7acc1433"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called when the component gets deactivated.  <a href="../../d7/d7c/classxii_jolt_default_character_component.htm#abd85d588ffae234ab8b28f1d7acc1433">More...</a><br /></td></tr>
<tr class="separator:abd85d588ffae234ab8b28f1d7acc1433"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15f8d98c16f55d3e3c82f261395ff646"><td class="memItemLeft" align="right" valign="top"><a id="a15f8d98c16f55d3e3c82f261395ff646"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OnUpdateLocalBounds</b> (<a class="el" href="../../dc/dc8/structxii_msg_update_local_bounds.htm">xiiMsgUpdateLocalBounds</a> &amp;msg) const</td></tr>
<tr class="separator:a15f8d98c16f55d3e3c82f261395ff646"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6add487c16d2f7e28b11118a0ab5524"><td class="memItemLeft" align="right" valign="top"><a id="af6add487c16d2f7e28b11118a0ab5524"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>OnApplyRootMotion</b> (<a class="el" href="../../d3/dac/structxii_msg_apply_root_motion.htm">xiiMsgApplyRootMotion</a> &amp;msg)</td></tr>
<tr class="separator:af6add487c16d2f7e28b11118a0ab5524"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a440558a7da3496f3fa1fb938275baa8c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a440558a7da3496f3fa1fb938275baa8c">UpdateCharacter</a> () override</td></tr>
<tr class="memdesc:a440558a7da3496f3fa1fb938275baa8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called up to once per frame, but potentially less often, if physics updates were skipped due to high framerates.  <a href="../../d7/d7c/classxii_jolt_default_character_component.htm#a440558a7da3496f3fa1fb938275baa8c">More...</a><br /></td></tr>
<tr class="separator:a440558a7da3496f3fa1fb938275baa8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f1f928e0423038e09a2bcb4752eba3f"><td class="memItemLeft" align="right" valign="top"><a id="a6f1f928e0423038e09a2bcb4752eba3f"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ApplyRotationZ</b> ()</td></tr>
<tr class="separator:a6f1f928e0423038e09a2bcb4752eba3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adab6e17dcf32899c7337bded629c6102"><td class="memItemLeft" align="right" valign="top"><a id="adab6e17dcf32899c7337bded629c6102"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#adab6e17dcf32899c7337bded629c6102">ResetInputState</a> ()</td></tr>
<tr class="memdesc:adab6e17dcf32899c7337bded629c6102"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the input states to neutral values. <br /></td></tr>
<tr class="separator:adab6e17dcf32899c7337bded629c6102"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbc906325da540d93571fc0bb8a0e613"><td class="memItemLeft" align="right" valign="top"><a id="abbc906325da540d93571fc0bb8a0e613"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ResetInternalState</b> ()</td></tr>
<tr class="separator:abbc906325da540d93571fc0bb8a0e613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec7fd67ee288fcb34d1ef08b5442d05e"><td class="memItemLeft" align="right" valign="top"><a id="aec7fd67ee288fcb34d1ef08b5442d05e"></a>
virtual JPH::Ref&lt; JPH::Shape &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aec7fd67ee288fcb34d1ef08b5442d05e">MakeNextCharacterShape</a> () override</td></tr>
<tr class="memdesc:aec7fd67ee288fcb34d1ef08b5442d05e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new shape with the given height (and fixed radius) <br /></td></tr>
<tr class="separator:aec7fd67ee288fcb34d1ef08b5442d05e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac021f003a55e4fabe861f0db3811a88e"><td class="memItemLeft" align="right" valign="top"><a id="ac021f003a55e4fabe861f0db3811a88e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ApplyCrouchState</b> ()</td></tr>
<tr class="separator:ac021f003a55e4fabe861f0db3811a88e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f87d836a4a75d44b51840ca592784ec"><td class="memItemLeft" align="right" valign="top"><a id="a7f87d836a4a75d44b51840ca592784ec"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InteractWithSurfaces</b> (const <a class="el" href="../../dd/d26/structxii_jolt_character_controller_component_1_1_contact_point.htm">ContactPoint</a> &amp;contact, const <a class="el" href="../../dc/df6/structxii_jolt_default_character_component_1_1_config.htm">Config</a> &amp;cfg)</td></tr>
<tr class="separator:a7f87d836a4a75d44b51840ca592784ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55adcb81fea4e7e5fe8edffc14771841"><td class="memItemLeft" align="right" valign="top"><a id="a55adcb81fea4e7e5fe8edffc14771841"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>StoreLateralVelocity</b> ()</td></tr>
<tr class="separator:a55adcb81fea4e7e5fe8edffc14771841"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4799b524996d62601f5451b0b78c6db"><td class="memItemLeft" align="right" valign="top"><a id="ac4799b524996d62601f5451b0b78c6db"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClampLateralVelocity</b> ()</td></tr>
<tr class="separator:ac4799b524996d62601f5451b0b78c6db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c0eef828179250bc1f7a73c392b3756"><td class="memItemLeft" align="right" valign="top"><a id="a0c0eef828179250bc1f7a73c392b3756"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>MoveHeadObject</b> ()</td></tr>
<tr class="separator:a0c0eef828179250bc1f7a73c392b3756"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2abc73fd0b5b381528fef2cddc49b967"><td class="memItemLeft" align="right" valign="top"><a id="a2abc73fd0b5b381528fef2cddc49b967"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DebugVisualizations</b> ()</td></tr>
<tr class="separator:a2abc73fd0b5b381528fef2cddc49b967"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae31aa55a4ac231f7f2657704b8616dad"><td class="memItemLeft" align="right" valign="top"><a id="ae31aa55a4ac231f7f2657704b8616dad"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>CheckFeet</b> ()</td></tr>
<tr class="separator:ae31aa55a4ac231f7f2657704b8616dad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classxii_jolt_character_controller_component"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classxii_jolt_character_controller_component')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm">xiiJoltCharacterControllerComponent</a></td></tr>
<tr class="memitem:a67584f42ec46907f281c8f170a8193cc inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a67584f42ec46907f281c8f170a8193cc"></a>
XII_ALWAYS_INLINE float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a67584f42ec46907f281c8f170a8193cc">GetUpdateTimeDelta</a> () const</td></tr>
<tr class="memdesc:a67584f42ec46907f281c8f170a8193cc inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the time delta to use for updating the character. This may differ from the world delta. <br /></td></tr>
<tr class="separator:a67584f42ec46907f281c8f170a8193cc inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50d255f38fa483b6a4a01ba9e3e7ad35 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a50d255f38fa483b6a4a01ba9e3e7ad35"></a>
XII_ALWAYS_INLINE float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a50d255f38fa483b6a4a01ba9e3e7ad35">GetInverseUpdateTimeDelta</a> () const</td></tr>
<tr class="memdesc:a50d255f38fa483b6a4a01ba9e3e7ad35 inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the inverse of update time delta. <br /></td></tr>
<tr class="separator:a50d255f38fa483b6a4a01ba9e3e7ad35 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a6a7e2cb6e4fad1c23112cd972a7ae inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a64a6a7e2cb6e4fad1c23112cd972a7ae"></a>
JPH::CharacterVirtual *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a64a6a7e2cb6e4fad1c23112cd972a7ae">GetJoltCharacter</a> ()</td></tr>
<tr class="memdesc:a64a6a7e2cb6e4fad1c23112cd972a7ae inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives access to the internally used JPH::CharacterVirtual. <br /></td></tr>
<tr class="separator:a64a6a7e2cb6e4fad1c23112cd972a7ae inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a406fa89c2b9e12d787c9a73a987549c1 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a406fa89c2b9e12d787c9a73a987549c1"></a>
<a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a406fa89c2b9e12d787c9a73a987549c1">TryChangeShape</a> (JPH::Shape *pNewShape)</td></tr>
<tr class="memdesc:a406fa89c2b9e12d787c9a73a987549c1 inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempts to change the character shape to the new one. Fails if the new shape overlaps with surrounding geometry. <br /></td></tr>
<tr class="separator:a406fa89c2b9e12d787c9a73a987549c1 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bb697852a1caa1447453b12f8a22746 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a1bb697852a1caa1447453b12f8a22746"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a1bb697852a1caa1447453b12f8a22746">RawMoveWithVelocity</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a> &amp;vVelocity, float fMaxStairStepUp, float fMaxStepDown)</td></tr>
<tr class="memdesc:a1bb697852a1caa1447453b12f8a22746 inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the character using the given velocity and timestep, making it collide with and slide along obstacles. <br /></td></tr>
<tr class="separator:a1bb697852a1caa1447453b12f8a22746 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a061325f3310dd5c57c059a812c1e7d56 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a061325f3310dd5c57c059a812c1e7d56"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a061325f3310dd5c57c059a812c1e7d56">RawMoveIntoDirection</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a> &amp;vDirection)</td></tr>
<tr class="memdesc:a061325f3310dd5c57c059a812c1e7d56 inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Variant of <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a1bb697852a1caa1447453b12f8a22746" title="Moves the character using the given velocity and timestep, making it collide with and slide along obs...">RawMoveWithVelocity()</a> that takes a direction vector instead. <br /></td></tr>
<tr class="separator:a061325f3310dd5c57c059a812c1e7d56 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6c5536ddff161852565745eec3c7929 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="af6c5536ddff161852565745eec3c7929"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#af6c5536ddff161852565745eec3c7929">RawMoveToPosition</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a> &amp;vTargetPosition)</td></tr>
<tr class="memdesc:af6c5536ddff161852565745eec3c7929 inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Variant of <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a1bb697852a1caa1447453b12f8a22746" title="Moves the character using the given velocity and timestep, making it collide with and slide along obs...">RawMoveWithVelocity()</a> that takes a target position instead. <br /></td></tr>
<tr class="separator:af6c5536ddff161852565745eec3c7929 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3872ff9701d05039515e71c660ce4d8a inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a3872ff9701d05039515e71c660ce4d8a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a3872ff9701d05039515e71c660ce4d8a">TeleportToPosition</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a> &amp;vGlobalFootPos)</td></tr>
<tr class="memdesc:a3872ff9701d05039515e71c660ce4d8a inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Teleports the character to the destination position, even if it would get stuck there. <br /></td></tr>
<tr class="separator:a3872ff9701d05039515e71c660ce4d8a inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6d14dfa14920b5fecea8f094ad0d391 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="ad6d14dfa14920b5fecea8f094ad0d391"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>StickToGround</b> (float fMaxDist)</td></tr>
<tr class="separator:ad6d14dfa14920b5fecea8f094ad0d391 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fec400daebf0010e10ae6de6ebafcb1 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a9fec400daebf0010e10ae6de6ebafcb1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a9fec400daebf0010e10ae6de6ebafcb1">CollectCastContacts</a> (<a class="el" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a>&lt; <a class="el" href="../../dd/d26/structxii_jolt_character_controller_component_1_1_contact_point.htm">ContactPoint</a> &gt; &amp;out_Contacts, const JPH::Shape *pShape, const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a> &amp;vQueryPosition, const <a class="el" href="../../d9/d1b/classxii_quat_template.htm">xiiQuat</a> &amp;qQueryRotation, const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a> &amp;vSweepDir) const</td></tr>
<tr class="memdesc:a9fec400daebf0010e10ae6de6ebafcb1 inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gathers all contact points that are found by sweeping the shape along a direction. <br /></td></tr>
<tr class="separator:a9fec400daebf0010e10ae6de6ebafcb1 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9e819cf6b3a7889c29f738fccb95556 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#ac9e819cf6b3a7889c29f738fccb95556">CollectContacts</a> (<a class="el" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a>&lt; <a class="el" href="../../dd/d26/structxii_jolt_character_controller_component_1_1_contact_point.htm">ContactPoint</a> &gt; &amp;out_Contacts, const JPH::Shape *pShape, const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a> &amp;vQueryPosition, const <a class="el" href="../../d9/d1b/classxii_quat_template.htm">xiiQuat</a> &amp;qQueryRotation, float fCollisionTolerance) const</td></tr>
<tr class="memdesc:ac9e819cf6b3a7889c29f738fccb95556 inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gathers all contact points of the shape at the target position.  <a href="../../d3/d80/classxii_jolt_character_controller_component.htm#ac9e819cf6b3a7889c29f738fccb95556">More...</a><br /></td></tr>
<tr class="separator:ac9e819cf6b3a7889c29f738fccb95556 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c24caafd58fd05fb1c337d6dd8adfbe inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a7c24caafd58fd05fb1c337d6dd8adfbe">GetContactVelocityAndPushAway</a> (const <a class="el" href="../../dd/d26/structxii_jolt_character_controller_component_1_1_contact_point.htm">ContactPoint</a> &amp;contact, float fPushForce)</td></tr>
<tr class="memdesc:a7c24caafd58fd05fb1c337d6dd8adfbe inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Detects the velocity at the contact point. If it is a dynamic body, a force pushing it away is applied.  <a href="../../d3/d80/classxii_jolt_character_controller_component.htm#a7c24caafd58fd05fb1c337d6dd8adfbe">More...</a><br /></td></tr>
<tr class="separator:a7c24caafd58fd05fb1c337d6dd8adfbe inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afad52df8f46719c08aaa819b3a5724a5 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#afad52df8f46719c08aaa819b3a5724a5">SpawnContactInteraction</a> (const <a class="el" href="../../dd/d26/structxii_jolt_character_controller_component_1_1_contact_point.htm">ContactPoint</a> &amp;contact, const <a class="el" href="../../d6/d0c/classxii_hashed_string.htm">xiiHashedString</a> &amp;sSurfaceInteraction, <a class="el" href="../../d6/d16/classxii_typed_resource_handle.htm">xiiSurfaceResourceHandle</a> hFallbackSurface, const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a> &amp;vInteractionNormal=<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a>(0, 0, 1))</td></tr>
<tr class="memdesc:afad52df8f46719c08aaa819b3a5724a5 inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Spawns a surface interaction prefab at the given contact point.  <a href="../../d3/d80/classxii_jolt_character_controller_component.htm#afad52df8f46719c08aaa819b3a5724a5">More...</a><br /></td></tr>
<tr class="separator:afad52df8f46719c08aaa819b3a5724a5 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24d1cfcc608f3a44bfe79d5584dc68f2 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a24d1cfcc608f3a44bfe79d5584dc68f2">VisualizeContact</a> (const <a class="el" href="../../dd/d26/structxii_jolt_character_controller_component_1_1_contact_point.htm">ContactPoint</a> &amp;contact, const <a class="el" href="../../d3/de6/classxii_color.htm">xiiColor</a> &amp;color) const</td></tr>
<tr class="memdesc:a24d1cfcc608f3a44bfe79d5584dc68f2 inherit pro_methods_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index or xiiInvalidIndex of the contact point whose normal is closest to vNormal.  <a href="../../d3/d80/classxii_jolt_character_controller_component.htm#a24d1cfcc608f3a44bfe79d5584dc68f2">More...</a><br /></td></tr>
<tr class="separator:a24d1cfcc608f3a44bfe79d5584dc68f2 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e838a69bec64a8f00760f9dbe982196 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top"><a id="a0e838a69bec64a8f00760f9dbe982196"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>VisualizeContacts</b> (const <a class="el" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a>&lt; <a class="el" href="../../dd/d26/structxii_jolt_character_controller_component_1_1_contact_point.htm">ContactPoint</a> &gt; &amp;contacts, const <a class="el" href="../../d3/de6/classxii_color.htm">xiiColor</a> &amp;color) const</td></tr>
<tr class="separator:a0e838a69bec64a8f00760f9dbe982196 inherit pro_methods_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classxii_component"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classxii_component')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../db/d60/classxii_component.htm">xiiComponent</a></td></tr>
<tr class="memitem:a60c7db90d11a90e58501a07d0f051a92 inherit pro_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a60c7db90d11a90e58501a07d0f051a92"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a60c7db90d11a90e58501a07d0f051a92">xiiComponent</a> ()</td></tr>
<tr class="memdesc:a60c7db90d11a90e58501a07d0f051a92 inherit pro_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Keep the constructor private or protected in derived classes, so it cannot be called manually. <br /></td></tr>
<tr class="separator:a60c7db90d11a90e58501a07d0f051a92 inherit pro_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af73ee9449f3989410ae932252abb2250 inherit pro_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="af73ee9449f3989410ae932252abb2250"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#af73ee9449f3989410ae932252abb2250">IsDynamic</a> () const</td></tr>
<tr class="memdesc:af73ee9449f3989410ae932252abb2250 inherit pro_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this component is dynamic and thus can only be attached to dynamic game objects. <br /></td></tr>
<tr class="separator:af73ee9449f3989410ae932252abb2250 inherit pro_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e72883717a1481f394187f7251f4842 inherit pro_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a5e72883717a1481f394187f7251f4842"></a>
virtual xiiWorldModuleTypeId&#160;</td><td class="memItemRight" valign="bottom"><b>GetTypeId</b> () const =0</td></tr>
<tr class="separator:a5e72883717a1481f394187f7251f4842 inherit pro_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bae44c0d425d1bf80b8dc874db6586c inherit pro_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="a7bae44c0d425d1bf80b8dc874db6586c"></a>
virtual xiiComponentMode::Enum&#160;</td><td class="memItemRight" valign="bottom"><b>GetMode</b> () const =0</td></tr>
<tr class="separator:a7bae44c0d425d1bf80b8dc874db6586c inherit pro_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0875be82147de66ed85f9001dcb05b7 inherit pro_methods_classxii_component"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#aa0875be82147de66ed85f9001dcb05b7">Initialize</a> ()</td></tr>
<tr class="memdesc:aa0875be82147de66ed85f9001dcb05b7 inherit pro_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can be overridden for basic initialization that depends on a valid hierarchy and position.  <a href="../../db/d60/classxii_component.htm#aa0875be82147de66ed85f9001dcb05b7">More...</a><br /></td></tr>
<tr class="separator:aa0875be82147de66ed85f9001dcb05b7 inherit pro_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86fcefe9cb84eec354b2dc8c64e61a4a inherit pro_methods_classxii_component"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a86fcefe9cb84eec354b2dc8c64e61a4a">Deinitialize</a> ()</td></tr>
<tr class="memdesc:a86fcefe9cb84eec354b2dc8c64e61a4a inherit pro_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called before the component is destroyed. A derived type can override this method to do common de-initialization work.  <a href="../../db/d60/classxii_component.htm#a86fcefe9cb84eec354b2dc8c64e61a4a">More...</a><br /></td></tr>
<tr class="separator:a86fcefe9cb84eec354b2dc8c64e61a4a inherit pro_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4967b57dd671d6b3c7b3de4984813af inherit pro_methods_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="ad4967b57dd671d6b3c7b3de4984813af"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#ad4967b57dd671d6b3c7b3de4984813af">EnableUnhandledMessageHandler</a> (bool enable)</td></tr>
<tr class="memdesc:ad4967b57dd671d6b3c7b3de4984813af inherit pro_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">By default disabled. Enable to have <a class="el" href="../../db/d60/classxii_component.htm#afb3f2116efcbbbd7667c15694509ace0" title="When EnableUnhandledMessageHandler() was activated, this is called for all messages for which there i...">OnUnhandledMessage()</a> called for every unhandled message. <br /></td></tr>
<tr class="separator:ad4967b57dd671d6b3c7b3de4984813af inherit pro_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb3f2116efcbbbd7667c15694509ace0 inherit pro_methods_classxii_component"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#afb3f2116efcbbbd7667c15694509ace0">OnUnhandledMessage</a> (<a class="el" href="../../d9/d55/classxii_message.htm">xiiMessage</a> &amp;msg, bool bWasPostedMsg)</td></tr>
<tr class="memdesc:afb3f2116efcbbbd7667c15694509ace0 inherit pro_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">When <a class="el" href="../../db/d60/classxii_component.htm#ad4967b57dd671d6b3c7b3de4984813af" title="By default disabled. Enable to have OnUnhandledMessage() called for every unhandled message.">EnableUnhandledMessageHandler()</a> was activated, this is called for all messages for which there is no dedicated message handler.  <a href="../../db/d60/classxii_component.htm#afb3f2116efcbbbd7667c15694509ace0">More...</a><br /></td></tr>
<tr class="separator:afb3f2116efcbbbd7667c15694509ace0 inherit pro_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20bdc689c389acbeb23574a77b9528bf inherit pro_methods_classxii_component"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#a20bdc689c389acbeb23574a77b9528bf">OnUnhandledMessage</a> (<a class="el" href="../../d9/d55/classxii_message.htm">xiiMessage</a> &amp;msg, bool bWasPostedMsg) const</td></tr>
<tr class="memdesc:a20bdc689c389acbeb23574a77b9528bf inherit pro_methods_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">When <a class="el" href="../../db/d60/classxii_component.htm#ad4967b57dd671d6b3c7b3de4984813af" title="By default disabled. Enable to have OnUnhandledMessage() called for every unhandled message.">EnableUnhandledMessageHandler()</a> was activated, this is called for all messages for which there is no dedicated message handler.  <a href="../../db/d60/classxii_component.htm#a20bdc689c389acbeb23574a77b9528bf">More...</a><br /></td></tr>
<tr class="separator:a20bdc689c389acbeb23574a77b9528bf inherit pro_methods_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a8124837940baa487399214de84b935dc"><td class="memItemLeft" align="right" valign="top"><a id="a8124837940baa487399214de84b935dc"></a>
<a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a53e6de7882366154318a5b8721b2e919">GroundState</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_LastGroundState</b> = <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a53e6de7882366154318a5b8721b2e919aee4e669a07b061d70b9b79dfed9cb5e7">GroundState::InAir</a></td></tr>
<tr class="separator:a8124837940baa487399214de84b935dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadf8a9d6d359dd9448081c196bdf927e"><td class="memItemLeft" align="right" valign="top"><a id="aadf8a9d6d359dd9448081c196bdf927e"></a>
xiiUInt8&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiInputJumpBit</b>: 1</td></tr>
<tr class="separator:aadf8a9d6d359dd9448081c196bdf927e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ac055f5c10d0a44899cc4fecd50ebb6"><td class="memItemLeft" align="right" valign="top"><a id="a9ac055f5c10d0a44899cc4fecd50ebb6"></a>
xiiUInt8&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiInputCrouchBit</b>: 1</td></tr>
<tr class="separator:a9ac055f5c10d0a44899cc4fecd50ebb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac97c63cc6b683c094b7729cac41e346b"><td class="memItemLeft" align="right" valign="top"><a id="ac97c63cc6b683c094b7729cac41e346b"></a>
xiiUInt8&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiInputRunBit</b>: 1</td></tr>
<tr class="separator:ac97c63cc6b683c094b7729cac41e346b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada79ec392a6f6677e70065398c636bfd"><td class="memItemLeft" align="right" valign="top"><a id="ada79ec392a6f6677e70065398c636bfd"></a>
xiiUInt8&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiIsCrouchingBit</b>: 1</td></tr>
<tr class="separator:ada79ec392a6f6677e70065398c636bfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b6c7e08fac40df8137ab2df3a2136b1"><td class="memItemLeft" align="right" valign="top"><a id="a4b6c7e08fac40df8137ab2df3a2136b1"></a>
<a class="el" href="../../d3/ddb/classxii_angle_template.htm">xiiAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_InputRotateZ</b></td></tr>
<tr class="separator:a4b6c7e08fac40df8137ab2df3a2136b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66a01dcae8d911252a0f9d1f5ee8f7ad"><td class="memItemLeft" align="right" valign="top"><a id="a66a01dcae8d911252a0f9d1f5ee8f7ad"></a>
<a class="el" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vInputDirection</b> = <a class="el" href="../../d1/d0d/classxii_vec2_template.htm#a6923198918b90676514cd437586d7eac">xiiVec2::ZeroVector</a>()</td></tr>
<tr class="separator:a66a01dcae8d911252a0f9d1f5ee8f7ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b136265658a7c3eebef276598340c02"><td class="memItemLeft" align="right" valign="top"><a id="a1b136265658a7c3eebef276598340c02"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fVelocityUp</b> = 0.0f</td></tr>
<tr class="separator:a1b136265658a7c3eebef276598340c02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01a8c44a86e700b68e62d2b803ca38c7"><td class="memItemLeft" align="right" valign="top"><a id="a01a8c44a86e700b68e62d2b803ca38c7"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fNextCylinderHeight</b> = 0</td></tr>
<tr class="separator:a01a8c44a86e700b68e62d2b803ca38c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3336cee9d41213e98b05941901000142"><td class="memItemLeft" align="right" valign="top"><a id="a3336cee9d41213e98b05941901000142"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fAccumulatedWalkDistance</b> = 0.0f</td></tr>
<tr class="separator:a3336cee9d41213e98b05941901000142"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f30b890c60fc0178ff1eb6327dc3136"><td class="memItemLeft" align="right" valign="top"><a id="a3f30b890c60fc0178ff1eb6327dc3136"></a>
<a class="el" href="../../d1/d0d/classxii_vec2_template.htm">xiiVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vVelocityLateral</b> = <a class="el" href="../../d1/d0d/classxii_vec2_template.htm#a6923198918b90676514cd437586d7eac">xiiVec2::ZeroVector</a>()</td></tr>
<tr class="separator:a3f30b890c60fc0178ff1eb6327dc3136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0277254c026d543d0f1672e1900fcbf8"><td class="memItemLeft" align="right" valign="top"><a id="a0277254c026d543d0f1672e1900fcbf8"></a>
<a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransform</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_PreviousTransform</b></td></tr>
<tr class="separator:a0277254c026d543d0f1672e1900fcbf8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca85595538f78c939682ce059fd79e61"><td class="memItemLeft" align="right" valign="top"><a id="aca85595538f78c939682ce059fd79e61"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bFeetOnSolidGround</b> = false</td></tr>
<tr class="separator:aca85595538f78c939682ce059fd79e61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac810559da2df962df273ac7244e41b0e"><td class="memItemLeft" align="right" valign="top"><a id="ac810559da2df962df273ac7244e41b0e"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fCurrentCylinderHeight</b> = 0</td></tr>
<tr class="separator:ac810559da2df962df273ac7244e41b0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75f844e123a030ee017cf48f9e8cbb77"><td class="memItemLeft" align="right" valign="top"><a id="a75f844e123a030ee017cf48f9e8cbb77"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fHeadHeightOffset</b> = 0.0f</td></tr>
<tr class="separator:a75f844e123a030ee017cf48f9e8cbb77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e9f87f9618b02155074f1cdb0aa5938"><td class="memItemLeft" align="right" valign="top"><a id="a6e9f87f9618b02155074f1cdb0aa5938"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fHeadTargetHeight</b> = 0.0f</td></tr>
<tr class="separator:a6e9f87f9618b02155074f1cdb0aa5938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04f01c24bb3a231a8cdb427e28a2731b"><td class="memItemLeft" align="right" valign="top"><a id="a04f01c24bb3a231a8cdb427e28a2731b"></a>
<a class="el" href="../../da/d2c/structxii_game_object_handle.htm">xiiGameObjectHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hHeadObject</b></td></tr>
<tr class="separator:a04f01c24bb3a231a8cdb427e28a2731b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fdd81511c9485bd0e6443360a69672f"><td class="memItemLeft" align="right" valign="top"><a id="a1fdd81511c9485bd0e6443360a69672f"></a>
<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vAbsoluteRootMotion</b> = <a class="el" href="../../d9/d9a/classxii_vec3_template.htm#ae11f5900a8e3748216ebdd2d5caa6c02">xiiVec3::ZeroVector</a>()</td></tr>
<tr class="separator:a1fdd81511c9485bd0e6443360a69672f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6e43113222357dffd5dcce0dc9d8b52"><td class="memItemLeft" align="right" valign="top"><a id="af6e43113222357dffd5dcce0dc9d8b52"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiUserDataIndex</b> = xiiInvalidIndex</td></tr>
<tr class="separator:af6e43113222357dffd5dcce0dc9d8b52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed447b765aeae00b7cc621fee7d06412"><td class="memItemLeft" align="right" valign="top"><a id="aed447b765aeae00b7cc621fee7d06412"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiJoltBodyID</b> = xiiInvalidIndex</td></tr>
<tr class="separator:aed447b765aeae00b7cc621fee7d06412"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classxii_component"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classxii_component')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../db/d60/classxii_component.htm">xiiComponent</a></td></tr>
<tr class="memitem:ae8e397ade32eb7a5df4486207077e4ac inherit pro_attribs_classxii_component"><td class="memItemLeft" align="right" valign="top"><a id="ae8e397ade32eb7a5df4486207077e4ac"></a>
const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d60/classxii_component.htm#ae8e397ade32eb7a5df4486207077e4ac">m_pMessageDispatchType</a> = nullptr</td></tr>
<tr class="memdesc:ae8e397ade32eb7a5df4486207077e4ac inherit pro_attribs_classxii_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Messages will be dispatched to this type. Default is what GetDynamicRTTI() returns, can be redirected if necessary. <br /></td></tr>
<tr class="separator:ae8e397ade32eb7a5df4486207077e4ac inherit pro_attribs_classxii_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classxii_no_base"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classxii_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d2/d38/classxii_no_base.htm">xiiNoBase</a></td></tr>
<tr class="memitem:ac03a1d9fba3babf7db68227be61737e6 inherit pub_static_methods_classxii_no_base"><td class="memItemLeft" align="right" valign="top"><a id="ac03a1d9fba3babf7db68227be61737e6"></a>
static const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:ac03a1d9fba3babf7db68227be61737e6 inherit pub_static_methods_classxii_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classxii_jolt_character_controller_component"><td colspan="2" onclick="javascript:toggleInherit('pro_types_classxii_jolt_character_controller_component')"><img src="../../closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm">xiiJoltCharacterControllerComponent</a></td></tr>
<tr class="memitem:a24f228e49b063d0c8ce4bb56f315bd6c inherit pro_types_classxii_jolt_character_controller_component"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a24f228e49b063d0c8ce4bb56f315bd6c">ContactFilter</a> = <a class="el" href="../../dc/d84/structxii_delegate.htm">xiiDelegate</a>&lt; bool(const <a class="el" href="../../dd/d26/structxii_jolt_character_controller_component_1_1_contact_point.htm">ContactPoint</a> &amp;)&gt;</td></tr>
<tr class="memdesc:a24f228e49b063d0c8ce4bb56f315bd6c inherit pro_types_classxii_jolt_character_controller_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Looks at all the contact points and determines what kind of contacts they are.  <a href="../../d3/d80/classxii_jolt_character_controller_component.htm#a24f228e49b063d0c8ce4bb56f315bd6c">More...</a><br /></td></tr>
<tr class="separator:a24f228e49b063d0c8ce4bb56f315bd6c inherit pro_types_classxii_jolt_character_controller_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a53e6de7882366154318a5b8721b2e919"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53e6de7882366154318a5b8721b2e919">&#9670;&nbsp;</a></span>GroundState</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a53e6de7882366154318a5b8721b2e919">xiiJoltDefaultCharacterComponent::GroundState</a> : xiiUInt8</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a53e6de7882366154318a5b8721b2e919a2b9beed57034f5727573d7ded76cf777"></a>OnGround&#160;</td><td class="fielddoc"><p>Character is touching the ground. </p>
</td></tr>
<tr><td class="fieldname"><a id="a53e6de7882366154318a5b8721b2e919ad82906db8c91bad0508406f71a9f3b7f"></a>Sliding&#160;</td><td class="fielddoc"><p>Character is touching a steep surface and therefore slides downwards. </p>
</td></tr>
<tr><td class="fieldname"><a id="a53e6de7882366154318a5b8721b2e919aee4e669a07b061d70b9b79dfed9cb5e7"></a>InAir&#160;</td><td class="fielddoc"><p>Character isn't touching any ground surface (may still touch a wall or ceiling) </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3592160495e72e4704203d6bee88aab5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3592160495e72e4704203d6bee88aab5">&#9670;&nbsp;</a></span>DeserializeComponent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiJoltDefaultCharacterComponent::DeserializeComponent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/df8/classxii_world_reader.htm">xiiWorldReader</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to load the current state of the component from the given stream. </p>
<p>The active state will be automatically serialized. The 'initialized' state is not serialized, all components will be initialized after creation, even if they were already in an initialized state when they were serialized. </p>

<p>Reimplemented from <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a603c3e286cb22ee6a91ae64b14cc316a">xiiJoltCharacterControllerComponent</a>.</p>

</div>
</div>
<a id="a2884f015b1eea8a8d0008e78f97c9489"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2884f015b1eea8a8d0008e78f97c9489">&#9670;&nbsp;</a></span>OnActivated()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiJoltDefaultCharacterComponent::OnActivated </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called when the component gets activated. </p>
<p>By default a component is active, but it can be created in an inactive state. In such a case <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a> is only called once a component is activated. If a component gets switched between active and inactive at runtime, <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a> and <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#abd85d588ffae234ab8b28f1d7acc1433" title="This method is called when the component gets deactivated.">OnDeactivated()</a> are called accordingly. In contrast <a class="el" href="../../db/d60/classxii_component.htm#aa0875be82147de66ed85f9001dcb05b7" title="Can be overridden for basic initialization that depends on a valid hierarchy and position.">Initialize()</a> and <a class="el" href="../../db/d60/classxii_component.htm#a86fcefe9cb84eec354b2dc8c64e61a4a" title="This method is called before the component is destroyed. A derived type can override this method to d...">Deinitialize()</a> are only ever called once.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a>, <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#abd85d588ffae234ab8b28f1d7acc1433" title="This method is called when the component gets deactivated.">OnDeactivated()</a>, <a class="el" href="../../db/d60/classxii_component.htm#aa0875be82147de66ed85f9001dcb05b7" title="Can be overridden for basic initialization that depends on a valid hierarchy and position.">Initialize()</a>, <a class="el" href="../../db/d60/classxii_component.htm#a86fcefe9cb84eec354b2dc8c64e61a4a" title="This method is called before the component is destroyed. A derived type can override this method to d...">Deinitialize()</a>, <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="../../db/d60/classxii_component.htm#a8848fb226fcbe2f6f03cd58b2082e55f">xiiComponent</a>.</p>

</div>
</div>
<a id="abd85d588ffae234ab8b28f1d7acc1433"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd85d588ffae234ab8b28f1d7acc1433">&#9670;&nbsp;</a></span>OnDeactivated()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiJoltDefaultCharacterComponent::OnDeactivated </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called when the component gets deactivated. </p>
<p>Upon destruction, a component that is active first gets deactivated. Therefore <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#abd85d588ffae234ab8b28f1d7acc1433" title="This method is called when the component gets deactivated.">OnDeactivated()</a> should be used for typical game code cleanup.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a>, <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#abd85d588ffae234ab8b28f1d7acc1433" title="This method is called when the component gets deactivated.">OnDeactivated()</a>, <a class="el" href="../../db/d60/classxii_component.htm#aa0875be82147de66ed85f9001dcb05b7" title="Can be overridden for basic initialization that depends on a valid hierarchy and position.">Initialize()</a>, <a class="el" href="../../db/d60/classxii_component.htm#a86fcefe9cb84eec354b2dc8c64e61a4a" title="This method is called before the component is destroyed. A derived type can override this method to d...">Deinitialize()</a>, <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a26545f15645b8504e8245b7991eb7c88">xiiJoltCharacterControllerComponent</a>.</p>

</div>
</div>
<a id="aade05e6123dfe1670a3ecdddfe276d20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aade05e6123dfe1670a3ecdddfe276d20">&#9670;&nbsp;</a></span>OnSimulationStarted()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiJoltDefaultCharacterComponent::OnSimulationStarted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called once for active components, at the start of the next world update, but only when the world is simulated. </p>
<p>This is the one preferred method to setup typical game logic. In a pure game environment there is no practical difference between <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a> and <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a>, as <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> will be called right after <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a>.</p>
<p>However, when a scene is open inside the editor, there is an important difference: <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a> is called once the component was created. <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> is only called once the game simulation is started inside the editor. As an example, if a component starts a sound in <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a>, that sound will play right after the scene has been loaded into the editor. If instead the sound gets started in <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a>, it will only play once the user starts the game mode inside the editor.</p>
<p>Additionally, <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> is only ever executed once on a component, even if the <a class="el" href="../../d6/d89/classxii_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">xiiWorld</a> pauses and resumes world simulation multiple times. Thus components that should only execute a thing exactly once, will work correctly. In contrast <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a> and <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#abd85d588ffae234ab8b28f1d7acc1433" title="This method is called when the component gets deactivated.">OnDeactivated()</a> will be executed every time the component's active state is toggled, which could re-execute the same behavior multiple times.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#a2884f015b1eea8a8d0008e78f97c9489" title="This method is called when the component gets activated.">OnActivated()</a>, <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#abd85d588ffae234ab8b28f1d7acc1433" title="This method is called when the component gets deactivated.">OnDeactivated()</a>, <a class="el" href="../../db/d60/classxii_component.htm#aa0875be82147de66ed85f9001dcb05b7" title="Can be overridden for basic initialization that depends on a valid hierarchy and position.">Initialize()</a>, <a class="el" href="../../db/d60/classxii_component.htm#a86fcefe9cb84eec354b2dc8c64e61a4a" title="This method is called before the component is destroyed. A derived type can override this method to d...">Deinitialize()</a>, <a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm#aade05e6123dfe1670a3ecdddfe276d20" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a452f59d9bb57c63cb4650bb329bd81a0">xiiJoltCharacterControllerComponent</a>.</p>

</div>
</div>
<a id="a440558a7da3496f3fa1fb938275baa8c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a440558a7da3496f3fa1fb938275baa8c">&#9670;&nbsp;</a></span>UpdateCharacter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiJoltDefaultCharacterComponent::UpdateCharacter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called up to once per frame, but potentially less often, if physics updates were skipped due to high framerates. </p>
<p>All shape modifications and moves should only be executed during this step. The given deltaTime should be used, rather than the world's time diff. </p>

<p>Implements <a class="el" href="../../d3/d80/classxii_jolt_character_controller_component.htm#a746493c7f34c22a9c4c7bdb0e5b11029">xiiJoltCharacterControllerComponent</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/EnginePlugins/JoltPlugin/Character/<a class="el" href="../../d0/d05/_jolt_default_character_component_8h_source.htm">JoltDefaultCharacterComponent.h</a></li>
<li>/home/runner/work/XII/XII/Source/EnginePlugins/JoltPlugin/Character/Implementation/JoltDefaultCharacterComponent.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d7/d7c/classxii_jolt_default_character_component.htm">xiiJoltDefaultCharacterComponent</a></li>
    <li class="footer">Generated on Mon Apr 17 2023 20:10:38 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
