<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Tools/Libs/ToolsFoundation/Reflection/PhantomProperty.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d7/d0a/_phantom_property_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">PhantomProperty.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Reflection/Reflection.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;ToolsFoundation/Reflection/ReflectedType.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="foldopen" id="foldopen00006" data-start="{" data-end="};">
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno"><a class="line" href="../../d0/d47/classxii_phantom_constant_property.htm">    6</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d0/d47/classxii_phantom_constant_property.htm">xiiPhantomConstantProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d9/de1/classxii_abstract_constant_property.htm">xiiAbstractConstantProperty</a></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  <a class="code hl_class" href="../../d0/d47/classxii_phantom_constant_property.htm">xiiPhantomConstantProperty</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../db/d02/structxii_reflected_property_descriptor.htm">xiiReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>  <a class="code hl_class" href="../../d0/d47/classxii_phantom_constant_property.htm">~xiiPhantomConstantProperty</a>();</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* <a class="code hl_function" href="../../d0/d47/classxii_phantom_constant_property.htm#a5ded82850d4769a947160debc1514fd9">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>*          <a class="code hl_function" href="../../d0/d47/classxii_phantom_constant_property.htm#a5d2fc848ab891f12a7dde679faa9ba2c">GetPropertyPointer</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno"><a class="line" href="../../d0/d47/classxii_phantom_constant_property.htm#a595e7e12ab930056ca8d9e22829188a1">   14</a></span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>     <a class="code hl_function" href="../../d0/d47/classxii_phantom_constant_property.htm#a595e7e12ab930056ca8d9e22829188a1">GetConstant</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_Value; }</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <a class="code hl_class" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>     m_Value;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>      m_sPropertyNameStorage;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* m_pPropertyType;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>};</div>
</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="foldopen" id="foldopen00022" data-start="{" data-end="};">
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="../../db/db0/classxii_phantom_member_property.htm">   22</a></span><span class="keyword">class </span><a class="code hl_class" href="../../db/db0/classxii_phantom_member_property.htm">xiiPhantomMemberProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>{</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  <a class="code hl_class" href="../../db/db0/classxii_phantom_member_property.htm">xiiPhantomMemberProperty</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../db/d02/structxii_reflected_property_descriptor.htm">xiiReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <a class="code hl_class" href="../../db/db0/classxii_phantom_member_property.htm">~xiiPhantomMemberProperty</a>();</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* <a class="code hl_function" href="../../db/db0/classxii_phantom_member_property.htm#a17e3e3a7b166df6cabe70ddaa976d900">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="../../db/db0/classxii_phantom_member_property.htm#aa90a888e2b40053c221ec46492589a50">   29</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>*          <a class="code hl_function" href="../../db/db0/classxii_phantom_member_property.htm#aa90a888e2b40053c221ec46492589a50">GetPropertyPointer</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">nullptr</span>; }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="../../db/db0/classxii_phantom_member_property.htm#a68266bab8766f70c001a38a8b75492d7">   30</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../db/db0/classxii_phantom_member_property.htm#a68266bab8766f70c001a38a8b75492d7">GetValuePtr</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../db/db0/classxii_phantom_member_property.htm#a0bf024638f22a133e5251d44d222158f">   31</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../db/db0/classxii_phantom_member_property.htm#a0bf024638f22a133e5251d44d222158f">SetValuePtr</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  <a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>      m_sPropertyNameStorage;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* m_pPropertyType;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>};</div>
</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="foldopen" id="foldopen00038" data-start="{" data-end="};">
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../d4/dcb/classxii_phantom_function_property.htm">   38</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d4/dcb/classxii_phantom_function_property.htm">xiiPhantomFunctionProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../de/d27/classxii_abstract_function_property.htm">xiiAbstractFunctionProperty</a></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>{</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <a class="code hl_class" href="../../d4/dcb/classxii_phantom_function_property.htm">xiiPhantomFunctionProperty</a>(<a class="code hl_struct" href="../../df/d54/structxii_reflected_function_descriptor.htm">xiiReflectedFunctionDescriptor</a>* pDesc);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <a class="code hl_class" href="../../d4/dcb/classxii_phantom_function_property.htm">~xiiPhantomFunctionProperty</a>();</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <span class="keyword">virtual</span> <a class="code hl_enumeration" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520">xiiFunctionType::Enum</a>         <a class="code hl_function" href="../../d4/dcb/classxii_phantom_function_property.htm#a4321e2cc872ef53a96a8ff3ea50b60f6">GetFunctionType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>*                <a class="code hl_function" href="../../d4/dcb/classxii_phantom_function_property.htm#a07d5f3b2e48a228e59279145ee6327bf">GetReturnType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <span class="keyword">virtual</span> <a class="code hl_struct" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a> <a class="code hl_function" href="../../d4/dcb/classxii_phantom_function_property.htm#ae3c4780b555fd2701fc5deb3ce43f30a">GetReturnFlags</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keyword">virtual</span> xiiUInt32                     <a class="code hl_function" href="../../d4/dcb/classxii_phantom_function_property.htm#a8f56d6b31dc7196fbc859b37517b665f">GetArgumentCount</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>*                <a class="code hl_function" href="../../d4/dcb/classxii_phantom_function_property.htm#a7bbc09bdc0bdf28d6697acbbd1008405">GetArgumentType</a>(xiiUInt32 uiParamIndex) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <span class="keyword">virtual</span> <a class="code hl_struct" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a> <a class="code hl_function" href="../../d4/dcb/classxii_phantom_function_property.htm#a4b0a75f44f16e2f1f21d2b1b16eac1f1">GetArgumentFlags</a>(xiiUInt32 uiParamIndex) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>                          <a class="code hl_function" href="../../d4/dcb/classxii_phantom_function_property.htm#a45e7bfc288ee245bf5ea1ac80dedbc91">Execute</a>(<span class="keywordtype">void</span>* pInstance, <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;xiiVariant&gt;</a> values, <a class="code hl_class" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; ref_returnValue) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>                                      m_sPropertyNameStorage;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  <a class="code hl_struct" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;xiiFunctionType&gt;</a>                       m_FunctionType;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <a class="code hl_struct" href="../../d5/da2/structxii_function_argument_descriptor.htm">xiiFunctionArgumentDescriptor</a>                  m_ReturnValue;</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;xiiFunctionArgumentDescriptor&gt;</a> m_Arguments;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>};</div>
</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="foldopen" id="foldopen00060" data-start="{" data-end="};">
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="../../d3/dee/classxii_phantom_array_property.htm">   60</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d3/dee/classxii_phantom_array_property.htm">xiiPhantomArrayProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../df/da8/classxii_abstract_array_property.htm">xiiAbstractArrayProperty</a></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>{</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <a class="code hl_class" href="../../d3/dee/classxii_phantom_array_property.htm">xiiPhantomArrayProperty</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../db/d02/structxii_reflected_property_descriptor.htm">xiiReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  <a class="code hl_class" href="../../d3/dee/classxii_phantom_array_property.htm">~xiiPhantomArrayProperty</a>();</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* <a class="code hl_function" href="../../d3/dee/classxii_phantom_array_property.htm#ad2ad4ecc33c85c1e4648f17dbee45274">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="../../d3/dee/classxii_phantom_array_property.htm#a3726e5a71b7c6eaf635f1bf8e5c2fb8a">   67</a></span>  <span class="keyword">virtual</span> xiiUInt32      <a class="code hl_function" href="../../d3/dee/classxii_phantom_array_property.htm#a3726e5a71b7c6eaf635f1bf8e5c2fb8a">GetCount</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> 0; }</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno"><a class="line" href="../../d3/dee/classxii_phantom_array_property.htm#a427c448a3be0abac353fa487bda6b0f7">   68</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../d3/dee/classxii_phantom_array_property.htm#a427c448a3be0abac353fa487bda6b0f7">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, xiiUInt32 uiIndex, <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="../../d3/dee/classxii_phantom_array_property.htm#a973027af8dabcc3c8ad92b0f98f61189">   69</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../d3/dee/classxii_phantom_array_property.htm#a973027af8dabcc3c8ad92b0f98f61189">SetValue</a>(<span class="keywordtype">void</span>* pInstance, xiiUInt32 uiIndex, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="../../d3/dee/classxii_phantom_array_property.htm#a48c2c2849dd6208e61a7a4023864edfa">   70</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../d3/dee/classxii_phantom_array_property.htm#a48c2c2849dd6208e61a7a4023864edfa">Insert</a>(<span class="keywordtype">void</span>* pInstance, xiiUInt32 uiIndex, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="../../d3/dee/classxii_phantom_array_property.htm#a167e205f51efd8d8ce1516b75edd5dc8">   71</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../d3/dee/classxii_phantom_array_property.htm#a167e205f51efd8d8ce1516b75edd5dc8">Remove</a>(<span class="keywordtype">void</span>* pInstance, xiiUInt32 uiIndex)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno"><a class="line" href="../../d3/dee/classxii_phantom_array_property.htm#adf2cb0139eecd797373b298f84913b3f">   72</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../d3/dee/classxii_phantom_array_property.htm#adf2cb0139eecd797373b298f84913b3f">Clear</a>(<span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="../../d3/dee/classxii_phantom_array_property.htm#a40a2a28d76795f14b59248f0df704362">   73</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../d3/dee/classxii_phantom_array_property.htm#a40a2a28d76795f14b59248f0df704362">SetCount</a>(<span class="keywordtype">void</span>* pInstance, xiiUInt32 uiCount)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>      m_sPropertyNameStorage;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* m_pPropertyType;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>};</div>
</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="foldopen" id="foldopen00082" data-start="{" data-end="};">
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="../../da/dae/classxii_phantom_set_property.htm">   82</a></span><span class="keyword">class </span><a class="code hl_class" href="../../da/dae/classxii_phantom_set_property.htm">xiiPhantomSetProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../dd/d45/classxii_abstract_set_property.htm">xiiAbstractSetProperty</a></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>{</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <a class="code hl_class" href="../../da/dae/classxii_phantom_set_property.htm">xiiPhantomSetProperty</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../db/d02/structxii_reflected_property_descriptor.htm">xiiReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <a class="code hl_class" href="../../da/dae/classxii_phantom_set_property.htm">~xiiPhantomSetProperty</a>();</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* <a class="code hl_function" href="../../da/dae/classxii_phantom_set_property.htm#a29f291b9bb0149b09eaf92dd99700dcb">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="../../da/dae/classxii_phantom_set_property.htm#a5e7b249ed347b3e1c9f416adf0fe5f1e">   89</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span>           <a class="code hl_function" href="../../da/dae/classxii_phantom_set_property.htm#a5e7b249ed347b3e1c9f416adf0fe5f1e">IsEmpty</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno"><a class="line" href="../../da/dae/classxii_phantom_set_property.htm#a24abb8253d3f0ceb99dcf1950192336c">   90</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../da/dae/classxii_phantom_set_property.htm#a24abb8253d3f0ceb99dcf1950192336c">Clear</a>(<span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="../../da/dae/classxii_phantom_set_property.htm#a68b32a0a82cbf847c01c9f863f7dba4d">   91</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../da/dae/classxii_phantom_set_property.htm#a68b32a0a82cbf847c01c9f863f7dba4d">Insert</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="../../da/dae/classxii_phantom_set_property.htm#ae91a84da0360a0a6a2b87daad29c6e4b">   92</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../da/dae/classxii_phantom_set_property.htm#ae91a84da0360a0a6a2b87daad29c6e4b">Remove</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="../../da/dae/classxii_phantom_set_property.htm#ad0d0adaae8ed1556e54463806b9ce9fe">   93</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span>           <a class="code hl_function" href="../../da/dae/classxii_phantom_set_property.htm#ad0d0adaae8ed1556e54463806b9ce9fe">Contains</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="../../da/dae/classxii_phantom_set_property.htm#a0ea075f1ca0f4267123ab4807a198e28">   94</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../da/dae/classxii_phantom_set_property.htm#a0ea075f1ca0f4267123ab4807a198e28">GetValues</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;xiiVariant&gt;</a>&amp; out_keys)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>      m_sPropertyNameStorage;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* m_pPropertyType;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>};</div>
</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="foldopen" id="foldopen00102" data-start="{" data-end="};">
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno"><a class="line" href="../../da/d2f/classxii_phantom_map_property.htm">  102</a></span><span class="keyword">class </span><a class="code hl_class" href="../../da/d2f/classxii_phantom_map_property.htm">xiiPhantomMapProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../da/d76/classxii_abstract_map_property.htm">xiiAbstractMapProperty</a></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>{</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <a class="code hl_class" href="../../da/d2f/classxii_phantom_map_property.htm">xiiPhantomMapProperty</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../db/d02/structxii_reflected_property_descriptor.htm">xiiReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <a class="code hl_class" href="../../da/d2f/classxii_phantom_map_property.htm">~xiiPhantomMapProperty</a>();</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* <a class="code hl_function" href="../../da/d2f/classxii_phantom_map_property.htm#a90d41f3644efe0b878d490d187c10cc7">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="../../da/d2f/classxii_phantom_map_property.htm#a53384ff36a274db8c21a9c67ea153f94">  109</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span>           <a class="code hl_function" href="../../da/d2f/classxii_phantom_map_property.htm#a53384ff36a274db8c21a9c67ea153f94">IsEmpty</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="../../da/d2f/classxii_phantom_map_property.htm#a73d11cc4fde8b9063b9bc17406d2c746">  110</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../da/d2f/classxii_phantom_map_property.htm#a73d11cc4fde8b9063b9bc17406d2c746">Clear</a>(<span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="../../da/d2f/classxii_phantom_map_property.htm#a1919fc043908eddea4e0623ce2d70446">  111</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../da/d2f/classxii_phantom_map_property.htm#a1919fc043908eddea4e0623ce2d70446">Insert</a>(<span class="keywordtype">void</span>* pInstance, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="../../da/d2f/classxii_phantom_map_property.htm#a92dfb40e7e3fe23a2f3f418193970ae7">  112</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../da/d2f/classxii_phantom_map_property.htm#a92dfb40e7e3fe23a2f3f418193970ae7">Remove</a>(<span class="keywordtype">void</span>* pInstance, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="../../da/d2f/classxii_phantom_map_property.htm#a418e554b5ec1da79b82e50262882e271">  113</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span>           <a class="code hl_function" href="../../da/d2f/classxii_phantom_map_property.htm#a418e554b5ec1da79b82e50262882e271">Contains</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno"><a class="line" href="../../da/d2f/classxii_phantom_map_property.htm#a836284639553adc261a0538f53445207">  114</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span>           <a class="code hl_function" href="../../da/d2f/classxii_phantom_map_property.htm#a836284639553adc261a0538f53445207">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey, <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="../../da/d2f/classxii_phantom_map_property.htm#a2606c8a489a36af2896948df09bb3240">  115</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>           <a class="code hl_function" href="../../da/d2f/classxii_phantom_map_property.htm#a2606c8a489a36af2896948df09bb3240">GetKeys</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code hl_class" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;xiiString, 16&gt;</a>&amp; out_keys)<span class="keyword"> const override </span>{}</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>      m_sPropertyNameStorage;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* m_pPropertyType;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>};</div>
</div>
<div class="ttc" id="aclassxii_abstract_array_property_htm"><div class="ttname"><a href="../../df/da8/classxii_abstract_array_property.htm">xiiAbstractArrayProperty</a></div><div class="ttdoc">The base class for a property that represents an array of values.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:273</div></div>
<div class="ttc" id="aclassxii_abstract_constant_property_htm"><div class="ttname"><a href="../../d9/de1/classxii_abstract_constant_property.htm">xiiAbstractConstantProperty</a></div><div class="ttdoc">This is the base class for all constant properties that are stored inside the RTTI data.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:213</div></div>
<div class="ttc" id="aclassxii_abstract_function_property_htm"><div class="ttname"><a href="../../de/d27/classxii_abstract_function_property.htm">xiiAbstractFunctionProperty</a></div><div class="ttdoc">The base class for a property that represents a function.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:536</div></div>
<div class="ttc" id="aclassxii_abstract_map_property_htm"><div class="ttname"><a href="../../da/d76/classxii_abstract_map_property.htm">xiiAbstractMapProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:348</div></div>
<div class="ttc" id="aclassxii_abstract_member_property_htm"><div class="ttname"><a href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a></div><div class="ttdoc">This is the base class for all properties that are members of a class. It provides more information a...</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:237</div></div>
<div class="ttc" id="aclassxii_abstract_set_property_htm"><div class="ttname"><a href="../../dd/d45/classxii_abstract_set_property.htm">xiiAbstractSetProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:313</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:37</div></div>
<div class="ttc" id="aclassxii_dynamic_array_htm"><div class="ttname"><a href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a></div><div class="ttdef"><b>Definition</b> DynamicArray.h:81</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition</b> HybridArray.h:12</div></div>
<div class="ttc" id="aclassxii_phantom_array_property_htm"><div class="ttname"><a href="../../d3/dee/classxii_phantom_array_property.htm">xiiPhantomArrayProperty</a></div><div class="ttdef"><b>Definition</b> PhantomProperty.h:61</div></div>
<div class="ttc" id="aclassxii_phantom_array_property_htm_a167e205f51efd8d8ce1516b75edd5dc8"><div class="ttname"><a href="../../d3/dee/classxii_phantom_array_property.htm#a167e205f51efd8d8ce1516b75edd5dc8">xiiPhantomArrayProperty::Remove</a></div><div class="ttdeci">virtual void Remove(void *pInstance, xiiUInt32 uiIndex) const override</div><div class="ttdoc">Removes the element in the array at index uiIndex.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:71</div></div>
<div class="ttc" id="aclassxii_phantom_array_property_htm_a3726e5a71b7c6eaf635f1bf8e5c2fb8a"><div class="ttname"><a href="../../d3/dee/classxii_phantom_array_property.htm#a3726e5a71b7c6eaf635f1bf8e5c2fb8a">xiiPhantomArrayProperty::GetCount</a></div><div class="ttdeci">virtual xiiUInt32 GetCount(const void *pInstance) const override</div><div class="ttdoc">Returns number of elements.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:67</div></div>
<div class="ttc" id="aclassxii_phantom_array_property_htm_a40a2a28d76795f14b59248f0df704362"><div class="ttname"><a href="../../d3/dee/classxii_phantom_array_property.htm#a40a2a28d76795f14b59248f0df704362">xiiPhantomArrayProperty::SetCount</a></div><div class="ttdeci">virtual void SetCount(void *pInstance, xiiUInt32 uiCount) const override</div><div class="ttdoc">Resizes the array to uiCount.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:73</div></div>
<div class="ttc" id="aclassxii_phantom_array_property_htm_a427c448a3be0abac353fa487bda6b0f7"><div class="ttname"><a href="../../d3/dee/classxii_phantom_array_property.htm#a427c448a3be0abac353fa487bda6b0f7">xiiPhantomArrayProperty::GetValue</a></div><div class="ttdeci">virtual void GetValue(const void *pInstance, xiiUInt32 uiIndex, void *pObject) const override</div><div class="ttdoc">Writes element at index uiIndex to the target of pObject.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:68</div></div>
<div class="ttc" id="aclassxii_phantom_array_property_htm_a48c2c2849dd6208e61a7a4023864edfa"><div class="ttname"><a href="../../d3/dee/classxii_phantom_array_property.htm#a48c2c2849dd6208e61a7a4023864edfa">xiiPhantomArrayProperty::Insert</a></div><div class="ttdeci">virtual void Insert(void *pInstance, xiiUInt32 uiIndex, const void *pObject) const override</div><div class="ttdoc">Inserts the target of pObject into the array at index uiIndex.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:70</div></div>
<div class="ttc" id="aclassxii_phantom_array_property_htm_a973027af8dabcc3c8ad92b0f98f61189"><div class="ttname"><a href="../../d3/dee/classxii_phantom_array_property.htm#a973027af8dabcc3c8ad92b0f98f61189">xiiPhantomArrayProperty::SetValue</a></div><div class="ttdeci">virtual void SetValue(void *pInstance, xiiUInt32 uiIndex, const void *pObject) const override</div><div class="ttdoc">Writes the target of pObject to the element at index uiIndex.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:69</div></div>
<div class="ttc" id="aclassxii_phantom_array_property_htm_ad2ad4ecc33c85c1e4648f17dbee45274"><div class="ttname"><a href="../../d3/dee/classxii_phantom_array_property.htm#ad2ad4ecc33c85c1e4648f17dbee45274">xiiPhantomArrayProperty::GetSpecificType</a></div><div class="ttdeci">virtual const xiiRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:149</div></div>
<div class="ttc" id="aclassxii_phantom_array_property_htm_adf2cb0139eecd797373b298f84913b3f"><div class="ttname"><a href="../../d3/dee/classxii_phantom_array_property.htm#adf2cb0139eecd797373b298f84913b3f">xiiPhantomArrayProperty::Clear</a></div><div class="ttdeci">virtual void Clear(void *pInstance) const override</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:72</div></div>
<div class="ttc" id="aclassxii_phantom_constant_property_htm"><div class="ttname"><a href="../../d0/d47/classxii_phantom_constant_property.htm">xiiPhantomConstantProperty</a></div><div class="ttdef"><b>Definition</b> PhantomProperty.h:7</div></div>
<div class="ttc" id="aclassxii_phantom_constant_property_htm_a595e7e12ab930056ca8d9e22829188a1"><div class="ttname"><a href="../../d0/d47/classxii_phantom_constant_property.htm#a595e7e12ab930056ca8d9e22829188a1">xiiPhantomConstantProperty::GetConstant</a></div><div class="ttdeci">virtual xiiVariant GetConstant() const override</div><div class="ttdoc">Returns the constant value as a xiiVariant.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:14</div></div>
<div class="ttc" id="aclassxii_phantom_constant_property_htm_a5d2fc848ab891f12a7dde679faa9ba2c"><div class="ttname"><a href="../../d0/d47/classxii_phantom_constant_property.htm#a5d2fc848ab891f12a7dde679faa9ba2c">xiiPhantomConstantProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer() const override</div><div class="ttdoc">Returns a pointer to the constant data or nullptr. See xiiAbstractMemberProperty::GetPropertyPointer ...</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:33</div></div>
<div class="ttc" id="aclassxii_phantom_constant_property_htm_a5ded82850d4769a947160debc1514fd9"><div class="ttname"><a href="../../d0/d47/classxii_phantom_constant_property.htm#a5ded82850d4769a947160debc1514fd9">xiiPhantomConstantProperty::GetSpecificType</a></div><div class="ttdeci">virtual const xiiRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:28</div></div>
<div class="ttc" id="aclassxii_phantom_function_property_htm"><div class="ttname"><a href="../../d4/dcb/classxii_phantom_function_property.htm">xiiPhantomFunctionProperty</a></div><div class="ttdef"><b>Definition</b> PhantomProperty.h:39</div></div>
<div class="ttc" id="aclassxii_phantom_function_property_htm_a07d5f3b2e48a228e59279145ee6327bf"><div class="ttname"><a href="../../d4/dcb/classxii_phantom_function_property.htm#a07d5f3b2e48a228e59279145ee6327bf">xiiPhantomFunctionProperty::GetReturnType</a></div><div class="ttdeci">virtual const xiiRTTI * GetReturnType() const override</div><div class="ttdoc">Returns the type of the return value.</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:98</div></div>
<div class="ttc" id="aclassxii_phantom_function_property_htm_a4321e2cc872ef53a96a8ff3ea50b60f6"><div class="ttname"><a href="../../d4/dcb/classxii_phantom_function_property.htm#a4321e2cc872ef53a96a8ff3ea50b60f6">xiiPhantomFunctionProperty::GetFunctionType</a></div><div class="ttdeci">virtual xiiFunctionType::Enum GetFunctionType() const override</div><div class="ttdoc">Returns the type of function, see xiiFunctionPropertyType::Enum.</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:93</div></div>
<div class="ttc" id="aclassxii_phantom_function_property_htm_a45e7bfc288ee245bf5ea1ac80dedbc91"><div class="ttname"><a href="../../d4/dcb/classxii_phantom_function_property.htm#a45e7bfc288ee245bf5ea1ac80dedbc91">xiiPhantomFunctionProperty::Execute</a></div><div class="ttdeci">virtual void Execute(void *pInstance, xiiArrayPtr&lt; xiiVariant &gt; values, xiiVariant &amp;ref_returnValue) const override</div><div class="ttdoc">Calls the function. Provide the instance on which the function is supposed to be called.</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:123</div></div>
<div class="ttc" id="aclassxii_phantom_function_property_htm_a4b0a75f44f16e2f1f21d2b1b16eac1f1"><div class="ttname"><a href="../../d4/dcb/classxii_phantom_function_property.htm#a4b0a75f44f16e2f1f21d2b1b16eac1f1">xiiPhantomFunctionProperty::GetArgumentFlags</a></div><div class="ttdeci">virtual xiiBitflags&lt; xiiPropertyFlags &gt; GetArgumentFlags(xiiUInt32 uiParamIndex) const override</div><div class="ttdoc">Returns the property flags of the given argument.</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:118</div></div>
<div class="ttc" id="aclassxii_phantom_function_property_htm_a7bbc09bdc0bdf28d6697acbbd1008405"><div class="ttname"><a href="../../d4/dcb/classxii_phantom_function_property.htm#a7bbc09bdc0bdf28d6697acbbd1008405">xiiPhantomFunctionProperty::GetArgumentType</a></div><div class="ttdeci">virtual const xiiRTTI * GetArgumentType(xiiUInt32 uiParamIndex) const override</div><div class="ttdoc">Returns the type of the given argument.</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:113</div></div>
<div class="ttc" id="aclassxii_phantom_function_property_htm_a8f56d6b31dc7196fbc859b37517b665f"><div class="ttname"><a href="../../d4/dcb/classxii_phantom_function_property.htm#a8f56d6b31dc7196fbc859b37517b665f">xiiPhantomFunctionProperty::GetArgumentCount</a></div><div class="ttdeci">virtual xiiUInt32 GetArgumentCount() const override</div><div class="ttdoc">Returns the number of arguments.</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:108</div></div>
<div class="ttc" id="aclassxii_phantom_function_property_htm_ae3c4780b555fd2701fc5deb3ce43f30a"><div class="ttname"><a href="../../d4/dcb/classxii_phantom_function_property.htm#ae3c4780b555fd2701fc5deb3ce43f30a">xiiPhantomFunctionProperty::GetReturnFlags</a></div><div class="ttdeci">virtual xiiBitflags&lt; xiiPropertyFlags &gt; GetReturnFlags() const override</div><div class="ttdoc">Returns property flags of the return value.</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:103</div></div>
<div class="ttc" id="aclassxii_phantom_map_property_htm"><div class="ttname"><a href="../../da/d2f/classxii_phantom_map_property.htm">xiiPhantomMapProperty</a></div><div class="ttdef"><b>Definition</b> PhantomProperty.h:103</div></div>
<div class="ttc" id="aclassxii_phantom_map_property_htm_a1919fc043908eddea4e0623ce2d70446"><div class="ttname"><a href="../../da/d2f/classxii_phantom_map_property.htm#a1919fc043908eddea4e0623ce2d70446">xiiPhantomMapProperty::Insert</a></div><div class="ttdeci">virtual void Insert(void *pInstance, xiiStringView sKey, const void *pObject) const override</div><div class="ttdoc">Inserts the target of pObject into the set.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:111</div></div>
<div class="ttc" id="aclassxii_phantom_map_property_htm_a2606c8a489a36af2896948df09bb3240"><div class="ttname"><a href="../../da/d2f/classxii_phantom_map_property.htm#a2606c8a489a36af2896948df09bb3240">xiiPhantomMapProperty::GetKeys</a></div><div class="ttdeci">virtual void GetKeys(const void *pInstance, xiiHybridArray&lt; xiiString, 16 &gt; &amp;out_keys) const override</div><div class="ttdoc">Writes the content of the set to out_keys.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:115</div></div>
<div class="ttc" id="aclassxii_phantom_map_property_htm_a418e554b5ec1da79b82e50262882e271"><div class="ttname"><a href="../../da/d2f/classxii_phantom_map_property.htm#a418e554b5ec1da79b82e50262882e271">xiiPhantomMapProperty::Contains</a></div><div class="ttdeci">virtual bool Contains(const void *pInstance, xiiStringView sKey) const override</div><div class="ttdoc">Returns whether the target of pObject is in the set.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:113</div></div>
<div class="ttc" id="aclassxii_phantom_map_property_htm_a53384ff36a274db8c21a9c67ea153f94"><div class="ttname"><a href="../../da/d2f/classxii_phantom_map_property.htm#a53384ff36a274db8c21a9c67ea153f94">xiiPhantomMapProperty::IsEmpty</a></div><div class="ttdeci">virtual bool IsEmpty(const void *pInstance) const override</div><div class="ttdoc">Returns whether the set is empty.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:109</div></div>
<div class="ttc" id="aclassxii_phantom_map_property_htm_a73d11cc4fde8b9063b9bc17406d2c746"><div class="ttname"><a href="../../da/d2f/classxii_phantom_map_property.htm#a73d11cc4fde8b9063b9bc17406d2c746">xiiPhantomMapProperty::Clear</a></div><div class="ttdeci">virtual void Clear(void *pInstance) const override</div><div class="ttdoc">Clears the set.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:110</div></div>
<div class="ttc" id="aclassxii_phantom_map_property_htm_a836284639553adc261a0538f53445207"><div class="ttname"><a href="../../da/d2f/classxii_phantom_map_property.htm#a836284639553adc261a0538f53445207">xiiPhantomMapProperty::GetValue</a></div><div class="ttdeci">virtual bool GetValue(const void *pInstance, xiiStringView sKey, void *pObject) const override</div><div class="ttdoc">Writes element at index uiIndex to the target of pObject.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:114</div></div>
<div class="ttc" id="aclassxii_phantom_map_property_htm_a90d41f3644efe0b878d490d187c10cc7"><div class="ttname"><a href="../../da/d2f/classxii_phantom_map_property.htm#a90d41f3644efe0b878d490d187c10cc7">xiiPhantomMapProperty::GetSpecificType</a></div><div class="ttdeci">virtual const xiiRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:201</div></div>
<div class="ttc" id="aclassxii_phantom_map_property_htm_a92dfb40e7e3fe23a2f3f418193970ae7"><div class="ttname"><a href="../../da/d2f/classxii_phantom_map_property.htm#a92dfb40e7e3fe23a2f3f418193970ae7">xiiPhantomMapProperty::Remove</a></div><div class="ttdeci">virtual void Remove(void *pInstance, xiiStringView sKey) const override</div><div class="ttdoc">Removes the target of pObject from the set.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:112</div></div>
<div class="ttc" id="aclassxii_phantom_member_property_htm"><div class="ttname"><a href="../../db/db0/classxii_phantom_member_property.htm">xiiPhantomMemberProperty</a></div><div class="ttdef"><b>Definition</b> PhantomProperty.h:23</div></div>
<div class="ttc" id="aclassxii_phantom_member_property_htm_a0bf024638f22a133e5251d44d222158f"><div class="ttname"><a href="../../db/db0/classxii_phantom_member_property.htm#a0bf024638f22a133e5251d44d222158f">xiiPhantomMemberProperty::SetValuePtr</a></div><div class="ttdeci">virtual void SetValuePtr(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Sets the value of pObject to the property in pInstance. pObject needs to point to an instance of this...</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:31</div></div>
<div class="ttc" id="aclassxii_phantom_member_property_htm_a17e3e3a7b166df6cabe70ddaa976d900"><div class="ttname"><a href="../../db/db0/classxii_phantom_member_property.htm#a17e3e3a7b166df6cabe70ddaa976d900">xiiPhantomMemberProperty::GetSpecificType</a></div><div class="ttdeci">virtual const xiiRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:61</div></div>
<div class="ttc" id="aclassxii_phantom_member_property_htm_a68266bab8766f70c001a38a8b75492d7"><div class="ttname"><a href="../../db/db0/classxii_phantom_member_property.htm#a68266bab8766f70c001a38a8b75492d7">xiiPhantomMemberProperty::GetValuePtr</a></div><div class="ttdeci">virtual void GetValuePtr(const void *pInstance, void *pObject) const override</div><div class="ttdoc">Writes the value of this property in pInstance to pObject. pObject needs to point to an instance of t...</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:30</div></div>
<div class="ttc" id="aclassxii_phantom_member_property_htm_aa90a888e2b40053c221ec46492589a50"><div class="ttname"><a href="../../db/db0/classxii_phantom_member_property.htm#aa90a888e2b40053c221ec46492589a50">xiiPhantomMemberProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer(const void *pInstance) const override</div><div class="ttdoc">Returns a pointer to the property data or nullptr. If a valid pointer is returned,...</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:29</div></div>
<div class="ttc" id="aclassxii_phantom_set_property_htm"><div class="ttname"><a href="../../da/dae/classxii_phantom_set_property.htm">xiiPhantomSetProperty</a></div><div class="ttdef"><b>Definition</b> PhantomProperty.h:83</div></div>
<div class="ttc" id="aclassxii_phantom_set_property_htm_a0ea075f1ca0f4267123ab4807a198e28"><div class="ttname"><a href="../../da/dae/classxii_phantom_set_property.htm#a0ea075f1ca0f4267123ab4807a198e28">xiiPhantomSetProperty::GetValues</a></div><div class="ttdeci">virtual void GetValues(const void *pInstance, xiiDynamicArray&lt; xiiVariant &gt; &amp;out_keys) const override</div><div class="ttdoc">Writes the content of the set to out_keys.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:94</div></div>
<div class="ttc" id="aclassxii_phantom_set_property_htm_a24abb8253d3f0ceb99dcf1950192336c"><div class="ttname"><a href="../../da/dae/classxii_phantom_set_property.htm#a24abb8253d3f0ceb99dcf1950192336c">xiiPhantomSetProperty::Clear</a></div><div class="ttdeci">virtual void Clear(void *pInstance) const override</div><div class="ttdoc">Clears the set.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:90</div></div>
<div class="ttc" id="aclassxii_phantom_set_property_htm_a29f291b9bb0149b09eaf92dd99700dcb"><div class="ttname"><a href="../../da/dae/classxii_phantom_set_property.htm#a29f291b9bb0149b09eaf92dd99700dcb">xiiPhantomSetProperty::GetSpecificType</a></div><div class="ttdeci">virtual const xiiRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition</b> PhantomProperty.cpp:175</div></div>
<div class="ttc" id="aclassxii_phantom_set_property_htm_a5e7b249ed347b3e1c9f416adf0fe5f1e"><div class="ttname"><a href="../../da/dae/classxii_phantom_set_property.htm#a5e7b249ed347b3e1c9f416adf0fe5f1e">xiiPhantomSetProperty::IsEmpty</a></div><div class="ttdeci">virtual bool IsEmpty(const void *pInstance) const override</div><div class="ttdoc">Returns whether the set is empty.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:89</div></div>
<div class="ttc" id="aclassxii_phantom_set_property_htm_a68b32a0a82cbf847c01c9f863f7dba4d"><div class="ttname"><a href="../../da/dae/classxii_phantom_set_property.htm#a68b32a0a82cbf847c01c9f863f7dba4d">xiiPhantomSetProperty::Insert</a></div><div class="ttdeci">virtual void Insert(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Inserts the target of pObject into the set.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:91</div></div>
<div class="ttc" id="aclassxii_phantom_set_property_htm_ad0d0adaae8ed1556e54463806b9ce9fe"><div class="ttname"><a href="../../da/dae/classxii_phantom_set_property.htm#ad0d0adaae8ed1556e54463806b9ce9fe">xiiPhantomSetProperty::Contains</a></div><div class="ttdeci">virtual bool Contains(const void *pInstance, const void *pObject) const override</div><div class="ttdoc">Returns whether the target of pObject is in the set.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:93</div></div>
<div class="ttc" id="aclassxii_phantom_set_property_htm_ae91a84da0360a0a6a2b87daad29c6e4b"><div class="ttname"><a href="../../da/dae/classxii_phantom_set_property.htm#ae91a84da0360a0a6a2b87daad29c6e4b">xiiPhantomSetProperty::Remove</a></div><div class="ttdeci">virtual void Remove(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Removes the target of pObject from the set.</div><div class="ttdef"><b>Definition</b> PhantomProperty.h:92</div></div>
<div class="ttc" id="aclassxii_r_t_t_i_htm"><div class="ttname"><a href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclassxii_variant_htm"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm">xiiVariant</a></div><div class="ttdoc">xiiVariant is a class that can store different types of variables, which is useful in situations wher...</div><div class="ttdef"><b>Definition</b> Variant.h:44</div></div>
<div class="ttc" id="astructxii_bitflags_htm"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a></div><div class="ttdoc">The xiiBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition</b> Bitflags.h:82</div></div>
<div class="ttc" id="astructxii_enum_htm"><div class="ttname"><a href="../../de/dfd/structxii_enum.htm">xiiEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition</b> Enum.h:37</div></div>
<div class="ttc" id="astructxii_function_argument_descriptor_htm"><div class="ttname"><a href="../../d5/da2/structxii_function_argument_descriptor.htm">xiiFunctionArgumentDescriptor</a></div><div class="ttdef"><b>Definition</b> ReflectedType.h:65</div></div>
<div class="ttc" id="astructxii_function_type_htm_aa1f281549634c67b2db3e16e4a220520"><div class="ttname"><a href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520">xiiFunctionType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:525</div></div>
<div class="ttc" id="astructxii_hybrid_string_htm"><div class="ttname"><a href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt; 32, xiiDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructxii_reflected_function_descriptor_htm"><div class="ttname"><a href="../../df/d54/structxii_reflected_function_descriptor.htm">xiiReflectedFunctionDescriptor</a></div><div class="ttdoc">Stores the description of a reflected function in a serializable form, used by xiiReflectedTypeDescri...</div><div class="ttdef"><b>Definition</b> ReflectedType.h:76</div></div>
<div class="ttc" id="astructxii_reflected_property_descriptor_htm"><div class="ttname"><a href="../../db/d02/structxii_reflected_property_descriptor.htm">xiiReflectedPropertyDescriptor</a></div><div class="ttdoc">Stores the description of a reflected property in a serializable form, used by xiiReflectedTypeDescri...</div><div class="ttdef"><b>Definition</b> ReflectedType.h:43</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition</b> StringView.h:28</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_64f53f8da7bf780a58c32bb848e7873b.htm">Tools</a></li><li class="navelem"><a class="el" href="../../dir_4b5bc41f7c4cbfc8ca80bdea56300f1d.htm">Libs</a></li><li class="navelem"><a class="el" href="../../dir_ba58a103e79106e89914cc52b64849d5.htm">ToolsFoundation</a></li><li class="navelem"><a class="el" href="../../dir_e849cc103eb492684fddc1616a37401b.htm">Reflection</a></li><li class="navelem"><b>PhantomProperty.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:02:14 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
