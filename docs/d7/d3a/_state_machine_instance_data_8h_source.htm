<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/GameEngine/StateMachine/Implementation/StateMachineInstanceData.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d7/d3a/_state_machine_instance_data_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StateMachineInstanceData.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;GameEngine/GameEngineDLL.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Blob.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/SmallArray.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/InstanceDataAllocator.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">namespace </span>xiiStateMachineInternal</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../df/d59/structxii_state_machine_internal_1_1_compound.htm">   12</a></span>&#160;  <span class="keyword">struct </span>XII_GAMEENGINE_DLL <a class="code" href="../../df/d59/structxii_state_machine_internal_1_1_compound.htm">Compound</a></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    XII_ALWAYS_INLINE xiiUInt32 GetBaseOffset()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_InstanceDataOffsets.GetUserData&lt;xiiUInt32&gt;(); }</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    XII_ALWAYS_INLINE xiiUInt32 GetDataSize()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_InstanceDataAllocator.GetTotalDataSize(); }</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray&lt;xiiUInt32, 2&gt;</a> m_InstanceDataOffsets;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="../../d5/d2e/classxii_instance_data_allocator.htm">xiiInstanceDataAllocator</a>    m_InstanceDataAllocator;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="../../d2/d75/structxii_state_machine_internal_1_1_compound_1_1_instance_data.htm">   20</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="../../d2/d75/structxii_state_machine_internal_1_1_compound_1_1_instance_data.htm">InstanceData</a></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    {</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../df/d59/structxii_state_machine_internal_1_1_compound.htm">Compound</a>* m_pOwner = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;      ~<a class="code" href="../../d2/d75/structxii_state_machine_internal_1_1_compound_1_1_instance_data.htm">InstanceData</a>()</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;      {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordflow">if</span> (m_pOwner != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;          m_pOwner-&gt;m_InstanceDataAllocator.<a class="code" href="../../d5/d2e/classxii_instance_data_allocator.htm#a0bed20ac8e6cca410da2972845192ad4">Destruct</a>(GetBlobPtr());</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      XII_ALWAYS_INLINE <a class="code" href="../../d3/d93/classxii_blob_ptr.htm">xiiByteBlobPtr</a> GetBlobPtr()</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="../../d3/d93/classxii_blob_ptr.htm">xiiByteBlobPtr</a>(<a class="code" href="../../d8/d9d/classxii_memory_utils.htm#ada068bb6e197a62d51919c4dcef7518e">xiiMemoryUtils::AddByteOffset</a>(<span class="keyword">reinterpret_cast&lt;</span>xiiUInt8*<span class="keyword">&gt;</span>(<span class="keyword">this</span>), m_pOwner-&gt;GetBaseOffset()), m_pOwner-&gt;GetDataSize());</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    };</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    XII_ALWAYS_INLINE <span class="keywordtype">void</span>* GetSubInstanceData(<a class="code" href="../../d2/d75/structxii_state_machine_internal_1_1_compound_1_1_instance_data.htm">InstanceData</a>* pData, xiiUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordflow">return</span> pData != <span class="keyword">nullptr</span> ? m_InstanceDataAllocator.<a class="code" href="../../d5/d2e/classxii_instance_data_allocator.htm#af1d0139a7196f1af6a0ad2bdc1f82a97">GetInstanceData</a>(pData-&gt;GetBlobPtr(), m_InstanceDataOffsets[uiIndex]) : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    XII_FORCE_INLINE <span class="keywordtype">void</span> Initialize(InstanceData* pData)<span class="keyword"> const</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="keywordflow">if</span> (pData != <span class="keyword">nullptr</span> &amp;&amp; pData-&gt;m_pOwner == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        pData-&gt;m_pOwner = <span class="keyword">this</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        m_InstanceDataAllocator.<a class="code" href="../../d5/d2e/classxii_instance_data_allocator.htm#af9e611320e103487aacb964a6fc14753">Construct</a>(pData-&gt;GetBlobPtr());</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">bool</span> GetInstanceDataDesc(<a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T*&gt;</a> subObjects, <a class="code" href="../../db/ded/structxii_instance_data_desc.htm">xiiInstanceDataDesc</a>&amp; out_desc)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      m_InstanceDataOffsets.<a class="code" href="../../d0/d92/classxii_small_array_base.htm#a40711a7c4c3b53acdedbd14403c4025d">Clear</a>();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      m_InstanceDataAllocator.<a class="code" href="../../d5/d2e/classxii_instance_data_allocator.htm#ae1b780b5df49f69fdea8d10bce94c7d1">ClearDescs</a>();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      xiiUInt32 uiMaxAlignment = 0;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <a class="code" href="../../db/ded/structxii_instance_data_desc.htm">xiiInstanceDataDesc</a> instanceDataDesc;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordflow">for</span> (T* pSubObject : subObjects)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        xiiUInt32 uiOffset = xiiInvalidIndex;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">if</span> (pSubObject-&gt;GetInstanceDataDesc(instanceDataDesc))</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;          uiOffset       = m_InstanceDataAllocator.<a class="code" href="../../d5/d2e/classxii_instance_data_allocator.htm#a408972e822821b1a43e4d4da85f0d08d">AddDesc</a>(instanceDataDesc);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;          uiMaxAlignment = <a class="code" href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max</a>(uiMaxAlignment, instanceDataDesc.m_uiTypeAlignment);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        m_InstanceDataOffsets.PushBack(uiOffset);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordflow">if</span> (uiMaxAlignment &gt; 0)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        out_desc.FillFromType&lt;InstanceData&gt;();</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        out_desc.m_ConstructorFunction = <span class="keyword">nullptr</span>; <span class="comment">// not needed, instance data is constructed on first OnEnter</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        xiiUInt32 uiBaseOffset                         = <a class="code" href="../../d8/d9d/classxii_memory_utils.htm#a49b9826f878346f165be1d4b0f85a819">xiiMemoryUtils::AlignSize</a>(out_desc.m_uiTypeSize, uiMaxAlignment);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        m_InstanceDataOffsets.GetUserData&lt;xiiUInt32&gt;() = uiBaseOffset;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        out_desc.m_uiTypeSize      = uiBaseOffset + m_InstanceDataAllocator.<a class="code" href="../../d5/d2e/classxii_instance_data_allocator.htm#ab846844d178ee584dd27d08fa5e8d076">GetTotalDataSize</a>();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        out_desc.m_uiTypeAlignment = <a class="code" href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max</a>(out_desc.m_uiTypeAlignment, uiMaxAlignment);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  };</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;} <span class="comment">// namespace xiiStateMachineInternal</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_small_array_base_htm_a40711a7c4c3b53acdedbd14403c4025d"><div class="ttname"><a href="../../d0/d92/classxii_small_array_base.htm#a40711a7c4c3b53acdedbd14403c4025d">xiiSmallArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:213</div></div>
<div class="ttc" id="aclassxii_instance_data_allocator_htm_af1d0139a7196f1af6a0ad2bdc1f82a97"><div class="ttname"><a href="../../d5/d2e/classxii_instance_data_allocator.htm#af1d0139a7196f1af6a0ad2bdc1f82a97">xiiInstanceDataAllocator::GetInstanceData</a></div><div class="ttdeci">static XII_ALWAYS_INLINE void * GetInstanceData(const xiiByteBlobPtr &amp;blobPtr, xiiUInt32 uiOffset)</div><div class="ttdoc">Retrieves a void pointer to the instance data within the given blob at the given offset,...</div><div class="ttdef"><b>Definition:</b> InstanceDataAllocator.h:59</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:36</div></div>
<div class="ttc" id="astructxii_state_machine_internal_1_1_compound_1_1_instance_data_htm"><div class="ttname"><a href="../../d2/d75/structxii_state_machine_internal_1_1_compound_1_1_instance_data.htm">xiiStateMachineInternal::Compound::InstanceData</a></div><div class="ttdef"><b>Definition:</b> StateMachineInstanceData.h:20</div></div>
<div class="ttc" id="anamespacexii_math_htm_a4d6f8bf4858245e40a706a3aabd0a59e"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a4d6f8bf4858245e40a706a3aabd0a59e">xiiMath::Max</a></div><div class="ttdeci">constexpr XII_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:60</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_ada068bb6e197a62d51919c4dcef7518e"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#ada068bb6e197a62d51919c4dcef7518e">xiiMemoryUtils::AddByteOffset</a></div><div class="ttdeci">static T * AddByteOffset(T *pPtr, std::ptrdiff_t offset)</div><div class="ttdoc">Returns the address stored in ptr plus the given byte offset iOffset, cast to type T.</div></div>
<div class="ttc" id="aclassxii_instance_data_allocator_htm_a408972e822821b1a43e4d4da85f0d08d"><div class="ttname"><a href="../../d5/d2e/classxii_instance_data_allocator.htm#a408972e822821b1a43e4d4da85f0d08d">xiiInstanceDataAllocator::AddDesc</a></div><div class="ttdeci">xiiUInt32 AddDesc(const xiiInstanceDataDesc &amp;desc)</div><div class="ttdoc">Adds the given desc to internal list of data that needs to be allocated and returns the byte offset.</div><div class="ttdef"><b>Definition:</b> InstanceDataAllocator.cpp:5</div></div>
<div class="ttc" id="astructxii_instance_data_desc_htm"><div class="ttname"><a href="../../db/ded/structxii_instance_data_desc.htm">xiiInstanceDataDesc</a></div><div class="ttdoc">Structure to describe an instance data type.</div><div class="ttdef"><b>Definition:</b> InstanceDataAllocator.h:16</div></div>
<div class="ttc" id="aclassxii_instance_data_allocator_htm_a0bed20ac8e6cca410da2972845192ad4"><div class="ttname"><a href="../../d5/d2e/classxii_instance_data_allocator.htm#a0bed20ac8e6cca410da2972845192ad4">xiiInstanceDataAllocator::Destruct</a></div><div class="ttdeci">void Destruct(xiiByteBlobPtr blobPtr) const</div><div class="ttdoc">Destructs the instance data objects.</div><div class="ttdef"><b>Definition:</b> InstanceDataAllocator.cpp:60</div></div>
<div class="ttc" id="aclassxii_instance_data_allocator_htm_ae1b780b5df49f69fdea8d10bce94c7d1"><div class="ttname"><a href="../../d5/d2e/classxii_instance_data_allocator.htm#ae1b780b5df49f69fdea8d10bce94c7d1">xiiInstanceDataAllocator::ClearDescs</a></div><div class="ttdeci">void ClearDescs()</div><div class="ttdoc">Resets all internal state.</div><div class="ttdef"><b>Definition:</b> InstanceDataAllocator.cpp:15</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a49b9826f878346f165be1d4b0f85a819"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a49b9826f878346f165be1d4b0f85a819">xiiMemoryUtils::AlignSize</a></div><div class="ttdeci">static T AlignSize(T uiSize, T uiAlignment)</div><div class="ttdoc">Aligns the given size uiSize by rounding up to the next multiple of the size.</div></div>
<div class="ttc" id="aclassxii_blob_ptr_htm"><div class="ttname"><a href="../../d3/d93/classxii_blob_ptr.htm">xiiBlobPtr&lt; xiiUInt8 &gt;</a></div></div>
<div class="ttc" id="aclassxii_instance_data_allocator_htm"><div class="ttname"><a href="../../d5/d2e/classxii_instance_data_allocator.htm">xiiInstanceDataAllocator</a></div><div class="ttdoc">Helper class to manager instance data allocation, construction and destruction.</div><div class="ttdef"><b>Definition:</b> InstanceDataAllocator.h:34</div></div>
<div class="ttc" id="aclassxii_small_array_htm"><div class="ttname"><a href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray&lt; xiiUInt32, 2 &gt;</a></div></div>
<div class="ttc" id="astructxii_state_machine_internal_1_1_compound_htm"><div class="ttname"><a href="../../df/d59/structxii_state_machine_internal_1_1_compound.htm">xiiStateMachineInternal::Compound</a></div><div class="ttdoc">Helper class to manage instance data for compound states or transitions.</div><div class="ttdef"><b>Definition:</b> StateMachineInstanceData.h:12</div></div>
<div class="ttc" id="aclassxii_instance_data_allocator_htm_ab846844d178ee584dd27d08fa5e8d076"><div class="ttname"><a href="../../d5/d2e/classxii_instance_data_allocator.htm#ab846844d178ee584dd27d08fa5e8d076">xiiInstanceDataAllocator::GetTotalDataSize</a></div><div class="ttdeci">xiiUInt32 GetTotalDataSize() const</div><div class="ttdoc">The total size in bytes taken up by all instance data objects that were added.</div><div class="ttdef"><b>Definition:</b> InstanceDataAllocator.h:56</div></div>
<div class="ttc" id="aclassxii_instance_data_allocator_htm_af9e611320e103487aacb964a6fc14753"><div class="ttname"><a href="../../d5/d2e/classxii_instance_data_allocator.htm#af9e611320e103487aacb964a6fc14753">xiiInstanceDataAllocator::Construct</a></div><div class="ttdeci">void Construct(xiiByteBlobPtr blobPtr) const</div><div class="ttdoc">Constructs the instance data objects, within the pre-allocated memory block.</div><div class="ttdef"><b>Definition:</b> InstanceDataAllocator.cpp:44</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_16b55c55cbcae272b81765d1a4443891.htm">GameEngine</a></li><li class="navelem"><a class="el" href="../../dir_440d6ac3f2c3e2e9186a45956cfa8a76.htm">StateMachine</a></li><li class="navelem"><a class="el" href="../../dir_4e1a1ba3b7067c046fbbc532d98ba2a8.htm">Implementation</a></li><li class="navelem"><b>StateMachineInstanceData.h</b></li>
    <li class="footer">Generated on Mon Jun 3 2024 16:28:46 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
