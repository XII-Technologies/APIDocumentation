<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/StringUtils_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/d13/_string_utils__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringUtils_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#a8bb1ecbe39d0c2d0a4e58866dbe3ae66">    3</a></span>&#160;XII_ALWAYS_INLINE xiiInt32 <a class="code" href="../../df/d65/classxii_string_utils.htm#a8bb1ecbe39d0c2d0a4e58866dbe3ae66">xiiStringUtils::CompareChars</a>(xiiUInt32 uiCharacter1, xiiUInt32 uiCharacter2)</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;{</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;  <span class="keywordflow">return</span> (xiiInt32)uiCharacter1 - (xiiInt32)uiCharacter2;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;}</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#abf6005858a7226dbde41cb6141a21732">    8</a></span>&#160;<span class="keyword">inline</span> xiiInt32 <a class="code" href="../../df/d65/classxii_string_utils.htm#abf6005858a7226dbde41cb6141a21732">xiiStringUtils::CompareChars_NoCase</a>(xiiUInt32 uiCharacter1, xiiUInt32 uiCharacter2)</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;{</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keywordflow">return</span> (xiiInt32)<a class="code" href="../../df/d65/classxii_string_utils.htm#a63fc9ccdb43cd73fa24259e4d22b5c9d">ToUpperChar</a>(uiCharacter1) - (xiiInt32)<a class="code" href="../../df/d65/classxii_string_utils.htm#a63fc9ccdb43cd73fa24259e4d22b5c9d">ToUpperChar</a>(uiCharacter2);</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;}</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#ac28703e172339dc600a6757c4433e521">   13</a></span>&#160;<span class="keyword">inline</span> xiiInt32 <a class="code" href="../../df/d65/classxii_string_utils.htm#a8bb1ecbe39d0c2d0a4e58866dbe3ae66">xiiStringUtils::CompareChars</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char2)</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a8bb1ecbe39d0c2d0a4e58866dbe3ae66">CompareChars</a>(<a class="code" href="../../de/d05/classxii_unicode_utils.htm#af0fc39bd8ebfb9c1239d7176fbbbd518">xiiUnicodeUtils::ConvertUtf8ToUtf32</a>(szUtf8Char1), <a class="code" href="../../de/d05/classxii_unicode_utils.htm#af0fc39bd8ebfb9c1239d7176fbbbd518">xiiUnicodeUtils::ConvertUtf8ToUtf32</a>(szUtf8Char2));</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#af5e5f43fd7d9f6cd7bb4524647560a3d">   18</a></span>&#160;<span class="keyword">inline</span> xiiInt32 <a class="code" href="../../df/d65/classxii_string_utils.htm#abf6005858a7226dbde41cb6141a21732">xiiStringUtils::CompareChars_NoCase</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char2)</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#abf6005858a7226dbde41cb6141a21732">CompareChars_NoCase</a>(<a class="code" href="../../de/d05/classxii_unicode_utils.htm#af0fc39bd8ebfb9c1239d7176fbbbd518">xiiUnicodeUtils::ConvertUtf8ToUtf32</a>(szUtf8Char1), <a class="code" href="../../de/d05/classxii_unicode_utils.htm#af0fc39bd8ebfb9c1239d7176fbbbd518">xiiUnicodeUtils::ConvertUtf8ToUtf32</a>(szUtf8Char2));</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;}</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;XII_ALWAYS_INLINE constexpr <span class="keywordtype">bool</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#acb10982c595d5619ce53fdd89313202f">xiiStringUtils::IsNullOrEmpty</a>(<span class="keyword">const</span> T* pString)</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordflow">return</span> (pString == <span class="keyword">nullptr</span>) || (pString[0] == <span class="charliteral">&#39;\0&#39;</span>);</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;}</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#acb10982c595d5619ce53fdd89313202f">xiiStringUtils::IsNullOrEmpty</a>(<span class="keyword">const</span> T* pString, <span class="keyword">const</span> T* pStringEnd)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordflow">return</span> (pString == <span class="keyword">nullptr</span>) || (pString[0] == <span class="charliteral">&#39;\0&#39;</span>) || pString == pStringEnd;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a98e19f956607e291a7972109ed9e577f">xiiStringUtils::UpdateStringEnd</a>(<span class="keyword">const</span> T* pStringStart, <span class="keyword">const</span> T*&amp; ref_pStringEnd)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordflow">if</span> (ref_pStringEnd != xiiUnicodeUtils::GetMaxStringEnd&lt;T&gt;())</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  ref_pStringEnd = pStringStart + <a class="code" href="../../df/d65/classxii_string_utils.htm#af9de18eab321e420a8c5e42fbbe4703d">GetStringElementCount</a>(pStringStart, xiiUnicodeUtils::GetMaxStringEnd&lt;T&gt;());</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#af9de18eab321e420a8c5e42fbbe4703d">   45</a></span>&#160;constexpr xiiUInt32 <a class="code" href="../../df/d65/classxii_string_utils.htm#af9de18eab321e420a8c5e42fbbe4703d">xiiStringUtils::GetStringElementCount</a>(<span class="keyword">const</span> T* pString)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../df/d65/classxii_string_utils.htm#acb10982c595d5619ce53fdd89313202f">IsNullOrEmpty</a>(pString))</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  xiiUInt32 uiCount = 0;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordflow">while</span> ((*pString != <span class="charliteral">&#39;\0&#39;</span>))</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    ++pString;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    ++uiCount;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">return</span> uiCount;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#a66dfed366a3dea54e5244aebbb086d77">   61</a></span>&#160;xiiUInt32 <a class="code" href="../../df/d65/classxii_string_utils.htm#af9de18eab321e420a8c5e42fbbe4703d">xiiStringUtils::GetStringElementCount</a>(<span class="keyword">const</span> T* pString, <span class="keyword">const</span> T* pStringEnd)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../df/d65/classxii_string_utils.htm#acb10982c595d5619ce53fdd89313202f">IsNullOrEmpty</a>(pString))</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordflow">if</span> (pStringEnd != xiiUnicodeUtils::GetMaxStringEnd&lt;T&gt;())</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> (xiiUInt32)(pStringEnd - pString);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  xiiUInt32 uiCount = 0;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordflow">while</span> ((*pString != <span class="charliteral">&#39;\0&#39;</span>) &amp;&amp; (pString &lt; pStringEnd))</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    ++pString;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    ++uiCount;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordflow">return</span> uiCount;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#a660d4fb3b9d622789dc720402d13eb55">   79</a></span>&#160;<span class="keyword">inline</span> xiiUInt32 <a class="code" href="../../df/d65/classxii_string_utils.htm#a660d4fb3b9d622789dc720402d13eb55">xiiStringUtils::GetCharacterCount</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../df/d65/classxii_string_utils.htm#acb10982c595d5619ce53fdd89313202f">IsNullOrEmpty</a>(szUtf8))</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  xiiUInt32 uiCharacters = 0;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordflow">while</span> ((*szUtf8 != <span class="charliteral">&#39;\0&#39;</span>) &amp;&amp; (szUtf8 &lt; pStringEnd))</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// skip all the Utf8 continuation bytes</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../de/d05/classxii_unicode_utils.htm#a0d197f1be47422c59038411aab8460a7">xiiUnicodeUtils::IsUtf8ContinuationByte</a>(*szUtf8))</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      ++uiCharacters;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    ++szUtf8;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordflow">return</span> uiCharacters;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#ae40dee43f8cded5ed4ec6fb0dfec9eb1">   98</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#ae40dee43f8cded5ed4ec6fb0dfec9eb1">xiiStringUtils::GetCharacterAndElementCount</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8, xiiUInt32&amp; ref_uiCharacterCount, xiiUInt32&amp; ref_uiElementCount, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  ref_uiCharacterCount = 0;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  ref_uiElementCount   = 0;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../df/d65/classxii_string_utils.htm#acb10982c595d5619ce53fdd89313202f">IsNullOrEmpty</a>(szUtf8))</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordflow">while</span> (szUtf8 &lt; pStringEnd)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">char</span> uiByte = *szUtf8;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">if</span> (uiByte == <span class="charliteral">&#39;\0&#39;</span>)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment">// skip all the Utf8 continuation bytes</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../de/d05/classxii_unicode_utils.htm#a0d197f1be47422c59038411aab8460a7">xiiUnicodeUtils::IsUtf8ContinuationByte</a>(uiByte))</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      ++ref_uiCharacterCount;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    ++szUtf8;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    ++ref_uiElementCount;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#a39bb50553ad3fbca2c342abbca08fee5">  123</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a39bb50553ad3fbca2c342abbca08fee5">xiiStringUtils::IsEqual</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;{</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#ac7f20a820fd23caf6e017547438cc44d">xiiStringUtils::Compare</a>(pString1, pString2, pString1End, pString2End) == 0;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#a09ca4eeaceb90374a7e6af19b56eec25">  128</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a09ca4eeaceb90374a7e6af19b56eec25">xiiStringUtils::IsEqualN</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, xiiUInt32 uiCharsToCompare, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#aea128505cffde358c09361a71b9f8cb7">xiiStringUtils::CompareN</a>(pString1, pString2, uiCharsToCompare, pString1End, pString2End) == 0;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#a1dc8270bac3a9e25cc33ddbe2e54befd">  133</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a1dc8270bac3a9e25cc33ddbe2e54befd">xiiStringUtils::IsEqual_NoCase</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a5304362cc805b0ae9cc78b00e056521f">xiiStringUtils::Compare_NoCase</a>(pString1, pString2, pString1End, pString2End) == 0;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#a53cc8803004fb5a140dc5ff761a450ee">  138</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a53cc8803004fb5a140dc5ff761a450ee">xiiStringUtils::IsEqualN_NoCase</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, xiiUInt32 uiCharsToCompare, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a80aa4948244d9ec7aec070ebd2ff5dd4">xiiStringUtils::CompareN_NoCase</a>(pString1, pString2, uiCharsToCompare, pString1End, pString2End) == 0;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#a0b992efe61baf95db2aa651f6dbcd32d">  143</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a0b992efe61baf95db2aa651f6dbcd32d">xiiStringUtils::IsDecimalDigit</a>(xiiUInt32 uiChar)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;{</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordflow">return</span> (uiChar &gt;= <span class="charliteral">&#39;0&#39;</span> &amp;&amp; uiChar &lt;= <span class="charliteral">&#39;9&#39;</span>);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="../../df/d65/classxii_string_utils.htm#abd4b68cdbb16d9dd943f8703cfd94337">  148</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#abd4b68cdbb16d9dd943f8703cfd94337">xiiStringUtils::IsHexDigit</a>(xiiUInt32 uiChar)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../df/d65/classxii_string_utils.htm#a0b992efe61baf95db2aa651f6dbcd32d">IsDecimalDigit</a>(uiChar) || (uiChar &gt;= <span class="charliteral">&#39;A&#39;</span> &amp;&amp; uiChar &lt;= <span class="charliteral">&#39;F&#39;</span>) || (uiChar &gt;= <span class="charliteral">&#39;a&#39;</span> &amp;&amp; uiChar &lt;= <span class="charliteral">&#39;f&#39;</span>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_unicode_utils_htm_a0d197f1be47422c59038411aab8460a7"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#a0d197f1be47422c59038411aab8460a7">xiiUnicodeUtils::IsUtf8ContinuationByte</a></div><div class="ttdeci">static bool IsUtf8ContinuationByte(char iByte)</div><div class="ttdoc">Checks whether the given byte is a byte in a UTF-8 multi-byte sequence.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:17</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_af9de18eab321e420a8c5e42fbbe4703d"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#af9de18eab321e420a8c5e42fbbe4703d">xiiStringUtils::GetStringElementCount</a></div><div class="ttdeci">static constexpr xiiUInt32 GetStringElementCount(const T *pString)</div><div class="ttdoc">Returns the number of elements of type T that the string contains, until it hits an element that is z...</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:45</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a09ca4eeaceb90374a7e6af19b56eec25"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a09ca4eeaceb90374a7e6af19b56eec25">xiiStringUtils::IsEqualN</a></div><div class="ttdeci">static bool IsEqualN(const char *pString1, const char *pString2, xiiUInt32 uiCharsToCompare, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise) up to the n-th character.</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:128</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a98e19f956607e291a7972109ed9e577f"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a98e19f956607e291a7972109ed9e577f">xiiStringUtils::UpdateStringEnd</a></div><div class="ttdeci">static void UpdateStringEnd(const T *pStringStart, const T *&amp;ref_pStringEnd)</div><div class="ttdoc">Recomputes the end pointer of a string (szStringEnd), if that is currently set to xiiMaxStringEnd....</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a39bb50553ad3fbca2c342abbca08fee5"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a39bb50553ad3fbca2c342abbca08fee5">xiiStringUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise).</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:123</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_ae40dee43f8cded5ed4ec6fb0dfec9eb1"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#ae40dee43f8cded5ed4ec6fb0dfec9eb1">xiiStringUtils::GetCharacterAndElementCount</a></div><div class="ttdeci">static void GetCharacterAndElementCount(const char *szUtf8, xiiUInt32 &amp;ref_uiCharacterCount, xiiUInt32 &amp;ref_uiElementCount, const char *pStringEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns both the number of characters and the number of bytes in a Utf8 string, until it hits zero or...</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:98</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a80aa4948244d9ec7aec070ebd2ff5dd4"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a80aa4948244d9ec7aec070ebd2ff5dd4">xiiStringUtils::CompareN_NoCase</a></div><div class="ttdeci">static xiiInt32 CompareN_NoCase(const char *pString1, const char *pString2, xiiUInt32 uiCharsToCompare, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares the first uiCharsToCompare characters of the two strings for equality, case-insensitive.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:369</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a1dc8270bac3a9e25cc33ddbe2e54befd"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a1dc8270bac3a9e25cc33ddbe2e54befd">xiiStringUtils::IsEqual_NoCase</a></div><div class="ttdeci">static bool IsEqual_NoCase(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (case-insensitive).</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:133</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_ac7f20a820fd23caf6e017547438cc44d"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#ac7f20a820fd23caf6e017547438cc44d">xiiStringUtils::Compare</a></div><div class="ttdeci">static xiiInt32 Compare(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares two strings for equality.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:263</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a53cc8803004fb5a140dc5ff761a450ee"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a53cc8803004fb5a140dc5ff761a450ee">xiiStringUtils::IsEqualN_NoCase</a></div><div class="ttdeci">static bool IsEqualN_NoCase(const char *pString1, const char *pString2, xiiUInt32 uiCharsToCompare, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (case-insensitive) up to the n-th character.</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:138</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_abd4b68cdbb16d9dd943f8703cfd94337"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#abd4b68cdbb16d9dd943f8703cfd94337">xiiStringUtils::IsHexDigit</a></div><div class="ttdeci">static bool IsHexDigit(xiiUInt32 uiChar)</div><div class="ttdoc">A hexadecimal digit from 0..F.</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:148</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a660d4fb3b9d622789dc720402d13eb55"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a660d4fb3b9d622789dc720402d13eb55">xiiStringUtils::GetCharacterCount</a></div><div class="ttdeci">static xiiUInt32 GetCharacterCount(const char *szUtf8, const char *pStringEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns the number of characters (not Bytes!) in a Utf8 string (excluding the zero terminator),...</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:79</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a8bb1ecbe39d0c2d0a4e58866dbe3ae66"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a8bb1ecbe39d0c2d0a4e58866dbe3ae66">xiiStringUtils::CompareChars</a></div><div class="ttdeci">static xiiInt32 CompareChars(xiiUInt32 uiCharacter1, xiiUInt32 uiCharacter2)</div><div class="ttdoc">Compares the two code points for equality.</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:3</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a5304362cc805b0ae9cc78b00e056521f"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a5304362cc805b0ae9cc78b00e056521f">xiiStringUtils::Compare_NoCase</a></div><div class="ttdeci">static xiiInt32 Compare_NoCase(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares two strings for equality, case-insensitive.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:335</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a63fc9ccdb43cd73fa24259e4d22b5c9d"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a63fc9ccdb43cd73fa24259e4d22b5c9d">xiiStringUtils::ToUpperChar</a></div><div class="ttdeci">static xiiUInt32 ToUpperChar(xiiUInt32 uiChar)</div><div class="ttdoc">Returns the upper case code point for uiChar.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:55</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_acb10982c595d5619ce53fdd89313202f"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#acb10982c595d5619ce53fdd89313202f">xiiStringUtils::IsNullOrEmpty</a></div><div class="ttdeci">static constexpr bool IsNullOrEmpty(const T *pString)</div><div class="ttdoc">Returns true, if the given string is a nullptr pointer or a string that immediately terminates with a...</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_abf6005858a7226dbde41cb6141a21732"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#abf6005858a7226dbde41cb6141a21732">xiiStringUtils::CompareChars_NoCase</a></div><div class="ttdeci">static xiiInt32 CompareChars_NoCase(xiiUInt32 uiCharacter1, xiiUInt32 uiCharacter2)</div><div class="ttdoc">Compares the two code points for equality, case-insensitive.</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:8</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a0b992efe61baf95db2aa651f6dbcd32d"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a0b992efe61baf95db2aa651f6dbcd32d">xiiStringUtils::IsDecimalDigit</a></div><div class="ttdeci">static bool IsDecimalDigit(xiiUInt32 uiChar)</div><div class="ttdoc">A decimal digit from 0..9.</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:143</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_aea128505cffde358c09361a71b9f8cb7"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#aea128505cffde358c09361a71b9f8cb7">xiiStringUtils::CompareN</a></div><div class="ttdeci">static xiiInt32 CompareN(const char *pString1, const char *pString2, xiiUInt32 uiCharsToCompare, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares the first uiCharsToCompare characters of the two strings for equality.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:292</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_af0fc39bd8ebfb9c1239d7176fbbbd518"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#af0fc39bd8ebfb9c1239d7176fbbbd518">xiiUnicodeUtils::ConvertUtf8ToUtf32</a></div><div class="ttdeci">static xiiUInt32 ConvertUtf8ToUtf32(const char *pFirstChar)</div><div class="ttdoc">Converts the UTF-8 character that starts at pFirstChar into a UTF-32 character.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:124</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b0d9e1007714c8956662e529025ab552.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_92c52eb4981d7c3a6633b9c574fc9e8f.htm">Implementation</a></li><li class="navelem"><b>StringUtils_inl.h</b></li>
    <li class="footer">Generated on Sun Oct 8 2023 23:33:23 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
