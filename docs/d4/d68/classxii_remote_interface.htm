<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiRemoteInterface Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/d68/classxii_remote_interface.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d1/d58/classxii_remote_interface-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiRemoteInterface Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3b1d0d380592667d637cd41a82da76ca"><td class="memItemLeft" align="right" valign="top"><a id="a3b1d0d380592667d637cd41a82da76ca"></a>
<a class="el" href="../../dd/d52/classxii_mutex.htm">xiiMutex</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a3b1d0d380592667d637cd41a82da76ca">GetMutex</a> () const</td></tr>
<tr class="memdesc:a3b1d0d380592667d637cd41a82da76ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exposes the mutex that is internally used to secure multi-threaded access. <br /></td></tr>
<tr class="separator:a3b1d0d380592667d637cd41a82da76ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Connection</div></td></tr>
<tr class="memitem:aec8176155be9f5e084abc02ba627e164"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#aec8176155be9f5e084abc02ba627e164">StartServer</a> (xiiUInt32 uiConnectionToken, const char *szAddress, bool bStartUpdateThread=true)</td></tr>
<tr class="memdesc:aec8176155be9f5e084abc02ba627e164"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts the remote interface as a server.  <a href="../../d4/d68/classxii_remote_interface.htm#aec8176155be9f5e084abc02ba627e164">More...</a><br /></td></tr>
<tr class="separator:aec8176155be9f5e084abc02ba627e164"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52832ff90fed6e7cc546ff575f3b217b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a52832ff90fed6e7cc546ff575f3b217b">ConnectToServer</a> (xiiUInt32 uiConnectionToken, const char *szAddress, bool bStartUpdateThread=true)</td></tr>
<tr class="memdesc:a52832ff90fed6e7cc546ff575f3b217b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts the network interface as a client. Tries to connect to the given address.  <a href="../../d4/d68/classxii_remote_interface.htm#a52832ff90fed6e7cc546ff575f3b217b">More...</a><br /></td></tr>
<tr class="separator:a52832ff90fed6e7cc546ff575f3b217b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08022869c6c09b7f8034e4f09df1f5d8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a08022869c6c09b7f8034e4f09df1f5d8">WaitForConnectionToServer</a> (<a class="el" href="../../d7/dc1/structxii_time.htm">xiiTime</a> timeout=<a class="el" href="../../d7/dc1/structxii_time.htm#a0d30e51875577941d5f0e312d7041c76">xiiTime::Seconds</a>(10))</td></tr>
<tr class="memdesc:a08022869c6c09b7f8034e4f09df1f5d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can only be called after <a class="el" href="../../d4/d68/classxii_remote_interface.htm#a52832ff90fed6e7cc546ff575f3b217b" title="Starts the network interface as a client. Tries to connect to the given address.">ConnectToServer()</a>. Updates the network in a loop until a connection is established, or the time has run out.  <a href="../../d4/d68/classxii_remote_interface.htm#a08022869c6c09b7f8034e4f09df1f5d8">More...</a><br /></td></tr>
<tr class="separator:a08022869c6c09b7f8034e4f09df1f5d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af820df5a0e4c1b18deb949f6523c59f8"><td class="memItemLeft" align="right" valign="top"><a id="af820df5a0e4c1b18deb949f6523c59f8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#af820df5a0e4c1b18deb949f6523c59f8">ShutdownConnection</a> ()</td></tr>
<tr class="memdesc:af820df5a0e4c1b18deb949f6523c59f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Closes the connection in an orderly fashion. <br /></td></tr>
<tr class="separator:af820df5a0e4c1b18deb949f6523c59f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2252f58b186133689d9b49b4a24247d3"><td class="memItemLeft" align="right" valign="top"><a id="a2252f58b186133689d9b49b4a24247d3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a2252f58b186133689d9b49b4a24247d3">IsConnectedToServer</a> () const</td></tr>
<tr class="memdesc:a2252f58b186133689d9b49b4a24247d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the client is connected to a server. <br /></td></tr>
<tr class="separator:a2252f58b186133689d9b49b4a24247d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0231138a312ab46ede598a3bae38b13"><td class="memItemLeft" align="right" valign="top"><a id="ac0231138a312ab46ede598a3bae38b13"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#ac0231138a312ab46ede598a3bae38b13">IsConnectedToClients</a> () const</td></tr>
<tr class="memdesc:ac0231138a312ab46ede598a3bae38b13"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the server is connected to any client. <br /></td></tr>
<tr class="separator:ac0231138a312ab46ede598a3bae38b13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6911ea8746abf5d1395e4f012c78ed26"><td class="memItemLeft" align="right" valign="top"><a id="a6911ea8746abf5d1395e4f012c78ed26"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a6911ea8746abf5d1395e4f012c78ed26">IsConnectedToOther</a> () const</td></tr>
<tr class="memdesc:a6911ea8746abf5d1395e4f012c78ed26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the client or server is connected its counterpart. <br /></td></tr>
<tr class="separator:a6911ea8746abf5d1395e4f012c78ed26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e740bb490b8fcad2b1c4cb4b9ecaccf"><td class="memItemLeft" align="right" valign="top"><a id="a8e740bb490b8fcad2b1c4cb4b9ecaccf"></a>
xiiRemoteMode&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a8e740bb490b8fcad2b1c4cb4b9ecaccf">GetRemoteMode</a> () const</td></tr>
<tr class="memdesc:a8e740bb490b8fcad2b1c4cb4b9ecaccf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the remote interface is inactive, a client or a server. <br /></td></tr>
<tr class="separator:a8e740bb490b8fcad2b1c4cb4b9ecaccf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fb0da7092c265d297eea2c3b73fa9f1"><td class="memItemLeft" align="right" valign="top"><a id="a2fb0da7092c265d297eea2c3b73fa9f1"></a>
const <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a2fb0da7092c265d297eea2c3b73fa9f1">GetServerAddress</a> () const</td></tr>
<tr class="memdesc:a2fb0da7092c265d297eea2c3b73fa9f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The address through which the connection was started. <br /></td></tr>
<tr class="separator:a2fb0da7092c265d297eea2c3b73fa9f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90f5e0b469cd466558bbbb8639924313"><td class="memItemLeft" align="right" valign="top"><a id="a90f5e0b469cd466558bbbb8639924313"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a90f5e0b469cd466558bbbb8639924313">GetApplicationID</a> () const</td></tr>
<tr class="memdesc:a90f5e0b469cd466558bbbb8639924313"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the own (random) application ID used to identify this instance. <br /></td></tr>
<tr class="separator:a90f5e0b469cd466558bbbb8639924313"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ea63c69abfc7ab50cb67701530c86f9"><td class="memItemLeft" align="right" valign="top"><a id="a9ea63c69abfc7ab50cb67701530c86f9"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a9ea63c69abfc7ab50cb67701530c86f9">GetConnectionToken</a> () const</td></tr>
<tr class="memdesc:a9ea63c69abfc7ab50cb67701530c86f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the connection token used to identify compatible servers/clients. <br /></td></tr>
<tr class="separator:a9ea63c69abfc7ab50cb67701530c86f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Server Information</div></td></tr>
<tr class="memitem:a39dc214c1728e7e3577714f1a71f8319"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a39dc214c1728e7e3577714f1a71f8319">GetServerInfoIP</a> () const</td></tr>
<tr class="memdesc:a39dc214c1728e7e3577714f1a71f8319"><td class="mdescLeft">&#160;</td><td class="mdescRight">For the client to display the name of the server.  <a href="../../d4/d68/classxii_remote_interface.htm#a39dc214c1728e7e3577714f1a71f8319">More...</a><br /></td></tr>
<tr class="separator:a39dc214c1728e7e3577714f1a71f8319"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aa5dd006d9c3da0dc574e1703ae53e1"><td class="memItemLeft" align="right" valign="top"><a id="a2aa5dd006d9c3da0dc574e1703ae53e1"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a2aa5dd006d9c3da0dc574e1703ae53e1">GetServerID</a> () const</td></tr>
<tr class="memdesc:a2aa5dd006d9c3da0dc574e1703ae53e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Some random identifier, that allows to determine after a reconnect, whether the connected instance is still the same server. <br /></td></tr>
<tr class="separator:a2aa5dd006d9c3da0dc574e1703ae53e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64680051faaf7e353da19267df770dc2"><td class="memItemLeft" align="right" valign="top"><a id="a64680051faaf7e353da19267df770dc2"></a>
<a class="el" href="../../d7/dc1/structxii_time.htm">xiiTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a64680051faaf7e353da19267df770dc2">GetPingToServer</a> () const</td></tr>
<tr class="memdesc:a64680051faaf7e353da19267df770dc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current ping to the server. <br /></td></tr>
<tr class="separator:a64680051faaf7e353da19267df770dc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Updating the Remote Interface</div></td></tr>
<tr class="memitem:afff14c1a7368f76b1922f51621109c6d"><td class="memItemLeft" align="right" valign="top"><a id="afff14c1a7368f76b1922f51621109c6d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#afff14c1a7368f76b1922f51621109c6d">UpdateRemoteInterface</a> ()</td></tr>
<tr class="memdesc:afff14c1a7368f76b1922f51621109c6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">If no update thread was spawned, this should be called to process messages. <br /></td></tr>
<tr class="separator:afff14c1a7368f76b1922f51621109c6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b75c746a3cfc958b77997646c1a7d49"><td class="memItemLeft" align="right" valign="top"><a id="a4b75c746a3cfc958b77997646c1a7d49"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a4b75c746a3cfc958b77997646c1a7d49">UpdatePingToServer</a> ()</td></tr>
<tr class="memdesc:a4b75c746a3cfc958b77997646c1a7d49"><td class="mdescLeft">&#160;</td><td class="mdescRight">If no update thread was spawned, this should be called by clients to determine the ping. <br /></td></tr>
<tr class="separator:a4b75c746a3cfc958b77997646c1a7d49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Sending Messages</div></td></tr>
<tr class="memitem:ab2b3353904e422eb93f234ee120a2e43"><td class="memItemLeft" align="right" valign="top"><a id="ab2b3353904e422eb93f234ee120a2e43"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#ab2b3353904e422eb93f234ee120a2e43">Send</a> (xiiUInt32 uiSystemID, xiiUInt32 uiMsgID)</td></tr>
<tr class="memdesc:ab2b3353904e422eb93f234ee120a2e43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a reliable message without any data. If it is a server, the message is broadcast to all clients. If it is a client, the message is only sent to the server. <br /></td></tr>
<tr class="separator:ab2b3353904e422eb93f234ee120a2e43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a927764dfb696e4ff51dbe155edcc45fa"><td class="memItemLeft" align="right" valign="top"><a id="a927764dfb696e4ff51dbe155edcc45fa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a927764dfb696e4ff51dbe155edcc45fa">Send</a> (xiiRemoteTransmitMode tm, xiiUInt32 uiSystemID, xiiUInt32 uiMsgID, const <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const xiiUInt8 &gt; &amp;data)</td></tr>
<tr class="memdesc:a927764dfb696e4ff51dbe155edcc45fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message, appends the given array of data If it is a server, the message is broadcast to all clients. If it is a client, the message is only sent to the server. <br /></td></tr>
<tr class="separator:a927764dfb696e4ff51dbe155edcc45fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6953e547be1b17907d09f2b576991f92"><td class="memItemLeft" align="right" valign="top"><a id="a6953e547be1b17907d09f2b576991f92"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Send</b> (xiiRemoteTransmitMode tm, xiiUInt32 uiSystemID, xiiUInt32 uiMsgID, const <a class="el" href="../../d5/d12/classxii_contiguous_memory_stream_storage.htm">xiiContiguousMemoryStreamStorage</a> &amp;data)</td></tr>
<tr class="separator:a6953e547be1b17907d09f2b576991f92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cec9e3ab299e56bf2a0d3dd92bcd153"><td class="memItemLeft" align="right" valign="top"><a id="a9cec9e3ab299e56bf2a0d3dd92bcd153"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a9cec9e3ab299e56bf2a0d3dd92bcd153">Send</a> (xiiRemoteTransmitMode tm, xiiUInt32 uiSystemID, xiiUInt32 uiMsgID, const void *pData=nullptr, xiiUInt32 uiDataBytes=0)</td></tr>
<tr class="memdesc:a9cec9e3ab299e56bf2a0d3dd92bcd153"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message, appends the given array of data If it is a server, the message is broadcast to all clients. If it is a client, the message is only sent to the server. <br /></td></tr>
<tr class="separator:a9cec9e3ab299e56bf2a0d3dd92bcd153"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad98af280527a3c5580d678a3eb277516"><td class="memItemLeft" align="right" valign="top"><a id="ad98af280527a3c5580d678a3eb277516"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#ad98af280527a3c5580d678a3eb277516">Send</a> (xiiRemoteTransmitMode tm, <a class="el" href="../../d4/d9b/classxii_remote_message.htm">xiiRemoteMessage</a> &amp;msg)</td></tr>
<tr class="memdesc:ad98af280527a3c5580d678a3eb277516"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends an <a class="el" href="../../d4/d9b/classxii_remote_message.htm" title="Encapsulates all the data that is transmitted when sending or receiving a message with xiiRemoteInter...">xiiRemoteMessage</a> If it is a server, the message is broadcast to all clients. If it is a client, the message is only sent to the server. <br /></td></tr>
<tr class="separator:ad98af280527a3c5580d678a3eb277516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Message Handling</div></td></tr>
<tr class="memitem:a7b7bffe429f197a5e07c8c5084b78461"><td class="memItemLeft" align="right" valign="top"><a id="a7b7bffe429f197a5e07c8c5084b78461"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a7b7bffe429f197a5e07c8c5084b78461">SetMessageHandler</a> (xiiUInt32 uiSystemID, <a class="el" href="../../dc/d84/structxii_delegate.htm">xiiRemoteMessageHandler</a> messageHandler)</td></tr>
<tr class="memdesc:a7b7bffe429f197a5e07c8c5084b78461"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a message handler that is executed for all incoming messages for the given system. <br /></td></tr>
<tr class="separator:a7b7bffe429f197a5e07c8c5084b78461"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f2cd4ecff644a4a66f09450d4ed00ec"><td class="memItemLeft" align="right" valign="top"><a id="a5f2cd4ecff644a4a66f09450d4ed00ec"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a5f2cd4ecff644a4a66f09450d4ed00ec">ExecuteMessageHandlers</a> (xiiUInt32 uiSystem)</td></tr>
<tr class="memdesc:a5f2cd4ecff644a4a66f09450d4ed00ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes the message handler for all messages that have arrived for the given system. <br /></td></tr>
<tr class="separator:a5f2cd4ecff644a4a66f09450d4ed00ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad88768817bac348d9d1cc4b56e016225"><td class="memItemLeft" align="right" valign="top"><a id="ad88768817bac348d9d1cc4b56e016225"></a>
xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#ad88768817bac348d9d1cc4b56e016225">ExecuteAllMessageHandlers</a> ()</td></tr>
<tr class="memdesc:ad88768817bac348d9d1cc4b56e016225"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes all message handlers for all received messages. <br /></td></tr>
<tr class="separator:ad88768817bac348d9d1cc4b56e016225"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Events</div></td></tr>
<tr class="memitem:a7d34b071626c9f1ec5242e23ab2fff0b"><td class="memItemLeft" align="right" valign="top"><a id="a7d34b071626c9f1ec5242e23ab2fff0b"></a>
<a class="el" href="../../dc/d22/classxii_event.htm">xiiEvent</a>&lt; const <a class="el" href="../../d3/da3/structxii_remote_event.htm">xiiRemoteEvent</a> &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a7d34b071626c9f1ec5242e23ab2fff0b">m_RemoteEvents</a></td></tr>
<tr class="memdesc:a7d34b071626c9f1ec5242e23ab2fff0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Broadcasts events about connections. <br /></td></tr>
<tr class="separator:a7d34b071626c9f1ec5242e23ab2fff0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Implementation Details</h2></td></tr>
<tr class="memitem:af0013bab8eb60bd65734a7092699c598"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#af0013bab8eb60bd65734a7092699c598">m_sServerInfoIP</a></td></tr>
<tr class="memdesc:af0013bab8eb60bd65734a7092699c598"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes should update this when the information is available.  <a href="../../d4/d68/classxii_remote_interface.htm#af0013bab8eb60bd65734a7092699c598">More...</a><br /></td></tr>
<tr class="separator:af0013bab8eb60bd65734a7092699c598"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4eedb15b18fe46b64057208bfa6846c"><td class="memItemLeft" align="right" valign="top"><a id="af4eedb15b18fe46b64057208bfa6846c"></a>
virtual <a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#af4eedb15b18fe46b64057208bfa6846c">InternalCreateConnection</a> (xiiRemoteMode mode, const char *szServerAddress)=0</td></tr>
<tr class="memdesc:af4eedb15b18fe46b64057208bfa6846c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to start a network connection. <br /></td></tr>
<tr class="separator:af4eedb15b18fe46b64057208bfa6846c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a573022cb9a1ab0936eea51a4a8556c32"><td class="memItemLeft" align="right" valign="top"><a id="a573022cb9a1ab0936eea51a4a8556c32"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a573022cb9a1ab0936eea51a4a8556c32">InternalShutdownConnection</a> ()=0</td></tr>
<tr class="memdesc:a573022cb9a1ab0936eea51a4a8556c32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to shutdown a network connection. <br /></td></tr>
<tr class="separator:a573022cb9a1ab0936eea51a4a8556c32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4054ca3a5a2e0015e97a33b274073918"><td class="memItemLeft" align="right" valign="top"><a id="a4054ca3a5a2e0015e97a33b274073918"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a4054ca3a5a2e0015e97a33b274073918">InternalUpdateRemoteInterface</a> ()=0</td></tr>
<tr class="memdesc:a4054ca3a5a2e0015e97a33b274073918"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to update. <br /></td></tr>
<tr class="separator:a4054ca3a5a2e0015e97a33b274073918"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a075ffc0852d5a41f1298e0b974d9c415"><td class="memItemLeft" align="right" valign="top"><a id="a075ffc0852d5a41f1298e0b974d9c415"></a>
virtual <a class="el" href="../../d7/dc1/structxii_time.htm">xiiTime</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a075ffc0852d5a41f1298e0b974d9c415">InternalGetPingToServer</a> ()=0</td></tr>
<tr class="memdesc:a075ffc0852d5a41f1298e0b974d9c415"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to get the ping to the server (client mode only) <br /></td></tr>
<tr class="separator:a075ffc0852d5a41f1298e0b974d9c415"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3f061cc921ecdfae47f195ad2203b84"><td class="memItemLeft" align="right" valign="top"><a id="ab3f061cc921ecdfae47f195ad2203b84"></a>
virtual <a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#ab3f061cc921ecdfae47f195ad2203b84">InternalTransmit</a> (xiiRemoteTransmitMode tm, const <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const xiiUInt8 &gt; &amp;data)=0</td></tr>
<tr class="memdesc:ab3f061cc921ecdfae47f195ad2203b84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to deliver messages to the server or client. <br /></td></tr>
<tr class="separator:ab3f061cc921ecdfae47f195ad2203b84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a117eb01bf944343bc7b25a3a6a6e52e5"><td class="memItemLeft" align="right" valign="top"><a id="a117eb01bf944343bc7b25a3a6a6e52e5"></a>
virtual <a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a117eb01bf944343bc7b25a3a6a6e52e5">DetermineTargetAddress</a> (const char *szConnectTo, xiiUInt32 &amp;out_IP, xiiUInt16 &amp;out_Port)</td></tr>
<tr class="memdesc:a117eb01bf944343bc7b25a3a6a6e52e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes can override this to interpret an address differently. <br /></td></tr>
<tr class="separator:a117eb01bf944343bc7b25a3a6a6e52e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a45e26b79efb6a042f29f50b122ad9e"><td class="memItemLeft" align="right" valign="top"><a id="a0a45e26b79efb6a042f29f50b122ad9e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a0a45e26b79efb6a042f29f50b122ad9e">ReportConnectionToServer</a> (xiiUInt32 uiServerID)</td></tr>
<tr class="memdesc:a0a45e26b79efb6a042f29f50b122ad9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a server connection has been established. <br /></td></tr>
<tr class="separator:a0a45e26b79efb6a042f29f50b122ad9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdec7f428c7b70147dce22c9dabb8a0a"><td class="memItemLeft" align="right" valign="top"><a id="abdec7f428c7b70147dce22c9dabb8a0a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#abdec7f428c7b70147dce22c9dabb8a0a">ReportConnectionToClient</a> (xiiUInt32 uiApplicationID)</td></tr>
<tr class="memdesc:abdec7f428c7b70147dce22c9dabb8a0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a client connection has been established. <br /></td></tr>
<tr class="separator:abdec7f428c7b70147dce22c9dabb8a0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef312782423cabf846dd64811d6f351c"><td class="memItemLeft" align="right" valign="top"><a id="aef312782423cabf846dd64811d6f351c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#aef312782423cabf846dd64811d6f351c">ReportDisconnectedFromServer</a> ()</td></tr>
<tr class="memdesc:aef312782423cabf846dd64811d6f351c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a server connection has been lost. <br /></td></tr>
<tr class="separator:aef312782423cabf846dd64811d6f351c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad63a8cec4f9870f2cc5eccd58b2564c9"><td class="memItemLeft" align="right" valign="top"><a id="ad63a8cec4f9870f2cc5eccd58b2564c9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#ad63a8cec4f9870f2cc5eccd58b2564c9">ReportDisconnectedFromClient</a> (xiiUInt32 uiApplicationID)</td></tr>
<tr class="memdesc:ad63a8cec4f9870f2cc5eccd58b2564c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a client connection has been lost. <br /></td></tr>
<tr class="separator:ad63a8cec4f9870f2cc5eccd58b2564c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c7d3792ec94813acb608e3dc77e407c"><td class="memItemLeft" align="right" valign="top"><a id="a3c7d3792ec94813acb608e3dc77e407c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d68/classxii_remote_interface.htm#a3c7d3792ec94813acb608e3dc77e407c">ReportMessage</a> (xiiUInt32 uiApplicationID, xiiUInt32 uiSystemID, xiiUInt32 uiMsgID, const <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt; const xiiUInt8 &gt; &amp;data)</td></tr>
<tr class="memdesc:a3c7d3792ec94813acb608e3dc77e407c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a message has arrived. <br /></td></tr>
<tr class="separator:a3c7d3792ec94813acb608e3dc77e407c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a52832ff90fed6e7cc546ff575f3b217b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52832ff90fed6e7cc546ff575f3b217b">&#9670;&nbsp;</a></span>ConnectToServer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiRemoteInterface::ConnectToServer </td>
          <td>(</td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiConnectionToken</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bStartUpdateThread</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts the network interface as a client. Tries to connect to the given address. </p>
<p>This function immediately returns and no connection is guaranteed. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiConnectionToken</td><td>Same as for <a class="el" href="../../d4/d68/classxii_remote_interface.htm#aec8176155be9f5e084abc02ba627e164" title="Starts the remote interface as a server.">StartServer()</a> </td></tr>
    <tr><td class="paramname">szAddress</td><td>Could be a network address "127.0.0.1" or "localhost" or some other name that identifies the target, e.g. a named pipe. </td></tr>
    <tr><td class="paramname">bStartUpdateThread</td><td>Same as for <a class="el" href="../../d4/d68/classxii_remote_interface.htm#aec8176155be9f5e084abc02ba627e164" title="Starts the remote interface as a server.">StartServer()</a></td></tr>
  </table>
  </dd>
</dl>
<p>If this function succeeds, it still might not be connected to a server. Use <a class="el" href="../../d4/d68/classxii_remote_interface.htm#a08022869c6c09b7f8034e4f09df1f5d8" title="Can only be called after ConnectToServer(). Updates the network in a loop until a connection is estab...">WaitForConnectionToServer()</a> to enforce a connection. </p>

</div>
</div>
<a id="a39dc214c1728e7e3577714f1a71f8319"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39dc214c1728e7e3577714f1a71f8319">&#9670;&nbsp;</a></span>GetServerInfoIP()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&amp; xiiRemoteInterface::GetServerInfoIP </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>For the client to display the name of the server. </p>
<p>For the client to display the IP of the server </p>

</div>
</div>
<a id="aec8176155be9f5e084abc02ba627e164"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec8176155be9f5e084abc02ba627e164">&#9670;&nbsp;</a></span>StartServer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiRemoteInterface::StartServer </td>
          <td>(</td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiConnectionToken</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szAddress</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bStartUpdateThread</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts the remote interface as a server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiConnectionToken</td><td>Should be a unique sequence (e.g. 'XIIPZ') to identify the purpose of this connection. Only server and clients with the same token will accept connections. </td></tr>
    <tr><td class="paramname">uiPort</td><td>The port over which the connection should run. </td></tr>
    <tr><td class="paramname">bStartUpdateThread</td><td>If true, a thread is started that will regularly call UpdateNetwork() and <a class="el" href="../../d4/d68/classxii_remote_interface.htm#a4b75c746a3cfc958b77997646c1a7d49" title="If no update thread was spawned, this should be called by clients to determine the ping.">UpdatePingToServer()</a>. If false, this has to be called manually in regular intervals. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a08022869c6c09b7f8034e4f09df1f5d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08022869c6c09b7f8034e4f09df1f5d8">&#9670;&nbsp;</a></span>WaitForConnectionToServer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiRemoteInterface::WaitForConnectionToServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/dc1/structxii_time.htm">xiiTime</a>&#160;</td>
          <td class="paramname"><em>timeout</em> = <code><a class="el" href="../../d7/dc1/structxii_time.htm#a0d30e51875577941d5f0e312d7041c76">xiiTime::Seconds</a>(10)</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Can only be called after <a class="el" href="../../d4/d68/classxii_remote_interface.htm#a52832ff90fed6e7cc546ff575f3b217b" title="Starts the network interface as a client. Tries to connect to the given address.">ConnectToServer()</a>. Updates the network in a loop until a connection is established, or the time has run out. </p>
<p>A timeout of exactly zero means to wait indefinitely. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="af0013bab8eb60bd65734a7092699c598"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0013bab8eb60bd65734a7092699c598">&#9670;&nbsp;</a></span>m_sServerInfoIP</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> xiiRemoteInterface::m_sServerInfoIP</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Derived classes should update this when the information is available. </p>
<p>Derived classes should update this when the information is available </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Communication/<a class="el" href="../../df/dde/_remote_interface_8h_source.htm">RemoteInterface.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Communication/Implementation/RemoteInterface.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d68/classxii_remote_interface.htm">xiiRemoteInterface</a></li>
    <li class="footer">Generated on Mon Apr 17 2023 20:10:41 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
