<!-- HTML header for doxygen 1.11.0-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: xiiPointerWithFlags&lt; PtrType, NumFlagBits &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript">
  DoxygenAwesomeDarkModeToggle.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript">
  DoxygenAwesomeFragmentCopyButton.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
  DoxygenAwesomeParagraphLink.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
  DoxygenAwesomeInteractiveToc.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/d14/classxii_pointer_with_flags.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d7/d28/classxii_pointer_with_flags-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">xiiPointerWithFlags&lt; PtrType, NumFlagBits &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="../../d8/d4f/class_a.htm">A</a> wrapper around a raw pointer that allows to use the lower N bits for flags.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/da7/_pointer_with_flags_8h_source.htm">PointerWithFlags.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8dc052b7b8ec67da3fa6e6d118cd90db" id="r_a8dc052b7b8ec67da3fa6e6d118cd90db"><td class="memItemLeft" align="right" valign="top"><a id="a8dc052b7b8ec67da3fa6e6d118cd90db" name="a8dc052b7b8ec67da3fa6e6d118cd90db"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiPointerWithFlags</b> ()=default</td></tr>
<tr class="memdesc:a8dc052b7b8ec67da3fa6e6d118cd90db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the pointer and flags with zero. <br /></td></tr>
<tr class="separator:a8dc052b7b8ec67da3fa6e6d118cd90db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f1a0d3099d93aca05241885470e51e2" id="r_a7f1a0d3099d93aca05241885470e51e2"><td class="memItemLeft" align="right" valign="top"><a id="a7f1a0d3099d93aca05241885470e51e2" name="a7f1a0d3099d93aca05241885470e51e2"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiPointerWithFlags</b> (PtrType *pPtr, xiiUInt8 uiFlags=0)</td></tr>
<tr class="memdesc:a7f1a0d3099d93aca05241885470e51e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the pointer and flags. <br /></td></tr>
<tr class="separator:a7f1a0d3099d93aca05241885470e51e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ba653cba9858dce4507703f00047fde" id="r_a1ba653cba9858dce4507703f00047fde"><td class="memItemLeft" align="right" valign="top"><a id="a1ba653cba9858dce4507703f00047fde" name="a1ba653cba9858dce4507703f00047fde"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetPtrAndFlags</b> (PtrType *pPtr, xiiUInt8 uiFlags)</td></tr>
<tr class="memdesc:a1ba653cba9858dce4507703f00047fde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the pointer and flags. <br /></td></tr>
<tr class="separator:a1ba653cba9858dce4507703f00047fde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bbab84cc125c73a3fb780a31f59ba26" id="r_a7bbab84cc125c73a3fb780a31f59ba26"><td class="memItemLeft" align="right" valign="top"><a id="a7bbab84cc125c73a3fb780a31f59ba26" name="a7bbab84cc125c73a3fb780a31f59ba26"></a>
const PtrType *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPtr</b> () const</td></tr>
<tr class="memdesc:a7bbab84cc125c73a3fb780a31f59ba26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:a7bbab84cc125c73a3fb780a31f59ba26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac220f4eb4250138224baeefb5346cac9" id="r_ac220f4eb4250138224baeefb5346cac9"><td class="memItemLeft" align="right" valign="top"><a id="ac220f4eb4250138224baeefb5346cac9" name="ac220f4eb4250138224baeefb5346cac9"></a>
PtrType *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPtr</b> ()</td></tr>
<tr class="memdesc:ac220f4eb4250138224baeefb5346cac9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:ac220f4eb4250138224baeefb5346cac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4fadd35cc95604ba4c4082b77dd795d" id="r_ad4fadd35cc95604ba4c4082b77dd795d"><td class="memItemLeft" align="right" valign="top"><a id="ad4fadd35cc95604ba4c4082b77dd795d" name="ad4fadd35cc95604ba4c4082b77dd795d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetPtr</b> (PtrType *pPtr)</td></tr>
<tr class="memdesc:ad4fadd35cc95604ba4c4082b77dd795d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the pointer value only. Flags stay unchanged. <br /></td></tr>
<tr class="separator:ad4fadd35cc95604ba4c4082b77dd795d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea76bbf42e2263481023655472a3547" id="r_a3ea76bbf42e2263481023655472a3547"><td class="memItemLeft" align="right" valign="top"><a id="a3ea76bbf42e2263481023655472a3547" name="a3ea76bbf42e2263481023655472a3547"></a>
xiiUInt8&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a3ea76bbf42e2263481023655472a3547"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags value only. <br /></td></tr>
<tr class="separator:a3ea76bbf42e2263481023655472a3547"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18faf0609e4f0740c76c5772b8f894b0" id="r_a18faf0609e4f0740c76c5772b8f894b0"><td class="memItemLeft" align="right" valign="top"><a id="a18faf0609e4f0740c76c5772b8f894b0" name="a18faf0609e4f0740c76c5772b8f894b0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetFlags</b> (xiiUInt8 uiFlags)</td></tr>
<tr class="memdesc:a18faf0609e4f0740c76c5772b8f894b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes only the flags value. The given value must fit into the reserved bits. <br /></td></tr>
<tr class="separator:a18faf0609e4f0740c76c5772b8f894b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f8d14510a18e3ad200f0eb87babf3c4" id="r_a3f8d14510a18e3ad200f0eb87babf3c4"><td class="memItemLeft" align="right" valign="top"><a id="a3f8d14510a18e3ad200f0eb87babf3c4" name="a3f8d14510a18e3ad200f0eb87babf3c4"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator PtrType *</b> ()</td></tr>
<tr class="memdesc:a3f8d14510a18e3ad200f0eb87babf3c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:a3f8d14510a18e3ad200f0eb87babf3c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa550a3eade3b0cc278211fcaf038dd02" id="r_aa550a3eade3b0cc278211fcaf038dd02"><td class="memItemLeft" align="right" valign="top"><a id="aa550a3eade3b0cc278211fcaf038dd02" name="aa550a3eade3b0cc278211fcaf038dd02"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator const PtrType *</b> () const</td></tr>
<tr class="memdesc:aa550a3eade3b0cc278211fcaf038dd02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:aa550a3eade3b0cc278211fcaf038dd02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cc64267370632232988fb9b5e8893b9" id="r_a4cc64267370632232988fb9b5e8893b9"><td class="memItemLeft" align="right" valign="top"><a id="a4cc64267370632232988fb9b5e8893b9" name="a4cc64267370632232988fb9b5e8893b9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (PtrType *pPtr)</td></tr>
<tr class="memdesc:a4cc64267370632232988fb9b5e8893b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the pointer value only. Flags stay unchanged. <br /></td></tr>
<tr class="separator:a4cc64267370632232988fb9b5e8893b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3461eae876a0f0282578a2563aadddd" id="r_af3461eae876a0f0282578a2563aadddd"><td class="memTemplParams" colspan="2"><a id="af3461eae876a0f0282578a2563aadddd" name="af3461eae876a0f0282578a2563aadddd"></a>
template&lt;typename  = typename std::enable_if&lt;std::is_const&lt;PtrType&gt;::value == false&gt;&gt; </td></tr>
<tr class="memitem:af3461eae876a0f0282578a2563aadddd"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator==</b> (const PtrType *pPtr) const</td></tr>
<tr class="memdesc:af3461eae876a0f0282578a2563aadddd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for equality (flags are ignored). <br /></td></tr>
<tr class="separator:af3461eae876a0f0282578a2563aadddd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae701da06d8659e9522790e38b46c39ac" id="r_ae701da06d8659e9522790e38b46c39ac"><td class="memItemLeft" align="right" valign="top"><a id="ae701da06d8659e9522790e38b46c39ac" name="ae701da06d8659e9522790e38b46c39ac"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm">xiiPointerWithFlags</a>&lt; PtrType, NumFlagBits &gt; &amp;rhs) const</td></tr>
<tr class="separator:ae701da06d8659e9522790e38b46c39ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63b506a5972e1bda8061d5120f6f4d33" id="r_a63b506a5972e1bda8061d5120f6f4d33"><td class="memItemLeft" align="right" valign="top"><a id="a63b506a5972e1bda8061d5120f6f4d33" name="a63b506a5972e1bda8061d5120f6f4d33"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (PtrType *pPtr) const</td></tr>
<tr class="memdesc:a63b506a5972e1bda8061d5120f6f4d33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for equality (flags are ignored) <br /></td></tr>
<tr class="separator:a63b506a5972e1bda8061d5120f6f4d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab855e9dc5929e405a99156ca6b078f06" id="r_ab855e9dc5929e405a99156ca6b078f06"><td class="memItemLeft" align="right" valign="top"><a id="ab855e9dc5929e405a99156ca6b078f06" name="ab855e9dc5929e405a99156ca6b078f06"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (std::nullptr_t) const</td></tr>
<tr class="memdesc:ab855e9dc5929e405a99156ca6b078f06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for equality (flags are ignored) <br /></td></tr>
<tr class="separator:ab855e9dc5929e405a99156ca6b078f06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a860f5fc02be399e6dd720dbce6d536" id="r_a4a860f5fc02be399e6dd720dbce6d536"><td class="memItemLeft" align="right" valign="top"><a id="a4a860f5fc02be399e6dd720dbce6d536" name="a4a860f5fc02be399e6dd720dbce6d536"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator bool</b> () const</td></tr>
<tr class="memdesc:a4a860f5fc02be399e6dd720dbce6d536"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the pointer part is not nullptr (flags are ignored) <br /></td></tr>
<tr class="separator:a4a860f5fc02be399e6dd720dbce6d536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf7b485ee19abc63fb35bcc3951b5730" id="r_abf7b485ee19abc63fb35bcc3951b5730"><td class="memItemLeft" align="right" valign="top"><a id="abf7b485ee19abc63fb35bcc3951b5730" name="abf7b485ee19abc63fb35bcc3951b5730"></a>
const PtrType *&#160;</td><td class="memItemRight" valign="bottom"><b>operator-&gt;</b> () const</td></tr>
<tr class="memdesc:abf7b485ee19abc63fb35bcc3951b5730"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:abf7b485ee19abc63fb35bcc3951b5730"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c92610aa37f7bf5bab8b59f1046ad8c" id="r_a2c92610aa37f7bf5bab8b59f1046ad8c"><td class="memItemLeft" align="right" valign="top"><a id="a2c92610aa37f7bf5bab8b59f1046ad8c" name="a2c92610aa37f7bf5bab8b59f1046ad8c"></a>
PtrType *&#160;</td><td class="memItemRight" valign="bottom"><b>operator-&gt;</b> ()</td></tr>
<tr class="memdesc:a2c92610aa37f7bf5bab8b59f1046ad8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:a2c92610aa37f7bf5bab8b59f1046ad8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73fce551e5ac0fe5dfc5bf33b90f55eb" id="r_a73fce551e5ac0fe5dfc5bf33b90f55eb"><td class="memItemLeft" align="right" valign="top"><a id="a73fce551e5ac0fe5dfc5bf33b90f55eb" name="a73fce551e5ac0fe5dfc5bf33b90f55eb"></a>
const PtrType &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> () const</td></tr>
<tr class="memdesc:a73fce551e5ac0fe5dfc5bf33b90f55eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:a73fce551e5ac0fe5dfc5bf33b90f55eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2bfccfc8f78cea6fd04614137ec326c" id="r_ac2bfccfc8f78cea6fd04614137ec326c"><td class="memItemLeft" align="right" valign="top"><a id="ac2bfccfc8f78cea6fd04614137ec326c" name="ac2bfccfc8f78cea6fd04614137ec326c"></a>
PtrType &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> ()</td></tr>
<tr class="memdesc:ac2bfccfc8f78cea6fd04614137ec326c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:ac2bfccfc8f78cea6fd04614137ec326c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename PtrType, xiiUInt8 NumFlagBits = 2&gt;<br />
class xiiPointerWithFlags&lt; PtrType, NumFlagBits &gt;</div><p><a class="el" href="../../d8/d4f/class_a.htm">A</a> wrapper around a raw pointer that allows to use the lower N bits for flags. </p>
<p>When accessing the pointer, the lower N bits are masked off. Typically one can safely store 3 bits in the lower bits of a pointer as most data is 8 byte aligned, especially when it was heap allocated. </p>
</div><hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Types/<a class="el" href="../../db/da7/_pointer_with_flags_8h_source.htm">PointerWithFlags.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm">xiiPointerWithFlags</a></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:47:36 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
