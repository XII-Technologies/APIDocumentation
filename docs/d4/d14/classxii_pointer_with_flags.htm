<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiPointerWithFlags&lt; PtrType, NumFlagBits &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/d14/classxii_pointer_with_flags.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d7/d28/classxii_pointer_with_flags-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiPointerWithFlags&lt; PtrType, NumFlagBits &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A wrapper around a raw pointer that allows to use the lower N bits for flags.  
 <a href="../../d4/d14/classxii_pointer_with_flags.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/da7/_pointer_with_flags_8h_source.htm">PointerWithFlags.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8dc052b7b8ec67da3fa6e6d118cd90db"><td class="memItemLeft" align="right" valign="top"><a id="a8dc052b7b8ec67da3fa6e6d118cd90db"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a8dc052b7b8ec67da3fa6e6d118cd90db">xiiPointerWithFlags</a> ()=default</td></tr>
<tr class="memdesc:a8dc052b7b8ec67da3fa6e6d118cd90db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the pointer and flags with zero. <br /></td></tr>
<tr class="separator:a8dc052b7b8ec67da3fa6e6d118cd90db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5752ca65b5fa5c2bf4549f429c8af5d"><td class="memItemLeft" align="right" valign="top"><a id="ac5752ca65b5fa5c2bf4549f429c8af5d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#ac5752ca65b5fa5c2bf4549f429c8af5d">xiiPointerWithFlags</a> (PtrType *pPtr, uint8_t flags=0)</td></tr>
<tr class="memdesc:ac5752ca65b5fa5c2bf4549f429c8af5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the pointer and flags. <br /></td></tr>
<tr class="separator:ac5752ca65b5fa5c2bf4549f429c8af5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7829766827e85127c0b1811b9ff17b2b"><td class="memItemLeft" align="right" valign="top"><a id="a7829766827e85127c0b1811b9ff17b2b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a7829766827e85127c0b1811b9ff17b2b">SetPtrAndFlags</a> (PtrType *pPtr, uint8_t flags)</td></tr>
<tr class="memdesc:a7829766827e85127c0b1811b9ff17b2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the pointer and flags. <br /></td></tr>
<tr class="separator:a7829766827e85127c0b1811b9ff17b2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a257273f6c7b882422482115adff95bd5"><td class="memItemLeft" align="right" valign="top"><a id="a257273f6c7b882422482115adff95bd5"></a>
const PtrType *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a257273f6c7b882422482115adff95bd5">GetPtr</a> () const</td></tr>
<tr class="memdesc:a257273f6c7b882422482115adff95bd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:a257273f6c7b882422482115adff95bd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7eff00a32dbe74adaaaa840c46146100"><td class="memItemLeft" align="right" valign="top"><a id="a7eff00a32dbe74adaaaa840c46146100"></a>
PtrType *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a7eff00a32dbe74adaaaa840c46146100">GetPtr</a> ()</td></tr>
<tr class="memdesc:a7eff00a32dbe74adaaaa840c46146100"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:a7eff00a32dbe74adaaaa840c46146100"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4fadd35cc95604ba4c4082b77dd795d"><td class="memItemLeft" align="right" valign="top"><a id="ad4fadd35cc95604ba4c4082b77dd795d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#ad4fadd35cc95604ba4c4082b77dd795d">SetPtr</a> (PtrType *pPtr)</td></tr>
<tr class="memdesc:ad4fadd35cc95604ba4c4082b77dd795d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the pointer value only. Flags stay unchanged. <br /></td></tr>
<tr class="separator:ad4fadd35cc95604ba4c4082b77dd795d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a995862c549e5baa202c34e1b3c714832"><td class="memItemLeft" align="right" valign="top"><a id="a995862c549e5baa202c34e1b3c714832"></a>
uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a995862c549e5baa202c34e1b3c714832">GetFlags</a> () const</td></tr>
<tr class="memdesc:a995862c549e5baa202c34e1b3c714832"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags value only. <br /></td></tr>
<tr class="separator:a995862c549e5baa202c34e1b3c714832"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34b961c019cb116ff0c0b0b98e112c47"><td class="memItemLeft" align="right" valign="top"><a id="a34b961c019cb116ff0c0b0b98e112c47"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a34b961c019cb116ff0c0b0b98e112c47">SetFlags</a> (uint8_t flags)</td></tr>
<tr class="memdesc:a34b961c019cb116ff0c0b0b98e112c47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes only the flags value. The given value must fit into the reserved bits. <br /></td></tr>
<tr class="separator:a34b961c019cb116ff0c0b0b98e112c47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f8d14510a18e3ad200f0eb87babf3c4"><td class="memItemLeft" align="right" valign="top"><a id="a3f8d14510a18e3ad200f0eb87babf3c4"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a3f8d14510a18e3ad200f0eb87babf3c4">operator PtrType *</a> ()</td></tr>
<tr class="memdesc:a3f8d14510a18e3ad200f0eb87babf3c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:a3f8d14510a18e3ad200f0eb87babf3c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa550a3eade3b0cc278211fcaf038dd02"><td class="memItemLeft" align="right" valign="top"><a id="aa550a3eade3b0cc278211fcaf038dd02"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#aa550a3eade3b0cc278211fcaf038dd02">operator const PtrType *</a> () const</td></tr>
<tr class="memdesc:aa550a3eade3b0cc278211fcaf038dd02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:aa550a3eade3b0cc278211fcaf038dd02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cc64267370632232988fb9b5e8893b9"><td class="memItemLeft" align="right" valign="top"><a id="a4cc64267370632232988fb9b5e8893b9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a4cc64267370632232988fb9b5e8893b9">operator=</a> (PtrType *pPtr)</td></tr>
<tr class="memdesc:a4cc64267370632232988fb9b5e8893b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the pointer value only. Flags stay unchanged. <br /></td></tr>
<tr class="separator:a4cc64267370632232988fb9b5e8893b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a940dccbd1c591c8b4ba399604002fd01"><td class="memItemLeft" align="right" valign="top"><a id="a940dccbd1c591c8b4ba399604002fd01"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a940dccbd1c591c8b4ba399604002fd01">operator==</a> (const PtrType *pPtr) const</td></tr>
<tr class="memdesc:a940dccbd1c591c8b4ba399604002fd01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for equality (flags are ignored). <br /></td></tr>
<tr class="separator:a940dccbd1c591c8b4ba399604002fd01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c3d42319bf3c7e04bb16cde99b8db0b"><td class="memItemLeft" align="right" valign="top"><a id="a4c3d42319bf3c7e04bb16cde99b8db0b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a4c3d42319bf3c7e04bb16cde99b8db0b">operator!=</a> (const PtrType *pPtr) const</td></tr>
<tr class="memdesc:a4c3d42319bf3c7e04bb16cde99b8db0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for inequality (flags are ignored). <br /></td></tr>
<tr class="separator:a4c3d42319bf3c7e04bb16cde99b8db0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63b506a5972e1bda8061d5120f6f4d33"><td class="memItemLeft" align="right" valign="top"><a id="a63b506a5972e1bda8061d5120f6f4d33"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a63b506a5972e1bda8061d5120f6f4d33">operator==</a> (PtrType *pPtr) const</td></tr>
<tr class="memdesc:a63b506a5972e1bda8061d5120f6f4d33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for equality (flags are ignored). <br /></td></tr>
<tr class="separator:a63b506a5972e1bda8061d5120f6f4d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76aa1079f0a0ee8267d4ffbd5097aa5c"><td class="memItemLeft" align="right" valign="top"><a id="a76aa1079f0a0ee8267d4ffbd5097aa5c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a76aa1079f0a0ee8267d4ffbd5097aa5c">operator!=</a> (PtrType *pPtr) const</td></tr>
<tr class="memdesc:a76aa1079f0a0ee8267d4ffbd5097aa5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for inequality (flags are ignored). <br /></td></tr>
<tr class="separator:a76aa1079f0a0ee8267d4ffbd5097aa5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab855e9dc5929e405a99156ca6b078f06"><td class="memItemLeft" align="right" valign="top"><a id="ab855e9dc5929e405a99156ca6b078f06"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#ab855e9dc5929e405a99156ca6b078f06">operator==</a> (std::nullptr_t) const</td></tr>
<tr class="memdesc:ab855e9dc5929e405a99156ca6b078f06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for equality (flags are ignored). <br /></td></tr>
<tr class="separator:ab855e9dc5929e405a99156ca6b078f06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a496469c80c2a17a21d611d709ab86650"><td class="memItemLeft" align="right" valign="top"><a id="a496469c80c2a17a21d611d709ab86650"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a496469c80c2a17a21d611d709ab86650">operator!=</a> (std::nullptr_t) const</td></tr>
<tr class="memdesc:a496469c80c2a17a21d611d709ab86650"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for inequality (flags are ignored). <br /></td></tr>
<tr class="separator:a496469c80c2a17a21d611d709ab86650"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a860f5fc02be399e6dd720dbce6d536"><td class="memItemLeft" align="right" valign="top"><a id="a4a860f5fc02be399e6dd720dbce6d536"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a4a860f5fc02be399e6dd720dbce6d536">operator bool</a> () const</td></tr>
<tr class="memdesc:a4a860f5fc02be399e6dd720dbce6d536"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the pointer part is not nullptr (flags are ignored). <br /></td></tr>
<tr class="separator:a4a860f5fc02be399e6dd720dbce6d536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa233b8172fccd37560eb49c7c30e0b17"><td class="memItemLeft" align="right" valign="top"><a id="aa233b8172fccd37560eb49c7c30e0b17"></a>
const PtrType *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#aa233b8172fccd37560eb49c7c30e0b17">operator-&gt;</a> () const</td></tr>
<tr class="memdesc:aa233b8172fccd37560eb49c7c30e0b17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:aa233b8172fccd37560eb49c7c30e0b17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42ba7813d2032c7ca8999799664643a4"><td class="memItemLeft" align="right" valign="top"><a id="a42ba7813d2032c7ca8999799664643a4"></a>
PtrType *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a42ba7813d2032c7ca8999799664643a4">operator-&gt;</a> ()</td></tr>
<tr class="memdesc:a42ba7813d2032c7ca8999799664643a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:a42ba7813d2032c7ca8999799664643a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62c72752177c57d8f39fa69020cdf28d"><td class="memItemLeft" align="right" valign="top"><a id="a62c72752177c57d8f39fa69020cdf28d"></a>
const PtrType &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a62c72752177c57d8f39fa69020cdf28d">operator*</a> () const</td></tr>
<tr class="memdesc:a62c72752177c57d8f39fa69020cdf28d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:a62c72752177c57d8f39fa69020cdf28d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12c86436afbe57ef0e19b51c52947e36"><td class="memItemLeft" align="right" valign="top"><a id="a12c86436afbe57ef0e19b51c52947e36"></a>
PtrType &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm#a12c86436afbe57ef0e19b51c52947e36">operator*</a> ()</td></tr>
<tr class="memdesc:a12c86436afbe57ef0e19b51c52947e36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:a12c86436afbe57ef0e19b51c52947e36"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename PtrType, uint8_t NumFlagBits = 2&gt;<br />
class xiiPointerWithFlags&lt; PtrType, NumFlagBits &gt;</h3>

<p>A wrapper around a raw pointer that allows to use the lower N bits for flags. </p>
<p>When accessing the pointer, the lower N bits are masked off. Typically one can safely store 3 bits in the lower bits of a pointer as most data is 8 byte aligned, especially when it was heap allocated. </p>
</div><hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Types/<a class="el" href="../../db/da7/_pointer_with_flags_8h_source.htm">PointerWithFlags.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d14/classxii_pointer_with_flags.htm">xiiPointerWithFlags</a></li>
    <li class="footer">Generated on Mon Jul 10 2023 23:02:59 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
