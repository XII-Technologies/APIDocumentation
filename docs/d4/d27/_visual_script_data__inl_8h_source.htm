<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/EnginePlugins/VisualScriptPlugin/Runtime/Implementation/VisualScriptData_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/d27/_visual_script_data__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">VisualScriptData_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> xiiVisualScriptDataDescription::CheckOffset(DataOffset dataOffset, <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pType)<span class="keyword"> const</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_COMPILE_FOR_DEBUG)</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;  <span class="keyword">auto</span>  givenDataType  = dataOffset.GetType();</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  <span class="keyword">auto</span>&amp; offsetAndCount = m_PerTypeInfo[givenDataType];</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  XII_ASSERT_DEBUG(offsetAndCount.m_uiCount &gt; 0, <span class="stringliteral">&quot;Invalid data offset&quot;</span>);</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  <span class="keyword">const</span> xiiUInt32 uiLastOffset = offsetAndCount.m_uiStartOffset + (offsetAndCount.m_uiCount - 1) * xiiVisualScriptDataType::GetStorageSize(givenDataType);</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  XII_ASSERT_DEBUG(dataOffset.m_uiByteOffset &gt;= offsetAndCount.m_uiStartOffset &amp;&amp; dataOffset.m_uiByteOffset &lt;= uiLastOffset, <span class="stringliteral">&quot;Invalid data offset&quot;</span>);</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordflow">if</span> (pType != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keyword">auto</span> expectedDataType = xiiVisualScriptDataType::FromRtti(pType);</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    XII_ASSERT_DEBUG(expectedDataType == givenDataType, <span class="stringliteral">&quot;Data type mismatch, expected &#39;{}&#39;({}) but got &#39;{}&#39;&quot;</span>, xiiVisualScriptDataType::GetName(expectedDataType), pType-&gt;<a class="code" href="../../db/d89/classxii_r_t_t_i.htm#a84233f5c90c038c1bd97e8b9ec4aa211">GetTypeName</a>(), xiiVisualScriptDataType::GetName(givenDataType));</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  }</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;}</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;XII_FORCE_INLINE <a class="code" href="../../d6/de6/structxii_visual_script_data_description_1_1_data_offset.htm">xiiVisualScriptDataDescription::DataOffset</a> xiiVisualScriptDataDescription::GetOffset(xiiVisualScriptDataType::Enum dataType, xiiUInt32 uiIndex, DataOffset::Source::Enum source)<span class="keyword"> const</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keyword">auto</span>&amp;     offsetAndCount = m_PerTypeInfo[dataType];</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  xiiUInt32 uiByteOffset   = xiiInvalidIndex;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordflow">if</span> (uiIndex &lt; offsetAndCount.m_uiCount)</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    uiByteOffset = offsetAndCount.m_uiStartOffset + uiIndex * xiiVisualScriptDataType::GetStorageSize(dataType);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  }</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordflow">return</span> DataOffset(uiByteOffset, dataType, source);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiVisualScriptDataStorage::IsAllocated()<span class="keyword"> const</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordflow">return</span> m_Storage.<a class="code" href="../../d0/dec/classxii_blob.htm#a271b225ec3be12c27704148c85a50688">GetByteBlobPtr</a>().<a class="code" href="../../d3/d93/classxii_blob_ptr.htm#a6bc168e82555fea14ac3852e994ab948">IsEmpty</a>() == <span class="keyword">false</span>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">const</span> T&amp; xiiVisualScriptDataStorage::GetData(DataOffset dataOffset)<span class="keyword"> const</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  static_assert(!std::is_pointer&lt;T&gt;::value &amp;&amp; !std::is_same&lt;T, xiiTypedPointer&gt;::value, <span class="stringliteral">&quot;Use GetPointerData instead&quot;</span>);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  m_pDesc-&gt;CheckOffset(dataOffset, xiiGetStaticRTTI&lt;T&gt;());</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T*<span class="keyword">&gt;</span>(m_Storage.<a class="code" href="../../d0/dec/classxii_blob.htm#a271b225ec3be12c27704148c85a50688">GetByteBlobPtr</a>().<a class="code" href="../../d3/d93/classxii_blob_ptr.htm#aa1ea468639d437e2a169ac09bbaf4b97">GetPtr</a>() + dataOffset.m_uiByteOffset);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;T&amp; xiiVisualScriptDataStorage::GetWritableData(DataOffset dataOffset)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  static_assert(!std::is_pointer&lt;T&gt;::value &amp;&amp; !std::is_same&lt;T, xiiTypedPointer&gt;::value, <span class="stringliteral">&quot;Use GetPointerData instead&quot;</span>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  m_pDesc-&gt;CheckOffset(dataOffset, xiiGetStaticRTTI&lt;T&gt;());</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_Storage.<a class="code" href="../../d0/dec/classxii_blob.htm#a271b225ec3be12c27704148c85a50688">GetByteBlobPtr</a>().<a class="code" href="../../d3/d93/classxii_blob_ptr.htm#aa1ea468639d437e2a169ac09bbaf4b97">GetPtr</a>() + dataOffset.m_uiByteOffset);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">void</span> xiiVisualScriptDataStorage::SetData(DataOffset dataOffset, <span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  static_assert(!std::is_pointer&lt;T&gt;::value, <span class="stringliteral">&quot;Use SetPointerData instead&quot;</span>);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordflow">if</span> (dataOffset.m_uiByteOffset &lt; m_Storage.<a class="code" href="../../d0/dec/classxii_blob.htm#a271b225ec3be12c27704148c85a50688">GetByteBlobPtr</a>().<a class="code" href="../../d3/d93/classxii_blob_ptr.htm#a3bf3f0fd86c7a9a1feb69d614d86ec2b">GetCount</a>())</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    m_pDesc-&gt;CheckOffset(dataOffset, xiiGetStaticRTTI&lt;T&gt;());</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">auto</span> pData = m_Storage.<a class="code" href="../../d0/dec/classxii_blob.htm#a271b225ec3be12c27704148c85a50688">GetByteBlobPtr</a>().<a class="code" href="../../d3/d93/classxii_blob_ptr.htm#aa1ea468639d437e2a169ac09bbaf4b97">GetPtr</a>() + dataOffset.m_uiByteOffset;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> constexpr (std::is_same&lt;T, xiiGameObjectHandle&gt;::value)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      <span class="keyword">auto</span>&amp; storedHandle = *<span class="keyword">reinterpret_cast&lt;</span><a class="code" href="../../dc/da9/structxii_visual_script_game_object_handle.htm">xiiVisualScriptGameObjectHandle</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      storedHandle.AssignHandle(value);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> constexpr (std::is_same&lt;T, xiiComponentHandle&gt;::value)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keyword">auto</span>&amp; storedHandle = *<span class="keyword">reinterpret_cast&lt;</span><a class="code" href="../../d2/dd0/structxii_visual_script_component_handle.htm">xiiVisualScriptComponentHandle</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      storedHandle.AssignHandle(value);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> constexpr (std::is_same&lt;T, xiiStringView&gt;::value)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      *<span class="keyword">reinterpret_cast&lt;</span><a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>*<span class="keyword">&gt;</span>(pData) = value;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      *<span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(pData) = value;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keywordtype">void</span> xiiVisualScriptDataStorage::SetPointerData(DataOffset dataOffset, T ptr, <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pType, xiiUInt32 uiExecutionCounter)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  static_assert(std::is_pointer&lt;T&gt;::value);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordflow">if</span> (dataOffset.m_uiByteOffset &lt; m_Storage.<a class="code" href="../../d0/dec/classxii_blob.htm#a271b225ec3be12c27704148c85a50688">GetByteBlobPtr</a>().<a class="code" href="../../d3/d93/classxii_blob_ptr.htm#a3bf3f0fd86c7a9a1feb69d614d86ec2b">GetCount</a>())</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">auto</span> pData = m_Storage.<a class="code" href="../../d0/dec/classxii_blob.htm#a271b225ec3be12c27704148c85a50688">GetByteBlobPtr</a>().<a class="code" href="../../d3/d93/classxii_blob_ptr.htm#aa1ea468639d437e2a169ac09bbaf4b97">GetPtr</a>() + dataOffset.m_uiByteOffset;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">if</span> constexpr (std::is_same&lt;T, xiiGameObject*&gt;::value)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      m_pDesc-&gt;CheckOffset(dataOffset, xiiGetStaticRTTI&lt;xiiGameObject&gt;());</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keyword">auto</span>&amp; storedHandle = *<span class="keyword">reinterpret_cast&lt;</span><a class="code" href="../../dc/da9/structxii_visual_script_game_object_handle.htm">xiiVisualScriptGameObjectHandle</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      storedHandle.AssignPtr(ptr, uiExecutionCounter);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> constexpr (std::is_same&lt;T, xiiComponent*&gt;::value)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      m_pDesc-&gt;CheckOffset(dataOffset, xiiGetStaticRTTI&lt;xiiComponent&gt;());</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      <span class="keyword">auto</span>&amp; storedHandle = *<span class="keyword">reinterpret_cast&lt;</span><a class="code" href="../../d2/dd0/structxii_visual_script_component_handle.htm">xiiVisualScriptComponentHandle</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      storedHandle.AssignPtr(ptr, uiExecutionCounter);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      XII_ASSERT_DEBUG(!pType || pType-&gt;<a class="code" href="../../db/d89/classxii_r_t_t_i.htm#ab01841286e6950143394487153c63c22">IsDerivedFrom</a>&lt;<a class="code" href="../../db/d60/classxii_component.htm">xiiComponent</a>&gt;() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Component type &#39;{}&#39; is stored as typed pointer, cast to xiiComponent first to ensure correct storage&quot;</span>, pType-&gt;<a class="code" href="../../db/d89/classxii_r_t_t_i.htm#a84233f5c90c038c1bd97e8b9ec4aa211">GetTypeName</a>());</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      m_pDesc-&gt;CheckOffset(dataOffset, pType);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="keyword">auto</span>&amp; typedPointer     = *<span class="keyword">reinterpret_cast&lt;</span><a class="code" href="../../d2/de4/structxii_typed_pointer.htm">xiiTypedPointer</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      typedPointer.m_pObject = ptr;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      typedPointer.m_pType   = pType;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiVisualScriptInstanceData::Serialize(<a class="code" href="../../d0/d18/classxii_stream_writer.htm">xiiStreamWriter</a>&amp; inout_stream)<span class="keyword"> const</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  XII_SUCCEED_OR_RETURN(m_DataOffset.Serialize(inout_stream));</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  inout_stream &lt;&lt; m_DefaultValue;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keywordflow">return</span> XII_SUCCESS;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiVisualScriptInstanceData::Deserialize(<a class="code" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>&amp; inout_stream)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  XII_SUCCEED_OR_RETURN(m_DataOffset.Deserialize(inout_stream));</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  inout_stream &gt;&gt; m_DefaultValue;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordflow">return</span> XII_SUCCESS;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_blob_htm_a271b225ec3be12c27704148c85a50688"><div class="ttname"><a href="../../d0/dec/classxii_blob.htm#a271b225ec3be12c27704148c85a50688">xiiBlob::GetByteBlobPtr</a></div><div class="ttdeci">xiiByteBlobPtr GetByteBlobPtr()</div><div class="ttdoc">Returns a blob pointer to the blob data, or an empty blob pointer if the blob is empty.</div><div class="ttdef"><b>Definition:</b> Blob.h:351</div></div>
<div class="ttc" id="astructxii_typed_pointer_htm"><div class="ttname"><a href="../../d2/de4/structxii_typed_pointer.htm">xiiTypedPointer</a></div><div class="ttdoc">A typed raw pointer.</div><div class="ttdef"><b>Definition:</b> TypedPointer.h:12</div></div>
<div class="ttc" id="aclassxii_component_htm"><div class="ttname"><a href="../../db/d60/classxii_component.htm">xiiComponent</a></div><div class="ttdoc">Base class of all component types.</div><div class="ttdef"><b>Definition:</b> Component.h:24</div></div>
<div class="ttc" id="astructxii_visual_script_data_description_1_1_data_offset_htm"><div class="ttname"><a href="../../d6/de6/structxii_visual_script_data_description_1_1_data_offset.htm">xiiVisualScriptDataDescription::DataOffset</a></div><div class="ttdef"><b>Definition:</b> VisualScriptData.h:9</div></div>
<div class="ttc" id="aclassxii_blob_ptr_htm_a6bc168e82555fea14ac3852e994ab948"><div class="ttname"><a href="../../d3/d93/classxii_blob_ptr.htm#a6bc168e82555fea14ac3852e994ab948">xiiBlobPtr::IsEmpty</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool IsEmpty() const</div><div class="ttdoc">Returns whether the array is empty.</div><div class="ttdef"><b>Definition:</b> Blob.h:87</div></div>
<div class="ttc" id="astructxii_hybrid_string_htm"><div class="ttname"><a href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt; 32, xiiDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="aclassxii_blob_ptr_htm_a3bf3f0fd86c7a9a1feb69d614d86ec2b"><div class="ttname"><a href="../../d3/d93/classxii_blob_ptr.htm#a3bf3f0fd86c7a9a1feb69d614d86ec2b">xiiBlobPtr::GetCount</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt64 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition:</b> Blob.h:90</div></div>
<div class="ttc" id="aclassxii_r_t_t_i_htm"><div class="ttname"><a href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition:</b> RTTI.h:29</div></div>
<div class="ttc" id="astructxii_visual_script_game_object_handle_htm"><div class="ttname"><a href="../../dc/da9/structxii_visual_script_game_object_handle.htm">xiiVisualScriptGameObjectHandle</a></div><div class="ttdef"><b>Definition:</b> VisualScriptDataType.h:71</div></div>
<div class="ttc" id="aclassxii_stream_writer_htm"><div class="ttname"><a href="../../d0/d18/classxii_stream_writer.htm">xiiStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:106</div></div>
<div class="ttc" id="aclassxii_r_t_t_i_htm_ab01841286e6950143394487153c63c22"><div class="ttname"><a href="../../db/d89/classxii_r_t_t_i.htm#ab01841286e6950143394487153c63c22">xiiRTTI::IsDerivedFrom</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool IsDerivedFrom(const xiiRTTI *pBaseType) const</div><div class="ttdoc">Returns true if this type is derived from the given type (or of the same type).</div><div class="ttdef"><b>Definition:</b> RTTI.h:56</div></div>
<div class="ttc" id="aclassxii_r_t_t_i_htm_a84233f5c90c038c1bd97e8b9ec4aa211"><div class="ttname"><a href="../../db/d89/classxii_r_t_t_i.htm#a84233f5c90c038c1bd97e8b9ec4aa211">xiiRTTI::GetTypeName</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringView GetTypeName() const</div><div class="ttdoc">Returns the name of this type.</div><div class="ttdef"><b>Definition:</b> RTTI.h:44</div></div>
<div class="ttc" id="aclassxii_stream_reader_htm"><div class="ttname"><a href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="astructxii_visual_script_component_handle_htm"><div class="ttname"><a href="../../d2/dd0/structxii_visual_script_component_handle.htm">xiiVisualScriptComponentHandle</a></div><div class="ttdef"><b>Definition:</b> VisualScriptDataType.h:94</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:55</div></div>
<div class="ttc" id="aclassxii_blob_ptr_htm_aa1ea468639d437e2a169ac09bbaf4b97"><div class="ttname"><a href="../../d3/d93/classxii_blob_ptr.htm#aa1ea468639d437e2a169ac09bbaf4b97">xiiBlobPtr::GetPtr</a></div><div class="ttdeci">XII_ALWAYS_INLINE PointerType GetPtr() const</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition:</b> Blob.h:75</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_260e93b09b1f607a5a2893957a57de87.htm">EnginePlugins</a></li><li class="navelem"><a class="el" href="../../dir_3266bd805ee584df34f5341cedfb8b04.htm">VisualScriptPlugin</a></li><li class="navelem"><a class="el" href="../../dir_886e1842723a3fe5bcebc610b130415c.htm">Runtime</a></li><li class="navelem"><a class="el" href="../../dir_7fecc563020f3f91282253717756fc07.htm">Implementation</a></li><li class="navelem"><b>VisualScriptData_inl.h</b></li>
    <li class="footer">Generated on Mon May 27 2024 16:41:28 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
