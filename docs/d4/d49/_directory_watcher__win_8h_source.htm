<!-- HTML header for doxygen 1.11.0-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Engine/Foundation/IO/Implementation/Win/DirectoryWatcher_win.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript">
  DoxygenAwesomeDarkModeToggle.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript">
  DoxygenAwesomeFragmentCopyButton.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
  DoxygenAwesomeParagraphLink.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
  DoxygenAwesomeInteractiveToc.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/d49/_directory_watcher__win_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">DirectoryWatcher_win.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/FoundationInternal.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span>XII_FOUNDATION_INTERNAL_HEADER</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Basics/Platform/Win/IncludeWindows.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;Foundation/Containers/DynamicArray.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Foundation/IO/DirectoryWatcher.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;Foundation/IO/Implementation/Shared/FileSystemMirror.h&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;Foundation/IO/Implementation/Win/DosDevicePath_win.h&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &lt;Foundation/Logging/Log.h&gt;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment">// Comment in to get verbose output on the function of the directory watcher</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">// #define DEBUG_FILE_WATCHER</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="preprocessor">#ifdef DEBUG_FILE_WATCHER</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="preprocessor">#  define DEBUG_LOG(...) xiiLog::Warning(__VA_ARGS__)</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="preprocessor">#  define DEBUG_LOG(...)</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="keyword">namespace</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>{</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <span class="keyword">struct </span>MoveEvent</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  {</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    <a class="code hl_class" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> path;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>    <span class="keywordtype">bool</span>      isDirectory = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    <span class="keywordtype">void</span> Clear()</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    {</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>      path.<a class="code hl_function" href="../../df/d4f/structxii_hybrid_string_base.htm#a3e3c71d8981b8bbbca81a9c55421860d">Clear</a>();</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    }</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="keywordtype">bool</span> IsEmpty()</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    {</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>      <span class="keywordflow">return</span> path.<a class="code hl_function" href="../../d2/d29/structxii_string_base.htm#a52ad52604f0b98226a0342393b8db662">IsEmpty</a>();</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    }</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  };</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="keyword">using </span>xiiFileSystemMirrorType = <a class="code hl_class" href="../../d3/dd8/classxii_file_system_mirror.htm">xiiFileSystemMirror&lt;bool&gt;</a>;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>} <span class="comment">// namespace</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="keyword">struct </span><a class="code hl_struct" href="../../df/d26/structxii_directory_watcher_impl.htm">xiiDirectoryWatcherImpl</a></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>{</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keywordtype">void</span> DoRead();</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  HANDLE                                  m_directoryHandle;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  DWORD                                   m_filter;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  OVERLAPPED                              m_overlapped;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  HANDLE                                  m_overlappedEvent;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <a class="code hl_class" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;xiiUInt8&gt;</a>               m_buffer;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <a class="code hl_struct" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiDirectoryWatcher::Watch&gt;</a> m_whatToWatch;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <a class="code hl_class" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr&lt;xiiFileSystemMirrorType&gt;</a>   m_mirror; <span class="comment">// store the last modification timestamp alongside each file</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>};</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>xiiDirectoryWatcher::xiiDirectoryWatcher() :</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  m_pImpl(XII_DEFAULT_NEW(<a class="code hl_struct" href="../../df/d26/structxii_directory_watcher_impl.htm">xiiDirectoryWatcherImpl</a>))</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>{</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  m_pImpl-&gt;m_buffer.SetCountUninitialized(1024 * 1024);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>}</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><a class="code hl_struct" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiDirectoryWatcher::OpenDirectory(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sAbsolutePath, <a class="code hl_struct" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;Watch&gt;</a> whatToWatch)</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>{</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  XII_ASSERT_DEV(m_sDirectoryPath.IsEmpty(), <span class="stringliteral">&quot;Directory already open, call CloseDirectory first!&quot;</span>);</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> sPath(sAbsolutePath);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  sPath.MakeCleanPath();</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  sPath.Trim(<span class="stringliteral">&quot;/&quot;</span>);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  m_pImpl-&gt;m_whatToWatch = whatToWatch;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  m_pImpl-&gt;m_filter      = FILE_NOTIFY_CHANGE_FILE_NAME;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <span class="keywordflow">if</span> (whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(Watch::Writes) || whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#a95bb64059c3566df3c788303d16ea47e">AreAllSet</a>(Watch::Deletes | Watch::Subdirectories))</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    m_pImpl-&gt;m_filter |= FILE_NOTIFY_CHANGE_LAST_WRITE;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    m_pImpl-&gt;m_mirror = XII_DEFAULT_NEW(xiiFileSystemMirrorType);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    m_pImpl-&gt;m_mirror-&gt;AddDirectory(sPath).AssertSuccess();</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  }</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keywordflow">if</span> (whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#a3e39644d3e435cd46310aa638994fd60">IsAnySet</a>(Watch::Deletes | Watch::Creates | Watch::Renames))</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  {</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    m_pImpl-&gt;m_filter |= FILE_NOTIFY_CHANGE_DIR_NAME;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  }</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  m_pImpl-&gt;m_directoryHandle = CreateFileW(<a class="code hl_class" href="../../d4/d46/classxii_dos_device_path.htm">xiiDosDevicePath</a>(sPath), FILE_LIST_DIRECTORY, FILE_SHARE_READ | FILE_SHARE_WRITE | FILE_SHARE_DELETE,</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>                                           <span class="keyword">nullptr</span>, OPEN_EXISTING, FILE_FLAG_BACKUP_SEMANTICS | FILE_FLAG_OVERLAPPED, <span class="keyword">nullptr</span>);</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keywordflow">if</span> (m_pImpl-&gt;m_directoryHandle == INVALID_HANDLE_VALUE)</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  {</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  }</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  m_pImpl-&gt;m_overlappedEvent = CreateEvent(<span class="keyword">nullptr</span>, TRUE, FALSE, <span class="keyword">nullptr</span>);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <span class="keywordflow">if</span> (m_pImpl-&gt;m_overlappedEvent == INVALID_HANDLE_VALUE)</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  {</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  }</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  m_pImpl-&gt;DoRead();</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  m_sDirectoryPath = sPath;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keywordflow">return</span> XII_SUCCESS;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>}</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="keywordtype">void</span> xiiDirectoryWatcher::CloseDirectory()</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>{</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <span class="keywordflow">if</span> (!m_sDirectoryPath.IsEmpty())</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  {</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    CancelIo(m_pImpl-&gt;m_directoryHandle);</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    CloseHandle(m_pImpl-&gt;m_overlappedEvent);</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    CloseHandle(m_pImpl-&gt;m_directoryHandle);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    m_sDirectoryPath.Clear();</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  }</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>}</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>xiiDirectoryWatcher::~xiiDirectoryWatcher()</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>{</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  CloseDirectory();</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  XII_DEFAULT_DELETE(m_pImpl);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>}</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span><span class="keywordtype">void</span> xiiDirectoryWatcherImpl::DoRead()</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>{</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  ResetEvent(m_overlappedEvent);</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  memset(&amp;m_overlapped, 0, <span class="keyword">sizeof</span>(m_overlapped));</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  m_overlapped.hEvent = m_overlappedEvent;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  BOOL success        = ReadDirectoryChangesExW(m_directoryHandle, m_buffer.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), m_buffer.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>(), m_whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(xiiDirectoryWatcher::Watch::Subdirectories), m_filter, <span class="keyword">nullptr</span>, &amp;m_overlapped, <span class="keyword">nullptr</span>, ReadDirectoryNotifyExtendedInformation);</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  XII_ASSERT_DEV(success, <span class="stringliteral">&quot;ReadDirectoryChangesW failed.&quot;</span>);</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>}</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span><span class="keywordtype">void</span> xiiDirectoryWatcher::EnumerateChanges(EnumerateChangesFunction <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>, <a class="code hl_struct" href="../../d7/dc1/structxii_time.htm">xiiTime</a> waitUpTo)</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>{</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  MoveEvent                                     pendingRemoveOrRename;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="keyword">const</span> <a class="code hl_struct" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiDirectoryWatcher::Watch&gt;</a> whatToWatch = m_pImpl-&gt;m_whatToWatch;</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  xiiFileSystemMirrorType*                      mirror      = m_pImpl-&gt;m_mirror.Borrow();</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="comment">// Renaming a file to the same filename with different casing triggers the events REMOVED (old casing) -&gt; RENAMED_OLD_NAME -&gt; _RENAMED_NEW_NAME.</span></div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="comment">// Thus, we need to cache every remove event to make sure the very next event is not a rename of the exact same file.</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <span class="keyword">auto</span> FirePendingRemove = [&amp;]() {</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <span class="keywordflow">if</span> (!pendingRemoveOrRename.IsEmpty())</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    {</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>      <span class="keywordflow">if</span> (pendingRemoveOrRename.isDirectory)</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>      {</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>        <span class="keywordflow">if</span> (whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(Watch::Deletes))</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>        {</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>          <span class="keywordflow">if</span> (mirror &amp;&amp; whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(Watch::Subdirectories))</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>          {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>            mirror-&gt;Enumerate(pendingRemoveOrRename.path, [&amp;](<span class="keyword">const</span> <a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; sPath, xiiFileSystemMirrorType::Type type) { <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>(sPath, xiiDirectoryWatcherAction::Removed, (type == xiiFileSystemMirrorType::Type::File) ? xiiDirectoryWatcherType::File : xiiDirectoryWatcherType::Directory); }).AssertSuccess();</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>          }</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>          <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>(pendingRemoveOrRename.path, xiiDirectoryWatcherAction::Removed, xiiDirectoryWatcherType::Directory);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>        }</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>        <span class="keywordflow">if</span> (mirror)</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>        {</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>          mirror-&gt;RemoveDirectory(pendingRemoveOrRename.path).AssertSuccess();</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>        }</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>      }</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>      {</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>        <span class="keywordflow">if</span> (mirror)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>        {</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>          mirror-&gt;RemoveFile(pendingRemoveOrRename.path).AssertSuccess();</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>        }</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>        <span class="keywordflow">if</span> (whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(xiiDirectoryWatcher::Watch::Deletes))</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>        {</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>          <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>(pendingRemoveOrRename.path, xiiDirectoryWatcherAction::Removed, xiiDirectoryWatcherType::File);</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>        }</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>      }</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>      pendingRemoveOrRename.Clear();</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>    }</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  };</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  XII_SCOPE_EXIT(FirePendingRemove());</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  XII_ASSERT_DEV(!m_sDirectoryPath.IsEmpty(), <span class="stringliteral">&quot;No directory opened!&quot;</span>);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keywordflow">while</span> (WaitForSingleObject(m_pImpl-&gt;m_overlappedEvent, <span class="keyword">static_cast&lt;</span>DWORD<span class="keyword">&gt;</span>(waitUpTo.<a class="code hl_function" href="../../d7/dc1/structxii_time.htm#ab039f77744cbad442220b8b6d2f9c0e5">GetMilliseconds</a>())) == WAIT_OBJECT_0)</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  {</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    waitUpTo = <a class="code hl_function" href="../../d7/dc1/structxii_time.htm#af50981ed01769e51493ea3d573c007ae">xiiTime::MakeZero</a>(); <span class="comment">// only wait on the first call to GetQueuedCompletionStatus</span></div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    DWORD numberOfBytes = 0;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>    GetOverlappedResult(m_pImpl-&gt;m_directoryHandle, &amp;m_pImpl-&gt;m_overlapped, &amp;numberOfBytes, FALSE);</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>    <span class="comment">// Copy the buffer</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>    <a class="code hl_class" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;xiiUInt8, 4096&gt;</a> buffer;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>    buffer.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">SetCountUninitialized</a>(numberOfBytes);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>    buffer.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">GetArrayPtr</a>().CopyFrom(m_pImpl-&gt;m_buffer.GetArrayPtr().GetSubArray(0, numberOfBytes));</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    <span class="comment">// Reissue the read request</span></div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>    m_pImpl-&gt;DoRead();</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    <span class="keywordflow">if</span> (numberOfBytes == 0)</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>    {</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>    }</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    MoveEvent lastMoveFrom;</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>    <span class="comment">// Progress the messages</span></div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>    <span class="keyword">auto</span> info = (<span class="keyword">const</span> FILE_NOTIFY_EXTENDED_INFORMATION*)buffer.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>();</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>    {</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>      <span class="keyword">auto</span>     directory   = <a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const WCHAR&gt;</a>(info-&gt;FileName, info-&gt;FileNameLength / <span class="keyword">sizeof</span>(WCHAR));</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>      xiiInt32 bytesNeeded = WideCharToMultiByte(CP_UTF8, 0, directory.GetPtr(), directory.GetCount(), <span class="keyword">nullptr</span>, 0, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>);</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>      <span class="keywordflow">if</span> (bytesNeeded &gt; 0)</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>      {</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>        <a class="code hl_class" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;char, 1024&gt;</a> dir;</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>        dir.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">SetCountUninitialized</a>(bytesNeeded);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>        WideCharToMultiByte(CP_UTF8, 0, directory.GetPtr(), directory.GetCount(), dir.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), dir.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>(), <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>);</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>        xiiDirectoryWatcherAction action    = xiiDirectoryWatcherAction::None;</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>        <span class="keywordtype">bool</span>                      fireEvent = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>        <a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> eventFilePath = m_sDirectoryPath;</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>        eventFilePath.<a class="code hl_function" href="../../d4/dbb/classxii_string_builder.htm#aeb8dedf699785b95812b7b137a901324">AppendPath</a>(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>(dir.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), dir.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>()));</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>        eventFilePath.<a class="code hl_function" href="../../d4/dbb/classxii_string_builder.htm#a7c1fb2c175a666d065a8abefaad5534a">MakeCleanPath</a>();</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>        <span class="keyword">const</span> <span class="keywordtype">bool</span> isFile = (info-&gt;FileAttributes &amp; FILE_ATTRIBUTE_DIRECTORY) == 0;</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>        <span class="keywordflow">if</span> (!pendingRemoveOrRename.IsEmpty() &amp;&amp; isFile == !pendingRemoveOrRename.isDirectory &amp;&amp; info-&gt;Action == FILE_ACTION_RENAMED_OLD_NAME &amp;&amp; pendingRemoveOrRename.path == eventFilePath)</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>        {</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>          <span class="comment">// This is the bogus removed event because we changed the casing of a file / directory, ignore.</span></div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>          pendingRemoveOrRename.Clear();</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>        }</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>        FirePendingRemove();</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>        <span class="keywordflow">if</span> (isFile)</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>        {</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>          <span class="keywordflow">switch</span> (info-&gt;Action)</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>          {</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>            <span class="keywordflow">case</span> FILE_ACTION_ADDED:</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>            {</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>              DEBUG_LOG(<span class="stringliteral">&quot;FILE_ACTION_ADDED {} ({})&quot;</span>, eventFilePath, info-&gt;LastModificationTime.QuadPart);</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>              action    = xiiDirectoryWatcherAction::Added;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>              fireEvent = whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(xiiDirectoryWatcher::Watch::Creates);</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>              <span class="keywordflow">if</span> (mirror)</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>              {</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>                <span class="keywordtype">bool</span> fileAlreadyExists = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>                mirror-&gt;AddFile(eventFilePath.<a class="code hl_function" href="../../d4/dbb/classxii_string_builder.htm#a83ea1990a5c974e5d806e9f32146b2a1">GetData</a>(), <span class="keyword">true</span>, &amp;fileAlreadyExists, <span class="keyword">nullptr</span>).AssertSuccess();</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>                <span class="keywordflow">if</span> (fileAlreadyExists)</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>                {</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>                  fireEvent = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>                }</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>              }</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>            }</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>            <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>            <span class="keywordflow">case</span> FILE_ACTION_REMOVED:</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>            {</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>              DEBUG_LOG(<span class="stringliteral">&quot;FILE_ACTION_REMOVED {} ({})&quot;</span>, eventFilePath, info-&gt;LastModificationTime.QuadPart);</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>              action                = xiiDirectoryWatcherAction::Removed;</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>              fireEvent             = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>              pendingRemoveOrRename = {eventFilePath, <span class="keyword">false</span>};</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>            }</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>            <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>            <span class="keywordflow">case</span> FILE_ACTION_MODIFIED:</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>            {</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>              DEBUG_LOG(<span class="stringliteral">&quot;FILE_ACTION_MODIFIED {} ({})&quot;</span>, eventFilePath, info-&gt;LastModificationTime.QuadPart);</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>              action               = xiiDirectoryWatcherAction::Modified;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>              fireEvent            = whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#a3e39644d3e435cd46310aa638994fd60">IsAnySet</a>(xiiDirectoryWatcher::Watch::Writes);</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>              <span class="keywordtype">bool</span> fileAreadyKnown = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>              <span class="keywordtype">bool</span> addPending      = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>              <span class="keywordflow">if</span> (mirror)</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>              {</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>                mirror-&gt;AddFile(eventFilePath.<a class="code hl_function" href="../../d4/dbb/classxii_string_builder.htm#a83ea1990a5c974e5d806e9f32146b2a1">GetData</a>(), <span class="keyword">false</span>, &amp;fileAreadyKnown, &amp;addPending).AssertSuccess();</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>              }</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>              <span class="keywordflow">if</span> (fileAreadyKnown &amp;&amp; addPending)</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>              {</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>                fireEvent = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>              }</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>            }</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>            <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>            <span class="keywordflow">case</span> FILE_ACTION_RENAMED_OLD_NAME:</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>            {</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>              DEBUG_LOG(<span class="stringliteral">&quot;FILE_ACTION_RENAMED_OLD_NAME {} ({})&quot;</span>, eventFilePath, info-&gt;LastModificationTime.QuadPart);</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>              XII_ASSERT_DEV(lastMoveFrom.IsEmpty(), <span class="stringliteral">&quot;there should be no pending move from&quot;</span>);</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>              action    = xiiDirectoryWatcherAction::RenamedOldName;</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>              fireEvent = whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#a3e39644d3e435cd46310aa638994fd60">IsAnySet</a>(xiiDirectoryWatcher::Watch::Renames);</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>              XII_ASSERT_DEV(lastMoveFrom.IsEmpty(), <span class="stringliteral">&quot;there should be no pending last move from&quot;</span>);</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>              lastMoveFrom = {eventFilePath, <span class="keyword">false</span>};</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>            }</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>            <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>            <span class="keywordflow">case</span> FILE_ACTION_RENAMED_NEW_NAME:</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>            {</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>              DEBUG_LOG(<span class="stringliteral">&quot;FILE_ACTION_RENAMED_NEW_NAME {} ({})&quot;</span>, eventFilePath, info-&gt;LastModificationTime.QuadPart);</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>              action    = xiiDirectoryWatcherAction::RenamedNewName;</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>              fireEvent = whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#a3e39644d3e435cd46310aa638994fd60">IsAnySet</a>(xiiDirectoryWatcher::Watch::Renames);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>              XII_ASSERT_DEV(!lastMoveFrom.IsEmpty() &amp;&amp; !lastMoveFrom.isDirectory, <span class="stringliteral">&quot;last move from doesn&#39;t match&quot;</span>);</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>              <span class="keywordflow">if</span> (mirror)</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>              {</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>                mirror-&gt;RemoveFile(lastMoveFrom.path).AssertSuccess();</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>                mirror-&gt;AddFile(eventFilePath, <span class="keyword">false</span>, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>).AssertSuccess();</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>              }</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>              lastMoveFrom.Clear();</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>            }</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>            <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>          }</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span> </div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>          <span class="keywordflow">if</span> (fireEvent)</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>          {</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>            <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>(eventFilePath, action, xiiDirectoryWatcherType::File);</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>          }</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>        }</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>        {</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>          <span class="keywordflow">switch</span> (info-&gt;Action)</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>          {</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>            <span class="keywordflow">case</span> FILE_ACTION_ADDED:</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>            {</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>              DEBUG_LOG(<span class="stringliteral">&quot;DIR_ACTION_ADDED {}&quot;</span>, eventFilePath);</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>              <span class="keywordtype">bool</span> directoryAlreadyKnown = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>              <span class="keywordflow">if</span> (mirror)</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>              {</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>                mirror-&gt;AddDirectory(eventFilePath, &amp;directoryAlreadyKnown).AssertSuccess();</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>              }</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span> </div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>              <span class="keywordflow">if</span> (whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(Watch::Creates) &amp;&amp; !directoryAlreadyKnown)</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>              {</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>                <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>(eventFilePath, xiiDirectoryWatcherAction::Added, xiiDirectoryWatcherType::Directory);</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>              }</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>              <span class="comment">// Whenever we add a directory we might be &quot;to late&quot; to see changes inside it.</span></div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>              <span class="comment">// So iterate the file system and make sure we track all files / subdirectories</span></div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>              <a class="code hl_class" href="../../dc/d89/classxii_file_system_iterator.htm">xiiFileSystemIterator</a> subdirIt;</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span> </div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>              subdirIt.<a class="code hl_function" href="../../dc/d89/classxii_file_system_iterator.htm#ac80336a10202f0b0a7910c08d3248991">StartSearch</a>(eventFilePath.<a class="code hl_function" href="../../d4/dbb/classxii_string_builder.htm#a83ea1990a5c974e5d806e9f32146b2a1">GetData</a>(), whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(xiiDirectoryWatcher::Watch::Subdirectories) ? xiiFileSystemIteratorFlags::ReportFilesAndFoldersRecursive : <a class="code hl_struct" href="../../d9/da1/structxii_file_system_iterator_flags.htm">xiiFileSystemIteratorFlags</a>::ReportFiles);</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>              <a class="code hl_class" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> tmpPath2;</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>              <span class="keywordflow">for</span> (; subdirIt.<a class="code hl_function" href="../../dc/d89/classxii_file_system_iterator.htm#acfae5e4e225090efdd1a3e06326365b5">IsValid</a>(); subdirIt.<a class="code hl_function" href="../../dc/d89/classxii_file_system_iterator.htm#a06b532c6c4f805bbde598312c96a437e">Next</a>())</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>              {</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>                <span class="keyword">const</span> <a class="code hl_struct" href="../../d6/dd0/structxii_file_stats.htm">xiiFileStats</a>&amp; stats = subdirIt.<a class="code hl_function" href="../../dc/d89/classxii_file_system_iterator.htm#a0b9c3c286e53d616e3f26c3b07523637">GetStats</a>();</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>                stats.<a class="code hl_function" href="../../d6/dd0/structxii_file_stats.htm#aa5701403661f80cc7f8bd1a10571108e">GetFullPath</a>(tmpPath2);</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>                <span class="keywordflow">if</span> (stats.<a class="code hl_variable" href="../../d6/dd0/structxii_file_stats.htm#a1de1837a109bff62cb0fc73fbab0bb5d">m_bIsDirectory</a>)</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>                {</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>                  directoryAlreadyKnown = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>                  <span class="keywordflow">if</span> (mirror)</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>                  {</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>                    mirror-&gt;AddDirectory(tmpPath2, &amp;directoryAlreadyKnown).AssertSuccess();</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>                  }</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>                  <span class="keywordflow">if</span> (whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(xiiDirectoryWatcher::Watch::Creates) &amp;&amp; !directoryAlreadyKnown)</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>                  {</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>                    <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>(tmpPath2, xiiDirectoryWatcherAction::Added, xiiDirectoryWatcherType::Directory);</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>                  }</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>                }</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>                <span class="keywordflow">else</span></div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>                {</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>                  <span class="keywordtype">bool</span> fileExistsAlready = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>                  <span class="keywordflow">if</span> (mirror)</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>                  {</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>                    mirror-&gt;AddFile(tmpPath2, <span class="keyword">false</span>, &amp;fileExistsAlready, <span class="keyword">nullptr</span>).AssertSuccess();</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>                  }</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>                  <span class="keywordflow">if</span> (whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(xiiDirectoryWatcher::Watch::Creates) &amp;&amp; !fileExistsAlready)</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>                  {</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>                    <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>(tmpPath2, xiiDirectoryWatcherAction::Added, xiiDirectoryWatcherType::File);</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>                  }</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>                }</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>              }</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>            }</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>            <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>            <span class="keywordflow">case</span> FILE_ACTION_REMOVED:</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>            {</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>              DEBUG_LOG(<span class="stringliteral">&quot;DIR_ACTION_REMOVED {}&quot;</span>, eventFilePath);</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>              pendingRemoveOrRename = {eventFilePath, <span class="keyword">true</span>};</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>            }</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>            <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>            <span class="keywordflow">case</span> FILE_ACTION_RENAMED_OLD_NAME:</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>            {</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>              DEBUG_LOG(<span class="stringliteral">&quot;DIR_ACTION_OLD_NAME {}&quot;</span>, eventFilePath);</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>              XII_ASSERT_DEV(lastMoveFrom.IsEmpty(), <span class="stringliteral">&quot;there should be no pending move from&quot;</span>);</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>              lastMoveFrom = {eventFilePath, <span class="keyword">true</span>};</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>            }</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>            <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>            <span class="keywordflow">case</span> FILE_ACTION_RENAMED_NEW_NAME:</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>            {</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>              DEBUG_LOG(<span class="stringliteral">&quot;DIR_ACTION_NEW_NAME {}&quot;</span>, eventFilePath);</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>              XII_ASSERT_DEV(!lastMoveFrom.IsEmpty(), <span class="stringliteral">&quot;rename old name and rename new name should always appear in pairs&quot;</span>);</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>              <span class="keywordflow">if</span> (mirror)</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>              {</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>                mirror-&gt;MoveDirectory(lastMoveFrom.path, eventFilePath).AssertSuccess();</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>              }</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>              <span class="keywordflow">if</span> (whatToWatch.<a class="code hl_function" href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">IsSet</a>(Watch::Renames))</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>              {</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span>                <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>(lastMoveFrom.path, xiiDirectoryWatcherAction::RenamedOldName, xiiDirectoryWatcherType::Directory);</div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>                <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>(eventFilePath, xiiDirectoryWatcherAction::RenamedNewName, xiiDirectoryWatcherType::Directory);</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>              }</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>              lastMoveFrom.Clear();</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>            }</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>            <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>            <span class="keywordflow">default</span>:</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>              <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>          }</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>        }</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>      }</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span> </div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>      <span class="keywordflow">if</span> (info-&gt;NextEntryOffset == 0)</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>      {</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>      }</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>      {</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>        info = (<span class="keyword">const</span> FILE_NOTIFY_EXTENDED_INFORMATION*)(((xiiUInt8*)info) + info-&gt;NextEntryOffset);</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>      }</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span>    }</div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>  }</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>}</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span> </div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span><span class="keywordtype">void</span> xiiDirectoryWatcher::EnumerateChanges(<a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;xiiDirectoryWatcher*&gt;</a> watchers, EnumerateChangesFunction <a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>, <a class="code hl_struct" href="../../d7/dc1/structxii_time.htm">xiiTime</a> waitUpTo)</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>{</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>  <a class="code hl_class" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;HANDLE, 16&gt;</a> events;</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>  events.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">SetCount</a>(watchers.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>());</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span> </div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; watchers.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>(); ++i)</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>  {</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>    events[i] = watchers[i]-&gt;m_pImpl-&gt;m_overlappedEvent;</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>  }</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span> </div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>  <span class="comment">// Wait for any of the watchers to have some data ready</span></div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>  <span class="keywordflow">if</span> (WaitForMultipleObjects(events.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>(), events.<a class="code hl_function" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), FALSE, <span class="keyword">static_cast&lt;</span>DWORD<span class="keyword">&gt;</span>(waitUpTo.<a class="code hl_function" href="../../d7/dc1/structxii_time.htm#ab039f77744cbad442220b8b6d2f9c0e5">GetMilliseconds</a>())) == WAIT_TIMEOUT)</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>  {</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span>  }</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span> </div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>  <span class="comment">// Iterate all of them to make sure we report all changes up to this point.</span></div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>  <span class="keywordflow">for</span> (xiiDirectoryWatcher* watcher : watchers)</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>  {</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span>    watcher-&gt;EnumerateChanges(<a class="code hl_function" href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a>);</div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>  }</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>}</div>
<div class="ttc" id="aclassxii_array_base_htm_a2ac4701f79554bcc89ba1a2b0ad5f9ad"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">xiiArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:417</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4114fd2fe9dc9b02ce50e8d723515c24"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">xiiArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(xiiUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:147</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a43100f93e19bb795ea0980dae2b28e0b"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">xiiArrayBase::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:164</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a706ff45a8f4a199483ba8053517c8d2a"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">xiiArrayBase::GetArrayPtr</a></div><div class="ttdeci">xiiArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:435</div></div>
<div class="ttc" id="aclassxii_array_base_htm_aeb9f05e6229fcca31131a822a99bc1f9"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">xiiArrayBase::SetCount</a></div><div class="ttdeci">void SetCount(xiiUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:98</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:37</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm_af1e072a93ee1a583d0db00e821c2d999"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">xiiArrayPtr::GetCount</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:146</div></div>
<div class="ttc" id="aclassxii_dos_device_path_htm"><div class="ttname"><a href="../../d4/d46/classxii_dos_device_path.htm">xiiDosDevicePath</a></div><div class="ttdoc">Converts an absolute path to a 'DOS device path'.</div><div class="ttdef"><b>Definition</b> DosDevicePath_win.h:15</div></div>
<div class="ttc" id="aclassxii_dynamic_array_htm"><div class="ttname"><a href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a></div><div class="ttdef"><b>Definition</b> DynamicArray.h:81</div></div>
<div class="ttc" id="aclassxii_file_system_iterator_htm"><div class="ttname"><a href="../../dc/d89/classxii_file_system_iterator.htm">xiiFileSystemIterator</a></div><div class="ttdoc">An xiiFileSystemIterator allows to iterate over all files in a certain directory.</div><div class="ttdef"><b>Definition</b> OSFile.h:94</div></div>
<div class="ttc" id="aclassxii_file_system_iterator_htm_a06b532c6c4f805bbde598312c96a437e"><div class="ttname"><a href="../../dc/d89/classxii_file_system_iterator.htm#a06b532c6c4f805bbde598312c96a437e">xiiFileSystemIterator::Next</a></div><div class="ttdeci">void Next()</div><div class="ttdoc">Advances the iterator to the next file object. Might recurse into sub-folders.</div></div>
<div class="ttc" id="aclassxii_file_system_iterator_htm_a0b9c3c286e53d616e3f26c3b07523637"><div class="ttname"><a href="../../dc/d89/classxii_file_system_iterator.htm#a0b9c3c286e53d616e3f26c3b07523637">xiiFileSystemIterator::GetStats</a></div><div class="ttdeci">const xiiFileStats &amp; GetStats() const</div><div class="ttdoc">Returns the file stats of the current object that the iterator points to.</div><div class="ttdef"><b>Definition</b> OSFile.h:130</div></div>
<div class="ttc" id="aclassxii_file_system_iterator_htm_ac80336a10202f0b0a7910c08d3248991"><div class="ttname"><a href="../../dc/d89/classxii_file_system_iterator.htm#ac80336a10202f0b0a7910c08d3248991">xiiFileSystemIterator::StartSearch</a></div><div class="ttdeci">void StartSearch(xiiStringView sSearchTerm, xiiBitflags&lt; xiiFileSystemIteratorFlags &gt; flags=xiiFileSystemIteratorFlags::Default)</div><div class="ttdoc">Starts a search at the given folder. Use * and ? as wildcards.</div></div>
<div class="ttc" id="aclassxii_file_system_iterator_htm_acfae5e4e225090efdd1a3e06326365b5"><div class="ttname"><a href="../../dc/d89/classxii_file_system_iterator.htm#acfae5e4e225090efdd1a3e06326365b5">xiiFileSystemIterator::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Returns true if the iterator currently points to a valid file entry.</div></div>
<div class="ttc" id="aclassxii_file_system_mirror_htm"><div class="ttname"><a href="../../d3/dd8/classxii_file_system_mirror.htm">xiiFileSystemMirror</a></div><div class="ttdef"><b>Definition</b> FileSystemMirror.h:13</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition</b> HybridArray.h:12</div></div>
<div class="ttc" id="aclassxii_string_builder_htm"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a></div><div class="ttdoc">xiiStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a7c1fb2c175a666d065a8abefaad5534a"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a7c1fb2c175a666d065a8abefaad5534a">xiiStringBuilder::MakeCleanPath</a></div><div class="ttdeci">void MakeCleanPath()</div><div class="ttdoc">Removes &quot;../&quot; where possible, replaces all path separators with /, removes double slashes.</div><div class="ttdef"><b>Definition</b> StringBuilder.cpp:750</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a83ea1990a5c974e5d806e9f32146b2a1"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a83ea1990a5c974e5d806e9f32146b2a1">xiiStringBuilder::GetData</a></div><div class="ttdeci">const char * GetData() const</div><div class="ttdoc">Returns a char pointer to the internal Utf8 data.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:148</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_aeb8dedf699785b95812b7b137a901324"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#aeb8dedf699785b95812b7b137a901324">xiiStringBuilder::AppendPath</a></div><div class="ttdeci">void AppendPath(xiiStringView sPath1, xiiStringView sPath2={}, xiiStringView sPath3={}, xiiStringView sPath4={})</div><div class="ttdoc">Appends several path pieces. Makes sure they are always properly separated by a slash.</div><div class="ttdef"><b>Definition</b> StringBuilder.cpp:864</div></div>
<div class="ttc" id="aclassxii_unique_ptr_htm"><div class="ttname"><a href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a></div><div class="ttdoc">A Unique ptr manages an object and destroys that object when it goes out of scope....</div><div class="ttdef"><b>Definition</b> UniquePtr.h:9</div></div>
<div class="ttc" id="agroup__group1_htm_ga24f647174760cac13d2624b5ad74b00c"><div class="ttname"><a href="../../da/d1f/group__group1.htm#ga24f647174760cac13d2624b5ad74b00c">func</a></div><div class="ttdeci">void func()</div><div class="ttdef"><b>Definition</b> group.cpp:13</div></div>
<div class="ttc" id="astructxii_bitflags_htm"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a></div><div class="ttdoc">The xiiBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition</b> Bitflags.h:82</div></div>
<div class="ttc" id="astructxii_bitflags_htm_a3e39644d3e435cd46310aa638994fd60"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm#a3e39644d3e435cd46310aa638994fd60">xiiBitflags::IsAnySet</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool IsAnySet(const xiiBitflags&lt; T &gt; &amp;rhs) const</div><div class="ttdoc">Returns whether any of the given flags is set.</div><div class="ttdef"><b>Definition</b> Bitflags.h:142</div></div>
<div class="ttc" id="astructxii_bitflags_htm_a95bb64059c3566df3c788303d16ea47e"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm#a95bb64059c3566df3c788303d16ea47e">xiiBitflags::AreAllSet</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool AreAllSet(const xiiBitflags&lt; T &gt; &amp;rhs) const</div><div class="ttdoc">Returns whether all the given flags are set.</div><div class="ttdef"><b>Definition</b> Bitflags.h:130</div></div>
<div class="ttc" id="astructxii_bitflags_htm_af2c990725fd731e800eeb6a22945003f"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm#af2c990725fd731e800eeb6a22945003f">xiiBitflags::IsSet</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool IsSet(Enum flag) const</div><div class="ttdoc">Checks if certain flags are set within the bitfield.</div><div class="ttdef"><b>Definition</b> Bitflags.h:124</div></div>
<div class="ttc" id="astructxii_directory_watcher_impl_htm"><div class="ttname"><a href="../../df/d26/structxii_directory_watcher_impl.htm">xiiDirectoryWatcherImpl</a></div><div class="ttdef"><b>Definition</b> DirectoryWatcher_posix.h:676</div></div>
<div class="ttc" id="astructxii_file_stats_htm"><div class="ttname"><a href="../../d6/dd0/structxii_file_stats.htm">xiiFileStats</a></div><div class="ttdoc">Holds the stats for a file.</div><div class="ttdef"><b>Definition</b> OSFile.h:34</div></div>
<div class="ttc" id="astructxii_file_stats_htm_a1de1837a109bff62cb0fc73fbab0bb5d"><div class="ttname"><a href="../../d6/dd0/structxii_file_stats.htm#a1de1837a109bff62cb0fc73fbab0bb5d">xiiFileStats::m_bIsDirectory</a></div><div class="ttdeci">bool m_bIsDirectory</div><div class="ttdoc">Whether the file object is a file or folder.</div><div class="ttdef"><b>Definition</b> OSFile.h:56</div></div>
<div class="ttc" id="astructxii_file_stats_htm_aa5701403661f80cc7f8bd1a10571108e"><div class="ttname"><a href="../../d6/dd0/structxii_file_stats.htm#aa5701403661f80cc7f8bd1a10571108e">xiiFileStats::GetFullPath</a></div><div class="ttdeci">void GetFullPath(xiiStringBuilder &amp;ref_sPath) const</div><div class="ttdoc">Stores the concatenated m_sParentPath and m_sName in path.</div><div class="ttdef"><b>Definition</b> OSFile.cpp:16</div></div>
<div class="ttc" id="astructxii_file_system_iterator_flags_htm"><div class="ttname"><a href="../../d9/da1/structxii_file_system_iterator_flags.htm">xiiFileSystemIteratorFlags</a></div><div class="ttdef"><b>Definition</b> OSFile.h:64</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm_a3e3c71d8981b8bbbca81a9c55421860d"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm#a3e3c71d8981b8bbbca81a9c55421860d">xiiHybridStringBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Resets this string to an empty string.</div><div class="ttdef"><b>Definition</b> String_inl.h:49</div></div>
<div class="ttc" id="astructxii_hybrid_string_htm"><div class="ttname"><a href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt; 32, xiiDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:56</div></div>
<div class="ttc" id="astructxii_string_base_htm_a52ad52604f0b98226a0342393b8db662"><div class="ttname"><a href="../../d2/d29/structxii_string_base.htm#a52ad52604f0b98226a0342393b8db662">xiiStringBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether the string is an empty string.</div><div class="ttdef"><b>Definition</b> StringBase_inl.h:25</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition</b> StringView.h:28</div></div>
<div class="ttc" id="astructxii_time_htm"><div class="ttname"><a href="../../d7/dc1/structxii_time.htm">xiiTime</a></div><div class="ttdoc">The time class encapsulates a double value storing the time in seconds.</div><div class="ttdef"><b>Definition</b> Time.h:12</div></div>
<div class="ttc" id="astructxii_time_htm_ab039f77744cbad442220b8b6d2f9c0e5"><div class="ttname"><a href="../../d7/dc1/structxii_time.htm#ab039f77744cbad442220b8b6d2f9c0e5">xiiTime::GetMilliseconds</a></div><div class="ttdeci">constexpr double GetMilliseconds() const</div><div class="ttdoc">Returns the milliseconds value.</div><div class="ttdef"><b>Definition</b> Time_inl.h:25</div></div>
<div class="ttc" id="astructxii_time_htm_af50981ed01769e51493ea3d573c007ae"><div class="ttname"><a href="../../d7/dc1/structxii_time.htm#af50981ed01769e51493ea3d573c007ae">xiiTime::MakeZero</a></div><div class="ttdeci">XII_ALWAYS_INLINE static constexpr xiiTime MakeZero()</div><div class="ttdoc">Creates an instance of xiiTime that was initialized with zero.</div><div class="ttdef"><b>Definition</b> Time.h:36</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6d6e889d564fa4f359ed5818c6957751.htm">IO</a></li><li class="navelem"><a class="el" href="../../dir_8853712b91b4fc71fafc2d6a1532e9b6.htm">Implementation</a></li><li class="navelem"><a class="el" href="../../dir_c9da17e97cb61f69c70fb70c26699c36.htm">Win</a></li><li class="navelem"><b>DirectoryWatcher_win.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:47:30 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
