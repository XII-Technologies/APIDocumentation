<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: xiiSimdQuatd Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/d20/classxii_simd_quatd.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d7/d6d/classxii_simd_quatd-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">xiiSimdQuatd Class Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af0981a90457d4b597ea3f0a4f16c747d" id="r_af0981a90457d4b597ea3f0a4f16c747d"><td class="memItemLeft" align="right" valign="top"><a id="af0981a90457d4b597ea3f0a4f16c747d" name="af0981a90457d4b597ea3f0a4f16c747d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:af0981a90457d4b597ea3f0a4f16c747d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a688d90d75f31370c303705c898eab14b" id="r_a688d90d75f31370c303705c898eab14b"><td class="memItemLeft" align="right" valign="top"><a id="a688d90d75f31370c303705c898eab14b" name="a688d90d75f31370c303705c898eab14b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>xiiSimdQuatd</b> (const <a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a> &amp;v)</td></tr>
<tr class="separator:a688d90d75f31370c303705c898eab14b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0dbd241b79d5019d387532a33ddaeda" id="r_aa0dbd241b79d5019d387532a33ddaeda"><td class="memItemLeft" align="right" valign="top"><a id="aa0dbd241b79d5019d387532a33ddaeda" name="aa0dbd241b79d5019d387532a33ddaeda"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Normalize</b> ()</td></tr>
<tr class="memdesc:aa0dbd241b79d5019d387532a33ddaeda"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes the quaternion to unit length. ALL rotation-quaternions should be normalized at all times (automatically). <br /></td></tr>
<tr class="separator:aa0dbd241b79d5019d387532a33ddaeda"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcbc4ed4c18e4b1cd6789ff00487544d" id="r_afcbc4ed4c18e4b1cd6789ff00487544d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afcbc4ed4c18e4b1cd6789ff00487544d">GetRotationAxisAndAngle</a> (<a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a> &amp;ref_vAxis, <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;ref_fAngle, const <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;fEpsilon=xiiMath::DefaultEpsilon&lt; double &gt;()) const</td></tr>
<tr class="memdesc:afcbc4ed4c18e4b1cd6789ff00487544d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the rotation-axis and angle (in Radians), that this quaternion rotates around.  <br /></td></tr>
<tr class="separator:afcbc4ed4c18e4b1cd6789ff00487544d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d51fb03fd47f878bbb368c9da7e7932" id="r_a0d51fb03fd47f878bbb368c9da7e7932"><td class="memItemLeft" align="right" valign="top"><a id="a0d51fb03fd47f878bbb368c9da7e7932" name="a0d51fb03fd47f878bbb368c9da7e7932"></a>
<a class="el" href="../../dc/dae/classxii_simd_mat4d.htm">xiiSimdMat4d</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetAsMat4</b> () const</td></tr>
<tr class="memdesc:a0d51fb03fd47f878bbb368c9da7e7932"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the Quaternion as a matrix. <br /></td></tr>
<tr class="separator:a0d51fb03fd47f878bbb368c9da7e7932"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97ff5e32efc02cc60d1c1559542af08d" id="r_a97ff5e32efc02cc60d1c1559542af08d"><td class="memItemLeft" align="right" valign="top"><a id="a97ff5e32efc02cc60d1c1559542af08d" name="a97ff5e32efc02cc60d1c1559542af08d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValid</b> (const <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;fEpsilon=xiiMath::DefaultEpsilon&lt; double &gt;()) const</td></tr>
<tr class="memdesc:a97ff5e32efc02cc60d1c1559542af08d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all components are neither NaN nor infinite and that the quaternion is normalized. <br /></td></tr>
<tr class="separator:a97ff5e32efc02cc60d1c1559542af08d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec7eaa9cdcfb898336307938ba431223" id="r_aec7eaa9cdcfb898336307938ba431223"><td class="memItemLeft" align="right" valign="top"><a id="aec7eaa9cdcfb898336307938ba431223" name="aec7eaa9cdcfb898336307938ba431223"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsNaN</b> () const</td></tr>
<tr class="memdesc:aec7eaa9cdcfb898336307938ba431223"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether any component is NaN. <br /></td></tr>
<tr class="separator:aec7eaa9cdcfb898336307938ba431223"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e9a2e7d49ea7696581f2b8fd3d088d6" id="r_a6e9a2e7d49ea7696581f2b8fd3d088d6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6e9a2e7d49ea7696581f2b8fd3d088d6">IsEqualRotation</a> (const <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a> &amp;other, const <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;fEpsilon) const</td></tr>
<tr class="memdesc:a6e9a2e7d49ea7696581f2b8fd3d088d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines whether <em>this</em> and <em>qOther</em> represent the same rotation. This is a rather slow operation.  <br /></td></tr>
<tr class="separator:a6e9a2e7d49ea7696581f2b8fd3d088d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72c192a05f51ac03f21587d353d0cd7e" id="r_a72c192a05f51ac03f21587d353d0cd7e"><td class="memItemLeft" align="right" valign="top"><a id="a72c192a05f51ac03f21587d353d0cd7e" name="a72c192a05f51ac03f21587d353d0cd7e"></a>
<a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> () const</td></tr>
<tr class="memdesc:a72c192a05f51ac03f21587d353d0cd7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a Quaternion that represents the negative / inverted rotation. <br /></td></tr>
<tr class="separator:a72c192a05f51ac03f21587d353d0cd7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf0c635e5120c86504b4e2af9e5749e0" id="r_abf0c635e5120c86504b4e2af9e5749e0"><td class="memItemLeft" align="right" valign="top"><a id="abf0c635e5120c86504b4e2af9e5749e0" name="abf0c635e5120c86504b4e2af9e5749e0"></a>
<a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (const <a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a> &amp;v) const</td></tr>
<tr class="memdesc:abf0c635e5120c86504b4e2af9e5749e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rotates v by q. <br /></td></tr>
<tr class="separator:abf0c635e5120c86504b4e2af9e5749e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e66c5ec11d44c577fd258a0a9da0dc3" id="r_a5e66c5ec11d44c577fd258a0a9da0dc3"><td class="memItemLeft" align="right" valign="top"><a id="a5e66c5ec11d44c577fd258a0a9da0dc3" name="a5e66c5ec11d44c577fd258a0a9da0dc3"></a>
<a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> (const <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a> &amp;q2) const</td></tr>
<tr class="memdesc:a5e66c5ec11d44c577fd258a0a9da0dc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Concatenates the rotations of q1 and q2. <br /></td></tr>
<tr class="separator:a5e66c5ec11d44c577fd258a0a9da0dc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70933d57499b32decd0e4086b06ede1e" id="r_a70933d57499b32decd0e4086b06ede1e"><td class="memItemLeft" align="right" valign="top"><a id="a70933d57499b32decd0e4086b06ede1e" name="a70933d57499b32decd0e4086b06ede1e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a> &amp;q2) const</td></tr>
<tr class="separator:a70933d57499b32decd0e4086b06ede1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65f2083ba39c18b90316be5362721416" id="r_a65f2083ba39c18b90316be5362721416"><td class="memItemLeft" align="right" valign="top"><a id="a65f2083ba39c18b90316be5362721416" name="a65f2083ba39c18b90316be5362721416"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a> &amp;q2) const</td></tr>
<tr class="separator:a65f2083ba39c18b90316be5362721416"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:adf6e62858768b0f3531e4552aa62f213" id="r_adf6e62858768b0f3531e4552aa62f213"><td class="memItemLeft" align="right" valign="top"><a id="adf6e62858768b0f3531e4552aa62f213" name="adf6e62858768b0f3531e4552aa62f213"></a>
static const <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a>&#160;</td><td class="memItemRight" valign="bottom"><b>MakeIdentity</b> ()</td></tr>
<tr class="memdesc:adf6e62858768b0f3531e4552aa62f213"><td class="mdescLeft">&#160;</td><td class="mdescRight">Static function that returns a quaternion that represents the identity rotation (none). <br /></td></tr>
<tr class="separator:adf6e62858768b0f3531e4552aa62f213"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a97572b113fe78e17586787f6394413" id="r_a3a97572b113fe78e17586787f6394413"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3a97572b113fe78e17586787f6394413">MakeFromElements</a> (<a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> x, <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> y, <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> z, <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> w)</td></tr>
<tr class="memdesc:a3a97572b113fe78e17586787f6394413"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the individual elements of the quaternion directly. Note that x,y,z do NOT represent a rotation axis, and w does NOT represent an angle.  <br /></td></tr>
<tr class="separator:a3a97572b113fe78e17586787f6394413"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abeb6061105c40302e1a7f44e1cb4b60b" id="r_abeb6061105c40302e1a7f44e1cb4b60b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abeb6061105c40302e1a7f44e1cb4b60b">MakeFromAxisAndAngle</a> (const <a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a> &amp;vRotationAxis, const <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;fAngle)</td></tr>
<tr class="memdesc:abeb6061105c40302e1a7f44e1cb4b60b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a quaternion from a rotation-axis and an angle (angle is given in Radians or as a xiiAngle)  <br /></td></tr>
<tr class="separator:abeb6061105c40302e1a7f44e1cb4b60b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afedff99d7d8fbbb8b9f167a32d72c4a3" id="r_afedff99d7d8fbbb8b9f167a32d72c4a3"><td class="memItemLeft" align="right" valign="top"><a id="afedff99d7d8fbbb8b9f167a32d72c4a3" name="afedff99d7d8fbbb8b9f167a32d72c4a3"></a>
static <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a>&#160;</td><td class="memItemRight" valign="bottom"><b>MakeShortestRotation</b> (const <a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a> &amp;vDirFrom, const <a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a> &amp;vDirTo)</td></tr>
<tr class="memdesc:afedff99d7d8fbbb8b9f167a32d72c4a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a quaternion, that rotates through the shortest arc from "vDirFrom" to "vDirTo". <br /></td></tr>
<tr class="separator:afedff99d7d8fbbb8b9f167a32d72c4a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4878bbb0594befd48c1f8d01c73d383" id="r_ac4878bbb0594befd48c1f8d01c73d383"><td class="memItemLeft" align="right" valign="top"><a id="ac4878bbb0594befd48c1f8d01c73d383" name="ac4878bbb0594befd48c1f8d01c73d383"></a>
static <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a>&#160;</td><td class="memItemRight" valign="bottom"><b>MakeSlerp</b> (const <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a> &amp;qFrom, const <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a> &amp;qTo, const <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;t)</td></tr>
<tr class="memdesc:ac4878bbb0594befd48c1f8d01c73d383"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a quaternion that is the spherical linear interpolation of the other two. <br /></td></tr>
<tr class="separator:ac4878bbb0594befd48c1f8d01c73d383"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aeb28a481aecb7f979411e68ac17f5c25" id="r_aeb28a481aecb7f979411e68ac17f5c25"><td class="memItemLeft" align="right" valign="top"><a id="aeb28a481aecb7f979411e68ac17f5c25" name="aeb28a481aecb7f979411e68ac17f5c25"></a>
<a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_v</b></td></tr>
<tr class="separator:aeb28a481aecb7f979411e68ac17f5c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="afcbc4ed4c18e4b1cd6789ff00487544d" name="afcbc4ed4c18e4b1cd6789ff00487544d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afcbc4ed4c18e4b1cd6789ff00487544d">&#9670;&#160;</a></span>GetRotationAxisAndAngle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiSimdQuatd::GetRotationAxisAndAngle </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_vAxis</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_fAngle</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>fEpsilon</em></span><span class="paramdefsep"> = </span><span class="paramdefval">xiiMath::DefaultEpsilon&lt;double&gt;()</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the rotation-axis and angle (in Radians), that this quaternion rotates around. </p>
<dl class="todo"><dt><b><a class="el" href="../../dd/da0/todo.htm#_todo000056">Todo</a></b></dt><dd>optimize </dd></dl>

</div>
</div>
<a id="a6e9a2e7d49ea7696581f2b8fd3d088d6" name="a6e9a2e7d49ea7696581f2b8fd3d088d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e9a2e7d49ea7696581f2b8fd3d088d6">&#9670;&#160;</a></span>IsEqualRotation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiSimdQuatd::IsEqualRotation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>other</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>fEpsilon</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Determines whether <em>this</em> and <em>qOther</em> represent the same rotation. This is a rather slow operation. </p>
<p>Currently it fails when one of the given quaternions is identity (so no rotation, at all), as it tries to compare rotation axis' and angles, which is undefined for the identity quaternion (also there are infinite representations for 'identity', so it's difficult to check for it). </p>

</div>
</div>
<a id="abeb6061105c40302e1a7f44e1cb4b60b" name="abeb6061105c40302e1a7f44e1cb4b60b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abeb6061105c40302e1a7f44e1cb4b60b">&#9670;&#160;</a></span>MakeFromAxisAndAngle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a> xiiSimdQuatd::MakeFromAxisAndAngle </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d5/dba/classxii_simd_vec4d.htm">xiiSimdVec4d</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vRotationAxis</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>fAngle</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a quaternion from a rotation-axis and an angle (angle is given in Radians or as a xiiAngle) </p>
<dl class="todo"><dt><b><a class="el" href="../../dd/da0/todo.htm#_todo000055">Todo</a></b></dt><dd>optimize </dd></dl>

</div>
</div>
<a id="a3a97572b113fe78e17586787f6394413" name="a3a97572b113fe78e17586787f6394413"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a97572b113fe78e17586787f6394413">&#9670;&#160;</a></span>MakeFromElements()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE <a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a> xiiSimdQuatd::MakeFromElements </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a></td>          <td class="paramname"><span class="paramname"><em>x</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a></td>          <td class="paramname"><span class="paramname"><em>y</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a></td>          <td class="paramname"><span class="paramname"><em>z</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/df1/classxii_simd_double.htm">xiiSimdDouble</a></td>          <td class="paramname"><span class="paramname"><em>w</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the individual elements of the quaternion directly. Note that x,y,z do NOT represent a rotation axis, and w does NOT represent an angle. </p>
<p>Use this function only if you have good understanding of quaternion math and know exactly what you are doing. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/SimdMath/<a class="el" href="../../d5/d4f/_simd_quatd_8h_source.htm">SimdQuatd.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/SimdMath/Implementation/<b>SimdQuatd.cpp</b></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/SimdMath/Implementation/<a class="el" href="../../da/d06/_simd_quatd__inl_8h_source.htm">SimdQuatd_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d20/classxii_simd_quatd.htm">xiiSimdQuatd</a></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:02:17 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
