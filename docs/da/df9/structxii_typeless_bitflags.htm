<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiTypelessBitflags&lt; T &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/df9/structxii_typeless_bitflags.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../da/dc1/structxii_typeless_bitflags-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiTypelessBitflags&lt; T &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Similar to <a class="el" href="../../d7/d55/structxii_bitflags.htm" title="The xiiBitflags class allows you to work with type-safe bitflags.">xiiBitflags</a> but without type-safety.  
 <a href="../../da/df9/structxii_typeless_bitflags.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/dec/_bitflags_8h_source.htm">Bitflags.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:af5ae8af473ebe69e1de102e195c606f4"><td class="memItemLeft" align="right" valign="top"><a id="af5ae8af473ebe69e1de102e195c606f4"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>StorageType</b> = T</td></tr>
<tr class="separator:af5ae8af473ebe69e1de102e195c606f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac61235b3781fc75d3f914658cf1b3895"><td class="memItemLeft" align="right" valign="top"><a id="ac61235b3781fc75d3f914658cf1b3895"></a>
XII_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#ac61235b3781fc75d3f914658cf1b3895">xiiTypelessBitflags</a> ()</td></tr>
<tr class="memdesc:ac61235b3781fc75d3f914658cf1b3895"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the flags zero. <br /></td></tr>
<tr class="separator:ac61235b3781fc75d3f914658cf1b3895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98c156a5eb4a57499a5b3d2bb3255a9e"><td class="memItemLeft" align="right" valign="top"><a id="a98c156a5eb4a57499a5b3d2bb3255a9e"></a>
XII_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>xiiTypelessBitflags</b> (StorageType flags)</td></tr>
<tr class="separator:a98c156a5eb4a57499a5b3d2bb3255a9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe810a0042f23e46efd2b33d5e1ede3c"><td class="memItemLeft" align="right" valign="top"><a id="afe810a0042f23e46efd2b33d5e1ede3c"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (StorageType flags)</td></tr>
<tr class="separator:afe810a0042f23e46efd2b33d5e1ede3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3c77eb1aeaea1e4e76a8e3090281d91"><td class="memItemLeft" align="right" valign="top"><a id="ae3c77eb1aeaea1e4e76a8e3090281d91"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const StorageType rhs) const</td></tr>
<tr class="separator:ae3c77eb1aeaea1e4e76a8e3090281d91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f2f376db0872bdb8a90de35d43c84a2"><td class="memItemLeft" align="right" valign="top"><a id="a3f2f376db0872bdb8a90de35d43c84a2"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const StorageType rhs) const</td></tr>
<tr class="separator:a3f2f376db0872bdb8a90de35d43c84a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d317bc95037d053fcc2a1b86118eaa0"><td class="memItemLeft" align="right" valign="top"><a id="a5d317bc95037d053fcc2a1b86118eaa0"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="separator:a5d317bc95037d053fcc2a1b86118eaa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a580ad3472d8a67a7c22a90a6c652668e"><td class="memItemLeft" align="right" valign="top"><a id="a580ad3472d8a67a7c22a90a6c652668e"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="separator:a580ad3472d8a67a7c22a90a6c652668e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31e81c25770f6aa116b21457b1a5d67b"><td class="memItemLeft" align="right" valign="top"><a id="a31e81c25770f6aa116b21457b1a5d67b"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#a31e81c25770f6aa116b21457b1a5d67b">Clear</a> ()</td></tr>
<tr class="memdesc:a31e81c25770f6aa116b21457b1a5d67b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all flags. <br /></td></tr>
<tr class="separator:a31e81c25770f6aa116b21457b1a5d67b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae38d3d9dd7fd11bc3b945e6d0924add7"><td class="memItemLeft" align="right" valign="top"><a id="ae38d3d9dd7fd11bc3b945e6d0924add7"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#ae38d3d9dd7fd11bc3b945e6d0924add7">AreAllSet</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ae38d3d9dd7fd11bc3b945e6d0924add7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether all the given flags are set. <br /></td></tr>
<tr class="separator:ae38d3d9dd7fd11bc3b945e6d0924add7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee640d29869e67c254d5fd623a61df6b"><td class="memItemLeft" align="right" valign="top"><a id="aee640d29869e67c254d5fd623a61df6b"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#aee640d29869e67c254d5fd623a61df6b">AreNoneSet</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:aee640d29869e67c254d5fd623a61df6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether none of the given flags is set. <br /></td></tr>
<tr class="separator:aee640d29869e67c254d5fd623a61df6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac02960fe2a426e3985806ebf738fc2e6"><td class="memItemLeft" align="right" valign="top"><a id="ac02960fe2a426e3985806ebf738fc2e6"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#ac02960fe2a426e3985806ebf738fc2e6">IsAnySet</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ac02960fe2a426e3985806ebf738fc2e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether any of the given flags is set. <br /></td></tr>
<tr class="separator:ac02960fe2a426e3985806ebf738fc2e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58de878ce3e536d619beed986bb8502f"><td class="memItemLeft" align="right" valign="top">XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#a58de878ce3e536d619beed986bb8502f">IsStrictlyAnySet</a> (const <a class="el" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a58de878ce3e536d619beed986bb8502f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether there are strictly any of the given flags set.  <a href="../../da/df9/structxii_typeless_bitflags.htm#a58de878ce3e536d619beed986bb8502f">More...</a><br /></td></tr>
<tr class="separator:a58de878ce3e536d619beed986bb8502f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e886f4d290a296279edcf7f978aa4f"><td class="memItemLeft" align="right" valign="top"><a id="aa6e886f4d290a296279edcf7f978aa4f"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#aa6e886f4d290a296279edcf7f978aa4f">Add</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:aa6e886f4d290a296279edcf7f978aa4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the given flag. <br /></td></tr>
<tr class="separator:aa6e886f4d290a296279edcf7f978aa4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2658bac26744cb8bbd808807cd9bc905"><td class="memItemLeft" align="right" valign="top"><a id="a2658bac26744cb8bbd808807cd9bc905"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#a2658bac26744cb8bbd808807cd9bc905">Remove</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a2658bac26744cb8bbd808807cd9bc905"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the given flag. <br /></td></tr>
<tr class="separator:a2658bac26744cb8bbd808807cd9bc905"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9a731ded4fd0b29c98a74fafe436851"><td class="memItemLeft" align="right" valign="top"><a id="ac9a731ded4fd0b29c98a74fafe436851"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#ac9a731ded4fd0b29c98a74fafe436851">Toggle</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:ac9a731ded4fd0b29c98a74fafe436851"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggles the state of the given flag. <br /></td></tr>
<tr class="separator:ac9a731ded4fd0b29c98a74fafe436851"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4ac2502b0c5daa27f801e8058e35289"><td class="memItemLeft" align="right" valign="top"><a id="ae4ac2502b0c5daa27f801e8058e35289"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#ae4ac2502b0c5daa27f801e8058e35289">AddOrRemove</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs, bool bState)</td></tr>
<tr class="memdesc:ae4ac2502b0c5daa27f801e8058e35289"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets or clears the given flag. <br /></td></tr>
<tr class="separator:ae4ac2502b0c5daa27f801e8058e35289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b1493d265960876d08c1db08413cae3"><td class="memItemLeft" align="right" valign="top"><a id="a3b1493d265960876d08c1db08413cae3"></a>
XII_ALWAYS_INLINE <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#a3b1493d265960876d08c1db08413cae3">operator|</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a3b1493d265960876d08c1db08413cae3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an object that has the flags of <em>this</em> and <em>rhs</em> combined. <br /></td></tr>
<tr class="separator:a3b1493d265960876d08c1db08413cae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae64c28f51606d6b60cbb0297276dbca8"><td class="memItemLeft" align="right" valign="top"><a id="ae64c28f51606d6b60cbb0297276dbca8"></a>
XII_ALWAYS_INLINE <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#ae64c28f51606d6b60cbb0297276dbca8">operator&amp;</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ae64c28f51606d6b60cbb0297276dbca8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an object that has the flags that were set both in <em>this</em> and <em>rhs</em>. <br /></td></tr>
<tr class="separator:ae64c28f51606d6b60cbb0297276dbca8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95e3e1e76dd67f98facaac62b1465bd1"><td class="memItemLeft" align="right" valign="top"><a id="a95e3e1e76dd67f98facaac62b1465bd1"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#a95e3e1e76dd67f98facaac62b1465bd1">operator|=</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a95e3e1e76dd67f98facaac62b1465bd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies <em>this</em> to also contain the bits from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a95e3e1e76dd67f98facaac62b1465bd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14381d1a0bc1a7d9b138914b96512af4"><td class="memItemLeft" align="right" valign="top"><a id="a14381d1a0bc1a7d9b138914b96512af4"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#a14381d1a0bc1a7d9b138914b96512af4">operator&amp;=</a> (const <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a14381d1a0bc1a7d9b138914b96512af4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies <em>this</em> to only contain the bits that were set in <em>this</em> and <em>rhs</em>. <br /></td></tr>
<tr class="separator:a14381d1a0bc1a7d9b138914b96512af4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5badc96670b3cd4e2421e3ad2100e875"><td class="memItemLeft" align="right" valign="top"><a id="a5badc96670b3cd4e2421e3ad2100e875"></a>
XII_ALWAYS_INLINE StorageType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#a5badc96670b3cd4e2421e3ad2100e875">GetValue</a> () const</td></tr>
<tr class="memdesc:a5badc96670b3cd4e2421e3ad2100e875"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the stored value as the underlying integer type. <br /></td></tr>
<tr class="separator:a5badc96670b3cd4e2421e3ad2100e875"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2b437f03e53fdc96841b7a4c7cb5e88"><td class="memItemLeft" align="right" valign="top"><a id="ae2b437f03e53fdc96841b7a4c7cb5e88"></a>
XII_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#ae2b437f03e53fdc96841b7a4c7cb5e88">SetValue</a> (StorageType value)</td></tr>
<tr class="memdesc:ae2b437f03e53fdc96841b7a4c7cb5e88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overwrites the flags with a new value. <br /></td></tr>
<tr class="separator:ae2b437f03e53fdc96841b7a4c7cb5e88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32abd52fb6bb9bfe5f2ab78f86990397"><td class="memItemLeft" align="right" valign="top"><a id="a32abd52fb6bb9bfe5f2ab78f86990397"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#a32abd52fb6bb9bfe5f2ab78f86990397">IsNoFlagSet</a> () const</td></tr>
<tr class="memdesc:a32abd52fb6bb9bfe5f2ab78f86990397"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if not a single bit is set. <br /></td></tr>
<tr class="separator:a32abd52fb6bb9bfe5f2ab78f86990397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa62e7b3d777c652bb69ce7e673f4deec"><td class="memItemLeft" align="right" valign="top"><a id="aa62e7b3d777c652bb69ce7e673f4deec"></a>
XII_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm#aa62e7b3d777c652bb69ce7e673f4deec">IsAnyFlagSet</a> () const</td></tr>
<tr class="memdesc:aa62e7b3d777c652bb69ce7e673f4deec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if any bitflag is set. <br /></td></tr>
<tr class="separator:aa62e7b3d777c652bb69ce7e673f4deec"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
struct xiiTypelessBitflags&lt; T &gt;</h3>

<p>Similar to <a class="el" href="../../d7/d55/structxii_bitflags.htm" title="The xiiBitflags class allows you to work with type-safe bitflags.">xiiBitflags</a> but without type-safety. </p>
<p>This class is intended for use cases where type-safety can get in the way, for example when it is intended for the user to extend a flags enum with custom flags a separate file / enum. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a58de878ce3e536d619beed986bb8502f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58de878ce3e536d619beed986bb8502f">&#9670;&nbsp;</a></span>IsStrictlyAnySet()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE bool <a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a>&lt; T &gt;::IsStrictlyAnySet </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether there are strictly any of the given flags set. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000035">Test:</a></b></dt><dd>Not yet tested. </dd></dl>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Types/<a class="el" href="../../db/dec/_bitflags_8h_source.htm">Bitflags.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/df9/structxii_typeless_bitflags.htm">xiiTypelessBitflags</a></li>
    <li class="footer">Generated on Sun Sep 24 2023 13:22:29 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
