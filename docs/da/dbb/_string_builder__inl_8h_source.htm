<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/StringBuilder_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/dbb/_string_builder__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringBuilder_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringConversion.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a3918732022fd3cd6e8c9124c7ec4aae6">    5</a></span>&#160;XII_FORCE_INLINE <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a3918732022fd3cd6e8c9124c7ec4aae6">xiiStringBuilder::xiiStringBuilder</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  m_Data(pAllocator)</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;}</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#aec8c7db8bbe645169d0c0b44ac1a5a9e">   12</a></span>&#160;XII_FORCE_INLINE <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a3918732022fd3cd6e8c9124c7ec4aae6">xiiStringBuilder::xiiStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs) :</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  m_Data(rhs.GetAllocator())</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a253afdba78f9d73562ab3df95fe4290b">   21</a></span>&#160;XII_FORCE_INLINE <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a3918732022fd3cd6e8c9124c7ec4aae6">xiiStringBuilder::xiiStringBuilder</a>(<a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs) noexcept</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  :</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  m_Data(rhs.GetAllocator())</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  *<span class="keyword">this</span> = std::move(rhs);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#ad7a5f4e938fc88808f86a36f874b638a">   31</a></span>&#160;XII_FORCE_INLINE <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a3918732022fd3cd6e8c9124c7ec4aae6">xiiStringBuilder::xiiStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  m_Data(pAllocator)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  *<span class="keyword">this</span> = szUTF8;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a4e5cd80171753dee50771afff5160709">   40</a></span>&#160;XII_FORCE_INLINE <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a3918732022fd3cd6e8c9124c7ec4aae6">xiiStringBuilder::xiiStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  m_Data(pAllocator)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  *<span class="keyword">this</span> = pWChar;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a21fbc6d19d1ca12f6eb86e833fb4c495">   49</a></span>&#160;XII_FORCE_INLINE <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a3918732022fd3cd6e8c9124c7ec4aae6">xiiStringBuilder::xiiStringBuilder</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator) :</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  m_Data(pAllocator)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#af400b5486adfb481f3bc1940932a672b">   58</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* <a class="code" href="../../d4/dbb/classxii_string_builder.htm#af400b5486adfb481f3bc1940932a672b">xiiStringBuilder::GetAllocator</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordflow">return</span> m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a50feafcc844148e5378ecd49b7d65da6">   63</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a7e5eeed7dcef9de718ec3297f8c323a5">xiiStringBuilder::operator=</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a4d3ce18fda6930c5abc114e8ceaa7f3b">Set</a>(szUTF8);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a895ddb01b6c7e9e4fbc642838966e022">   68</a></span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a7e5eeed7dcef9de718ec3297f8c323a5">xiiStringBuilder::operator=</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;{</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="comment">// fine to do this, szWChar can never come from the stringbuilder&#39;s own data array</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a6c4ff4b9a231f6a5cd063b03613d87b4">Clear</a>();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#aacd733a00453033fe245ff64350a0847">Append</a>(pWChar);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a7e5eeed7dcef9de718ec3297f8c323a5">   75</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a7e5eeed7dcef9de718ec3297f8c323a5">xiiStringBuilder::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  m_Data             = rhs.m_Data;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#afdf18332eb20d365a9d4af1bdc69093d">   81</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a7e5eeed7dcef9de718ec3297f8c323a5">xiiStringBuilder::operator=</a>(<a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs) noexcept</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  m_Data             = std::move(rhs.m_Data);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a150b4db5b8ac2beb7a7a9c1081781cc4">   87</a></span>&#160;XII_ALWAYS_INLINE xiiUInt32 <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a150b4db5b8ac2beb7a7a9c1081781cc4">xiiStringBuilder::GetElementCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordflow">return</span> m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>() - 1; <span class="comment">// exclude the &#39;\0&#39; terminator</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a1d19773960f09e48cf3544ef36edca64">   92</a></span>&#160;XII_ALWAYS_INLINE xiiUInt32 <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a1d19773960f09e48cf3544ef36edca64">xiiStringBuilder::GetCharacterCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordflow">return</span> m_uiCharacterCount;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a6c4ff4b9a231f6a5cd063b03613d87b4">   97</a></span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a6c4ff4b9a231f6a5cd063b03613d87b4">xiiStringBuilder::Clear</a>()</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">SetCountUninitialized</a>(1);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  m_Data[0] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#aacd733a00453033fe245ff64350a0847">  104</a></span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#aacd733a00453033fe245ff64350a0847">xiiStringBuilder::Append</a>(xiiUInt32 uiChar)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">char</span>  szChar[6] = {0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">char</span>* pChar     = &amp;szChar[0];</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <a class="code" href="../../de/d05/classxii_unicode_utils.htm#a5d2eb272d4aa4ddcc63e3abe7697b3f5">xiiUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, pChar);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  xiiUInt32 uiCharLen  = (xiiUInt32)(pChar - szChar);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  xiiUInt32 uiOldCount = m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>();</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">SetCountUninitialized</a>(uiOldCount + uiCharLen);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  uiOldCount--;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; uiCharLen; i++)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    m_Data[uiOldCount + i] = szChar[i];</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  m_Data[uiOldCount + uiCharLen] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  ++m_uiCharacterCount;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#ab30dd9ddf5a187760303c2046ea52d82">  122</a></span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#ab30dd9ddf5a187760303c2046ea52d82">xiiStringBuilder::Prepend</a>(xiiUInt32 uiChar)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">char</span>  szChar[6] = {0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">char</span>* pChar     = &amp;szChar[0];</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <a class="code" href="../../de/d05/classxii_unicode_utils.htm#a5d2eb272d4aa4ddcc63e3abe7697b3f5">xiiUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, pChar);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#ab30dd9ddf5a187760303c2046ea52d82">Prepend</a>(szChar);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a50a7313bcc3f0dcc0f0c7ca4124c2c65">  131</a></span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#aacd733a00453033fe245ff64350a0847">xiiStringBuilder::Append</a>(</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1,</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3,</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4,</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5,</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="comment">// this is a bit heavy on the stack size (6KB)</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="comment">// but it is really only a convenience function, as one could always just use the char* Append function and convert explicitly</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s1(pData1, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s2(pData2, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s3(pData3, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s4(pData4, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s5(pData5, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s6(pData6, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#aacd733a00453033fe245ff64350a0847">Append</a>(s1.GetView(), s2.GetView(), s3.GetView(), s4.GetView(), s5.GetView(), s6.GetView());</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#aeb53111b33e464c2ffb642f1a671c3aa">  151</a></span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#ab30dd9ddf5a187760303c2046ea52d82">xiiStringBuilder::Prepend</a>(</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1,</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2,</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3,</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4,</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5,</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="comment">// this is a bit heavy on the stack size (6KB)</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="comment">// but it is really only a convenience function, as one could always just use the char* Append function and convert explicitly</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s1(pData1, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s2(pData2, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s3(pData3, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s4(pData4, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s5(pData5, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a> s6(pData6, m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">GetAllocator</a>());</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#ab30dd9ddf5a187760303c2046ea52d82">Prepend</a>(s1.GetView(), s2.GetView(), s3.GetView(), s4.GetView(), s5.GetView(), s6.GetView());</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a07d589269f03088a6f02b51f3c1a5ca8">  171</a></span>&#160;XII_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a07d589269f03088a6f02b51f3c1a5ca8">xiiStringBuilder::GetData</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  XII_ASSERT_DEBUG(!m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">IsEmpty</a>(), <span class="stringliteral">&quot;xiiStringBuilder has been corrupted, the array can never be empty.&quot;</span>);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">return</span> &amp;m_Data[0];</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> xiiStringBuilder::AppendTerminator()</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="comment">// make sure the string terminates with a zero.</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordflow">if</span> (m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">IsEmpty</a>() || (m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#adb711db141b2c9a8a44567cb5f91339f">PeekBack</a>() != <span class="charliteral">&#39;\0&#39;</span>))</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">PushBack</a>(<span class="charliteral">&#39;\0&#39;</span>);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a23e70f91aca7ebbcad2e635f7f9aea28">  185</a></span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a23e70f91aca7ebbcad2e635f7f9aea28">xiiStringBuilder::ToUpper</a>()</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;{</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keyword">const</span> xiiUInt32 uiNewStringLength = <a class="code" href="../../df/d65/classxii_string_utils.htm#ad1629e8f94dd9f959339891cb0d91b2f">xiiStringUtils::ToUpperString</a>(&amp;m_Data[0]);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="comment">// the array stores the number of bytes, so set the count to the actually used number of bytes</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">SetCountUninitialized</a>(uiNewStringLength + 1);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a3285823400c7ec2192fbe5260feaaec3">  193</a></span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a3285823400c7ec2192fbe5260feaaec3">xiiStringBuilder::ToLower</a>()</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">const</span> xiiUInt32 uiNewStringLength = <a class="code" href="../../df/d65/classxii_string_utils.htm#a824224a0b78ee435790cc8d40bd9a777">xiiStringUtils::ToLowerString</a>(&amp;m_Data[0]);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="comment">// the array stores the number of bytes, so set the count to the actually used number of bytes</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">SetCountUninitialized</a>(uiNewStringLength + 1);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a95ecfcfd5e7427615e0098e33fa6ce1d">  201</a></span>&#160;XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a95ecfcfd5e7427615e0098e33fa6ce1d">xiiStringBuilder::ChangeCharacter</a>(iterator&amp; ref_it, xiiUInt32 uiCharacter)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;{</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  XII_ASSERT_DEV(ref_it.IsValid(), <span class="stringliteral">&quot;The given character iterator does not point to a valid character.&quot;</span>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  XII_ASSERT_DEV(ref_it.GetData() &gt;= <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a07d589269f03088a6f02b51f3c1a5ca8">GetData</a>() &amp;&amp; ref_it.GetData() &lt; <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a07d589269f03088a6f02b51f3c1a5ca8">GetData</a>() + <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a150b4db5b8ac2beb7a7a9c1081781cc4">GetElementCount</a>(),</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                 <span class="stringliteral">&quot;The given character iterator does not point into this string. It was either created from another string, or this string &quot;</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                 <span class="stringliteral">&quot;has been reallocated in the mean time.&quot;</span>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  <span class="comment">// this is only an optimization for pure ASCII strings</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="comment">// without it, the code below would still work</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../de/d05/classxii_unicode_utils.htm#a875e86e7d44c803cdb639e25cddb9a9b">xiiUnicodeUtils::IsASCII</a>(*ref_it) &amp;&amp; <a class="code" href="../../de/d05/classxii_unicode_utils.htm#a875e86e7d44c803cdb639e25cddb9a9b">xiiUnicodeUtils::IsASCII</a>(uiCharacter))</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordtype">char</span>* pPos = <span class="keyword">const_cast&lt;</span><span class="keywordtype">char</span>*<span class="keyword">&gt;</span>(ref_it.GetData()); <span class="comment">// yes, I know...</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    *pPos      = uiCharacter &amp; 0xFF;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  ChangeCharacterNonASCII(ref_it, uiCharacter);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a212f7a6ef773e0288bd8fddd02e32e57">  220</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a212f7a6ef773e0288bd8fddd02e32e57">xiiStringBuilder::IsPureASCII</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="keywordflow">return</span> m_uiCharacterCount + 1 == m_Data.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>();</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a2f531f64cde9c019e405a7d2cf4895fb">  225</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a2f531f64cde9c019e405a7d2cf4895fb">xiiStringBuilder::Reserve</a>(xiiUInt32 uiNumElements)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;{</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  m_Data.<a class="code" href="../../d2/dea/classxii_dynamic_array_base.htm#a9d30fef4224f0f636084a8ed1bf3c7b1">Reserve</a>(uiNumElements);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a2445f6243764d8d16e1459f27055859a">  230</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a2445f6243764d8d16e1459f27055859a">xiiStringBuilder::Insert</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szInsertAtPos, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sTextToInsert)</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;{</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#ad4612dceb8dbeb15e27860afa4090d8e">ReplaceSubString</a>(szInsertAtPos, szInsertAtPos, sTextToInsert);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a9684b88ed40394cca7539f2bef80aca9">  235</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a9684b88ed40394cca7539f2bef80aca9">xiiStringBuilder::Remove</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveFromPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveToPos)</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;{</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#ad4612dceb8dbeb15e27860afa4090d8e">ReplaceSubString</a>(szRemoveFromPos, szRemoveToPos, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>());</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Container&gt;</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="../../de/d05/classxii_unicode_utils.htm#a6ec772f9b0936688f4f81f0fd952d001">  241</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../de/d05/classxii_unicode_utils.htm#a6ec772f9b0936688f4f81f0fd952d001">xiiUnicodeUtils::RepairNonUtf8Text</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStartData, <span class="keyword">const</span> <span class="keywordtype">char</span>* pEndData, Container&amp; out_result)</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;{</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../de/d05/classxii_unicode_utils.htm#a1181f94b0913b9c842ee097e4d082482">xiiUnicodeUtils::IsValidUtf8</a>(pStartData, pEndData))</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  {</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    out_result = <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>(pStartData, pEndData);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  }</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  out_result.Clear();</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;char, 1024&gt;</a>                              fixedText;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <a class="code" href="../../dd/db2/structxii_unicode_utils_1_1_utf_inserter.htm">xiiUnicodeUtils::UtfInserter</a>&lt;char, decltype(fixedText)&gt; inserter(&amp;fixedText);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="keywordflow">while</span> (pStartData &lt; pEndData)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keyword">const</span> xiiUInt32 uiChar = <a class="code" href="../../de/d05/classxii_unicode_utils.htm#af3e6abac1978259e554b797bd6415295">xiiUnicodeUtils::DecodeUtf8ToUtf32</a>(pStartData);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <a class="code" href="../../de/d05/classxii_unicode_utils.htm#a5d2eb272d4aa4ddcc63e3abe7697b3f5">xiiUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, inserter);</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  }</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  XII_ASSERT_DEV(<a class="code" href="../../de/d05/classxii_unicode_utils.htm#a1181f94b0913b9c842ee097e4d082482">xiiUnicodeUtils::IsValidUtf8</a>(fixedText.<a class="code" href="../../da/d4c/classxii_array_base.htm#af72f1c85b6662559e15cf58c44117eae">GetData</a>(), fixedText.<a class="code" href="../../da/d4c/classxii_array_base.htm#af72f1c85b6662559e15cf58c44117eae">GetData</a>() + fixedText.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>()), <span class="stringliteral">&quot;Repaired text is still not a valid Utf8 string.&quot;</span>);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  out_result = <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>(fixedText.<a class="code" href="../../da/d4c/classxii_array_base.htm#af72f1c85b6662559e15cf58c44117eae">GetData</a>(), fixedText.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>());</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;}</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/AllStrings_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_string_builder_htm_a150b4db5b8ac2beb7a7a9c1081781cc4"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a150b4db5b8ac2beb7a7a9c1081781cc4">xiiStringBuilder::GetElementCount</a></div><div class="ttdeci">xiiUInt32 GetElementCount() const</div><div class="ttdoc">Returns the number of bytes that this string takes up.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:87</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a8b86f58a2097871da0e0b91eecc823e4"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">xiiArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:346</div></div>
<div class="ttc" id="aclassxii_array_base_htm_af72f1c85b6662559e15cf58c44117eae"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#af72f1c85b6662559e15cf58c44117eae">xiiArrayBase&lt; T, xiiDynamicArrayBase&lt; T &gt; &gt;::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:438</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a23e70f91aca7ebbcad2e635f7f9aea28"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a23e70f91aca7ebbcad2e635f7f9aea28">xiiStringBuilder::ToUpper</a></div><div class="ttdeci">void ToUpper()</div><div class="ttdoc">Converts all characters to upper case. Might move the string data around, so all iterators to the dat...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:185</div></div>
<div class="ttc" id="aclassxii_string_utf8_htm"><div class="ttname"><a href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a></div><div class="ttdoc">A small string class that converts any other encoding to Utf8.</div><div class="ttdef"><b>Definition:</b> StringConversion.h:46</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_ad1629e8f94dd9f959339891cb0d91b2f"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#ad1629e8f94dd9f959339891cb0d91b2f">xiiStringUtils::ToUpperString</a></div><div class="ttdeci">static xiiUInt32 ToUpperString(char *szString, const char *pStringEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Converts a (UTF-8) string in-place to upper case.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:203</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a7609a39613cdc57b56d12537b3ba4d48"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">xiiArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:191</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_a9d30fef4224f0f636084a8ed1bf3c7b1"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#a9d30fef4224f0f636084a8ed1bf3c7b1">xiiDynamicArrayBase::Reserve</a></div><div class="ttdeci">void Reserve(xiiUInt32 uiCapacity)</div><div class="ttdoc">Expands the array so it can at least store the given capacity.</div><div class="ttdef"><b>Definition:</b> DynamicArray_inl.h:179</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a4d3ce18fda6930c5abc114e8ceaa7f3b"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a4d3ce18fda6930c5abc114e8ceaa7f3b">xiiStringBuilder::Set</a></div><div class="ttdeci">void Set(xiiStringView sData1, xiiStringView sData2={}, xiiStringView sData3={}, xiiStringView sData4={}, xiiStringView sData5={}, xiiStringView sData6={})</div><div class="ttdoc">Sets the string by concatenating all given strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.cpp:17</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a6c4ff4b9a231f6a5cd063b03613d87b4"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a6c4ff4b9a231f6a5cd063b03613d87b4">xiiStringBuilder::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Resets this string to be empty. Does not deallocate any previously allocated data,...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:97</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a7e5eeed7dcef9de718ec3297f8c323a5"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a7e5eeed7dcef9de718ec3297f8c323a5">xiiStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const xiiStringBuilder &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:75</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a95ecfcfd5e7427615e0098e33fa6ce1d"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a95ecfcfd5e7427615e0098e33fa6ce1d">xiiStringBuilder::ChangeCharacter</a></div><div class="ttdeci">void ChangeCharacter(iterator &amp;ref_it, xiiUInt32 uiCharacter)</div><div class="ttdoc">Changes the single character in this string, to which the iterator currently points.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:201</div></div>
<div class="ttc" id="aclassxii_dynamic_array_base_htm_a2e1490580392f8d0d278a18740d5a186"><div class="ttname"><a href="../../d2/dea/classxii_dynamic_array_base.htm#a2e1490580392f8d0d278a18740d5a186">xiiDynamicArrayBase::GetAllocator</a></div><div class="ttdeci">xiiAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> DynamicArray.h:53</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a824224a0b78ee435790cc8d40bd9a777"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a824224a0b78ee435790cc8d40bd9a777">xiiStringUtils::ToLowerString</a></div><div class="ttdeci">static xiiUInt32 ToLowerString(char *szString, const char *pStringEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Converts a (UTF-8) string in-place to lower case.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:221</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a3285823400c7ec2192fbe5260feaaec3"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a3285823400c7ec2192fbe5260feaaec3">xiiStringBuilder::ToLower</a></div><div class="ttdeci">void ToLower()</div><div class="ttdoc">Converts all characters to lower case. Might move the string data around, so all iterators to the dat...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:193</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition:</b> HybridArray.h:11</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_af400b5486adfb481f3bc1940932a672b"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#af400b5486adfb481f3bc1940932a672b">xiiStringBuilder::GetAllocator</a></div><div class="ttdeci">xiiAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this object.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:58</div></div>
<div class="ttc" id="astructxii_unicode_utils_1_1_utf_inserter_htm"><div class="ttname"><a href="../../dd/db2/structxii_unicode_utils_1_1_utf_inserter.htm">xiiUnicodeUtils::UtfInserter</a></div><div class="ttdoc">[internal] Small helper class to append bytes to some arbitrary container. Used for Utf8 string build...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils.h:109</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_a5d2eb272d4aa4ddcc63e3abe7697b3f5"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#a5d2eb272d4aa4ddcc63e3abe7697b3f5">xiiUnicodeUtils::EncodeUtf32ToUtf8</a></div><div class="ttdeci">static void EncodeUtf32ToUtf8(xiiUInt32 uiUtf32, ByteIterator &amp;ref_szUtf8Output)</div><div class="ttdoc">Encodes the given Utf32 character to Utf8 and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:92</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a1d19773960f09e48cf3544ef36edca64"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a1d19773960f09e48cf3544ef36edca64">xiiStringBuilder::GetCharacterCount</a></div><div class="ttdeci">xiiUInt32 GetCharacterCount() const</div><div class="ttdoc">Returns the number of characters of which this string consists. Might be less than GetElementCount,...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:92</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_ab30dd9ddf5a187760303c2046ea52d82"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#ab30dd9ddf5a187760303c2046ea52d82">xiiStringBuilder::Prepend</a></div><div class="ttdeci">void Prepend(xiiUInt32 uiChar)</div><div class="ttdoc">Prepends a single Utf32 character.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:122</div></div>
<div class="ttc" id="aclassxii_array_base_htm_adb711db141b2c9a8a44567cb5f91339f"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#adb711db141b2c9a8a44567cb5f91339f">xiiArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:401</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a07d589269f03088a6f02b51f3c1a5ca8"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a07d589269f03088a6f02b51f3c1a5ca8">xiiStringBuilder::GetData</a></div><div class="ttdeci">const char * GetData() const</div><div class="ttdoc">Returns a char pointer to the internal Utf8 data.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:171</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a3918732022fd3cd6e8c9124c7ec4aae6"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a3918732022fd3cd6e8c9124c7ec4aae6">xiiStringBuilder::xiiStringBuilder</a></div><div class="ttdeci">xiiStringBuilder(xiiAllocatorBase *pAllocator=xiiFoundation::GetDefaultAllocator())</div><div class="ttdoc">Initializes the string to be empty. No data is allocated, but the xiiStringBuilder ALWAYS creates an ...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:5</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4114fd2fe9dc9b02ce50e8d723515c24"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">xiiArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(xiiUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:168</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_a875e86e7d44c803cdb639e25cddb9a9b"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#a875e86e7d44c803cdb639e25cddb9a9b">xiiUnicodeUtils::IsASCII</a></div><div class="ttdeci">static bool IsASCII(xiiUInt32 uiChar)</div><div class="ttdoc">Returns whether a character is a pure ASCII character (only the first 7 Bits are used)</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:23</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a43100f93e19bb795ea0980dae2b28e0b"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">xiiArrayBase::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:185</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_af3e6abac1978259e554b797bd6415295"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#af3e6abac1978259e554b797bd6415295">xiiUnicodeUtils::DecodeUtf8ToUtf32</a></div><div class="ttdeci">static xiiUInt32 DecodeUtf8ToUtf32(ByteIterator &amp;ref_szUtf8Iterator)</div><div class="ttdoc">Decodes the next character from the given Utf8 sequence to Utf32 and increments the iterator as far a...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:51</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_a6ec772f9b0936688f4f81f0fd952d001"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#a6ec772f9b0936688f4f81f0fd952d001">xiiUnicodeUtils::RepairNonUtf8Text</a></div><div class="ttdeci">static bool RepairNonUtf8Text(const char *pStartData, const char *pEndData, Container &amp;out_result)</div><div class="ttdoc">Checks an array of char's, whether it is a valid Utf8 string. If not, it repairs the string,...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:241</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:21</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a2f531f64cde9c019e405a7d2cf4895fb"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a2f531f64cde9c019e405a7d2cf4895fb">xiiStringBuilder::Reserve</a></div><div class="ttdeci">void Reserve(xiiUInt32 uiNumElements)</div><div class="ttdoc">Reserves uiNumElements bytes.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:225</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a2445f6243764d8d16e1459f27055859a"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a2445f6243764d8d16e1459f27055859a">xiiStringBuilder::Insert</a></div><div class="ttdeci">void Insert(const char *szInsertAtPos, xiiStringView sTextToInsert)</div><div class="ttdoc">A wrapper around ReplaceSubString. Will insert the given string at szInsertAtPos.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:230</div></div>
<div class="ttc" id="aclassxii_string_builder_htm"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a></div><div class="ttdoc">xiiStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_a1181f94b0913b9c842ee097e4d082482"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#a1181f94b0913b9c842ee097e4d082482">xiiUnicodeUtils::IsValidUtf8</a></div><div class="ttdeci">static bool IsValidUtf8(const char *szString, const char *szStringEnd=GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns false if the given string does not contain a completely valid Utf8 string.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:150</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a212f7a6ef773e0288bd8fddd02e32e57"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a212f7a6ef773e0288bd8fddd02e32e57">xiiStringBuilder::IsPureASCII</a></div><div class="ttdeci">bool IsPureASCII() const</div><div class="ttdoc">Returns whether this string only contains ASCII characters, which means that GetElementCount() == Get...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:220</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a9684b88ed40394cca7539f2bef80aca9"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a9684b88ed40394cca7539f2bef80aca9">xiiStringBuilder::Remove</a></div><div class="ttdeci">void Remove(const char *szRemoveFromPos, const char *szRemoveToPos)</div><div class="ttdoc">A wrapper around ReplaceSubString. Will remove the substring which starts at szRemoveFromPos and ends...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:235</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_aacd733a00453033fe245ff64350a0847"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#aacd733a00453033fe245ff64350a0847">xiiStringBuilder::Append</a></div><div class="ttdeci">void Append(xiiUInt32 uiChar)</div><div class="ttdoc">Appends a single Utf32 character.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:104</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_ad4612dceb8dbeb15e27860afa4090d8e"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#ad4612dceb8dbeb15e27860afa4090d8e">xiiStringBuilder::ReplaceSubString</a></div><div class="ttdeci">void ReplaceSubString(const char *szStartPos, const char *szEndPos, xiiStringView sReplaceWith)</div><div class="ttdoc">Replaces the string that starts at szStartPos and ends at szEndPos with the string szReplaceWith.</div><div class="ttdef"><b>Definition:</b> StringBuilder.cpp:294</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b0d9e1007714c8956662e529025ab552.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_92c52eb4981d7c3a6633b9c574fc9e8f.htm">Implementation</a></li><li class="navelem"><b>StringBuilder_inl.h</b></li>
    <li class="footer">Generated on Sun Dec 10 2023 03:58:29 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
