<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Math/Implementation/Mat4_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/dfb/_mat4__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Mat4_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Mat3.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00006"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ad06f1aada15fb3d6322d8fad0c3aff87">    6</a></span>&#160;<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ad06f1aada15fb3d6322d8fad0c3aff87">xiiMat4Template&lt;Type&gt;::xiiMat4Template</a>()</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_COMPILE_FOR_DEBUG)</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="comment">// Initialize all data to NaN in debug mode to find problems with uninitialized data easier.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keyword">const</span> Type TypeNaN = xiiMath::NaN&lt;Type&gt;();</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  SetElements(TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN, TypeNaN);</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a129cf735cc1c2e7a7134c3ebeb07ecf1">   16</a></span>&#160;<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ad06f1aada15fb3d6322d8fad0c3aff87">xiiMat4Template&lt;Type&gt;::xiiMat4Template</a>(<span class="keyword">const</span> Type* <span class="keyword">const</span> pData, <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a> layout)</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keywordflow">if</span> (layout == <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da755702638953d02b2b8354e528d4ed1c">xiiMatrixLayout::ColumnMajor</a>)</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a>(m_fElementsCM, pData, 16);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  }</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 4; ++i)</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      Element(0, i) = pData[i * 4 + 0];</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      Element(1, i) = pData[i * 4 + 1];</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      Element(2, i) = pData[i * 4 + 2];</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      Element(3, i) = pData[i * 4 + 3];</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ab4a6d23add06edebeec3bf1453e17bb5">   35</a></span>&#160;<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ad06f1aada15fb3d6322d8fad0c3aff87">xiiMat4Template&lt;Type&gt;::xiiMat4Template</a>(Type c1r1, Type c2r1, Type c3r1, Type c4r1, Type c1r2, Type c2r2, Type c3r2, Type c4r2, Type c1r3, Type c2r3, Type c3r3, Type c4r3, Type c1r4, Type c2r4, Type c3r4, Type c4r4)</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  SetElements(c1r1, c2r1, c3r1, c4r1, c1r2, c2r2, c3r2, c4r2, c1r3, c2r3, c3r3, c4r3, c1r4, c2r4, c3r4, c4r4);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ae16088a3cb716535e74a5afb65a8c9a6">   41</a></span>&#160;<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ad06f1aada15fb3d6322d8fad0c3aff87">xiiMat4Template&lt;Type&gt;::xiiMat4Template</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; mRotation, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vTranslation)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  SetTransformationMatrix(mRotation, vTranslation);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a653a557b73aaf710bf993aad9ec5b7df">   47</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a653a557b73aaf710bf993aad9ec5b7df">xiiMat4Template&lt;Type&gt;::IdentityMatrix</a>()</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template</a>(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a938a39e07bbcf837a0f0ea54b60d1388">   53</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a938a39e07bbcf837a0f0ea54b60d1388">xiiMat4Template&lt;Type&gt;::ZeroMatrix</a>()</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template</a>(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a9ca64c0fd0c949a3c6051b6f1976d1fe">   59</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a9ca64c0fd0c949a3c6051b6f1976d1fe">xiiMat4Template&lt;Type&gt;::SetFromArray</a>(<span class="keyword">const</span> Type* <span class="keyword">const</span> pData, <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a> layout)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordflow">if</span> (layout == <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da755702638953d02b2b8354e528d4ed1c">xiiMatrixLayout::ColumnMajor</a>)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a>(m_fElementsCM, pData, 16);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">for</span> (xiiInt32 i = 0; i &lt; 4; ++i)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      Element(0, i) = pData[i * 4 + 0];</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      Element(1, i) = pData[i * 4 + 1];</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      Element(2, i) = pData[i * 4 + 2];</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      Element(3, i) = pData[i * 4 + 3];</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ad4ececa6af2f89360d8aa0bda8e3b371">   78</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#ad4ececa6af2f89360d8aa0bda8e3b371">xiiMat4Template&lt;Type&gt;::SetTransformationMatrix</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; mRotation, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vTranslation)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  SetRotationalPart(mRotation);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  SetTranslationVector(vTranslation);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  SetRow(3, <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(0, 0, 0, 1));</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a85a0c91baf31f0e49243fcd4c2314199">   86</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a85a0c91baf31f0e49243fcd4c2314199">xiiMat4Template&lt;Type&gt;::GetAsArray</a>(Type* out_pData, <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a> layout)<span class="keyword"> const</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keywordflow">if</span> (layout == <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da755702638953d02b2b8354e528d4ed1c">xiiMatrixLayout::ColumnMajor</a>)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a>(out_pData, m_fElementsCM, 16);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">for</span> (xiiInt32 i = 0; i &lt; 4; ++i)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    {</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;      out_pData[i * 4 + 0] = Element(0, i);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      out_pData[i * 4 + 1] = Element(1, i);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      out_pData[i * 4 + 2] = Element(2, i);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      out_pData[i * 4 + 3] = Element(3, i);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a31818ab8d41aaec0a1f38709fbce5f2f">  107</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a31818ab8d41aaec0a1f38709fbce5f2f">xiiMat4Template&lt;Type&gt;::SetElements</a>(Type c1r1, Type c2r1, Type c3r1, Type c4r1, Type c1r2, Type c2r2, Type c3r2, Type c4r2, Type c1r3, Type c2r3, Type c3r3, Type c4r3, Type c1r4, Type c2r4, Type c3r4, Type c4r4)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  Element(0, 0) = c1r1;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  Element(1, 0) = c2r1;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  Element(2, 0) = c3r1;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  Element(3, 0) = c4r1;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  Element(0, 1) = c1r2;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  Element(1, 1) = c2r2;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  Element(2, 1) = c3r2;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  Element(3, 1) = c4r2;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  Element(0, 2) = c1r3;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  Element(1, 2) = c2r3;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  Element(2, 2) = c3r3;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  Element(3, 2) = c4r3;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  Element(0, 3) = c1r4;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  Element(1, 3) = c2r4;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  Element(2, 3) = c3r4;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  Element(3, 3) = c4r4;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#aae4dffb1ff4bf79d68301d1c008e2665">  128</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#aae4dffb1ff4bf79d68301d1c008e2665">xiiMat4Template&lt;Type&gt;::SetZero</a>()</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;{</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  SetElements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a26ab98b4aba05476d5952b1b161da8fd">  134</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a26ab98b4aba05476d5952b1b161da8fd">xiiMat4Template&lt;Type&gt;::SetIdentity</a>()</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  SetElements(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a17c66aac0beb701ee11bdffd1024b63e">  140</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a17c66aac0beb701ee11bdffd1024b63e">xiiMat4Template&lt;Type&gt;::SetTranslationMatrix</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vTranslation)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  SetElements(1, 0, 0, vTranslation.x, 0, 1, 0, vTranslation.y, 0, 0, 1, vTranslation.z, 0, 0, 0, 1);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a205f7765e450a18385030a530efaef07">  146</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a205f7765e450a18385030a530efaef07">xiiMat4Template&lt;Type&gt;::SetScalingMatrix</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; s)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  SetElements(s.x, 0, 0, 0, 0, s.y, 0, 0, 0, 0, s.z, 0, 0, 0, 0, 1);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#aeb1a15a834f85f677c61c81bd25eacb1">  152</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#aeb1a15a834f85f677c61c81bd25eacb1">xiiMat4Template&lt;Type&gt;::SetRotationMatrixX</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> angle)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keyword">const</span> Type fSin = <a class="code" href="../../d1/d37/namespacexii_math.htm#afbbbae240e0cea673cd16646b5142e06">xiiMath::Sin</a>(angle);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">const</span> Type fCos = <a class="code" href="../../d1/d37/namespacexii_math.htm#a194fc513007059c6e129cdeb321c3797">xiiMath::Cos</a>(angle);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  SetElements(1.0f, 0.0f, 0.0f, 0.0f, 0.0f, fCos, -fSin, 0.0f, 0.0f, fSin, fCos, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a19d6ae8452504362c063d527c00e3c01">  161</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a19d6ae8452504362c063d527c00e3c01">xiiMat4Template&lt;Type&gt;::SetRotationMatrixY</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> angle)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keyword">const</span> Type fSin = <a class="code" href="../../d1/d37/namespacexii_math.htm#afbbbae240e0cea673cd16646b5142e06">xiiMath::Sin</a>(angle);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">const</span> Type fCos = <a class="code" href="../../d1/d37/namespacexii_math.htm#a194fc513007059c6e129cdeb321c3797">xiiMath::Cos</a>(angle);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  SetElements(fCos, 0.0f, fSin, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, -fSin, 0.0f, fCos, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a7f0f3b30ddd90c068ddb6b50b5a827cb">  171</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a7f0f3b30ddd90c068ddb6b50b5a827cb">xiiMat4Template&lt;Type&gt;::SetRotationMatrixZ</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> angle)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">const</span> Type fSin = <a class="code" href="../../d1/d37/namespacexii_math.htm#afbbbae240e0cea673cd16646b5142e06">xiiMath::Sin</a>(angle);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keyword">const</span> Type fCos = <a class="code" href="../../d1/d37/namespacexii_math.htm#a194fc513007059c6e129cdeb321c3797">xiiMath::Cos</a>(angle);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  SetElements(fCos, -fSin, 0.0f, 0.0f, fSin, fCos, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#aabea123836f8a834510e18e9bf9d2cdf">  180</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#aabea123836f8a834510e18e9bf9d2cdf">xiiMat4Template&lt;Type&gt;::Transpose</a>()</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <a class="code" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(Element(0, 1), Element(1, 0));</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <a class="code" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(Element(0, 2), Element(2, 0));</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <a class="code" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(Element(0, 3), Element(3, 0));</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <a class="code" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(Element(1, 2), Element(2, 1));</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <a class="code" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(Element(1, 3), Element(3, 1));</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <a class="code" href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a>(Element(2, 3), Element(3, 2));</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a83f63e807ecf6895c3674c26c011cc48">  191</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a83f63e807ecf6895c3674c26c011cc48">xiiMat4Template&lt;Type&gt;::GetTranspose</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template</a>(m_fElementsCM, <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da5ad82519c9175b12d17d03b62d0b18e1">xiiMatrixLayout::RowMajor</a>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ac363bd5c7c6d681a2f85d14f6183a44e">  199</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#ac363bd5c7c6d681a2f85d14f6183a44e">xiiMat4Template&lt;Type&gt;::GetInverse</a>(Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> Inverse = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a>             res     = Inverse.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#a17562e4b7506e1d46229f8623564ce8d">Invert</a>(fEpsilon);</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  XII_ASSERT_DEBUG(res.Succeeded(), <span class="stringliteral">&quot;Could not invert the given Mat4.&quot;</span>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  XII_IGNORE_UNUSED(res);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordflow">return</span> Inverse;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a4e56f7694674702e3d2977c394b853e0">  209</a></span>&#160;<a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a4e56f7694674702e3d2977c394b853e0">xiiMat4Template&lt;Type&gt;::GetRow</a>(xiiUInt32 uiRow)<span class="keyword"> const</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  XII_ASSERT_DEBUG(uiRow &lt;= 3, <span class="stringliteral">&quot;Invalid Row Index {0}&quot;</span>, uiRow);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  r.x = Element(0, uiRow);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  r.y = Element(1, uiRow);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  r.z = Element(2, uiRow);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  r.w = Element(3, uiRow);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ac0c931bbfc66e5c8c466799aa3f23596">  224</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#ac0c931bbfc66e5c8c466799aa3f23596">xiiMat4Template&lt;Type&gt;::SetRow</a>(xiiUInt32 uiRow, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vRow)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;{</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  XII_ASSERT_DEBUG(uiRow &lt;= 3, <span class="stringliteral">&quot;Invalid Row Index {0}&quot;</span>, uiRow);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  Element(0, uiRow) = vRow.x;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  Element(1, uiRow) = vRow.y;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  Element(2, uiRow) = vRow.z;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  Element(3, uiRow) = vRow.w;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;}</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#af938e1d2dd6a525a2a69d82294b22cbf">  235</a></span>&#160;<a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#af938e1d2dd6a525a2a69d82294b22cbf">xiiMat4Template&lt;Type&gt;::GetColumn</a>(xiiUInt32 uiColumn)<span class="keyword"> const</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  XII_ASSERT_DEBUG(uiColumn &lt;= 3, <span class="stringliteral">&quot;Invalid Column Index {0}&quot;</span>, uiColumn);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  r.x = Element(uiColumn, 0);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  r.y = Element(uiColumn, 1);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  r.z = Element(uiColumn, 2);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  r.w = Element(uiColumn, 3);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;}</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#aa1144e38c7e16f44b143a89e3d8980da">  250</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#aa1144e38c7e16f44b143a89e3d8980da">xiiMat4Template&lt;Type&gt;::SetColumn</a>(xiiUInt32 uiColumn, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vColumn)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;{</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  XII_ASSERT_DEBUG(uiColumn &lt;= 3, <span class="stringliteral">&quot;Invalid Column Index {0}&quot;</span>, uiColumn);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  Element(uiColumn, 0) = vColumn.x;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  Element(uiColumn, 1) = vColumn.y;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  Element(uiColumn, 2) = vColumn.z;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  Element(uiColumn, 3) = vColumn.w;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;}</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#af91ea1d9388c4b98e192542882aba2df">  261</a></span>&#160;<a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#af91ea1d9388c4b98e192542882aba2df">xiiMat4Template&lt;Type&gt;::GetDiagonal</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>(Element(0, 0), Element(1, 1), Element(2, 2), Element(3, 3));</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00269"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a1e54ab5b9594e8853808574a4aa5f10b">  269</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a1e54ab5b9594e8853808574a4aa5f10b">xiiMat4Template&lt;Type&gt;::SetDiagonal</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; vDiag)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  Element(0, 0) = vDiag.x;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  Element(1, 1) = vDiag.y;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  Element(2, 2) = vDiag.z;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  Element(3, 3) = vDiag.w;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;}</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ad143eddbdd5e71bd018b013439c0c120">  278</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#ad143eddbdd5e71bd018b013439c0c120">xiiMat4Template&lt;Type&gt;::TransformPosition</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  r.x = Element(0, 0) * v.x + Element(1, 0) * v.y + Element(2, 0) * v.z + Element(3, 0);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  r.y = Element(0, 1) * v.x + Element(1, 1) * v.y + Element(2, 1) * v.z + Element(3, 1);</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  r.z = Element(0, 2) * v.x + Element(1, 2) * v.y + Element(2, 2) * v.z + Element(3, 2);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#aab305c02e52bc1a21297b36d0ee529a1">  290</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#ad143eddbdd5e71bd018b013439c0c120">xiiMat4Template&lt;Type&gt;::TransformPosition</a>(</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>* pV,</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  xiiUInt32              uiNumVectors,</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  xiiUInt32              uiStride <span class="comment">/* = sizeof(xiiVec3Template) */</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  XII_ASSERT_DEBUG(pV != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Array must not be nullptr.&quot;</span>);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  XII_ASSERT_DEBUG(uiStride &gt;= <span class="keyword">sizeof</span>(<a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>), <span class="stringliteral">&quot;Data must not overlap.&quot;</span>);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>* pCur = pV;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; uiNumVectors; ++i)</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    *pCur = TransformPosition(*pCur);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    pCur  = <a class="code" href="../../d8/d9d/classxii_memory_utils.htm#ab25d38b037822ed8c510f8756feaf7e7">xiiMemoryUtils::AddByteOffset</a>(pCur, uiStride);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;}</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#aa58bb0b4b2ef79adbc45148a8ee09c4f">  308</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#aa58bb0b4b2ef79adbc45148a8ee09c4f">xiiMat4Template&lt;Type&gt;::TransformDirection</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  r.x = Element(0, 0) * v.x + Element(1, 0) * v.y + Element(2, 0) * v.z;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  r.y = Element(0, 1) * v.x + Element(1, 1) * v.y + Element(2, 1) * v.z;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  r.z = Element(0, 2) * v.x + Element(1, 2) * v.y + Element(2, 2) * v.z;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;}</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00320"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a44a2fd48f64d0c79a041e9efa1ac1fa5">  320</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#aa58bb0b4b2ef79adbc45148a8ee09c4f">xiiMat4Template&lt;Type&gt;::TransformDirection</a>(<a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>* pV, xiiUInt32 uiNumVectors, xiiUInt32 uiStride <span class="comment">/* = sizeof(xiiVec3Template&lt;Type&gt;) */</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  XII_ASSERT_DEBUG(pV != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Array must not be nullptr.&quot;</span>);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  XII_ASSERT_DEBUG(uiStride &gt;= <span class="keyword">sizeof</span>(<a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>), <span class="stringliteral">&quot;Data must not overlap.&quot;</span>);</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>* pCur = pV;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; uiNumVectors; ++i)</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  {</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    *pCur = TransformDirection(*pCur);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    pCur  = <a class="code" href="../../d8/d9d/classxii_memory_utils.htm#ab25d38b037822ed8c510f8756feaf7e7">xiiMemoryUtils::AddByteOffset</a>(pCur, uiStride);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  }</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160; </div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ac85f3192c3d53cb4f2e3ff7ac69fe55c">  335</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#ac85f3192c3d53cb4f2e3ff7ac69fe55c">xiiMat4Template&lt;Type&gt;::Transform</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  r.x = Element(0, 0) * v.x + Element(1, 0) * v.y + Element(2, 0) * v.z + Element(3, 0) * v.w;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  r.y = Element(0, 1) * v.x + Element(1, 1) * v.y + Element(2, 1) * v.z + Element(3, 1) * v.w;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  r.z = Element(0, 2) * v.x + Element(1, 2) * v.y + Element(2, 2) * v.z + Element(3, 2) * v.w;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  r.w = Element(0, 3) * v.x + Element(1, 3) * v.y + Element(2, 3) * v.z + Element(3, 3) * v.w;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160; </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a7b1d050650703f19510bc1bf27d1d908">  348</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#ac85f3192c3d53cb4f2e3ff7ac69fe55c">xiiMat4Template&lt;Type&gt;::Transform</a>(<a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>* pV, xiiUInt32 uiNumVectors, xiiUInt32 uiStride <span class="comment">/* = sizeof(xiiVec4Template) */</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  XII_ASSERT_DEBUG(pV != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Array must not be nullptr.&quot;</span>);</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  XII_ASSERT_DEBUG(uiStride &gt;= <span class="keyword">sizeof</span>(<a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>), <span class="stringliteral">&quot;Data must not overlap.&quot;</span>);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160; </div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>* pCur = pV;</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; uiNumVectors; ++i)</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  {</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    *pCur = Transform(*pCur);</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    pCur  = <a class="code" href="../../d8/d9d/classxii_memory_utils.htm#ab25d38b037822ed8c510f8756feaf7e7">xiiMemoryUtils::AddByteOffset</a>(pCur, uiStride);</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  }</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;}</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160; </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00363"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a6b5d1228cdbe6fda34c621dd0fad3184">  363</a></span>&#160;XII_FORCE_INLINE <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a6b5d1228cdbe6fda34c621dd0fad3184">xiiMat4Template&lt;Type&gt;::GetTranslationVector</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>(Element(3, 0), Element(3, 1), Element(3, 2));</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;}</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160; </div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00371"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a2bcdb9c1ae35a6d7dce5d416773a0226">  371</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a2bcdb9c1ae35a6d7dce5d416773a0226">xiiMat4Template&lt;Type&gt;::SetTranslationVector</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v)</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;{</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  Element(3, 0) = v.x;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  Element(3, 1) = v.y;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  Element(3, 2) = v.z;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;}</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; </div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00379"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a3a3b0e067979dea2913d0eb3d8e1c198">  379</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a3a3b0e067979dea2913d0eb3d8e1c198">xiiMat4Template&lt;Type&gt;::SetRotationalPart</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; mRotation)</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;{</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 col = 0; col &lt; 3; ++col)</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">for</span> (xiiUInt32 row = 0; row &lt; 3; ++row)</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    {</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;      Element(col, row) = mRotation.Element(col, row);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    }</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  }</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;}</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160; </div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00391"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a0d3ec2c3862c2da2413a69bae4ca3473">  391</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a0d3ec2c3862c2da2413a69bae4ca3473">xiiMat4Template&lt;Type&gt;::GetRotationalPart</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 col = 0; col &lt; 3; ++col)</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordflow">for</span> (xiiUInt32 row = 0; row &lt; 3; ++row)</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    {</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;      r.Element(col, row) = Element(col, row);</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    }</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;  }</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160; </div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;}</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160; </div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00408"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a87cdaa7383ccf2cb795a39dd18b01cf4">  408</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a87cdaa7383ccf2cb795a39dd18b01cf4">xiiMat4Template&lt;Type&gt;::operator*=</a>(Type f)</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;{</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  <span class="keywordflow">for</span> (xiiInt32 i = 0; i &lt; 16; ++i)</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    m_fElementsCM[i] *= f;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160; </div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;}</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a744e49ea103f33e81b90eb54fbc03d52">  417</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a744e49ea103f33e81b90eb54fbc03d52">xiiMat4Template&lt;Type&gt;::operator/=</a>(Type f)</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;{</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  <span class="keyword">const</span> Type fInv = <a class="code" href="../../d1/d37/namespacexii_math.htm#ac1067d4c24d9b02662c60a528c870580">xiiMath::Invert</a>(f);</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160; </div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  operator*=(fInv);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;}</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160; </div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m2)</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;{</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  <span class="keywordflow">for</span> (xiiInt32 i = 0; i &lt; 4; ++i)</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  {</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    r.Element(0, i) = m1.Element(0, i) * m2.Element(0, 0) + m1.Element(1, i) * m2.Element(0, 1) + m1.Element(2, i) * m2.Element(0, 2) +</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;      m1.Element(3, i) * m2.Element(0, 3);</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    r.Element(1, i) = m1.Element(0, i) * m2.Element(1, 0) + m1.Element(1, i) * m2.Element(1, 1) + m1.Element(2, i) * m2.Element(1, 2) +</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      m1.Element(3, i) * m2.Element(1, 3);</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    r.Element(2, i) = m1.Element(0, i) * m2.Element(2, 0) + m1.Element(1, i) * m2.Element(2, 1) + m1.Element(2, i) * m2.Element(2, 2) +</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      m1.Element(3, i) * m2.Element(2, 3);</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    r.Element(3, i) = m1.Element(0, i) * m2.Element(3, 0) + m1.Element(1, i) * m2.Element(3, 1) + m1.Element(2, i) * m2.Element(3, 2) +</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;      m1.Element(3, i) * m2.Element(3, 3);</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  }</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160; </div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;}</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160; </div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;XII_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v)</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;{</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;  <span class="keywordflow">return</span> m.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ad143eddbdd5e71bd018b013439c0c120">TransformPosition</a>(v);</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;}</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160; </div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;XII_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m, <span class="keyword">const</span> <a class="code" href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template&lt;Type&gt;</a>&amp; v)</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;{</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;  <span class="keywordflow">return</span> m.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ac85f3192c3d53cb4f2e3ff7ac69fe55c">Transform</a>(v);</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;}</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160; </div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160; </div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160; </div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="comment">// *** Stuff needed for matrix inversion ***</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160; </div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;XII_FORCE_INLINE Type GetDeterminantOf3x3SubMatrix(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m, xiiInt32 i, xiiInt32 j)</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;{</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  <span class="keyword">const</span> xiiInt32 si0 = 0 + ((i &lt;= 0) ? 1 : 0);</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  <span class="keyword">const</span> xiiInt32 si1 = 1 + ((i &lt;= 1) ? 1 : 0);</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  <span class="keyword">const</span> xiiInt32 si2 = 2 + ((i &lt;= 2) ? 1 : 0);</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160; </div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;  <span class="keyword">const</span> xiiInt32 sj0 = 0 + ((j &lt;= 0) ? 1 : 0);</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  <span class="keyword">const</span> xiiInt32 sj1 = 1 + ((j &lt;= 1) ? 1 : 0);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;  <span class="keyword">const</span> xiiInt32 sj2 = 2 + ((j &lt;= 2) ? 1 : 0);</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160; </div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;  Type fDet2 = ((m.Element(sj0, si0) * m.Element(sj1, si1) * m.Element(sj2, si2) + m.Element(sj1, si0) * m.Element(sj2, si1) * m.Element(sj0, si2) +</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                 m.Element(sj2, si0) * m.Element(sj0, si1) * m.Element(sj1, si2)) -</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                (m.Element(sj0, si2) * m.Element(sj1, si1) * m.Element(sj2, si0) + m.Element(sj1, si2) * m.Element(sj2, si1) * m.Element(sj0, si0) +</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;                 m.Element(sj2, si2) * m.Element(sj0, si1) * m.Element(sj1, si0)));</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160; </div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;  <span class="keywordflow">return</span> fDet2;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;}</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160; </div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;XII_FORCE_INLINE Type GetDeterminantOf4x4Matrix(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m)</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;{</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;  Type det = 0.0;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160; </div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;  det += m.Element(0, 0) * GetDeterminantOf3x3SubMatrix(m, 0, 0);</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;  det += -m.Element(1, 0) * GetDeterminantOf3x3SubMatrix(m, 0, 1);</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;  det += m.Element(2, 0) * GetDeterminantOf3x3SubMatrix(m, 0, 2);</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  det += -m.Element(3, 0) * GetDeterminantOf3x3SubMatrix(m, 0, 3);</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160; </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;  <span class="keywordflow">return</span> det;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;}</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160; </div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160; </div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">// *** free functions ***</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160; </div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;XII_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m1)</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;{</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;  <span class="keywordflow">return</span> operator*(m1, f);</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;}</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160; </div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m1, Type f)</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;{</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160; </div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 16; ++i)</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    r.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i] = m1.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i] * f;</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160; </div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;}</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160; </div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m1, Type f)</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;{</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;  <span class="keywordflow">return</span> operator*(m1, <a class="code" href="../../d1/d37/namespacexii_math.htm#ac1067d4c24d9b02662c60a528c870580">xiiMath::Invert</a>(f));</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;}</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160; </div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m2)</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;{</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;  <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160; </div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 16; ++i)</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    r.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i] = m1.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i] + m2.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i];</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160; </div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;}</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160; </div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m2)</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;{</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;  <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160; </div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 16; ++i)</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    r.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i] = m1.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i] - m2.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i];</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160; </div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;  XII_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;}</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160; </div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00544"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ae5a7d778683e63924178c0170e7b4d4e">  544</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae5a7d778683e63924178c0170e7b4d4e">xiiMat4Template&lt;Type&gt;::IsIdentical</a>(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  XII_NAN_ASSERT(&amp;rhs);</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160; </div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 16; ++i)</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;  {</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keywordflow">if</span> (m_fElementsCM[i] != rhs.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i])</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  }</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160; </div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;}</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160; </div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a22dcdf69eea89ff8ff575c3be11399e0">  559</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a22dcdf69eea89ff8ff575c3be11399e0">xiiMat4Template&lt;Type&gt;::IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;  XII_NAN_ASSERT(&amp;rhs);</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160; </div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;  XII_ASSERT_DEBUG(fEpsilon &gt;= 0.0f, <span class="stringliteral">&quot;Epsilon may not be negative.&quot;</span>);</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160; </div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 16; ++i)</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;  {</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(m_fElementsCM[i], rhs.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">m_fElementsCM</a>[i], fEpsilon))</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;  }</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160; </div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;}</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160; </div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;{</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae5a7d778683e63924178c0170e7b4d4e">IsIdentical</a>(rhs);</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;}</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160; </div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;{</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;  <span class="keywordflow">return</span> !lhs.<a class="code" href="../../d1/dec/classxii_mat4_template.htm#ae5a7d778683e63924178c0170e7b4d4e">IsIdentical</a>(rhs);</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;}</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160; </div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00588"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a377a23eb873eb6b6834fcadf552f3c17">  588</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a377a23eb873eb6b6834fcadf552f3c17">xiiMat4Template&lt;Type&gt;::IsZero</a>(Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160; </div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 16; ++i)</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;  {</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a76f446939ad58af387fb79b8fd9deff7">xiiMath::IsZero</a>(m_fElementsCM[i], fEpsilon))</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;  }</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160; </div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;}</div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160; </div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00602"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#aa12210c1389557f4fbd37b3bd89e3cb1">  602</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#aa12210c1389557f4fbd37b3bd89e3cb1">xiiMat4Template&lt;Type&gt;::IsIdentity</a>(Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;  XII_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160; </div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(0, 0), (Type)1, fEpsilon))</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(0, 1), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(0, 2), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(0, 3), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160; </div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(1, 0), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(1, 1), (Type)1, fEpsilon))</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(1, 2), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(1, 3), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160; </div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(2, 0), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(2, 1), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(2, 2), (Type)1, fEpsilon))</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(2, 3), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160; </div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(3, 0), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(3, 1), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(3, 2), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a>(Element(3, 3), (Type)1, fEpsilon))</div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160; </div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;}</div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160; </div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00646"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a519ab308d795eb2c4c1c636dc0d5368b">  646</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a519ab308d795eb2c4c1c636dc0d5368b">xiiMat4Template&lt;Type&gt;::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 16; ++i)</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;  {</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keywordflow">if</span> (!xiiMath::IsFinite(m_fElementsCM[i]))</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;  }</div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160; </div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;}</div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160; </div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00658"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#aae5584c9fc1123e77e11dea67243b82d">  658</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#aae5584c9fc1123e77e11dea67243b82d">xiiMat4Template&lt;Type&gt;::IsNaN</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;  <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; 16; ++i)</div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;  {</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <span class="keywordflow">if</span> (xiiMath::IsNaN(m_fElementsCM[i]))</div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;  }</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160; </div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;}</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160; </div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00670"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#a3e0db63cc2dac827fe433d16247e5f97">  670</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#a3e0db63cc2dac827fe433d16247e5f97">xiiMat4Template&lt;Type&gt;::GetScalingFactors</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> v;</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160; </div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;  v.x = <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>(Element(0, 0), Element(0, 1), Element(0, 2)).<a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ab6a3315443618ff3876ebbe346b30b49">GetLength</a>();</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;  v.y = <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>(Element(1, 0), Element(1, 1), Element(1, 2)).<a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ab6a3315443618ff3876ebbe346b30b49">GetLength</a>();</div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;  v.z = <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>(Element(2, 0), Element(2, 1), Element(2, 2)).<a class="code" href="../../d9/d9a/classxii_vec3_template.htm#ab6a3315443618ff3876ebbe346b30b49">GetLength</a>();</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160; </div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;  XII_NAN_ASSERT(&amp;v);</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;  <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;}</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160; </div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00683"></a><span class="lineno"><a class="line" href="../../d1/dec/classxii_mat4_template.htm#ac42ca99dc9cc0dee7caa249fa4e13383">  683</a></span>&#160;<a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> <a class="code" href="../../d1/dec/classxii_mat4_template.htm#ac42ca99dc9cc0dee7caa249fa4e13383">xiiMat4Template&lt;Type&gt;::SetScalingFactors</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vXYZ, Type fEpsilon <span class="comment">/* = xiiMath::DefaultEpsilon&lt;Type&gt;() */</span>)</div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;{</div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> tx(Element(0, 0), Element(0, 1), Element(0, 2));</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> ty(Element(1, 0), Element(1, 1), Element(1, 2));</div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> tz(Element(2, 0), Element(2, 1), Element(2, 2));</div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160; </div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;  <span class="keywordflow">if</span> (tx.<a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a5efd19f2924205cfa1145e0593236761">SetLength</a>(vXYZ.x, fEpsilon) == XII_FAILURE)</div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;  <span class="keywordflow">if</span> (ty.<a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a5efd19f2924205cfa1145e0593236761">SetLength</a>(vXYZ.y, fEpsilon) == XII_FAILURE)</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;  <span class="keywordflow">if</span> (tz.<a class="code" href="../../d9/d9a/classxii_vec3_template.htm#a5efd19f2924205cfa1145e0593236761">SetLength</a>(vXYZ.z, fEpsilon) == XII_FAILURE)</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160; </div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160; </div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;  Element(0, 0) = tx.x;</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;  Element(0, 1) = tx.y;</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;  Element(0, 2) = tx.z;</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;  Element(1, 0) = ty.x;</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;  Element(1, 1) = ty.y;</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;  Element(1, 2) = ty.z;</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;  Element(2, 0) = tz.x;</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;  Element(2, 1) = tz.y;</div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;  Element(2, 2) = tz.z;</div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160; </div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;  <span class="keywordflow">return</span> XII_SUCCESS;</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;}</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160; </div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/AllClasses_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_mat4_template_htm_a377a23eb873eb6b6834fcadf552f3c17"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a377a23eb873eb6b6834fcadf552f3c17">xiiMat4Template::IsZero</a></div><div class="ttdeci">bool IsZero(Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether all elements are zero.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:588</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_af91ea1d9388c4b98e192542882aba2df"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#af91ea1d9388c4b98e192542882aba2df">xiiMat4Template::GetDiagonal</a></div><div class="ttdeci">xiiVec4Template&lt; Type &gt; GetDiagonal() const</div><div class="ttdoc">Returns all 4 components on the diagonal of the matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:261</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a519ab308d795eb2c4c1c636dc0d5368b"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a519ab308d795eb2c4c1c636dc0d5368b">xiiMat4Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether all components are finite numbers.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:646</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_aeb1a15a834f85f677c61c81bd25eacb1"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#aeb1a15a834f85f677c61c81bd25eacb1">xiiMat4Template::SetRotationMatrixX</a></div><div class="ttdeci">void SetRotationMatrixX(xiiAngleTemplate&lt; Type &gt; angle)</div><div class="ttdoc">Sets this matrix to be a rotation matrix around the X-axis.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:152</div></div>
<div class="ttc" id="anamespacexii_math_htm_ac1067d4c24d9b02662c60a528c870580"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#ac1067d4c24d9b02662c60a528c870580">xiiMath::Invert</a></div><div class="ttdeci">constexpr Type Invert(Type f)</div><div class="ttdoc">Returns 1 / f.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:83</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a3a3b0e067979dea2913d0eb3d8e1c198"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a3a3b0e067979dea2913d0eb3d8e1c198">xiiMat4Template::SetRotationalPart</a></div><div class="ttdeci">void SetRotationalPart(const xiiMat3Template&lt; Type &gt; &amp;mRotation)</div><div class="ttdoc">Sets the 3x3 rotational part of the matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:379</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_aae4dffb1ff4bf79d68301d1c008e2665"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#aae4dffb1ff4bf79d68301d1c008e2665">xiiMat4Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets all elements to zero.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:128</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a22dcdf69eea89ff8ff575c3be11399e0"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a22dcdf69eea89ff8ff575c3be11399e0">xiiMat4Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const xiiMat4Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:559</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a9ca64c0fd0c949a3c6051b6f1976d1fe"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a9ca64c0fd0c949a3c6051b6f1976d1fe">xiiMat4Template::SetFromArray</a></div><div class="ttdeci">void SetFromArray(const Type *const pData, xiiMatrixLayout::Enum layout)</div><div class="ttdoc">Copies 16 values from pData into the matrix. Can handle the data in row-major or column-major order.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:59</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a2bcdb9c1ae35a6d7dce5d416773a0226"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a2bcdb9c1ae35a6d7dce5d416773a0226">xiiMat4Template::SetTranslationVector</a></div><div class="ttdeci">void SetTranslationVector(const xiiVec3Template&lt; Type &gt; &amp;v)</div><div class="ttdoc">Sets the first 3 components of the last column.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:371</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a26ab98b4aba05476d5952b1b161da8fd"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a26ab98b4aba05476d5952b1b161da8fd">xiiMat4Template::SetIdentity</a></div><div class="ttdeci">void SetIdentity()</div><div class="ttdoc">Sets all elements to zero, except the diagonal, which is set to one.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:134</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_ab25d38b037822ed8c510f8756feaf7e7"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#ab25d38b037822ed8c510f8756feaf7e7">xiiMemoryUtils::AddByteOffset</a></div><div class="ttdeci">static T * AddByteOffset(T *pPtr, ptrdiff_t iOffset)</div><div class="ttdoc">Returns the address stored in ptr plus the given byte offset iOffset, cast to type T.</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a4e56f7694674702e3d2977c394b853e0"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a4e56f7694674702e3d2977c394b853e0">xiiMat4Template::GetRow</a></div><div class="ttdeci">xiiVec4Template&lt; Type &gt; GetRow(xiiUInt32 uiRow) const</div><div class="ttdoc">Returns all 4 components of the i-th row.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:209</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a938a39e07bbcf837a0f0ea54b60d1388"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a938a39e07bbcf837a0f0ea54b60d1388">xiiMat4Template::ZeroMatrix</a></div><div class="ttdeci">static const xiiMat4Template&lt; Type &gt; ZeroMatrix()</div><div class="ttdoc">Returns a Zero Matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:53</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a6b5d1228cdbe6fda34c621dd0fad3184"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a6b5d1228cdbe6fda34c621dd0fad3184">xiiMat4Template::GetTranslationVector</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; GetTranslationVector() const</div><div class="ttdoc">Returns the first 3 components of the last column.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:363</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a7f0f3b30ddd90c068ddb6b50b5a827cb"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a7f0f3b30ddd90c068ddb6b50b5a827cb">xiiMat4Template::SetRotationMatrixZ</a></div><div class="ttdeci">void SetRotationMatrixZ(xiiAngleTemplate&lt; Type &gt; angle)</div><div class="ttdoc">Sets this matrix to be a rotation matrix around the Z-axis.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:171</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_af938e1d2dd6a525a2a69d82294b22cbf"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#af938e1d2dd6a525a2a69d82294b22cbf">xiiMat4Template::GetColumn</a></div><div class="ttdeci">xiiVec4Template&lt; Type &gt; GetColumn(xiiUInt32 uiColumn) const</div><div class="ttdoc">Returns all 4 components of the i-th column.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:235</div></div>
<div class="ttc" id="astructxii_matrix_layout_htm_ac36c91b001c7cd816897b73c0bff5e6da755702638953d02b2b8354e528d4ed1c"><div class="ttname"><a href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da755702638953d02b2b8354e528d4ed1c">xiiMatrixLayout::ColumnMajor</a></div><div class="ttdeci">@ ColumnMajor</div><div class="ttdoc">The matrix is stored in column-major format.</div><div class="ttdef"><b>Definition:</b> Declarations.h:64</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_ac363bd5c7c6d681a2f85d14f6183a44e"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#ac363bd5c7c6d681a2f85d14f6183a44e">xiiMat4Template::GetInverse</a></div><div class="ttdeci">const xiiMat4Template&lt; Type &gt; GetInverse(Type fEpsilon=xiiMath::SmallEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns the inverse of this matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:199</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template</a></div><div class="ttdoc">A 4x4 component matrix class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:171</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template</a></div><div class="ttdoc">A 3x3 component matrix class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:164</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_ad4ececa6af2f89360d8aa0bda8e3b371"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#ad4ececa6af2f89360d8aa0bda8e3b371">xiiMat4Template::SetTransformationMatrix</a></div><div class="ttdeci">void SetTransformationMatrix(const xiiMat3Template&lt; Type &gt; &amp;mRotation, const xiiVec3Template&lt; Type &gt; &amp;vTranslation)</div><div class="ttdoc">Sets a transformation matrix from a rotation and a translation.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:78</div></div>
<div class="ttc" id="anamespacexii_math_htm_a76f446939ad58af387fb79b8fd9deff7"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a76f446939ad58af387fb79b8fd9deff7">xiiMath::IsZero</a></div><div class="ttdeci">bool IsZero(Type f, Type fEpsilon)</div><div class="ttdoc">Checks whether the given number is close to zero.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:271</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a0d3ec2c3862c2da2413a69bae4ca3473"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a0d3ec2c3862c2da2413a69bae4ca3473">xiiMat4Template::GetRotationalPart</a></div><div class="ttdeci">const xiiMat3Template&lt; Type &gt; GetRotationalPart() const</div><div class="ttdoc">Returns the 3x3 rotational and scaling part of the matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:391</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_ac42ca99dc9cc0dee7caa249fa4e13383"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#ac42ca99dc9cc0dee7caa249fa4e13383">xiiMat4Template::SetScalingFactors</a></div><div class="ttdeci">xiiResult SetScalingFactors(const xiiVec3Template&lt; Type &gt; &amp;vXYZ, Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to set the three scaling factors in the matrix. Returns XII_FAILURE if the matrix columns canno...</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:683</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_ad06f1aada15fb3d6322d8fad0c3aff87"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#ad06f1aada15fb3d6322d8fad0c3aff87">xiiMat4Template::xiiMat4Template</a></div><div class="ttdeci">xiiMat4Template()</div><div class="ttdoc">Default Constructor DOES NOT INITIALIZE the matrix, at all.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:6</div></div>
<div class="ttc" id="anamespacexii_math_htm_a2e7c389d4195d010ba0c207a1e981a58"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a2e7c389d4195d010ba0c207a1e981a58">xiiMath::Swap</a></div><div class="ttdeci">XII_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:224</div></div>
<div class="ttc" id="astructxii_matrix_layout_htm_ac36c91b001c7cd816897b73c0bff5e6da5ad82519c9175b12d17d03b62d0b18e1"><div class="ttname"><a href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da5ad82519c9175b12d17d03b62d0b18e1">xiiMatrixLayout::RowMajor</a></div><div class="ttdeci">@ RowMajor</div><div class="ttdoc">The matrix is stored in row-major format.</div><div class="ttdef"><b>Definition:</b> Declarations.h:63</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_a5efd19f2924205cfa1145e0593236761"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#a5efd19f2924205cfa1145e0593236761">xiiVec3Template::SetLength</a></div><div class="ttdeci">xiiResult SetLength(Type fNewLength, Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to rescale the vector to the given length. If the vector is too close to zero,...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:56</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a87cdaa7383ccf2cb795a39dd18b01cf4"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a87cdaa7383ccf2cb795a39dd18b01cf4">xiiMat4Template::operator*=</a></div><div class="ttdeci">void operator*=(Type f)</div><div class="ttdoc">Component-wise multiplication (commutative)</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:408</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a205f7765e450a18385030a530efaef07"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a205f7765e450a18385030a530efaef07">xiiMat4Template::SetScalingMatrix</a></div><div class="ttdeci">void SetScalingMatrix(const xiiVec3Template&lt; Type &gt; &amp;vScale)</div><div class="ttdoc">Sets the matrix to all zero, except the diagonal, which is set to x,y,z,1.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:146</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_ac85f3192c3d53cb4f2e3ff7ac69fe55c"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#ac85f3192c3d53cb4f2e3ff7ac69fe55c">xiiMat4Template::Transform</a></div><div class="ttdeci">const xiiVec4Template&lt; Type &gt; Transform(const xiiVec4Template&lt; Type &gt; &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:335</div></div>
<div class="ttc" id="anamespacexii_math_htm_a20047812a62c07b9ac2144a5520c18f0"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a20047812a62c07b9ac2144a5520c18f0">xiiMath::IsEqual</a></div><div class="ttdeci">constexpr bool IsEqual(Type lhs, Type rhs, Type fEpsilon)</div><div class="ttdoc">Checks, whether fValue is in the range [fDesired - fMaxImprecision; fDesired + fMaxImprecision].</div><div class="ttdef"><b>Definition:</b> Math_inl.h:259</div></div>
<div class="ttc" id="astructxii_matrix_layout_htm_ac36c91b001c7cd816897b73c0bff5e6d"><div class="ttname"><a href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> Declarations.h:61</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_ae20a89278e0bcca31ce62eeedee23bbf"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#ae20a89278e0bcca31ce62eeedee23bbf">xiiMat4Template::m_fElementsCM</a></div><div class="ttdeci">Type m_fElementsCM[16]</div><div class="ttdoc">The matrix as a 16-element Type array (column-major)</div><div class="ttdef"><b>Definition:</b> Mat4.h:24</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a19d6ae8452504362c063d527c00e3c01"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a19d6ae8452504362c063d527c00e3c01">xiiMat4Template::SetRotationMatrixY</a></div><div class="ttdeci">void SetRotationMatrixY(xiiAngleTemplate&lt; Type &gt; angle)</div><div class="ttdoc">Sets this matrix to be a rotation matrix around the Y-axis.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:161</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_ae5a7d778683e63924178c0170e7b4d4e"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#ae5a7d778683e63924178c0170e7b4d4e">xiiMat4Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const xiiMat4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:544</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a83f63e807ecf6895c3674c26c011cc48"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a83f63e807ecf6895c3674c26c011cc48">xiiMat4Template::GetTranspose</a></div><div class="ttdeci">const xiiMat4Template&lt; Type &gt; GetTranspose() const</div><div class="ttdoc">Returns the transpose of this matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:191</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_aae5584c9fc1123e77e11dea67243b82d"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#aae5584c9fc1123e77e11dea67243b82d">xiiMat4Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:658</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_aa12210c1389557f4fbd37b3bd89e3cb1"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#aa12210c1389557f4fbd37b3bd89e3cb1">xiiMat4Template::IsIdentity</a></div><div class="ttdeci">bool IsIdentity(Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether this is an identity matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:602</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a744e49ea103f33e81b90eb54fbc03d52"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a744e49ea103f33e81b90eb54fbc03d52">xiiMat4Template::operator/=</a></div><div class="ttdeci">void operator/=(Type f)</div><div class="ttdoc">Component-wise division.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:417</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a1e54ab5b9594e8853808574a4aa5f10b"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a1e54ab5b9594e8853808574a4aa5f10b">xiiMat4Template::SetDiagonal</a></div><div class="ttdeci">void SetDiagonal(const xiiVec4Template&lt; Type &gt; &amp;vDiag)</div><div class="ttdoc">Sets all 4 components on the diagonal of the matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:269</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_aa1144e38c7e16f44b143a89e3d8980da"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#aa1144e38c7e16f44b143a89e3d8980da">xiiMat4Template::SetColumn</a></div><div class="ttdeci">void SetColumn(xiiUInt32 uiColumn, const xiiVec4Template&lt; Type &gt; &amp;vColumn)</div><div class="ttdoc">Sets all 4 components of the i-th column.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:250</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_aa58bb0b4b2ef79adbc45148a8ee09c4f"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#aa58bb0b4b2ef79adbc45148a8ee09c4f">xiiMat4Template::TransformDirection</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; TransformDirection(const xiiVec3Template&lt; Type &gt; &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is zero. So,...</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:308</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a17562e4b7506e1d46229f8623564ce8d"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a17562e4b7506e1d46229f8623564ce8d">xiiMat4Template::Invert</a></div><div class="ttdeci">xiiResult Invert(Type fEpsilon=xiiMath::SmallEpsilon&lt; Type &gt;())</div><div class="ttdoc">Inverts this matrix. Return value indicates whether the matrix could be inverted.</div><div class="ttdef"><b>Definition:</b> AllClasses_inl.h:301</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:54</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a31818ab8d41aaec0a1f38709fbce5f2f"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a31818ab8d41aaec0a1f38709fbce5f2f">xiiMat4Template::SetElements</a></div><div class="ttdeci">void SetElements(Type c1r1, Type c2r1, Type c3r1, Type c4r1, Type c1r2, Type c2r2, Type c3r2, Type c4r2, Type c1r3, Type c2r3, Type c3r3, Type c4r3, Type c1r4, Type c2r4, Type c3r4, Type c4r4)</div><div class="ttdoc">Sets each element manually: Naming is &quot;column-n row-m&quot;.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:107</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a653a557b73aaf710bf993aad9ec5b7df"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a653a557b73aaf710bf993aad9ec5b7df">xiiMat4Template::IdentityMatrix</a></div><div class="ttdeci">static const xiiMat4Template&lt; Type &gt; IdentityMatrix()</div><div class="ttdoc">Returns an Identity Matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:47</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a85a0c91baf31f0e49243fcd4c2314199"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a85a0c91baf31f0e49243fcd4c2314199">xiiMat4Template::GetAsArray</a></div><div class="ttdeci">void GetAsArray(Type *out_pData, xiiMatrixLayout::Enum layout) const</div><div class="ttdoc">Copies the 16 values of this matrix into the given array. 'layout' defines whether the data should en...</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:86</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_ac0c931bbfc66e5c8c466799aa3f23596"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#ac0c931bbfc66e5c8c466799aa3f23596">xiiMat4Template::SetRow</a></div><div class="ttdeci">void SetRow(xiiUInt32 uiRow, const xiiVec4Template&lt; Type &gt; &amp;vRow)</div><div class="ttdoc">Sets all 4 components of the i-th row.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:224</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a3e0db63cc2dac827fe433d16247e5f97"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a3e0db63cc2dac827fe433d16247e5f97">xiiMat4Template::GetScalingFactors</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; GetScalingFactors() const</div><div class="ttdoc">Returns the 3 scaling factors that are encoded in the matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:670</div></div>
<div class="ttc" id="aclassxii_angle_template_htm"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a></div><div class="ttdoc">Wrapper class for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:10</div></div>
<div class="ttc" id="anamespacexii_math_htm_afbbbae240e0cea673cd16646b5142e06"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#afbbbae240e0cea673cd16646b5142e06">xiiMath::Sin</a></div><div class="ttdeci">XII_ALWAYS_INLINE Type Sin(xiiAngleTemplate&lt; Type &gt; a)</div><div class="ttdoc">***** Trigonometric Functions *****</div><div class="ttdef"><b>Definition:</b> Math_inl.h:8</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_a17c66aac0beb701ee11bdffd1024b63e"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#a17c66aac0beb701ee11bdffd1024b63e">xiiMat4Template::SetTranslationMatrix</a></div><div class="ttdeci">void SetTranslationMatrix(const xiiVec3Template&lt; Type &gt; &amp;vTranslation)</div><div class="ttdoc">Sets the matrix to all zero, except the last column, which is set to x,y,z,1.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:140</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a802d7a152c551948e45e7d0e19ae1e88"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a802d7a152c551948e45e7d0e19ae1e88">xiiMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount=1)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm_ab6a3315443618ff3876ebbe346b30b49"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm#ab6a3315443618ff3876ebbe346b30b49">xiiVec3Template::GetLength</a></div><div class="ttdeci">Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:50</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_aabea123836f8a834510e18e9bf9d2cdf"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#aabea123836f8a834510e18e9bf9d2cdf">xiiMat4Template::Transpose</a></div><div class="ttdeci">void Transpose()</div><div class="ttdoc">Transposes this matrix.</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:180</div></div>
<div class="ttc" id="aclassxii_vec4_template_htm"><div class="ttname"><a href="../../d1/d20/classxii_vec4_template.htm">xiiVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:149</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:138</div></div>
<div class="ttc" id="anamespacexii_math_htm_a194fc513007059c6e129cdeb321c3797"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a194fc513007059c6e129cdeb321c3797">xiiMath::Cos</a></div><div class="ttdeci">XII_ALWAYS_INLINE Type Cos(xiiAngleTemplate&lt; Type &gt; a)</div><div class="ttdoc">Takes an angle, returns its cosine.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:11</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm_ad143eddbdd5e71bd018b013439c0c120"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm#ad143eddbdd5e71bd018b013439c0c120">xiiMat4Template::TransformPosition</a></div><div class="ttdeci">const xiiVec3Template&lt; Type &gt; TransformPosition(const xiiVec3Template&lt; Type &gt; &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is one (default behavior).</div><div class="ttdef"><b>Definition:</b> Mat4_inl.h:278</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c1b0860bb61ff24e678d996d14e4bcdd.htm">Math</a></li><li class="navelem"><a class="el" href="../../dir_fb7e93d80251333452775ccd3b7c417a.htm">Implementation</a></li><li class="navelem"><b>Mat4_inl.h</b></li>
    <li class="footer">Generated on Thu Aug 17 2023 02:03:11 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
