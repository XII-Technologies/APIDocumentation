<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Math/Angle.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/d18/_angle_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Angle.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Declarations.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm">   10</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  constexpr <span class="keyword">static</span> XII_ALWAYS_INLINE Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a7da06216380b9e6d3e6f04570afb9a2c">DegToRadMultiplier</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  constexpr <span class="keyword">static</span> XII_ALWAYS_INLINE Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#aad83b7c65f38f601d03f3d0c7fbcefc5">RadToDegMultiplier</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  constexpr <span class="keyword">static</span> Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a125b34adf00dc677204d2a7a5904b2ab">DegToRad</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  constexpr <span class="keyword">static</span> Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a56b7439a2dd2efc94c847a302a32b820">RadToDeg</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  constexpr <span class="keyword">static</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a186b3138db53d77de01facd1026240c0">Degree</a>(Type fDegree); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  constexpr <span class="keyword">static</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a6daf638ae092b7998e03c16ba97e7239">Radian</a>(Type fRadian); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a8520af3ae2399283c66b78844af96692">   36</a></span>&#160;  constexpr <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a8520af3ae2399283c66b78844af96692">xiiAngleTemplate</a>() :</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    m_fRadian(static_cast&lt;Type&gt;(0))</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  constexpr Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a0981cd78050c0ee3b82197d6572d56be">GetDegree</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  constexpr Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">GetRadian</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a426b85c6541fb19f7cacfa07296de059">   48</a></span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a426b85c6541fb19f7cacfa07296de059">SetRadian</a>(Type rad) { m_fRadian = rad; };</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a7e9e308308a55e19b03dbf5a3fed8c66">NormalizeRange</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a61b9cffe96c9937c13122e97f23417f9">GetNormalizedRange</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  constexpr <span class="keyword">static</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a1b19be99c551b7a895730631b2e600e8">AngleBetween</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> a, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> b); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a2b5342a182d1fdedc3db8a49cd4a2e21">IsEqualSimple</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> rhs, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> epsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#ad395aa30c07355b4af56067d542d6514">IsEqualNormalized</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> rhs, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> epsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="comment">// unary operators</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  constexpr <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> operator-() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="comment">// arithmetic operators</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  constexpr <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> operator+(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> r) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  constexpr <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> operator-(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> r) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="comment">// compound assignment operators</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordtype">void</span> operator+=(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> r); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordtype">void</span> operator-=(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> r); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="comment">// comparison</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  constexpr <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; r) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  constexpr <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; r) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="comment">// At least the &lt; operator is implement to make clamping etc. work</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  constexpr <span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; r) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  constexpr <span class="keywordtype">bool</span> operator&gt;(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; r) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  constexpr <span class="keywordtype">bool</span> operator&lt;=(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; r) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  constexpr <span class="keywordtype">bool</span> operator&gt;=(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; r) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="comment">// Note: relational operators on angles are not really possible - is 0 degree smaller or bigger than 359 degree?</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  constexpr <span class="keyword">explicit</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a8520af3ae2399283c66b78844af96692">xiiAngleTemplate</a>(Type fRadian) :</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    m_fRadian(fRadian)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  Type m_fRadian;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  constexpr <span class="keyword">static</span> Type Pi();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;};</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">// Mathematical operators</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;constexpr <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> operator*(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> a, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;constexpr <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> operator*(Type f, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> a); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;constexpr <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> operator/(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> a, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment"></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;constexpr Type operator/(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> a, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> b); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Angle_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_angle_template_htm_a7da06216380b9e6d3e6f04570afb9a2c"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a7da06216380b9e6d3e6f04570afb9a2c">xiiAngleTemplate::DegToRadMultiplier</a></div><div class="ttdeci">constexpr static XII_ALWAYS_INLINE Type DegToRadMultiplier()</div><div class="ttdoc">Returns the constant to multiply with an angle in degree to convert it to radians.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:10</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a8520af3ae2399283c66b78844af96692"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a8520af3ae2399283c66b78844af96692">xiiAngleTemplate::xiiAngleTemplate</a></div><div class="ttdeci">constexpr xiiAngleTemplate()</div><div class="ttdoc">Standard constructor, initializing with 0.</div><div class="ttdef"><b>Definition:</b> Angle.h:36</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a6daf638ae092b7998e03c16ba97e7239"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a6daf638ae092b7998e03c16ba97e7239">xiiAngleTemplate::Radian</a></div><div class="ttdeci">constexpr static xiiAngleTemplate&lt; Type &gt; Radian(Type fRadian)</div><div class="ttdoc">Creates an instance of xiiAngleTemplate that was initialized from radian. (No need for any conversion...</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:40</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a125b34adf00dc677204d2a7a5904b2ab"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a125b34adf00dc677204d2a7a5904b2ab">xiiAngleTemplate::DegToRad</a></div><div class="ttdeci">constexpr static Type DegToRad(Type f)</div><div class="ttdoc">Converts an angle in degree to radians.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:22</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_ad395aa30c07355b4af56067d542d6514"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#ad395aa30c07355b4af56067d542d6514">xiiAngleTemplate::IsEqualNormalized</a></div><div class="ttdeci">bool IsEqualNormalized(xiiAngleTemplate&lt; Type &gt; rhs, xiiAngleTemplate&lt; Type &gt; epsilon) const</div><div class="ttdoc">Equality check with epsilon that uses normalized angles. Will recognize 720 degree == 0 degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:97</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_afaebb218561104c8b89d645dab3d8ded"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">xiiAngleTemplate::GetRadian</a></div><div class="ttdeci">constexpr Type GetRadian() const</div><div class="ttdoc">Returns the radian value. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:52</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a426b85c6541fb19f7cacfa07296de059"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a426b85c6541fb19f7cacfa07296de059">xiiAngleTemplate::SetRadian</a></div><div class="ttdeci">XII_ALWAYS_INLINE void SetRadian(Type rad)</div><div class="ttdoc">Sets the radian value. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle.h:48</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a7e9e308308a55e19b03dbf5a3fed8c66"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a7e9e308308a55e19b03dbf5a3fed8c66">xiiAngleTemplate::NormalizeRange</a></div><div class="ttdeci">void NormalizeRange()</div><div class="ttdoc">Brings the angle into the range of 0 degree - 360 degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:58</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a1b19be99c551b7a895730631b2e600e8"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a1b19be99c551b7a895730631b2e600e8">xiiAngleTemplate::AngleBetween</a></div><div class="ttdeci">constexpr static xiiAngleTemplate&lt; Type &gt; AngleBetween(xiiAngleTemplate&lt; Type &gt; a, xiiAngleTemplate&lt; Type &gt; b)</div><div class="ttdoc">Computes the smallest angle between the two given angles. The angle will always be a positive value.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:432</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a56b7439a2dd2efc94c847a302a32b820"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a56b7439a2dd2efc94c847a302a32b820">xiiAngleTemplate::RadToDeg</a></div><div class="ttdeci">constexpr static Type RadToDeg(Type f)</div><div class="ttdoc">Converts an angle in radians to degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:28</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_aad83b7c65f38f601d03f3d0c7fbcefc5"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#aad83b7c65f38f601d03f3d0c7fbcefc5">xiiAngleTemplate::RadToDegMultiplier</a></div><div class="ttdeci">constexpr static XII_ALWAYS_INLINE Type RadToDegMultiplier()</div><div class="ttdoc">Returns the constant to multiply with an angle in degree to convert it to radians.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:16</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a0981cd78050c0ee3b82197d6572d56be"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a0981cd78050c0ee3b82197d6572d56be">xiiAngleTemplate::GetDegree</a></div><div class="ttdeci">constexpr Type GetDegree() const</div><div class="ttdoc">Returns the degree value. (Performs a conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:46</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a2b5342a182d1fdedc3db8a49cd4a2e21"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a2b5342a182d1fdedc3db8a49cd4a2e21">xiiAngleTemplate::IsEqualSimple</a></div><div class="ttdeci">bool IsEqualSimple(xiiAngleTemplate&lt; Type &gt; rhs, xiiAngleTemplate&lt; Type &gt; epsilon) const</div><div class="ttdoc">Equality check with epsilon. Simple check without normalization. 360 degree will equal 0 degree,...</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:89</div></div>
<div class="ttc" id="aclassxii_angle_template_htm"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a></div><div class="ttdoc">Wrapper class for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:10</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a61b9cffe96c9937c13122e97f23417f9"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a61b9cffe96c9937c13122e97f23417f9">xiiAngleTemplate::GetNormalizedRange</a></div><div class="ttdeci">xiiAngleTemplate&lt; Type &gt; GetNormalizedRange() const</div><div class="ttdoc">Returns an equivalent angle with range between 0 degree - 360 degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:81</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a186b3138db53d77de01facd1026240c0"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a186b3138db53d77de01facd1026240c0">xiiAngleTemplate::Degree</a></div><div class="ttdeci">constexpr static xiiAngleTemplate&lt; Type &gt; Degree(Type fDegree)</div><div class="ttdoc">Creates an instance of xiiAngleTemplate that was initialized from degree. (Performs a conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:34</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c1b0860bb61ff24e678d996d14e4bcdd.htm">Math</a></li><li class="navelem"><b>Angle.h</b></li>
    <li class="footer">Generated on Sun Mar 12 2023 21:19:45 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
