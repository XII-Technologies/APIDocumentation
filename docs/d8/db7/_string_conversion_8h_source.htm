<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Strings/StringConversion.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d8/db7/_string_conversion_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringConversion.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringView.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_PLATFORM_WINDOWS_UWP)</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// Include our windows.h header first to get rid of defines.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#  include &lt;Foundation/Basics/Platform/Win/IncludeWindows.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// For HString, HStringReference and co.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#  include &lt;wrl/wrappers/corewrappers.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="../../da/d85/classxii_string_w_char.htm">   19</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../da/d85/classxii_string_w_char.htm">xiiStringWChar</a></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <a class="code" href="../../da/d85/classxii_string_w_char.htm">xiiStringWChar</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <a class="code" href="../../da/d85/classxii_string_w_char.htm">xiiStringWChar</a>(<span class="keyword">const</span> xiiUInt16* pUtf16, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <a class="code" href="../../da/d85/classxii_string_w_char.htm">xiiStringWChar</a>(<span class="keyword">const</span> xiiUInt32* pUtf32, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <a class="code" href="../../da/d85/classxii_string_w_char.htm">xiiStringWChar</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pUtf32, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <a class="code" href="../../da/d85/classxii_string_w_char.htm">xiiStringWChar</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sUtf8, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt16* pUtf16);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt32* pUtf32);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pUtf32);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sUtf8);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  XII_ALWAYS_INLINE       <span class="keyword">operator</span> <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>*() <span class="keyword">const</span> { <span class="keywordflow">return</span> &amp;m_Data[0]; }</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  XII_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* GetData()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;m_Data[0]; }</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  XII_ALWAYS_INLINE xiiUInt32      GetElementCount()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Data.GetCount() - 1; <span class="comment">/* exclude the &#39;\0&#39; terminator */</span> }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">static</span> constexpr xiiUInt32          BufferSize = 1024;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;wchar_t, BufferSize&gt;</a> m_Data;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;};</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../d7/d45/classxii_string_utf8.htm">   46</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a>(<span class="keyword">const</span> xiiUInt16* pUtf16, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a>(<span class="keyword">const</span> xiiUInt32* pUtf32, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_PLATFORM_WINDOWS_UWP)</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a>(<span class="keyword">const</span> Microsoft::WRL::Wrappers::HString&amp; hstring, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <a class="code" href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a>(<span class="keyword">const</span> HSTRING&amp; hstring, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt16* pUtf16);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt32* pUtf32);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_PLATFORM_WINDOWS_UWP)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> Microsoft::WRL::Wrappers::HString&amp; hstring);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> HSTRING&amp; hstring);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  XII_ALWAYS_INLINE <span class="keyword">operator</span> <span class="keyword">const</span> <span class="keywordtype">char</span>*() <span class="keyword">const</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> &amp;m_Data[0];</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  XII_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* GetData()<span class="keyword"> const</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> &amp;m_Data[0];</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  XII_ALWAYS_INLINE xiiUInt32 GetElementCount()<span class="keyword"> const</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">return</span> m_Data.GetCount() - 1; <span class="comment">/* exclude the &#39;\0&#39; terminator */</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  XII_ALWAYS_INLINE <span class="keyword">operator</span> <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">return</span> GetView();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> GetView()<span class="keyword"> const</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>(&amp;m_Data[0], GetElementCount());</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keyword">static</span> constexpr xiiUInt32       BufferSize = 1024;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;char, BufferSize&gt;</a> m_Data;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;};</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="../../d5/d4f/classxii_string_utf16.htm">  103</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../d5/d4f/classxii_string_utf16.htm">xiiStringUtf16</a></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <a class="code" href="../../d5/d4f/classxii_string_utf16.htm">xiiStringUtf16</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <a class="code" href="../../d5/d4f/classxii_string_utf16.htm">xiiStringUtf16</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <a class="code" href="../../d5/d4f/classxii_string_utf16.htm">xiiStringUtf16</a>(<span class="keyword">const</span> xiiUInt16* pUtf16, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <a class="code" href="../../d5/d4f/classxii_string_utf16.htm">xiiStringUtf16</a>(<span class="keyword">const</span> xiiUInt32* pUtf32, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <a class="code" href="../../d5/d4f/classxii_string_utf16.htm">xiiStringUtf16</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pUtf32, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt16* pUtf16);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt32* pUtf32);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pUtf32);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  XII_ALWAYS_INLINE <span class="keyword">const</span> xiiUInt16* GetData()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;m_Data[0]; }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  XII_ALWAYS_INLINE xiiUInt32        GetElementCount()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Data.GetCount() - 1; <span class="comment">/* exclude the &#39;\0&#39; terminator */</span> }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keyword">static</span> constexpr xiiUInt32            BufferSize = 1024;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;xiiUInt16, BufferSize&gt;</a> m_Data;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;};</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="../../d1/df3/classxii_string_utf32.htm">  130</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../d1/df3/classxii_string_utf32.htm">xiiStringUtf32</a></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <a class="code" href="../../d1/df3/classxii_string_utf32.htm">xiiStringUtf32</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <a class="code" href="../../d1/df3/classxii_string_utf32.htm">xiiStringUtf32</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <a class="code" href="../../d1/df3/classxii_string_utf32.htm">xiiStringUtf32</a>(<span class="keyword">const</span> xiiUInt16* pUtf16, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <a class="code" href="../../d1/df3/classxii_string_utf32.htm">xiiStringUtf32</a>(<span class="keyword">const</span> xiiUInt32* pUtf32, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <a class="code" href="../../d1/df3/classxii_string_utf32.htm">xiiStringUtf32</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt16* pUtf16);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt32* pUtf32);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  XII_ALWAYS_INLINE <span class="keyword">const</span> xiiUInt32* GetData()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;m_Data[0]; }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  XII_ALWAYS_INLINE xiiUInt32        GetElementCount()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Data.GetCount() - 1; <span class="comment">/* exclude the &#39;\0&#39; terminator */</span> }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keyword">static</span> constexpr xiiUInt32            BufferSize = 1024;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;xiiUInt32, BufferSize&gt;</a> m_Data;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;};</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_PLATFORM_WINDOWS_UWP)</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL xiiStringHString</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;{</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  xiiStringHString();</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  xiiStringHString(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  xiiStringHString(<span class="keyword">const</span> xiiUInt16* szUtf16);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  xiiStringHString(<span class="keyword">const</span> xiiUInt32* szUtf32);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  xiiStringHString(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* szWChar);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt16* szUtf16);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> xiiUInt32* szUtf32);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* szWChar);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  XII_ALWAYS_INLINE <span class="keyword">const</span> Microsoft::WRL::Wrappers::HString&amp; GetData()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Data; }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  Microsoft::WRL::Wrappers::HString m_Data;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;};</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringConversion_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_string_utf8_htm"><div class="ttname"><a href="../../d7/d45/classxii_string_utf8.htm">xiiStringUtf8</a></div><div class="ttdoc">A small string class that converts any other encoding to Utf8.</div><div class="ttdef"><b>Definition:</b> StringConversion.h:46</div></div>
<div class="ttc" id="aclassxii_foundation_htm_a40d4e876d8aa817b36d04d0cac497fb8"><div class="ttname"><a href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a></div><div class="ttdeci">static XII_ALWAYS_INLINE xiiAllocatorBase * GetDefaultAllocator()</div><div class="ttdoc">The default allocator can be used for any kind of allocation if no alignment is required.</div><div class="ttdef"><b>Definition:</b> Basics.h:82</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt; wchar_t, BufferSize &gt;</a></div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="aclassxii_string_w_char_htm"><div class="ttname"><a href="../../da/d85/classxii_string_w_char.htm">xiiStringWChar</a></div><div class="ttdoc">A very simple string class that should only be used to temporarily convert text to the OSes native wc...</div><div class="ttdef"><b>Definition:</b> StringConversion.h:19</div></div>
<div class="ttc" id="aclassxii_string_utf16_htm"><div class="ttname"><a href="../../d5/d4f/classxii_string_utf16.htm">xiiStringUtf16</a></div><div class="ttdoc">A very simple class to convert text to Utf16 encoding.</div><div class="ttdef"><b>Definition:</b> StringConversion.h:103</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:21</div></div>
<div class="ttc" id="aclassxii_string_utf32_htm"><div class="ttname"><a href="../../d1/df3/classxii_string_utf32.htm">xiiStringUtf32</a></div><div class="ttdoc">This class only exists for completeness.</div><div class="ttdef"><b>Definition:</b> StringConversion.h:130</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b0d9e1007714c8956662e529025ab552.htm">Strings</a></li><li class="navelem"><b>StringConversion.h</b></li>
    <li class="footer">Generated on Sun Sep 24 2023 13:22:24 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
