<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Reflection/Implementation/AbstractProperty.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d8/d4a/_abstract_property_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">AbstractProperty.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HashSet.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HashTable.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Map.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Set.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/SmallArray.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/StaticArray.h&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/RTTI.h&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/Bitflags.h&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/Enum.h&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">class </span><a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../d8/ddc/structxii_is_bitflags.htm">   22</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d8/ddc/structxii_is_bitflags.htm">xiiIsBitflags</a></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">static</span> constexpr <span class="keywordtype">bool</span> value = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;};</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../d8/d36/structxii_is_bitflags_3_01xii_bitflags_3_01_t_01_4_01_4.htm">   28</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d8/ddc/structxii_is_bitflags.htm">xiiIsBitflags</a>&lt;<a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keyword">static</span> constexpr <span class="keywordtype">bool</span> value = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;};</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../dd/dd6/structxii_is_enum.htm">   35</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../dd/dd6/structxii_is_enum.htm">xiiIsEnum</a></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">static</span> constexpr <span class="keywordtype">bool</span> value = std::is_enum&lt;T&gt;::value;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;};</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d4/d1d/structxii_is_enum_3_01xii_enum_3_01_t_01_4_01_4.htm">   41</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../dd/dd6/structxii_is_enum.htm">xiiIsEnum</a>&lt;<a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">static</span> constexpr <span class="keywordtype">bool</span> value = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;};</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm">   47</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d6/d7c/structxii_property_flags.htm">xiiPropertyFlags</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keyword">using</span> StorageType = xiiUInt16;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fb">   51</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fb">Enum</a> : StorageType</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  {</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbacea1c0d6708f0daa477a8942038d2429">   53</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbacea1c0d6708f0daa477a8942038d2429">StandardType</a> = XII_BIT(0), </div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab11ca3a66615488391f2a8ebc2548c5e">   54</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab11ca3a66615488391f2a8ebc2548c5e">IsEnum</a>       = XII_BIT(1), </div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab1f65a1d27f43701e3af710a8b688686">   55</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab1f65a1d27f43701e3af710a8b688686">Bitflags</a>     = XII_BIT(2), </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbaa514c6fc7a1aa9058001c35b4cd32001">   56</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbaa514c6fc7a1aa9058001c35b4cd32001">Class</a>        = XII_BIT(3), </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba74b369e3dbc867a61efe9799fbf06498">   58</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba74b369e3dbc867a61efe9799fbf06498">Const</a>     = XII_BIT(4), </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba6ef448aee23a1ab010f3c948a954039d">   59</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba6ef448aee23a1ab010f3c948a954039d">Reference</a> = XII_BIT(5), </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0128c5e474301585a0d64248e1823033">   60</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0128c5e474301585a0d64248e1823033">Pointer</a>   = XII_BIT(6), </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba4c981285e239b50ac2f896ce9af03c5c">   62</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba4c981285e239b50ac2f896ce9af03c5c">PointerOwner</a> = XII_BIT(7),  </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0c305b63c9d85ce290a8ca87c21859c8">   63</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0c305b63c9d85ce290a8ca87c21859c8">ReadOnly</a>     = XII_BIT(8),  </div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba24e1a3386eb74f4105dde681e6d832fb">   64</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba24e1a3386eb74f4105dde681e6d832fb">Hidden</a>       = XII_BIT(9),  </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba8e5ddfb02f184d85dea29c24d9ddb17a">   65</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba8e5ddfb02f184d85dea29c24d9ddb17a">Phantom</a>      = XII_BIT(10), </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbaf0827b75261231d712f76fa916cf503f">   68</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbaf0827b75261231d712f76fa916cf503f">VarOut</a>   = XII_BIT(11), </div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba5a11a9a9b114d51c9d555065eaf467aa">   69</a></span>&#160;    <a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba5a11a9a9b114d51c9d555065eaf467aa">VarInOut</a> = XII_BIT(12), </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    Default = 0,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    Void    = 0</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  };</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../d1/dcd/structxii_property_flags_1_1_bits.htm">   75</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d1/dcd/structxii_property_flags_1_1_bits.htm">Bits</a></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    StorageType StandardType : 1;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    StorageType IsEnum : 1;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    StorageType Bitflags : 1;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    StorageType Class : 1;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    StorageType Const : 1;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    StorageType Reference : 1;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    StorageType Pointer : 1;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    StorageType PointerOwner : 1;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    StorageType ReadOnly : 1;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    StorageType Hidden : 1;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    StorageType Phantom : 1;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  };</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> Type&gt;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a> GetParameterFlags()</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">using</span> CleanType = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a35ea12912392837d91ed5e0a18795343">xiiTypeTraits&lt;Type&gt;::NonConstReferencePointerType</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a>  flags;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    constexpr <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariantType::Enum</a> type = <span class="keyword">static_cast&lt;</span><a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariantType::Enum</a><span class="keyword">&gt;</span>(<a class="code" href="../../de/dec/structxii_variant_type_deduction.htm">xiiVariantTypeDeduction&lt;CleanType&gt;::value</a>);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">if</span> constexpr (std::is_same&lt;CleanType, xiiVariant&gt;::value || std::is_same&lt;Type, const char*&gt;::value || <span class="comment">// We treat const char* as a basic type and not a pointer.</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                  (type &gt;= <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba651755d3adc6e0da125c0baa3ebe83ef">xiiVariantType::FirstStandardType</a> &amp;&amp; type &lt;= xiiVariantType::LastStandardType))</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbacea1c0d6708f0daa477a8942038d2429">xiiPropertyFlags::StandardType</a>);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> constexpr (<a class="code" href="../../dd/dd6/structxii_is_enum.htm">xiiIsEnum&lt;CleanType&gt;::value</a>)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab11ca3a66615488391f2a8ebc2548c5e">xiiPropertyFlags::IsEnum</a>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> constexpr (<a class="code" href="../../d8/ddc/structxii_is_bitflags.htm">xiiIsBitflags&lt;CleanType&gt;::value</a>)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab1f65a1d27f43701e3af710a8b688686">xiiPropertyFlags::Bitflags</a>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbaa514c6fc7a1aa9058001c35b4cd32001">xiiPropertyFlags::Class</a>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">if</span> constexpr (std::is_const&lt;<span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#aa739bf0c7eb83404ec30c3a0b9c99043">xiiTypeTraits&lt;Type&gt;::NonReferencePointerType</a>&gt;::value)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba74b369e3dbc867a61efe9799fbf06498">xiiPropertyFlags::Const</a>);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">if</span> constexpr (std::is_pointer&lt;Type&gt;::value &amp;&amp; !std::is_same&lt;Type, const char*&gt;::value)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0128c5e474301585a0d64248e1823033">xiiPropertyFlags::Pointer</a>);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">if</span> constexpr (std::is_reference&lt;Type&gt;::value)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba6ef448aee23a1ab010f3c948a954039d">xiiPropertyFlags::Reference</a>);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">return</span> flags;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  }</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;};</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a> xiiPropertyFlags::GetParameterFlags&lt;void&gt;()</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a>();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;XII_DECLARE_FLAGS_OPERATORS(<a class="code" href="../../d6/d7c/structxii_property_flags.htm">xiiPropertyFlags</a>)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">struct </span><a class="code" href="../../d8/d9c/structxii_property_category.htm">xiiPropertyCategory</a></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keyword">using</span> StorageType = xiiUInt8;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">  134</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">Enum</a></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  {</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aebc087c90f16a3fe8e37762ae55e82fb">  136</a></span>&#160;    <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aebc087c90f16a3fe8e37762ae55e82fb">Constant</a>, </div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aa2162b44ab3371e32b441f99a18e40ad">  137</a></span>&#160;    <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aa2162b44ab3371e32b441f99a18e40ad">Member</a>,   </div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aed09569f5ffaa96d4e6ed6d8727bd083">  138</a></span>&#160;    <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aed09569f5ffaa96d4e6ed6d8727bd083">Function</a>, </div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361a77d3cd2d82fb1491fe98456c6744219a">  139</a></span>&#160;    <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361a77d3cd2d82fb1491fe98456c6744219a">Array</a>,    </div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361ab59bc02644edb2634f6709c68b3c9270">  140</a></span>&#160;    <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361ab59bc02644edb2634f6709c68b3c9270">Set</a>,      </div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361a3c9cdb2ff0ba89f5b81572997af44558">  141</a></span>&#160;    <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361a3c9cdb2ff0ba89f5b81572997af44558">Map</a>,      </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    Default = <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aa2162b44ab3371e32b441f99a18e40ad">Member</a></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  };</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;};</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="../../da/d25/classxii_abstract_property.htm">  149</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="../../da/d25/classxii_abstract_property.htm#a84b927e254d587c57b4dd956eb93d4a1">  153</a></span>&#160;  <a class="code" href="../../da/d25/classxii_abstract_property.htm#a84b927e254d587c57b4dd956eb93d4a1">xiiAbstractProperty</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName) { m_sPropertyName = sPropertyName; }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="../../da/d25/classxii_abstract_property.htm#a6cc3cf4e5893d65b88b67ba6c6c6f0c3">  158</a></span>&#160;  <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <a class="code" href="../../da/d25/classxii_abstract_property.htm#a6cc3cf4e5893d65b88b67ba6c6c6f0c3">GetPropertyName</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_sPropertyName; }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* GetSpecificType() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">xiiPropertyCategory::Enum</a> GetCategory() <span class="keyword">const</span> = 0; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="../../da/d25/classxii_abstract_property.htm#a65a911a811ea6056cb714c8f83dd51f1">  168</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a>&amp; <a class="code" href="../../da/d25/classxii_abstract_property.htm#a65a911a811ea6056cb714c8f83dd51f1">GetFlags</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Flags; };</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../da/d25/classxii_abstract_property.htm#a9bee12e1183c06b9aadcf63518ab90b5">  171</a></span>&#160;  <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>* <a class="code" href="../../da/d25/classxii_abstract_property.htm#a9bee12e1183c06b9aadcf63518ab90b5">AddFlags</a>(<a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a> flags)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    m_Flags.Add(flags);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  };</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="../../da/d25/classxii_abstract_property.htm#ad0edd67964b9bd8e299c663bb85ec389">  179</a></span>&#160;  <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>* <a class="code" href="../../da/d25/classxii_abstract_property.htm#ad0edd67964b9bd8e299c663bb85ec389">AddAttributes</a>(<a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib1, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib2 = <span class="keyword">nullptr</span>, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib3 = <span class="keyword">nullptr</span>, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib4 = <span class="keyword">nullptr</span>, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib5 = <span class="keyword">nullptr</span>, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib6 = <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  {</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    XII_ASSERT_DEV(pAttrib1 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;invalid attribute&quot;</span>);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    m_Attributes.PushBack(pAttrib1);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">if</span> (pAttrib2)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      m_Attributes.PushBack(pAttrib2);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">if</span> (pAttrib3)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      m_Attributes.PushBack(pAttrib3);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">if</span> (pAttrib4)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      m_Attributes.PushBack(pAttrib4);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">if</span> (pAttrib5)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      m_Attributes.PushBack(pAttrib5);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">if</span> (pAttrib6)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      m_Attributes.PushBack(pAttrib6);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  };</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="../../da/d25/classxii_abstract_property.htm#a8bca082f8b0f95e94d94e866166ac7d2">  198</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;xiiPropertyAttribute* const&gt;</a> <a class="code" href="../../da/d25/classxii_abstract_property.htm#a8bca082f8b0f95e94d94e866166ac7d2">GetAttributes</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Attributes.GetArrayPtr(); }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keyword">const</span> Type* GetAttributeByType() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a>                                       m_Flags;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>                                                       m_sPropertyName;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;xiiPropertyAttribute*, 2, xiiStaticAllocatorWrapper&gt;</a> m_Attributes; <span class="comment">// Do not track RTTI data.</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;};</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="../../d9/de1/classxii_abstract_constant_property.htm">  211</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../d9/de1/classxii_abstract_constant_property.htm">xiiAbstractConstantProperty</a> : <span class="keyword">public</span> <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;{</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="../../d9/de1/classxii_abstract_constant_property.htm#a05fcfea6ae6b6f357070142e803a52c7">  215</a></span>&#160;  <a class="code" href="../../d9/de1/classxii_abstract_constant_property.htm#a05fcfea6ae6b6f357070142e803a52c7">xiiAbstractConstantProperty</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName) :</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>(sPropertyName)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  {</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  }</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="../../d9/de1/classxii_abstract_constant_property.htm#add86f42af965ac8d3be9b59ffd094908">  221</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">xiiPropertyCategory::Enum</a> <a class="code" href="../../d9/de1/classxii_abstract_constant_property.htm#add86f42af965ac8d3be9b59ffd094908">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aebc087c90f16a3fe8e37762ae55e82fb">xiiPropertyCategory::Constant</a>; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* GetPropertyPointer() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> GetConstant() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;};</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="../../dd/d67/classxii_abstract_member_property.htm">  235</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a> : <span class="keyword">public</span> <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;{</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="../../dd/d67/classxii_abstract_member_property.htm#a3e082378e1e5da16d6fabce8e058cb83">  239</a></span>&#160;  <a class="code" href="../../dd/d67/classxii_abstract_member_property.htm#a3e082378e1e5da16d6fabce8e058cb83">xiiAbstractMemberProperty</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName) :</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>(sPropertyName)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  {</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="../../dd/d67/classxii_abstract_member_property.htm#abf0539c054c65454f20d4c1e83d13d48">  245</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">xiiPropertyCategory::Enum</a> <a class="code" href="../../dd/d67/classxii_abstract_member_property.htm#abf0539c054c65454f20d4c1e83d13d48">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aa2162b44ab3371e32b441f99a18e40ad">xiiPropertyCategory::Member</a>; }</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* GetPropertyPointer(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetValuePtr(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keywordtype">void</span>* out_pObject) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetValuePtr(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;};</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="../../df/da8/classxii_abstract_array_property.htm">  271</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../df/da8/classxii_abstract_array_property.htm">xiiAbstractArrayProperty</a> : <span class="keyword">public</span> <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;{</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="../../df/da8/classxii_abstract_array_property.htm#af7efcf02366b5e1cf0e4b29f9871ff35">  275</a></span>&#160;  <a class="code" href="../../df/da8/classxii_abstract_array_property.htm#af7efcf02366b5e1cf0e4b29f9871ff35">xiiAbstractArrayProperty</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName) :</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>(sPropertyName)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  {</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  }</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="../../df/da8/classxii_abstract_array_property.htm#aaf7893a5ee23c1515beb1aa9ddfafb00">  281</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">xiiPropertyCategory::Enum</a> <a class="code" href="../../df/da8/classxii_abstract_array_property.htm#aaf7893a5ee23c1515beb1aa9ddfafb00">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361a77d3cd2d82fb1491fe98456c6744219a">xiiPropertyCategory::Array</a>; }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  <span class="keyword">virtual</span> xiiUInt32 GetCount(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetValue(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, xiiUInt32 uiIndex, <span class="keywordtype">void</span>* pObject) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetValue(<span class="keywordtype">void</span>* pInstance, xiiUInt32 uiIndex, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Insert(<span class="keywordtype">void</span>* pInstance, xiiUInt32 uiIndex, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Remove(<span class="keywordtype">void</span>* pInstance, xiiUInt32 uiIndex) = 0;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Clear(<span class="keywordtype">void</span>* pInstance) = 0;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetCount(<span class="keywordtype">void</span>* pInstance, xiiUInt32 uiCount) = 0;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* GetValuePointer(<span class="keywordtype">void</span>* pInstance, xiiUInt32 uiIndex) { <span class="keywordflow">return</span> <span class="keyword">nullptr</span>; }</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;};</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; </div>
<div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="../../dd/d45/classxii_abstract_set_property.htm">  311</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../dd/d45/classxii_abstract_set_property.htm">xiiAbstractSetProperty</a> : <span class="keyword">public</span> <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;{</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="../../dd/d45/classxii_abstract_set_property.htm#a405f050735fc6c023d04a89e07be2df3">  315</a></span>&#160;  <a class="code" href="../../dd/d45/classxii_abstract_set_property.htm#a405f050735fc6c023d04a89e07be2df3">xiiAbstractSetProperty</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName) :</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>(sPropertyName)</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  {</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  }</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="../../dd/d45/classxii_abstract_set_property.htm#a3ea8bbc3a180a84e5aac7777864e681e">  321</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">xiiPropertyCategory::Enum</a> <a class="code" href="../../dd/d45/classxii_abstract_set_property.htm#a3ea8bbc3a180a84e5aac7777864e681e">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361ab59bc02644edb2634f6709c68b3c9270">xiiPropertyCategory::Set</a>; }</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsEmpty(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Clear(<span class="keywordtype">void</span>* pInstance) = 0;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Insert(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Remove(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Contains(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetValues(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt;xiiVariant&gt;</a>&amp; out_keys) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;};</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160; </div>
<div class="line"><a name="l00346"></a><span class="lineno"><a class="line" href="../../da/d76/classxii_abstract_map_property.htm">  346</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../da/d76/classxii_abstract_map_property.htm">xiiAbstractMapProperty</a> : <span class="keyword">public</span> <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;{</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="../../da/d76/classxii_abstract_map_property.htm#a575144fc3b054676570a1756c0435e1c">  350</a></span>&#160;  <a class="code" href="../../da/d76/classxii_abstract_map_property.htm#a575144fc3b054676570a1756c0435e1c">xiiAbstractMapProperty</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName) :</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>(sPropertyName)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  {</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  }</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="../../da/d76/classxii_abstract_map_property.htm#a744b3dc6554c839b16a7878f2300dbe0">  356</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">xiiPropertyCategory::Enum</a> <a class="code" href="../../da/d76/classxii_abstract_map_property.htm#a744b3dc6554c839b16a7878f2300dbe0">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361a3c9cdb2ff0ba89f5b81572997af44558">xiiPropertyCategory::Map</a>; }</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsEmpty(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160; </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Clear(<span class="keywordtype">void</span>* pInstance) = 0;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160; </div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Insert(<span class="keywordtype">void</span>* pInstance, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Remove(<span class="keywordtype">void</span>* pInstance, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey) = 0;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160; </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Contains(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> GetValue(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sKey, <span class="keywordtype">void</span>* pObject) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160; </div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetKeys(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;xiiString, 16&gt;</a>&amp; out_keys) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;};</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160; </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="keyword">template</span> &lt;xiiInt32 _Index, <span class="keyword">class</span>... Args&gt;</div>
<div class="line"><a name="l00382"></a><span class="lineno"><a class="line" href="../../d5/daf/structget_argument.htm">  382</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class </span>Head, <span class="keyword">class</span>... Tail&gt;</div>
<div class="line"><a name="l00385"></a><span class="lineno"><a class="line" href="../../da/d80/structget_argument_3_010_00_01_head_00_01_tail_8_8_8_01_4.htm">  385</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;0, Head, Tail...&gt;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;{</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  <span class="keyword">using</span> Type = Head;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;};</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160; </div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keyword">template</span> &lt;xiiInt32 _Index, <span class="keyword">class </span>Head, <span class="keyword">class</span>... Tail&gt;</div>
<div class="line"><a name="l00391"></a><span class="lineno"><a class="line" href="../../d5/dfd/structget_argument_3_01___index_00_01_head_00_01_tail_8_8_8_01_4.htm">  391</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;_Index, Head, Tail...&gt;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;{</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;_Index - 1, Tail...&gt;::Type;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;};</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160; </div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;<span class="keyword">template</span> &lt;xiiInt32 I, <span class="keyword">typename</span> FUNC&gt;</div>
<div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="../../db/d28/structxii_function_parameter_type_resolver.htm">  398</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../db/d28/structxii_function_parameter_type_resolver.htm">xiiFunctionParameterTypeResolver</a></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;{</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;};</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160; </div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;<span class="keyword">template</span> &lt;xiiInt32 I, <span class="keyword">typename</span> R, <span class="keyword">typename</span>... P&gt;</div>
<div class="line"><a name="l00403"></a><span class="lineno"><a class="line" href="../../df/db8/structxii_function_parameter_type_resolver_3_01_i_00_01_r_07_5_08_07_p_8_8_8_08_4.htm">  403</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../db/d28/structxii_function_parameter_type_resolver.htm">xiiFunctionParameterTypeResolver</a>&lt;I, R (*)(P...)&gt;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;{</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  <span class="keyword">enum</span> Constants</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  {</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    Arguments = <span class="keyword">sizeof</span>...(P),</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  };</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  XII_CHECK_AT_COMPILETIME_MSG(I &lt; Arguments, <span class="stringliteral">&quot;I needs to be smaller than the number of function parameters.&quot;</span>);</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  <span class="keyword">using</span> ParameterType = <span class="keyword">typename</span> <a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;I, P...&gt;::Type;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  <span class="keyword">using</span> ReturnType    = R;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;};</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160; </div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="keyword">template</span> &lt;xiiInt32 I, <span class="keyword">class </span>Class, <span class="keyword">typename</span> R, <span class="keyword">typename</span>... P&gt;</div>
<div class="line"><a name="l00415"></a><span class="lineno"><a class="line" href="../../d1/db3/structxii_function_parameter_type_resolver_3_01_i_00_01_r_07_class_1_1_5_08_07_p_8_8_8_08_4.htm">  415</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../db/d28/structxii_function_parameter_type_resolver.htm">xiiFunctionParameterTypeResolver</a>&lt;I, R (Class::*)(P...)&gt;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;{</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  <span class="keyword">enum</span> Constants</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;  {</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    Arguments = <span class="keyword">sizeof</span>...(P),</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  };</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  XII_CHECK_AT_COMPILETIME_MSG(I &lt; Arguments, <span class="stringliteral">&quot;I needs to be smaller than the number of function parameters.&quot;</span>);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  <span class="keyword">using</span> ParameterType = <span class="keyword">typename</span> <a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;I, P...&gt;::Type;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  <span class="keyword">using</span> ReturnType    = R;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;};</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160; </div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="keyword">template</span> &lt;xiiInt32 I, <span class="keyword">class </span>Class, <span class="keyword">typename</span> R, <span class="keyword">typename</span>... P&gt;</div>
<div class="line"><a name="l00427"></a><span class="lineno"><a class="line" href="../../d6/ddc/structxii_function_parameter_type_resolver_3_01_i_00_01_r_07_class_1_1_5_08_07_p_8_8_8_08_01const_01_4.htm">  427</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../db/d28/structxii_function_parameter_type_resolver.htm">xiiFunctionParameterTypeResolver</a>&lt;I, R (Class::*)(P...) const&gt;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;{</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  <span class="keyword">enum</span> Constants</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;  {</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    Arguments = <span class="keyword">sizeof</span>...(P),</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  };</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  XII_CHECK_AT_COMPILETIME_MSG(I &lt; Arguments, <span class="stringliteral">&quot;I needs to be smaller than the number of function parameters.&quot;</span>);</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  <span class="keyword">using</span> ParameterType = <span class="keyword">typename</span> <a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;I, P...&gt;::Type;</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  <span class="keyword">using</span> ReturnType    = R;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;};</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160; </div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> FUNC&gt;</div>
<div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="../../de/d49/structxii_member_function_parameter_type_resolver.htm">  440</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../de/d49/structxii_member_function_parameter_type_resolver.htm">xiiMemberFunctionParameterTypeResolver</a></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;{</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;};</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160; </div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> Class, <span class="keyword">typename</span> R, <span class="keyword">typename</span> P&gt;</div>
<div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="../../d3/d3d/structxii_member_function_parameter_type_resolver_3_01_r_07_class_1_1_5_08_07_p_08_4.htm">  445</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../de/d49/structxii_member_function_parameter_type_resolver.htm">xiiMemberFunctionParameterTypeResolver</a>&lt;R (Class::*)(P)&gt;</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;{</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;  <span class="keyword">using</span> ParameterType = P;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;  <span class="keyword">using</span> ReturnType    = R;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;};</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160; </div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00453"></a><span class="lineno"><a class="line" href="../../d4/da5/structxii_container_sub_type_resolver.htm">  453</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;{</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;};</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160; </div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00458"></a><span class="lineno"><a class="line" href="../../dd/d4e/structxii_container_sub_type_resolver_3_01xii_array_ptr_3_01_t_01_4_01_4.htm">  458</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;{</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;};</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160; </div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00464"></a><span class="lineno"><a class="line" href="../../de/d54/structxii_container_sub_type_resolver_3_01xii_dynamic_array_3_01_t_01_4_01_4.htm">  464</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;{</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;};</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160; </div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, xiiUInt32 Size&gt;</div>
<div class="line"><a name="l00470"></a><span class="lineno"><a class="line" href="../../d4/d85/structxii_container_sub_type_resolver_3_01xii_hybrid_array_3_01_t_00_01_size_01_4_01_4.htm">  470</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a>&lt;T, Size&gt;&gt;</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;{</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;};</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160; </div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, xiiUInt32 Size&gt;</div>
<div class="line"><a name="l00476"></a><span class="lineno"><a class="line" href="../../d3/d71/structxii_container_sub_type_resolver_3_01xii_static_array_3_01_t_00_01_size_01_4_01_4.htm">  476</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../d9/d25/classxii_static_array.htm">xiiStaticArray</a>&lt;T, Size&gt;&gt;</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;{</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;};</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160; </div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, xiiUInt16 Size&gt;</div>
<div class="line"><a name="l00482"></a><span class="lineno"><a class="line" href="../../d9/d82/structxii_container_sub_type_resolver_3_01xii_small_array_3_01_t_00_01_size_01_4_01_4.htm">  482</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray</a>&lt;T, Size&gt;&gt;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;{</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;};</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160; </div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="../../d6/dc9/structxii_container_sub_type_resolver_3_01xii_deque_3_01_t_01_4_01_4.htm">  488</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../d8/df8/classxii_deque.htm">xiiDeque</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;{</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;};</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160; </div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00494"></a><span class="lineno"><a class="line" href="../../dd/deb/structxii_container_sub_type_resolver_3_01xii_set_3_01_t_01_4_01_4.htm">  494</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../d6/d31/classxii_set.htm">xiiSet</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;{</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;};</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160; </div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00500"></a><span class="lineno"><a class="line" href="../../d4/dea/structxii_container_sub_type_resolver_3_01xii_hash_set_3_01_t_01_4_01_4.htm">  500</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../d3/d8b/classxii_hash_set.htm">xiiHashSet</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;{</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;};</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160; </div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> K, <span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00506"></a><span class="lineno"><a class="line" href="../../d2/d7b/structxii_container_sub_type_resolver_3_01xii_hash_table_3_01_k_00_01_t_01_4_01_4.htm">  506</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a>&lt;K, T&gt;&gt;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;{</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;};</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160; </div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> K, <span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00512"></a><span class="lineno"><a class="line" href="../../dc/dc5/structxii_container_sub_type_resolver_3_01xii_map_3_01_k_00_01_t_01_4_01_4.htm">  512</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a>&lt;<a class="code" href="../../d6/df7/classxii_map.htm">xiiMap</a>&lt;K, T&gt;&gt;</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;{</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;};</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160; </div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160; </div>
<div class="line"><a name="l00519"></a><span class="lineno"><a class="line" href="../../dc/d96/structxii_function_type.htm">  519</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../dc/d96/structxii_function_type.htm">xiiFunctionType</a></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;{</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;  <span class="keyword">using</span> StorageType = xiiUInt8;</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160; </div>
<div class="line"><a name="l00523"></a><span class="lineno"><a class="line" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520">  523</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520">Enum</a></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;  {</div>
<div class="line"><a name="l00525"></a><span class="lineno"><a class="line" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520ae85639ec5b786cb040da3e982b7ea2b3">  525</a></span>&#160;    <a class="code" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520ae85639ec5b786cb040da3e982b7ea2b3">Member</a>,       </div>
<div class="line"><a name="l00526"></a><span class="lineno"><a class="line" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520ac150232610215ceafcb9740638a8ce14">  526</a></span>&#160;    <a class="code" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520ac150232610215ceafcb9740638a8ce14">StaticMember</a>, </div>
<div class="line"><a name="l00527"></a><span class="lineno"><a class="line" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520a928de39758e8778c7234499476a0c497">  527</a></span>&#160;    <a class="code" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520a928de39758e8778c7234499476a0c497">Constructor</a>,  </div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160; </div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    Default = <a class="code" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520ae85639ec5b786cb040da3e982b7ea2b3">Member</a></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;  };</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;};</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160; </div>
<div class="line"><a name="l00534"></a><span class="lineno"><a class="line" href="../../de/d27/classxii_abstract_function_property.htm">  534</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../de/d27/classxii_abstract_function_property.htm">xiiAbstractFunctionProperty</a> : <span class="keyword">public</span> <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;{</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00538"></a><span class="lineno"><a class="line" href="../../de/d27/classxii_abstract_function_property.htm#af5c36c1e65846ae3407259500e2e326e">  538</a></span>&#160;  <a class="code" href="../../de/d27/classxii_abstract_function_property.htm#af5c36c1e65846ae3407259500e2e326e">xiiAbstractFunctionProperty</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName) :</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <a class="code" href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a>(sPropertyName)</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;  {</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;  }</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160; </div>
<div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="../../de/d27/classxii_abstract_function_property.htm#a46d3d1dc8f2c5381d9c87faf9a760b67">  543</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">xiiPropertyCategory::Enum</a> <a class="code" href="../../de/d27/classxii_abstract_function_property.htm#a46d3d1dc8f2c5381d9c87faf9a760b67">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aed09569f5ffaa96d4e6ed6d8727bd083">xiiPropertyCategory::Function</a>; }</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160; </div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520">xiiFunctionType::Enum</a> GetFunctionType() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160; </div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* GetReturnType() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160; </div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a> GetReturnFlags() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160; </div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;  <span class="keyword">virtual</span> xiiUInt32 GetArgumentCount() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160; </div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* GetArgumentType(xiiUInt32 uiParamIndex) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160; </div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a> GetArgumentFlags(xiiUInt32 uiParamIndex) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160; </div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Execute(<span class="keywordtype">void</span>* pInstance, <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;xiiVariant&gt;</a> arguments, <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; out_returnValue) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160; </div>
<div class="line"><a name="l00576"></a><span class="lineno"><a class="line" href="../../de/d27/classxii_abstract_function_property.htm#a826ef51297a044780c574a72e45a838e">  576</a></span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* <a class="code" href="../../de/d27/classxii_abstract_function_property.htm#a826ef51297a044780c574a72e45a838e">GetSpecificType</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> GetReturnType(); }</div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160; </div>
<div class="line"><a name="l00579"></a><span class="lineno"><a class="line" href="../../de/d27/classxii_abstract_function_property.htm#a7f8783aee689175929555cae88b20152">  579</a></span>&#160;  <a class="code" href="../../de/d27/classxii_abstract_function_property.htm">xiiAbstractFunctionProperty</a>* <a class="code" href="../../de/d27/classxii_abstract_function_property.htm#a7f8783aee689175929555cae88b20152">AddFlags</a>(<a class="code" href="../../d7/d55/structxii_bitflags.htm">xiiBitflags&lt;xiiPropertyFlags&gt;</a> flags)</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;  {</div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="../../de/d27/classxii_abstract_function_property.htm">xiiAbstractFunctionProperty</a>*<span class="keyword">&gt;</span>(<a class="code" href="../../da/d25/classxii_abstract_property.htm#a9bee12e1183c06b9aadcf63518ab90b5">xiiAbstractProperty::AddFlags</a>(flags));</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;  }</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160; </div>
<div class="line"><a name="l00586"></a><span class="lineno"><a class="line" href="../../de/d27/classxii_abstract_function_property.htm#a950a040220d36f794400e6ef4aef9df9">  586</a></span>&#160;  <a class="code" href="../../de/d27/classxii_abstract_function_property.htm">xiiAbstractFunctionProperty</a>* <a class="code" href="../../de/d27/classxii_abstract_function_property.htm#a950a040220d36f794400e6ef4aef9df9">AddAttributes</a>(<a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib1, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib2 = <span class="keyword">nullptr</span>, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib3 = <span class="keyword">nullptr</span>, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib4 = <span class="keyword">nullptr</span>, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib5 = <span class="keyword">nullptr</span>, <a class="code" href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a>* pAttrib6 = <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;  {</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="../../de/d27/classxii_abstract_function_property.htm">xiiAbstractFunctionProperty</a>*<span class="keyword">&gt;</span>(<a class="code" href="../../da/d25/classxii_abstract_property.htm#ad0edd67964b9bd8e299c663bb85ec389">xiiAbstractProperty::AddAttributes</a>(pAttrib1, pAttrib2, pAttrib3, pAttrib4, pAttrib5, pAttrib6));</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;  }</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructxii_property_flags_1_1_bits_htm"><div class="ttname"><a href="../../d1/dcd/structxii_property_flags_1_1_bits.htm">xiiPropertyFlags::Bits</a></div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:75</div></div>
<div class="ttc" id="aclassxii_abstract_map_property_htm_a575144fc3b054676570a1756c0435e1c"><div class="ttname"><a href="../../da/d76/classxii_abstract_map_property.htm#a575144fc3b054676570a1756c0435e1c">xiiAbstractMapProperty::xiiAbstractMapProperty</a></div><div class="ttdeci">xiiAbstractMapProperty(xiiStringView sPropertyName)</div><div class="ttdoc">Passes the property name through to xiiAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:350</div></div>
<div class="ttc" id="astructxii_enum_htm"><div class="ttname"><a href="../../de/dfd/structxii_enum.htm">xiiEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition:</b> Enum.h:37</div></div>
<div class="ttc" id="astructxii_type_traits_htm_aa739bf0c7eb83404ec30c3a0b9c99043"><div class="ttname"><a href="../../dd/d53/structxii_type_traits.htm#aa739bf0c7eb83404ec30c3a0b9c99043">xiiTypeTraits::NonReferencePointerType</a></div><div class="ttdeci">typename std::remove_pointer&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type NonReferencePointerType</div><div class="ttdoc">Removes reference and pointer qualifier.</div><div class="ttdef"><b>Definition:</b> TypeTraits.h:225</div></div>
<div class="ttc" id="astructxii_property_flags_htm"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm">xiiPropertyFlags</a></div><div class="ttdoc">Flags used to describe a property and its type.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:47</div></div>
<div class="ttc" id="astructxii_property_category_htm_a955c0fc07dab4281c48ea7319c91a361ab59bc02644edb2634f6709c68b3c9270"><div class="ttname"><a href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361ab59bc02644edb2634f6709c68b3c9270">xiiPropertyCategory::Set</a></div><div class="ttdeci">@ Set</div><div class="ttdoc">The property is actually a set of values. Cast to xiiAbstractSetProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:140</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:36</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fba0128c5e474301585a0d64248e1823033"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0128c5e474301585a0d64248e1823033">xiiPropertyFlags::Pointer</a></div><div class="ttdeci">@ Pointer</div><div class="ttdoc">Property value is a pointer.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:60</div></div>
<div class="ttc" id="aclassxii_abstract_map_property_htm_a744b3dc6554c839b16a7878f2300dbe0"><div class="ttname"><a href="../../da/d76/classxii_abstract_map_property.htm#a744b3dc6554c839b16a7878f2300dbe0">xiiAbstractMapProperty::GetCategory</a></div><div class="ttdeci">virtual xiiPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns xiiPropertyCategory::Map.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:356</div></div>
<div class="ttc" id="aclassxii_abstract_function_property_htm_a950a040220d36f794400e6ef4aef9df9"><div class="ttname"><a href="../../de/d27/classxii_abstract_function_property.htm#a950a040220d36f794400e6ef4aef9df9">xiiAbstractFunctionProperty::AddAttributes</a></div><div class="ttdeci">xiiAbstractFunctionProperty * AddAttributes(xiiPropertyAttribute *pAttrib1, xiiPropertyAttribute *pAttrib2=nullptr, xiiPropertyAttribute *pAttrib3=nullptr, xiiPropertyAttribute *pAttrib4=nullptr, xiiPropertyAttribute *pAttrib5=nullptr, xiiPropertyAttribute *pAttrib6=nullptr)</div><div class="ttdoc">Adds attributes to the property. Returns itself to allow to be called during initialization....</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:586</div></div>
<div class="ttc" id="aclassxii_abstract_property_htm_ad0edd67964b9bd8e299c663bb85ec389"><div class="ttname"><a href="../../da/d25/classxii_abstract_property.htm#ad0edd67964b9bd8e299c663bb85ec389">xiiAbstractProperty::AddAttributes</a></div><div class="ttdeci">xiiAbstractProperty * AddAttributes(xiiPropertyAttribute *pAttrib1, xiiPropertyAttribute *pAttrib2=nullptr, xiiPropertyAttribute *pAttrib3=nullptr, xiiPropertyAttribute *pAttrib4=nullptr, xiiPropertyAttribute *pAttrib5=nullptr, xiiPropertyAttribute *pAttrib6=nullptr)</div><div class="ttdoc">Adds attributes to the property. Returns itself to allow to be called during initialization....</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:179</div></div>
<div class="ttc" id="aclassxii_static_array_htm"><div class="ttname"><a href="../../d9/d25/classxii_static_array.htm">xiiStaticArray</a></div><div class="ttdoc">Wraps a C-style array, which has a fixed size at compile-time, with a more convenient interface.</div><div class="ttdef"><b>Definition:</b> StaticArray.h:12</div></div>
<div class="ttc" id="aclassxii_abstract_property_htm_a84b927e254d587c57b4dd956eb93d4a1"><div class="ttname"><a href="../../da/d25/classxii_abstract_property.htm#a84b927e254d587c57b4dd956eb93d4a1">xiiAbstractProperty::xiiAbstractProperty</a></div><div class="ttdeci">xiiAbstractProperty(xiiStringView sPropertyName)</div><div class="ttdoc">The constructor must get the name of the property. The string must be a compile-time constant.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:153</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fbacea1c0d6708f0daa477a8942038d2429"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbacea1c0d6708f0daa477a8942038d2429">xiiPropertyFlags::StandardType</a></div><div class="ttdeci">@ StandardType</div><div class="ttdoc">Anything that can be stored inside a xiiVariant except for pointers and containers.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:53</div></div>
<div class="ttc" id="aclassxii_variant_htm"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm">xiiVariant</a></div><div class="ttdoc">xiiVariant is a class that can store different types of variables, which is useful in situations wher...</div><div class="ttdef"><b>Definition:</b> Variant.h:47</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6b"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariantType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdoc">This enum describes the type of data that is currently stored inside the variant. Note that changes t...</div><div class="ttdef"><b>Definition:</b> VariantType.h:25</div></div>
<div class="ttc" id="astructget_argument_htm"><div class="ttname"><a href="../../d5/daf/structget_argument.htm">getArgument</a></div><div class="ttdoc">Use getArgument&lt;N, Args...&gt;::Type to get the type of the Nth argument in Args.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:382</div></div>
<div class="ttc" id="aclassxii_set_htm"><div class="ttname"><a href="../../d6/d31/classxii_set.htm">xiiSet</a></div><div class="ttdef"><b>Definition:</b> Set.h:235</div></div>
<div class="ttc" id="aclassxii_map_htm"><div class="ttname"><a href="../../d6/df7/classxii_map.htm">xiiMap</a></div><div class="ttdef"><b>Definition:</b> Map.h:328</div></div>
<div class="ttc" id="aclassxii_abstract_constant_property_htm_a05fcfea6ae6b6f357070142e803a52c7"><div class="ttname"><a href="../../d9/de1/classxii_abstract_constant_property.htm#a05fcfea6ae6b6f357070142e803a52c7">xiiAbstractConstantProperty::xiiAbstractConstantProperty</a></div><div class="ttdeci">xiiAbstractConstantProperty(xiiStringView sPropertyName)</div><div class="ttdoc">Passes the property name through to xiiAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:215</div></div>
<div class="ttc" id="aclassxii_abstract_property_htm_a65a911a811ea6056cb714c8f83dd51f1"><div class="ttname"><a href="../../da/d25/classxii_abstract_property.htm#a65a911a811ea6056cb714c8f83dd51f1">xiiAbstractProperty::GetFlags</a></div><div class="ttdeci">const xiiBitflags&lt; xiiPropertyFlags &gt; &amp; GetFlags() const</div><div class="ttdoc">Returns the flags of the property.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:168</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fbab11ca3a66615488391f2a8ebc2548c5e"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab11ca3a66615488391f2a8ebc2548c5e">xiiPropertyFlags::IsEnum</a></div><div class="ttdeci">@ IsEnum</div><div class="ttdoc">enum property, cast to xiiAbstractEnumerationProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:54</div></div>
<div class="ttc" id="astructxii_is_enum_htm"><div class="ttname"><a href="../../dd/dd6/structxii_is_enum.htm">xiiIsEnum</a></div><div class="ttdoc">Determines whether a type is xiiIsBitflags.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:35</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt; xiiPropertyAttribute *, 2, xiiStaticAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="aclassxii_abstract_array_property_htm_aaf7893a5ee23c1515beb1aa9ddfafb00"><div class="ttname"><a href="../../df/da8/classxii_abstract_array_property.htm#aaf7893a5ee23c1515beb1aa9ddfafb00">xiiAbstractArrayProperty::GetCategory</a></div><div class="ttdeci">virtual xiiPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns xiiPropertyCategory::Array.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:281</div></div>
<div class="ttc" id="aclassxii_abstract_member_property_htm_abf0539c054c65454f20d4c1e83d13d48"><div class="ttname"><a href="../../dd/d67/classxii_abstract_member_property.htm#abf0539c054c65454f20d4c1e83d13d48">xiiAbstractMemberProperty::GetCategory</a></div><div class="ttdeci">virtual xiiPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns xiiPropertyCategory::Member.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:245</div></div>
<div class="ttc" id="astructxii_bitflags_htm_a89cb715ce2414f2e16675f5d8503cb1c"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">xiiBitflags::Add</a></div><div class="ttdeci">XII_ALWAYS_INLINE void Add(const xiiBitflags&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Sets the given flag.</div><div class="ttdef"><b>Definition:</b> Bitflags.h:148</div></div>
<div class="ttc" id="aclassxii_hash_set_htm"><div class="ttname"><a href="../../d3/d8b/classxii_hash_set.htm">xiiHashSet</a></div><div class="ttdef"><b>Definition:</b> HashSet.h:189</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fba74b369e3dbc867a61efe9799fbf06498"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba74b369e3dbc867a61efe9799fbf06498">xiiPropertyFlags::Const</a></div><div class="ttdeci">@ Const</div><div class="ttdoc">Property value is const.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:58</div></div>
<div class="ttc" id="aclassxii_abstract_set_property_htm"><div class="ttname"><a href="../../dd/d45/classxii_abstract_set_property.htm">xiiAbstractSetProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:311</div></div>
<div class="ttc" id="astructxii_member_function_parameter_type_resolver_htm"><div class="ttname"><a href="../../de/d49/structxii_member_function_parameter_type_resolver.htm">xiiMemberFunctionParameterTypeResolver</a></div><div class="ttdoc">Template that allows to probe a single parameter function for parameter and return type.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:440</div></div>
<div class="ttc" id="astructxii_property_category_htm_a955c0fc07dab4281c48ea7319c91a361aa2162b44ab3371e32b441f99a18e40ad"><div class="ttname"><a href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aa2162b44ab3371e32b441f99a18e40ad">xiiPropertyCategory::Member</a></div><div class="ttdeci">@ Member</div><div class="ttdoc">The property is a 'member property', i.e. it represents some accessible value. Cast to xiiAbstractMem...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:137</div></div>
<div class="ttc" id="aclassxii_abstract_property_htm_a9bee12e1183c06b9aadcf63518ab90b5"><div class="ttname"><a href="../../da/d25/classxii_abstract_property.htm#a9bee12e1183c06b9aadcf63518ab90b5">xiiAbstractProperty::AddFlags</a></div><div class="ttdeci">xiiAbstractProperty * AddFlags(xiiBitflags&lt; xiiPropertyFlags &gt; flags)</div><div class="ttdoc">Adds flags to the property. Returns itself to allow to be called during initialization.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:171</div></div>
<div class="ttc" id="astructxii_function_type_htm_aa1f281549634c67b2db3e16e4a220520a928de39758e8778c7234499476a0c497"><div class="ttname"><a href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520a928de39758e8778c7234499476a0c497">xiiFunctionType::Constructor</a></div><div class="ttdeci">@ Constructor</div><div class="ttdoc">A constructor. Return value is a void* pointing to the new instance allocated with the default alloca...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:527</div></div>
<div class="ttc" id="astructxii_property_category_htm"><div class="ttname"><a href="../../d8/d9c/structxii_property_category.htm">xiiPropertyCategory</a></div><div class="ttdoc">Describes what category a property belongs to.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:130</div></div>
<div class="ttc" id="astructxii_property_category_htm_a955c0fc07dab4281c48ea7319c91a361"><div class="ttname"><a href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361">xiiPropertyCategory::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:134</div></div>
<div class="ttc" id="astructxii_property_category_htm_a955c0fc07dab4281c48ea7319c91a361a3c9cdb2ff0ba89f5b81572997af44558"><div class="ttname"><a href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361a3c9cdb2ff0ba89f5b81572997af44558">xiiPropertyCategory::Map</a></div><div class="ttdeci">@ Map</div><div class="ttdoc">The property is actually a map from string to values. Cast to xiiAbstractMapProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:141</div></div>
<div class="ttc" id="aclassxii_r_t_t_i_htm"><div class="ttname"><a href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition:</b> RTTI.h:29</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fba24e1a3386eb74f4105dde681e6d832fb"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba24e1a3386eb74f4105dde681e6d832fb">xiiPropertyFlags::Hidden</a></div><div class="ttdeci">@ Hidden</div><div class="ttdoc">This property should not appear in the UI.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:64</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fbaf0827b75261231d712f76fa916cf503f"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbaf0827b75261231d712f76fa916cf503f">xiiPropertyFlags::VarOut</a></div><div class="ttdeci">@ VarOut</div><div class="ttdoc">Tag for non-const-ref function parameters to indicate usage 'out'.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:68</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="aclassxii_abstract_property_htm_a6cc3cf4e5893d65b88b67ba6c6c6f0c3"><div class="ttname"><a href="../../da/d25/classxii_abstract_property.htm#a6cc3cf4e5893d65b88b67ba6c6c6f0c3">xiiAbstractProperty::GetPropertyName</a></div><div class="ttdeci">xiiStringView GetPropertyName() const</div><div class="ttdoc">Returns the name of the property.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:158</div></div>
<div class="ttc" id="aclassxii_property_attribute_htm"><div class="ttname"><a href="../../d5/df0/classxii_property_attribute.htm">xiiPropertyAttribute</a></div><div class="ttdoc">Base class of all attributes can be used to decorate a RTTI property.</div><div class="ttdef"><b>Definition:</b> PropertyAttributes.h:10</div></div>
<div class="ttc" id="astructxii_function_parameter_type_resolver_htm"><div class="ttname"><a href="../../db/d28/structxii_function_parameter_type_resolver.htm">xiiFunctionParameterTypeResolver</a></div><div class="ttdoc">Template that allows to probe a function for a parameter and return type.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:398</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6ba651755d3adc6e0da125c0baa3ebe83ef"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6ba651755d3adc6e0da125c0baa3ebe83ef">xiiVariantType::FirstStandardType</a></div><div class="ttdeci">@ FirstStandardType</div><div class="ttdoc">*** Types that are flagged as 'StandardTypes' (see DetermineTypeFlags) ***</div><div class="ttdef"><b>Definition:</b> VariantType.h:30</div></div>
<div class="ttc" id="astructxii_function_type_htm_aa1f281549634c67b2db3e16e4a220520"><div class="ttname"><a href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520">xiiFunctionType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:523</div></div>
<div class="ttc" id="aclassxii_abstract_map_property_htm"><div class="ttname"><a href="../../da/d76/classxii_abstract_map_property.htm">xiiAbstractMapProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:346</div></div>
<div class="ttc" id="astructxii_property_category_htm_a955c0fc07dab4281c48ea7319c91a361a77d3cd2d82fb1491fe98456c6744219a"><div class="ttname"><a href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361a77d3cd2d82fb1491fe98456c6744219a">xiiPropertyCategory::Array</a></div><div class="ttdeci">@ Array</div><div class="ttdoc">The property is actually an array of values. The array dimensions might be changeable....</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:139</div></div>
<div class="ttc" id="astructxii_type_traits_htm_a235ccaef9604d6990ab760b4b1d4500b"><div class="ttname"><a href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits::NonConstReferenceType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type NonConstReferenceType</div><div class="ttdoc">Removes reference and const qualifier.</div><div class="ttdef"><b>Definition:</b> TypeTraits.h:222</div></div>
<div class="ttc" id="astructxii_is_bitflags_htm"><div class="ttname"><a href="../../d8/ddc/structxii_is_bitflags.htm">xiiIsBitflags</a></div><div class="ttdoc">Determines whether a type is xiiIsBitflags.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:22</div></div>
<div class="ttc" id="astructxii_container_sub_type_resolver_htm"><div class="ttname"><a href="../../d4/da5/structxii_container_sub_type_resolver.htm">xiiContainerSubTypeResolver</a></div><div class="ttdoc">Template that allows to probe a container for its element type.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:453</div></div>
<div class="ttc" id="aclassxii_deque_htm"><div class="ttname"><a href="../../d8/df8/classxii_deque.htm">xiiDeque</a></div><div class="ttdef"><b>Definition:</b> Deque.h:269</div></div>
<div class="ttc" id="astructxii_variant_type_deduction_htm"><div class="ttname"><a href="../../de/dec/structxii_variant_type_deduction.htm">xiiVariantTypeDeduction</a></div><div class="ttdoc">A helper struct to convert the C++ type, which is passed as the template argument,...</div><div class="ttdef"><b>Definition:</b> VariantType.h:110</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fba4c981285e239b50ac2f896ce9af03c5c"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba4c981285e239b50ac2f896ce9af03c5c">xiiPropertyFlags::PointerOwner</a></div><div class="ttdeci">@ PointerOwner</div><div class="ttdoc">This pointer property takes ownership of the passed pointer.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:62</div></div>
<div class="ttc" id="aclassxii_abstract_function_property_htm_a46d3d1dc8f2c5381d9c87faf9a760b67"><div class="ttname"><a href="../../de/d27/classxii_abstract_function_property.htm#a46d3d1dc8f2c5381d9c87faf9a760b67">xiiAbstractFunctionProperty::GetCategory</a></div><div class="ttdeci">virtual xiiPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns the category of this property. Cast this property to the next higher type for more informatio...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:543</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fba6ef448aee23a1ab010f3c948a954039d"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba6ef448aee23a1ab010f3c948a954039d">xiiPropertyFlags::Reference</a></div><div class="ttdeci">@ Reference</div><div class="ttdoc">Property value is a reference.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:59</div></div>
<div class="ttc" id="aclassxii_abstract_array_property_htm_af7efcf02366b5e1cf0e4b29f9871ff35"><div class="ttname"><a href="../../df/da8/classxii_abstract_array_property.htm#af7efcf02366b5e1cf0e4b29f9871ff35">xiiAbstractArrayProperty::xiiAbstractArrayProperty</a></div><div class="ttdeci">xiiAbstractArrayProperty(xiiStringView sPropertyName)</div><div class="ttdoc">Passes the property name through to xiiAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:275</div></div>
<div class="ttc" id="aclassxii_abstract_function_property_htm_af5c36c1e65846ae3407259500e2e326e"><div class="ttname"><a href="../../de/d27/classxii_abstract_function_property.htm#af5c36c1e65846ae3407259500e2e326e">xiiAbstractFunctionProperty::xiiAbstractFunctionProperty</a></div><div class="ttdeci">xiiAbstractFunctionProperty(xiiStringView sPropertyName)</div><div class="ttdoc">Passes the property name through to xiiAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:538</div></div>
<div class="ttc" id="aclassxii_abstract_member_property_htm"><div class="ttname"><a href="../../dd/d67/classxii_abstract_member_property.htm">xiiAbstractMemberProperty</a></div><div class="ttdoc">This is the base class for all properties that are members of a class. It provides more information a...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:235</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fba8e5ddfb02f184d85dea29c24d9ddb17a"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba8e5ddfb02f184d85dea29c24d9ddb17a">xiiPropertyFlags::Phantom</a></div><div class="ttdeci">@ Phantom</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:65</div></div>
<div class="ttc" id="astructxii_function_type_htm_aa1f281549634c67b2db3e16e4a220520ae85639ec5b786cb040da3e982b7ea2b3"><div class="ttname"><a href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520ae85639ec5b786cb040da3e982b7ea2b3">xiiFunctionType::Member</a></div><div class="ttdeci">@ Member</div><div class="ttdoc">A normal member function, a valid instance pointer must be provided to call.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:525</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fbab1f65a1d27f43701e3af710a8b688686"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab1f65a1d27f43701e3af710a8b688686">xiiPropertyFlags::Bitflags</a></div><div class="ttdeci">@ Bitflags</div><div class="ttdoc">Bitflags property, cast to xiiAbstractEnumerationProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:55</div></div>
<div class="ttc" id="astructxii_property_category_htm_a955c0fc07dab4281c48ea7319c91a361aed09569f5ffaa96d4e6ed6d8727bd083"><div class="ttname"><a href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aed09569f5ffaa96d4e6ed6d8727bd083">xiiPropertyCategory::Function</a></div><div class="ttdeci">@ Function</div><div class="ttdoc">The property is a function which can be called. Cast to xiiAbstractFunctionProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:138</div></div>
<div class="ttc" id="aclassxii_abstract_property_htm"><div class="ttname"><a href="../../da/d25/classxii_abstract_property.htm">xiiAbstractProperty</a></div><div class="ttdoc">This is the base interface for all properties in the reflection system. It provides enough informatio...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:149</div></div>
<div class="ttc" id="aclassxii_dynamic_array_htm"><div class="ttname"><a href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt; xiiVariant &gt;</a></div></div>
<div class="ttc" id="aclassxii_abstract_constant_property_htm"><div class="ttname"><a href="../../d9/de1/classxii_abstract_constant_property.htm">xiiAbstractConstantProperty</a></div><div class="ttdoc">This is the base class for all constant properties that are stored inside the RTTI data.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:211</div></div>
<div class="ttc" id="astructxii_bitflags_htm"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm">xiiBitflags</a></div><div class="ttdoc">The xiiBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition:</b> Bitflags.h:80</div></div>
<div class="ttc" id="aclassxii_abstract_set_property_htm_a405f050735fc6c023d04a89e07be2df3"><div class="ttname"><a href="../../dd/d45/classxii_abstract_set_property.htm#a405f050735fc6c023d04a89e07be2df3">xiiAbstractSetProperty::xiiAbstractSetProperty</a></div><div class="ttdeci">xiiAbstractSetProperty(xiiStringView sPropertyName)</div><div class="ttdoc">Passes the property name through to xiiAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:315</div></div>
<div class="ttc" id="aclassxii_abstract_constant_property_htm_add86f42af965ac8d3be9b59ffd094908"><div class="ttname"><a href="../../d9/de1/classxii_abstract_constant_property.htm#add86f42af965ac8d3be9b59ffd094908">xiiAbstractConstantProperty::GetCategory</a></div><div class="ttdeci">virtual xiiPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns xiiPropertyCategory::Constant.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:221</div></div>
<div class="ttc" id="aclassxii_hash_table_htm"><div class="ttname"><a href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a></div><div class="ttdef"><b>Definition:</b> HashTable.h:264</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fbaa514c6fc7a1aa9058001c35b4cd32001"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbaa514c6fc7a1aa9058001c35b4cd32001">xiiPropertyFlags::Class</a></div><div class="ttdeci">@ Class</div><div class="ttdoc">A struct or class. All of the above are mutually exclusive.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:56</div></div>
<div class="ttc" id="aclassxii_abstract_function_property_htm"><div class="ttname"><a href="../../de/d27/classxii_abstract_function_property.htm">xiiAbstractFunctionProperty</a></div><div class="ttdoc">The base class for a property that represents a function.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:534</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fba5a11a9a9b114d51c9d555065eaf467aa"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba5a11a9a9b114d51c9d555065eaf467aa">xiiPropertyFlags::VarInOut</a></div><div class="ttdeci">@ VarInOut</div><div class="ttdoc">Tag for non-const-ref function parameters to indicate usage 'inout'.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:69</div></div>
<div class="ttc" id="astructxii_property_category_htm_a955c0fc07dab4281c48ea7319c91a361aebc087c90f16a3fe8e37762ae55e82fb"><div class="ttname"><a href="../../d8/d9c/structxii_property_category.htm#a955c0fc07dab4281c48ea7319c91a361aebc087c90f16a3fe8e37762ae55e82fb">xiiPropertyCategory::Constant</a></div><div class="ttdeci">@ Constant</div><div class="ttdoc">The property is a constant value that is stored inside the RTTI data.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:136</div></div>
<div class="ttc" id="aclassxii_small_array_htm"><div class="ttname"><a href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray</a></div><div class="ttdef"><b>Definition:</b> SmallArray.h:216</div></div>
<div class="ttc" id="aclassxii_abstract_set_property_htm_a3ea8bbc3a180a84e5aac7777864e681e"><div class="ttname"><a href="../../dd/d45/classxii_abstract_set_property.htm#a3ea8bbc3a180a84e5aac7777864e681e">xiiAbstractSetProperty::GetCategory</a></div><div class="ttdeci">virtual xiiPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns xiiPropertyCategory::Set.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:321</div></div>
<div class="ttc" id="aclassxii_abstract_member_property_htm_a3e082378e1e5da16d6fabce8e058cb83"><div class="ttname"><a href="../../dd/d67/classxii_abstract_member_property.htm#a3e082378e1e5da16d6fabce8e058cb83">xiiAbstractMemberProperty::xiiAbstractMemberProperty</a></div><div class="ttdeci">xiiAbstractMemberProperty(xiiStringView sPropertyName)</div><div class="ttdoc">Passes the property name through to xiiAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:239</div></div>
<div class="ttc" id="astructxii_function_type_htm_aa1f281549634c67b2db3e16e4a220520ac150232610215ceafcb9740638a8ce14"><div class="ttname"><a href="../../dc/d96/structxii_function_type.htm#aa1f281549634c67b2db3e16e4a220520ac150232610215ceafcb9740638a8ce14">xiiFunctionType::StaticMember</a></div><div class="ttdeci">@ StaticMember</div><div class="ttdoc">A static member function, instance pointer will be ignored.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:526</div></div>
<div class="ttc" id="aclassxii_abstract_function_property_htm_a7f8783aee689175929555cae88b20152"><div class="ttname"><a href="../../de/d27/classxii_abstract_function_property.htm#a7f8783aee689175929555cae88b20152">xiiAbstractFunctionProperty::AddFlags</a></div><div class="ttdeci">xiiAbstractFunctionProperty * AddFlags(xiiBitflags&lt; xiiPropertyFlags &gt; flags)</div><div class="ttdoc">Adds flags to the property. Returns itself to allow to be called during initialization.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:579</div></div>
<div class="ttc" id="aclassxii_abstract_array_property_htm"><div class="ttname"><a href="../../df/da8/classxii_abstract_array_property.htm">xiiAbstractArrayProperty</a></div><div class="ttdoc">The base class for a property that represents an array of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:271</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fba0c305b63c9d85ce290a8ca87c21859c8"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0c305b63c9d85ce290a8ca87c21859c8">xiiPropertyFlags::ReadOnly</a></div><div class="ttdeci">@ ReadOnly</div><div class="ttdoc">Can only be read but not modified.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:63</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fb"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fb">xiiPropertyFlags::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:51</div></div>
<div class="ttc" id="astructxii_type_traits_htm_a35ea12912392837d91ed5e0a18795343"><div class="ttname"><a href="../../dd/d53/structxii_type_traits.htm#a35ea12912392837d91ed5e0a18795343">xiiTypeTraits::NonConstReferencePointerType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; typename std::remove_pointer&lt; T &gt;::type &gt;::type &gt;::type NonConstReferencePointerType</div><div class="ttdoc">Removes reference, const and pointer qualifier Note that this removes the const and reference of the ...</div><div class="ttdef"><b>Definition:</b> TypeTraits.h:229</div></div>
<div class="ttc" id="aclassxii_abstract_function_property_htm_a826ef51297a044780c574a72e45a838e"><div class="ttname"><a href="../../de/d27/classxii_abstract_function_property.htm#a826ef51297a044780c574a72e45a838e">xiiAbstractFunctionProperty::GetSpecificType</a></div><div class="ttdeci">virtual const xiiRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:576</div></div>
<div class="ttc" id="astructxii_function_type_htm"><div class="ttname"><a href="../../dc/d96/structxii_function_type.htm">xiiFunctionType</a></div><div class="ttdoc">Describes what kind of function a property is.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:519</div></div>
<div class="ttc" id="aclassxii_abstract_property_htm_a8bca082f8b0f95e94d94e866166ac7d2"><div class="ttname"><a href="../../da/d25/classxii_abstract_property.htm#a8bca082f8b0f95e94d94e866166ac7d2">xiiAbstractProperty::GetAttributes</a></div><div class="ttdeci">const xiiArrayPtr&lt; xiiPropertyAttribute *const  &gt; GetAttributes() const</div><div class="ttdoc">Returns the array of property attributes.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:198</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_f1e13142959a2e7970d979e1f6f7bcb1.htm">Reflection</a></li><li class="navelem"><a class="el" href="../../dir_44ac7f88d9b5593e444e5c7bf3d69918.htm">Implementation</a></li><li class="navelem"><b>AbstractProperty.h</b></li>
    <li class="footer">Generated on Tue Aug 15 2023 01:42:03 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
