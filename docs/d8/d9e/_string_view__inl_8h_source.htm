<!-- HTML header for doxygen 1.11.0-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/StringView_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript">
  DoxygenAwesomeDarkModeToggle.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript">
  DoxygenAwesomeFragmentCopyButton.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
  DoxygenAwesomeParagraphLink.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
  DoxygenAwesomeInteractiveToc.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d8/d9e/_string_view__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">StringView_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span>XII_ALWAYS_INLINE <span class="keyword">constexpr</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView::xiiStringView</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="foldopen" id="foldopen00005" data-start="{" data-end="}">
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#a11bc8362eb79f9b0625ec4ae4b9ff331">    5</a></span>XII_ALWAYS_INLINE <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView::xiiStringView</a>(<span class="keywordtype">char</span>* pStart) :</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>  m_pStart(pStart), m_uiElementCount(<a class="code hl_class" href="../../df/d65/classxii_string_utils.htm">xiiStringUtils</a>::GetStringElementCount(pStart))</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>}</div>
</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">constexpr</span> XII_ALWAYS_INLINE <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView::xiiStringView</a>(T pStart, <span class="keyword">typename</span> std::enable_if&lt;std::is_same&lt;T, const char*&gt;::value, xiiInt32&gt;::type*) :</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  m_pStart(pStart), m_uiElementCount(<a class="code hl_class" href="../../df/d65/classxii_string_utils.htm">xiiStringUtils</a>::GetStringElementCount(pStart))</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>}</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00017" data-start="{" data-end="}">
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#a78dc4042951900f554aa67da81cd70ca">   17</a></span><span class="keyword">constexpr</span> XII_ALWAYS_INLINE <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView::xiiStringView</a>(<span class="keyword">const</span> T&amp;&amp; str, <span class="keyword">typename</span> std::enable_if&lt;std::is_same&lt;T, const char*&gt;::value == <span class="keyword">false</span> &amp;&amp; std::is_convertible&lt;T, const char*&gt;::value, xiiInt32&gt;::type*)</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>{</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  m_pStart         = str;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  m_uiElementCount = <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#af9de18eab321e420a8c5e42fbbe4703d">xiiStringUtils::GetStringElementCount</a>(m_pStart);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>}</div>
</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="foldopen" id="foldopen00023" data-start="{" data-end="}">
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#a3fc2383d624dff0c34e262b04370a1f0">   23</a></span><span class="keyword">constexpr</span> XII_ALWAYS_INLINE <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView::xiiStringView</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* pEnd)</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>{</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  XII_ASSERT_DEBUG(pStart &lt;= pEnd, <span class="stringliteral">&quot;Invalid pointers to construct a string view from.&quot;</span>);</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  m_pStart         = pStart;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  m_uiElementCount = <span class="keyword">static_cast&lt;</span>xiiUInt32<span class="keyword">&gt;</span>(pEnd - pStart);</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>}</div>
</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#a9195d941dbf5f53d05e9c2ea8a6d823e">   31</a></span><span class="keyword">constexpr</span> XII_ALWAYS_INLINE <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView::xiiStringView</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, xiiUInt32 uiLength) :</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  m_pStart(pStart), m_uiElementCount(uiLength)</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>{</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>}</div>
</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="keyword">constexpr</span> XII_ALWAYS_INLINE <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView::xiiStringView</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N]) :</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  m_pStart(str), m_uiElementCount(N - 1)</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>{</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="keyword">static_assert</span>(N &gt; 0, <span class="stringliteral">&quot;Not a string literal&quot;</span>);</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>}</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="keyword">constexpr</span> XII_ALWAYS_INLINE <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView::xiiStringView</a>(<span class="keywordtype">char</span> (&amp;str)[N])</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>{</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  m_pStart         = str;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  m_uiElementCount = <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#af9de18eab321e420a8c5e42fbbe4703d">xiiStringUtils::GetStringElementCount</a>(str, str + N);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>}</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="}">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#ad34523dff4fda71d3161df5e1813bf0f">   50</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ad34523dff4fda71d3161df5e1813bf0f">xiiStringView::operator++</a>()</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>{</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#abf924e23fd9bf647a96f8e5550037493">IsValid</a>())</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* pEnd = m_pStart + m_uiElementCount;</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <a class="code hl_function" href="../../de/d05/classxii_unicode_utils.htm#a35eebd428c8b2435cc64a10cbfd7e087">xiiUnicodeUtils::MoveToNextUtf8</a>(m_pStart, pEnd).<a class="code hl_function" href="../../dd/dad/structxii_result.htm#a0e2e7a66dd1876db3912fc0f2dff69a6">IgnoreResult</a>(); <span class="comment">// if it fails, the string is just empty</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  m_uiElementCount = <span class="keyword">static_cast&lt;</span>xiiUInt32<span class="keyword">&gt;</span>(pEnd - m_pStart);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>}</div>
</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="foldopen" id="foldopen00060" data-start="{" data-end="}">
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#a9b2ce9419f867fd41b7bebd3cc1d54e3">   60</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a9b2ce9419f867fd41b7bebd3cc1d54e3">xiiStringView::operator+=</a>(xiiUInt32 d)</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>{</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* pEnd = m_pStart + m_uiElementCount;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <a class="code hl_function" href="../../de/d05/classxii_unicode_utils.htm#a35eebd428c8b2435cc64a10cbfd7e087">xiiUnicodeUtils::MoveToNextUtf8</a>(m_pStart, pEnd, d).<a class="code hl_function" href="../../dd/dad/structxii_result.htm#a0e2e7a66dd1876db3912fc0f2dff69a6">IgnoreResult</a>(); <span class="comment">// if it fails, the string is just empty</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  m_uiElementCount = <span class="keyword">static_cast&lt;</span>xiiUInt32<span class="keyword">&gt;</span>(pEnd - m_pStart);</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>}</div>
</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="foldopen" id="foldopen00067" data-start="{" data-end="}">
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#abf924e23fd9bf647a96f8e5550037493">   67</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#abf924e23fd9bf647a96f8e5550037493">xiiStringView::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keywordflow">return</span> (m_pStart != <span class="keyword">nullptr</span>) &amp;&amp; (m_uiElementCount &gt; 0);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>}</div>
</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="foldopen" id="foldopen00072" data-start="{" data-end="}">
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#ae78b5a1542b1486c767d3f95c0bfd774">   72</a></span>XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ae78b5a1542b1486c767d3f95c0bfd774">xiiStringView::SetStartPosition</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szCurPos)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>{</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  XII_ASSERT_DEV((szCurPos &gt;= m_pStart) &amp;&amp; (szCurPos &lt;= m_pStart + m_uiElementCount), <span class="stringliteral">&quot;New start position must still be inside the view&#39;s range.&quot;</span>);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* pEnd = m_pStart + m_uiElementCount;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  m_pStart         = szCurPos;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  m_uiElementCount = <span class="keyword">static_cast&lt;</span>xiiUInt32<span class="keyword">&gt;</span>(pEnd - m_pStart);</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>}</div>
</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="foldopen" id="foldopen00081" data-start="{" data-end="}">
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#a84867e3b724dda616e405bf562ca7c75">   81</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a84867e3b724dda616e405bf562ca7c75">xiiStringView::IsEmpty</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keywordflow">return</span> m_uiElementCount == 0;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>}</div>
</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="foldopen" id="foldopen00086" data-start="{" data-end="}">
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#a3eed1e0fcd7aa1a0af2ecab95c7870df">   86</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3eed1e0fcd7aa1a0af2ecab95c7870df">xiiStringView::IsEqual</a>(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther)<span class="keyword"> const</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#a39bb50553ad3fbca2c342abbca08fee5">xiiStringUtils::IsEqual</a>(m_pStart, sOther.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a98353a3bf5405f387af186b111dc28b5">GetStartPointer</a>(), m_pStart + m_uiElementCount, sOther.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">GetEndPointer</a>());</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>}</div>
</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="foldopen" id="foldopen00091" data-start="{" data-end="}">
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#ae727f5c345e7420c72dfcc7fc032bcd2">   91</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ae727f5c345e7420c72dfcc7fc032bcd2">xiiStringView::IsEqual_NoCase</a>(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sOther)<span class="keyword"> const</span></div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#a1dc8270bac3a9e25cc33ddbe2e54befd">xiiStringUtils::IsEqual_NoCase</a>(m_pStart, sOther.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a98353a3bf5405f387af186b111dc28b5">GetStartPointer</a>(), m_pStart + m_uiElementCount, sOther.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">GetEndPointer</a>());</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>}</div>
</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="foldopen" id="foldopen00096" data-start="{" data-end="}">
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#ac5348af2124e5d51b5576bfc6eb5de4d">   96</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac5348af2124e5d51b5576bfc6eb5de4d">xiiStringView::StartsWith</a>(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStartsWith)<span class="keyword"> const</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#afb2538341d8cd31778bebdff947e2a59">xiiStringUtils::StartsWith</a>(m_pStart, sStartsWith.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a98353a3bf5405f387af186b111dc28b5">GetStartPointer</a>(), m_pStart + m_uiElementCount, sStartsWith.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">GetEndPointer</a>());</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>}</div>
</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="foldopen" id="foldopen00101" data-start="{" data-end="}">
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#ab31f6dc792051eb0eb10d7a7a86ef835">  101</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ab31f6dc792051eb0eb10d7a7a86ef835">xiiStringView::StartsWith_NoCase</a>(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStartsWith)<span class="keyword"> const</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#aad408d8e65febe01930e200bfd6f73dd">xiiStringUtils::StartsWith_NoCase</a>(m_pStart, sStartsWith.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a98353a3bf5405f387af186b111dc28b5">GetStartPointer</a>(), m_pStart + m_uiElementCount, sStartsWith.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">GetEndPointer</a>());</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>}</div>
</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="foldopen" id="foldopen00106" data-start="{" data-end="}">
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#ab1f708598da36589b6f78a310a64d1d8">  106</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ab1f708598da36589b6f78a310a64d1d8">xiiStringView::EndsWith</a>(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sEndsWith)<span class="keyword"> const</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#a45aff821fa89198e5f80f8b3754e35c8">xiiStringUtils::EndsWith</a>(m_pStart, sEndsWith.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a98353a3bf5405f387af186b111dc28b5">GetStartPointer</a>(), m_pStart + m_uiElementCount, sEndsWith.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">GetEndPointer</a>());</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>}</div>
</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="foldopen" id="foldopen00111" data-start="{" data-end="}">
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#a52fd2d8486836117adc183c9f734f536">  111</a></span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a52fd2d8486836117adc183c9f734f536">xiiStringView::EndsWith_NoCase</a>(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sEndsWith)<span class="keyword"> const</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#af760d3c50a964ef80a077e3a6c5c24f1">xiiStringUtils::EndsWith_NoCase</a>(m_pStart, sEndsWith.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a98353a3bf5405f387af186b111dc28b5">GetStartPointer</a>(), m_pStart + m_uiElementCount, sEndsWith.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">GetEndPointer</a>());</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>}</div>
</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="foldopen" id="foldopen00116" data-start="{" data-end="}">
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#ab8e3cab7b427f8f870b367d23a5066b6">  116</a></span>XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ab8e3cab7b427f8f870b367d23a5066b6">xiiStringView::Trim</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimChars)</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>{</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ab8e3cab7b427f8f870b367d23a5066b6">Trim</a>(szTrimChars, szTrimChars);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>}</div>
</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="foldopen" id="foldopen00121" data-start="{" data-end="}">
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#aecc3e4dfa07b682a2366f476bd091564">  121</a></span>XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ab8e3cab7b427f8f870b367d23a5066b6">xiiStringView::Trim</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsEnd)</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>{</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#abf924e23fd9bf647a96f8e5550037493">IsValid</a>())</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  {</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    <span class="keyword">const</span> <span class="keywordtype">char</span>* pEnd = m_pStart + m_uiElementCount;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#ace52b990b8af8413bc0622ffa96cc036">xiiStringUtils::Trim</a>(m_pStart, pEnd, szTrimCharsStart, szTrimCharsEnd);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    m_uiElementCount = <span class="keyword">static_cast&lt;</span>xiiUInt32<span class="keyword">&gt;</span>(pEnd - m_pStart);</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  }</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>}</div>
</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span><span class="keyword">constexpr</span> XII_ALWAYS_INLINE <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> <span class="keyword">operator</span><span class="stringliteral">&quot;&quot;</span> _xiisv(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString, <span class="keywordtype">size_t</span> uiLen)</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>{</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>(pString, <span class="keyword">static_cast&lt;</span>xiiUInt32<span class="keyword">&gt;</span>(uiLen));</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>}</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Container&gt;</div>
<div class="foldopen" id="foldopen00137" data-start="{" data-end="}">
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno"><a class="line" href="../../da/d9d/structxii_string_view.htm#a33cac6de00c81d6edaa589bbf71e56d3">  137</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a33cac6de00c81d6edaa589bbf71e56d3">xiiStringView::Split</a>(<span class="keywordtype">bool</span> bReturnEmptyStrings, Container&amp; ref_output, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator2 <span class="comment">/*= nullptr*/</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator3 <span class="comment">/*= nullptr*/</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator4 <span class="comment">/*= nullptr*/</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator5 <span class="comment">/*= nullptr*/</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator6 <span class="comment">/*= nullptr*/</span>)<span class="keyword"> const</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  ref_output.Clear();</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a84867e3b724dda616e405bf562ca7c75">IsEmpty</a>())</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <span class="keyword">const</span> xiiUInt32 uiParams = 6;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  <span class="keyword">const</span> <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> seps[uiParams] = {szSeparator1, szSeparator2, szSeparator3, szSeparator4, szSeparator5, szSeparator6};</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* szReadPos = <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a98353a3bf5405f387af186b111dc28b5">GetStartPointer</a>();</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  {</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>    <span class="keyword">const</span> <span class="keywordtype">char</span>* szFoundPos       = <a class="code hl_function" href="../../de/d05/classxii_unicode_utils.htm#a660bf5a88b574b4be176332064e55fbe">xiiUnicodeUtils::GetMaxStringEnd&lt;char&gt;</a>();</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>    xiiUInt32   uiFoundSeparator = 0;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    <span class="keywordflow">for</span> (xiiUInt32 i = 0; i &lt; uiParams; ++i)</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    {</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>      <span class="keyword">const</span> <span class="keywordtype">char</span>* szFound = <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#a0fa20e8fc3fdb98e0166ff5c1b6e83e8">xiiStringUtils::FindSubString</a>(szReadPos, seps[i].<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a98353a3bf5405f387af186b111dc28b5">GetStartPointer</a>(), <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">GetEndPointer</a>(), seps[i].<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">GetEndPointer</a>());</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>      <span class="keywordflow">if</span> ((szFound != <span class="keyword">nullptr</span>) &amp;&amp; (szFound &lt; szFoundPos))</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>      {</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>        szFoundPos       = szFound;</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>        uiFoundSeparator = i;</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>      }</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>    }</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    <span class="comment">// nothing found</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>    <span class="keywordflow">if</span> (szFoundPos == <a class="code hl_function" href="../../de/d05/classxii_unicode_utils.htm#a660bf5a88b574b4be176332064e55fbe">xiiUnicodeUtils::GetMaxStringEnd&lt;char&gt;</a>())</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>    {</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>      <span class="keyword">const</span> xiiUInt32 uiLen = <a class="code hl_function" href="../../df/d65/classxii_string_utils.htm#af9de18eab321e420a8c5e42fbbe4703d">xiiStringUtils::GetStringElementCount</a>(szReadPos, <a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">GetEndPointer</a>());</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>      <span class="keywordflow">if</span> (bReturnEmptyStrings || (uiLen &gt; 0))</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>        ref_output.PushBack(<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView</a>(szReadPos, szReadPos + uiLen));</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    }</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    <span class="keywordflow">if</span> (bReturnEmptyStrings || (szFoundPos &gt; szReadPos))</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>      ref_output.PushBack(<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView</a>(szReadPos, szFoundPos));</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>    szReadPos = szFoundPos + seps[uiFoundSeparator].<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ad238901b4ca0413dd5d8e28728c38144">GetElementCount</a>();</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  }</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>}</div>
</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> operator==(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>{</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <span class="keywordflow">return</span> lhs.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#a3eed1e0fcd7aa1a0af2ecab95c7870df">IsEqual</a>(rhs);</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>}</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>XII_ALWAYS_INLINE std::strong_ordering operator&lt;=&gt;(<a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> lhs, <a class="code hl_struct" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs)</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>{</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  <span class="keywordflow">return</span> lhs.<a class="code hl_function" href="../../da/d9d/structxii_string_view.htm#ab6b5f4c7fdc35fa1aad794a36299c5f0">Compare</a>(rhs) &lt;=&gt; 0;</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>}</div>
<div class="ttc" id="aclassxii_string_utils_htm"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm">xiiStringUtils</a></div><div class="ttdoc">Helper functions to work with UTF-8 strings (which include pure ASCII strings)</div><div class="ttdef"><b>Definition</b> StringUtils.h:11</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a0fa20e8fc3fdb98e0166ff5c1b6e83e8"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a0fa20e8fc3fdb98e0166ff5c1b6e83e8">xiiStringUtils::FindSubString</a></div><div class="ttdeci">static const char * FindSubString(const char *szSource, const char *szStringToFind, const char *pSourceEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStringToFindEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Searches for the first occurrence of szStringToFind in szSource.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:548</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a1dc8270bac3a9e25cc33ddbe2e54befd"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a1dc8270bac3a9e25cc33ddbe2e54befd">xiiStringUtils::IsEqual_NoCase</a></div><div class="ttdeci">static bool IsEqual_NoCase(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (case-insensitive).</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:134</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a39bb50553ad3fbca2c342abbca08fee5"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a39bb50553ad3fbca2c342abbca08fee5">xiiStringUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const char *pString1, const char *pString2, const char *pString1End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise).</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:124</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_a45aff821fa89198e5f80f8b3754e35c8"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#a45aff821fa89198e5f80f8b3754e35c8">xiiStringUtils::EndsWith</a></div><div class="ttdeci">static bool EndsWith(const char *szString, const char *szEndsWith, const char *pStringEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szEndsWithEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true if szString ends with the string given in szEndsWith.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:499</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_aad408d8e65febe01930e200bfd6f73dd"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#aad408d8e65febe01930e200bfd6f73dd">xiiStringUtils::StartsWith_NoCase</a></div><div class="ttdeci">static bool StartsWith_NoCase(const char *szString, const char *szStartsWith, const char *pStringEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStartsWithEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true if szString starts with the string given in szStartsWith. Ignores case.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:475</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_ace52b990b8af8413bc0622ffa96cc036"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#ace52b990b8af8413bc0622ffa96cc036">xiiStringUtils::Trim</a></div><div class="ttdeci">static void Trim(const char *&amp;ref_pString, const char *&amp;ref_pStringEnd, const char *szTrimCharsStart, const char *szTrimCharsEnd)</div><div class="ttdoc">Removes all characters at the start and end of the string that match the respective characters and up...</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:772</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_af760d3c50a964ef80a077e3a6c5c24f1"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#af760d3c50a964ef80a077e3a6c5c24f1">xiiStringUtils::EndsWith_NoCase</a></div><div class="ttdeci">static bool EndsWith_NoCase(const char *szString, const char *szEndsWith, const char *pStringEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szEndsWithEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true if szString ends with the string given in szEndsWith. Ignores case.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:515</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_af9de18eab321e420a8c5e42fbbe4703d"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#af9de18eab321e420a8c5e42fbbe4703d">xiiStringUtils::GetStringElementCount</a></div><div class="ttdeci">static constexpr xiiUInt32 GetStringElementCount(const T *pString)</div><div class="ttdoc">Returns the number of elements of type T that the string contains, until it hits an element that is z...</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:45</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_afb2538341d8cd31778bebdff947e2a59"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#afb2538341d8cd31778bebdff947e2a59">xiiStringUtils::StartsWith</a></div><div class="ttdeci">static bool StartsWith(const char *szString, const char *szStartsWith, const char *pStringEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStartsWithEnd=xiiUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true if szString starts with the string given in szStartsWith.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:451</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_a35eebd428c8b2435cc64a10cbfd7e087"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#a35eebd428c8b2435cc64a10cbfd7e087">xiiUnicodeUtils::MoveToNextUtf8</a></div><div class="ttdeci">static xiiResult MoveToNextUtf8(const char *&amp;ref_szUtf8, xiiUInt32 uiNumCharacters=1)</div><div class="ttdoc">Moves the given string pointer ahead to the next Utf8 character sequence.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:201</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_a660bf5a88b574b4be176332064e55fbe"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#a660bf5a88b574b4be176332064e55fbe">xiiUnicodeUtils::GetMaxStringEnd</a></div><div class="ttdeci">static constexpr T * GetMaxStringEnd()</div><div class="ttdoc">[internal] Returns the max string end pointer for the given type</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:261</div></div>
<div class="ttc" id="astructxii_result_htm_a0e2e7a66dd1876db3912fc0f2dff69a6"><div class="ttname"><a href="../../dd/dad/structxii_result.htm#a0e2e7a66dd1876db3912fc0f2dff69a6">xiiResult::IgnoreResult</a></div><div class="ttdeci">XII_ALWAYS_INLINE void IgnoreResult()</div><div class="ttdoc">Used to silence compiler warnings, when success or failure doesn't matter.</div><div class="ttdef"><b>Definition</b> Types.h:70</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition</b> StringView.h:28</div></div>
<div class="ttc" id="astructxii_string_view_htm_a33cac6de00c81d6edaa589bbf71e56d3"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#a33cac6de00c81d6edaa589bbf71e56d3">xiiStringView::Split</a></div><div class="ttdeci">void Split(bool bReturnEmptyStrings, Container &amp;ref_output, const char *szSeparator1, const char *szSeparator2=nullptr, const char *szSeparator3=nullptr, const char *szSeparator4=nullptr, const char *szSeparator5=nullptr, const char *szSeparator6=nullptr) const</div><div class="ttdoc">Fills the given container with xiiStringView's which represent each found substring....</div><div class="ttdef"><b>Definition</b> StringView_inl.h:137</div></div>
<div class="ttc" id="astructxii_string_view_htm_a3ba082bebfcef6ebf2cd5d6db863f34d"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#a3ba082bebfcef6ebf2cd5d6db863f34d">xiiStringView::GetEndPointer</a></div><div class="ttdeci">const char * GetEndPointer() const</div><div class="ttdoc">Returns the end of the view range. This will point to the byte AFTER the last character.</div><div class="ttdef"><b>Definition</b> StringView.h:102</div></div>
<div class="ttc" id="astructxii_string_view_htm_a3eed1e0fcd7aa1a0af2ecab95c7870df"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#a3eed1e0fcd7aa1a0af2ecab95c7870df">xiiStringView::IsEqual</a></div><div class="ttdeci">bool IsEqual(xiiStringView sOther) const</div><div class="ttdoc">Compares this string view with the other string view for equality.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:86</div></div>
<div class="ttc" id="astructxii_string_view_htm_a52fd2d8486836117adc183c9f734f536"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#a52fd2d8486836117adc183c9f734f536">xiiStringView::EndsWith_NoCase</a></div><div class="ttdeci">bool EndsWith_NoCase(xiiStringView sEndsWith) const</div><div class="ttdoc">Returns true, if this string ends with the given string. Case insensitive.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:111</div></div>
<div class="ttc" id="astructxii_string_view_htm_a84867e3b724dda616e405bf562ca7c75"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#a84867e3b724dda616e405bf562ca7c75">xiiStringView::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether the string is an empty string.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:81</div></div>
<div class="ttc" id="astructxii_string_view_htm_a98353a3bf5405f387af186b111dc28b5"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#a98353a3bf5405f387af186b111dc28b5">xiiStringView::GetStartPointer</a></div><div class="ttdeci">const char * GetStartPointer() const</div><div class="ttdoc">Returns the start of the view range.</div><div class="ttdef"><b>Definition</b> StringView.h:96</div></div>
<div class="ttc" id="astructxii_string_view_htm_a9b2ce9419f867fd41b7bebd3cc1d54e3"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#a9b2ce9419f867fd41b7bebd3cc1d54e3">xiiStringView::operator+=</a></div><div class="ttdeci">void operator+=(xiiUInt32 d)</div><div class="ttdoc">Advances the start forwards by d characters. Does not move it beyond the range's end.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:60</div></div>
<div class="ttc" id="astructxii_string_view_htm_ab1f708598da36589b6f78a310a64d1d8"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ab1f708598da36589b6f78a310a64d1d8">xiiStringView::EndsWith</a></div><div class="ttdeci">bool EndsWith(xiiStringView sEndsWith) const</div><div class="ttdoc">Returns true, if this string ends with the given string.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:106</div></div>
<div class="ttc" id="astructxii_string_view_htm_ab31f6dc792051eb0eb10d7a7a86ef835"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ab31f6dc792051eb0eb10d7a7a86ef835">xiiStringView::StartsWith_NoCase</a></div><div class="ttdeci">bool StartsWith_NoCase(xiiStringView sStartsWith) const</div><div class="ttdoc">Returns true, if this string starts with the given string. Case insensitive.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:101</div></div>
<div class="ttc" id="astructxii_string_view_htm_ab6b5f4c7fdc35fa1aad794a36299c5f0"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ab6b5f4c7fdc35fa1aad794a36299c5f0">xiiStringView::Compare</a></div><div class="ttdeci">xiiInt32 Compare(xiiStringView sOther) const</div><div class="ttdoc">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller',...</div><div class="ttdef"><b>Definition</b> StringView.cpp:31</div></div>
<div class="ttc" id="astructxii_string_view_htm_ab8e3cab7b427f8f870b367d23a5066b6"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ab8e3cab7b427f8f870b367d23a5066b6">xiiStringView::Trim</a></div><div class="ttdeci">void Trim(const char *szTrimChars)</div><div class="ttdoc">Removes all characters from the start and end that appear in the given strings by adjusting the begin...</div><div class="ttdef"><b>Definition</b> StringView_inl.h:116</div></div>
<div class="ttc" id="astructxii_string_view_htm_abf924e23fd9bf647a96f8e5550037493"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#abf924e23fd9bf647a96f8e5550037493">xiiStringView::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Returns true, if the current string pointed to is non empty.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:67</div></div>
<div class="ttc" id="astructxii_string_view_htm_ac5348af2124e5d51b5576bfc6eb5de4d"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ac5348af2124e5d51b5576bfc6eb5de4d">xiiStringView::StartsWith</a></div><div class="ttdeci">bool StartsWith(xiiStringView sStartsWith) const</div><div class="ttdoc">Returns true, if this string starts with the given string.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:96</div></div>
<div class="ttc" id="astructxii_string_view_htm_ac8e7f80a14a77d103d2f596e63b374e5"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ac8e7f80a14a77d103d2f596e63b374e5">xiiStringView::xiiStringView</a></div><div class="ttdeci">constexpr xiiStringView()</div><div class="ttdoc">Default constructor creates an invalid view.</div></div>
<div class="ttc" id="astructxii_string_view_htm_ad238901b4ca0413dd5d8e28728c38144"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ad238901b4ca0413dd5d8e28728c38144">xiiStringView::GetElementCount</a></div><div class="ttdeci">xiiUInt32 GetElementCount() const</div><div class="ttdoc">Returns the number of bytes from the start position up to its end.</div><div class="ttdef"><b>Definition</b> StringView.h:87</div></div>
<div class="ttc" id="astructxii_string_view_htm_ad34523dff4fda71d3161df5e1813bf0f"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ad34523dff4fda71d3161df5e1813bf0f">xiiStringView::operator++</a></div><div class="ttdeci">void operator++()</div><div class="ttdoc">Advances the start to the next character, unless the end of the range was reached.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:50</div></div>
<div class="ttc" id="astructxii_string_view_htm_ae727f5c345e7420c72dfcc7fc032bcd2"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ae727f5c345e7420c72dfcc7fc032bcd2">xiiStringView::IsEqual_NoCase</a></div><div class="ttdeci">bool IsEqual_NoCase(xiiStringView sOther) const</div><div class="ttdoc">Compares this string view with the other string view for equality.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:91</div></div>
<div class="ttc" id="astructxii_string_view_htm_ae78b5a1542b1486c767d3f95c0bfd774"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm#ae78b5a1542b1486c767d3f95c0bfd774">xiiStringView::SetStartPosition</a></div><div class="ttdeci">void SetStartPosition(const char *szCurPos)</div><div class="ttdoc">Allows to set the start position to a different value.</div><div class="ttdef"><b>Definition</b> StringView_inl.h:72</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b0d9e1007714c8956662e529025ab552.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_92c52eb4981d7c3a6633b9c574fc9e8f.htm">Implementation</a></li><li class="navelem"><b>StringView_inl.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:47:31 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
