<!-- HTML header for doxygen 1.11.0-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: xiiDataDirectory::FolderType Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript">
  DoxygenAwesomeDarkModeToggle.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript">
  DoxygenAwesomeFragmentCopyButton.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
  DoxygenAwesomeParagraphLink.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
  DoxygenAwesomeInteractiveToc.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d5/dd5/classxii_data_directory_1_1_folder_type.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../dc/d57/classxii_data_directory_1_1_folder_type-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">xiiDataDirectory::FolderType Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="../../d8/d4f/class_a.htm">A</a> data directory type to handle access to ordinary files.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d7/d26/_data_dir_type_folder_8h_source.htm">DataDirTypeFolder.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for xiiDataDirectory::FolderType:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="../../d5/d78/classxii_data_directory_1_1_folder_type__inherit__graph.svg" width="236" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3f826695cf922022c93882a01c3bb1a9" id="r_a3f826695cf922022c93882a01c3bb1a9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3f826695cf922022c93882a01c3bb1a9">ReloadExternalConfigs</a> () override</td></tr>
<tr class="memdesc:a3f826695cf922022c93882a01c3bb1a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">When s_sRedirectionFile and s_sRedirectionPrefix are used to enable file redirection, this will reload those config files.  <br /></td></tr>
<tr class="separator:a3f826695cf922022c93882a01c3bb1a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a770d107984987841e11fd7cba0c95b" id="r_a4a770d107984987841e11fd7cba0c95b"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString128</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4a770d107984987841e11fd7cba0c95b">GetRedirectedDataDirectoryPath</a> () const override</td></tr>
<tr class="memdesc:a4a770d107984987841e11fd7cba0c95b"><td class="mdescLeft">&#160;</td><td class="mdescRight">By default this is the same as <a class="el" href="../../de/d33/classxii_data_directory_type.htm#a9d41d095f8aae8b6a02d14809a563a3a" title="Returns the absolute path to the data directory.">GetDataDirectoryPath()</a>, but derived implementations may use a different location where they actually get the files from.  <br /></td></tr>
<tr class="separator:a4a770d107984987841e11fd7cba0c95b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classxii_data_directory_type"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classxii_data_directory_type')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/d33/classxii_data_directory_type.htm">xiiDataDirectoryType</a></td></tr>
<tr class="memitem:a9d41d095f8aae8b6a02d14809a563a3a inherit pub_methods_classxii_data_directory_type" id="r_a9d41d095f8aae8b6a02d14809a563a3a"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString128</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetDataDirectoryPath</b> () const</td></tr>
<tr class="memdesc:a9d41d095f8aae8b6a02d14809a563a3a inherit pub_methods_classxii_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the absolute path to the data directory. <br /></td></tr>
<tr class="separator:a9d41d095f8aae8b6a02d14809a563a3a inherit pub_methods_classxii_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a2512013aa5f91653f8ca181dceb8e6b7" id="r_a2512013aa5f91653f8ca181dceb8e6b7"><td class="memItemLeft" align="right" valign="top"><a id="a2512013aa5f91653f8ca181dceb8e6b7" name="a2512013aa5f91653f8ca181dceb8e6b7"></a>
static <a class="el" href="../../de/d33/classxii_data_directory_type.htm">xiiDataDirectoryType</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Factory</b> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sDataDirectory, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sGroup, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sRootName, <a class="el" href="../../d7/d0a/classxii_file_system.htm#a54bad68a9749727d4e8be83bb5a5999a">xiiFileSystem::DataDirUsage</a> usage)</td></tr>
<tr class="memdesc:a2512013aa5f91653f8ca181dceb8e6b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">The factory that can be registered at <a class="el" href="../../d7/d0a/classxii_file_system.htm" title="The xiiFileSystem provides high-level functionality to manage files in a virtual file system.">xiiFileSystem</a> to create data directories of this type. <br /></td></tr>
<tr class="separator:a2512013aa5f91653f8ca181dceb8e6b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a32a073905c292cb9c1f70098afbac836" id="r_a32a073905c292cb9c1f70098afbac836"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a32a073905c292cb9c1f70098afbac836">s_sRedirectionFile</a></td></tr>
<tr class="separator:a32a073905c292cb9c1f70098afbac836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7c2a27a56c79d02fdca5a651b7e8f5d" id="r_ac7c2a27a56c79d02fdca5a651b7e8f5d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac7c2a27a56c79d02fdca5a651b7e8f5d">s_sRedirectionPrefix</a></td></tr>
<tr class="separator:ac7c2a27a56c79d02fdca5a651b7e8f5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a94b3f685a139699b3cf9efedeb608880" id="r_a94b3f685a139699b3cf9efedeb608880"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d3d/classxii_data_directory_reader.htm">xiiDataDirectoryReader</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a94b3f685a139699b3cf9efedeb608880">OpenFileToRead</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sFile, <a class="el" href="../../dc/df4/structxii_file_share_mode.htm#a853af051a2b930d18b9d14f78c09e5e1">xiiFileShareMode::Enum</a> FileShareMode, bool bSpecificallyThisDataDir) override</td></tr>
<tr class="memdesc:a94b3f685a139699b3cf9efedeb608880"><td class="mdescLeft">&#160;</td><td class="mdescRight">Must be implemented to create a <a class="el" href="../../de/d3d/classxii_data_directory_reader.htm" title="A base class for readers that handle reading from a (virtual) file inside a data directory.">xiiDataDirectoryReader</a> for accessing the given file. Returns nullptr if the file could not be opened.  <br /></td></tr>
<tr class="separator:a94b3f685a139699b3cf9efedeb608880"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b421965dbe5303bd0e0aeb85830f3f6" id="r_a3b421965dbe5303bd0e0aeb85830f3f6"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3b421965dbe5303bd0e0aeb85830f3f6">ResolveAssetRedirection</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPathOrAssetGuid, <a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out_sRedirection) override</td></tr>
<tr class="memdesc:a3b421965dbe5303bd0e0aeb85830f3f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this data directory knows how to redirect the given path, it should do so and return true. Called by <a class="el" href="../../d7/d0a/classxii_file_system.htm#a9abfaf036f4391db83674478735c9f32" title="Returns true, if any data directory knows how to redirect the given path. Otherwise the original stri...">xiiFileSystem::ResolveAssetRedirection</a>.  <br /></td></tr>
<tr class="separator:a3b421965dbe5303bd0e0aeb85830f3f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4896e949adb1dc13c8b4c5c32da9255" id="r_ad4896e949adb1dc13c8b4c5c32da9255"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d3/dd7/classxii_data_directory_writer.htm">xiiDataDirectoryWriter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad4896e949adb1dc13c8b4c5c32da9255">OpenFileToWrite</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sFile, <a class="el" href="../../dc/df4/structxii_file_share_mode.htm#a853af051a2b930d18b9d14f78c09e5e1">xiiFileShareMode::Enum</a> FileShareMode) override</td></tr>
<tr class="memdesc:ad4896e949adb1dc13c8b4c5c32da9255"><td class="mdescLeft">&#160;</td><td class="mdescRight">Must be implemented to create a <a class="el" href="../../d3/dd7/classxii_data_directory_writer.htm" title="A base class for writers that handle writing to a (virtual) file inside a data directory.">xiiDataDirectoryWriter</a> for accessing the given file. Returns nullptr if the file could not be opened.  <br /></td></tr>
<tr class="separator:ad4896e949adb1dc13c8b4c5c32da9255"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31905d56e983dde3768fc5c56ac7cf3a" id="r_a31905d56e983dde3768fc5c56ac7cf3a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a31905d56e983dde3768fc5c56ac7cf3a">RemoveDataDirectory</a> () override</td></tr>
<tr class="memdesc:a31905d56e983dde3768fc5c56ac7cf3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called by the filesystem when a data directory is removed.  <br /></td></tr>
<tr class="separator:a31905d56e983dde3768fc5c56ac7cf3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af642d692fe4b6b80117ac1c53358af67" id="r_af642d692fe4b6b80117ac1c53358af67"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af642d692fe4b6b80117ac1c53358af67">DeleteFile</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sFile) override</td></tr>
<tr class="memdesc:af642d692fe4b6b80117ac1c53358af67"><td class="mdescLeft">&#160;</td><td class="mdescRight">If a Data Directory Type supports it, this function will remove the given file from it.  <br /></td></tr>
<tr class="separator:af642d692fe4b6b80117ac1c53358af67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fc14aaa2cfd3592887c05acbdd90ea8" id="r_a5fc14aaa2cfd3592887c05acbdd90ea8"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5fc14aaa2cfd3592887c05acbdd90ea8">ExistsFile</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sFile, bool bOneSpecificDataDir) override</td></tr>
<tr class="memdesc:a5fc14aaa2cfd3592887c05acbdd90ea8"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function checks whether the given file exists in this data directory.  <br /></td></tr>
<tr class="separator:a5fc14aaa2cfd3592887c05acbdd90ea8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16c1d5c08de02ee178728989afbb957c" id="r_a16c1d5c08de02ee178728989afbb957c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a16c1d5c08de02ee178728989afbb957c">GetFileStats</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sFileOrFolder, bool bOneSpecificDataDir, <a class="el" href="../../d6/dd0/structxii_file_stats.htm">xiiFileStats</a> &amp;out_Stats) override</td></tr>
<tr class="memdesc:a16c1d5c08de02ee178728989afbb957c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Upon success returns the <a class="el" href="../../d6/dd0/structxii_file_stats.htm" title="Holds the stats for a file.">xiiFileStats</a> for a file in this data directory.  <br /></td></tr>
<tr class="separator:a16c1d5c08de02ee178728989afbb957c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec21b6e09a0fc082d81f5f70aabdeb13" id="r_aec21b6e09a0fc082d81f5f70aabdeb13"><td class="memItemLeft" align="right" valign="top"><a id="aec21b6e09a0fc082d81f5f70aabdeb13" name="aec21b6e09a0fc082d81f5f70aabdeb13"></a>
virtual <a class="el" href="../../da/d76/classxii_data_directory_1_1_folder_reader.htm">FolderReader</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>CreateFolderReader</b> () const</td></tr>
<tr class="separator:aec21b6e09a0fc082d81f5f70aabdeb13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af28c3c3a95fc34b7371296d967500474" id="r_af28c3c3a95fc34b7371296d967500474"><td class="memItemLeft" align="right" valign="top"><a id="af28c3c3a95fc34b7371296d967500474" name="af28c3c3a95fc34b7371296d967500474"></a>
virtual <a class="el" href="../../d0/d0b/classxii_data_directory_1_1_folder_writer.htm">FolderWriter</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>CreateFolderWriter</b> () const</td></tr>
<tr class="separator:af28c3c3a95fc34b7371296d967500474"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d50c30b0f78d93a882d8c06f0ff2df8" id="r_a0d50c30b0f78d93a882d8c06f0ff2df8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0d50c30b0f78d93a882d8c06f0ff2df8">InternalInitializeDataDirectory</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sDirectory) override</td></tr>
<tr class="memdesc:a0d50c30b0f78d93a882d8c06f0ff2df8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called by 'xiiDataDirectoryType_Folder::Factory'.  <br /></td></tr>
<tr class="separator:a0d50c30b0f78d93a882d8c06f0ff2df8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51b97330e5c3fa515f30fc131a1ab470" id="r_a51b97330e5c3fa515f30fc131a1ab470"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a51b97330e5c3fa515f30fc131a1ab470">OnReaderWriterClose</a> (<a class="el" href="../../d5/d39/classxii_data_directory_reader_writer_base.htm">xiiDataDirectoryReaderWriterBase</a> *pClosed) override</td></tr>
<tr class="memdesc:a51b97330e5c3fa515f30fc131a1ab470"><td class="mdescLeft">&#160;</td><td class="mdescRight">Marks the given reader/writer as reusable.  <br /></td></tr>
<tr class="separator:a51b97330e5c3fa515f30fc131a1ab470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2727e8406461157984b647e9229ef1c" id="r_ab2727e8406461157984b647e9229ef1c"><td class="memItemLeft" align="right" valign="top"><a id="ab2727e8406461157984b647e9229ef1c" name="ab2727e8406461157984b647e9229ef1c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>LoadRedirectionFile</b> ()</td></tr>
<tr class="separator:ab2727e8406461157984b647e9229ef1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classxii_data_directory_type"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classxii_data_directory_type')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../de/d33/classxii_data_directory_type.htm">xiiDataDirectoryType</a></td></tr>
<tr class="memitem:acd11182eed4408e3c068a94ea8c14aca inherit pro_methods_classxii_data_directory_type" id="r_acd11182eed4408e3c068a94ea8c14aca"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>InitializeDataDirectory</b> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sDataDirPath)</td></tr>
<tr class="memdesc:acd11182eed4408e3c068a94ea8c14aca inherit pro_methods_classxii_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to setup the data directory. Can fail, if the type is incorrect (e.g. a ZIP file data directory type cannot handle a simple folder and vice versa) <br /></td></tr>
<tr class="separator:acd11182eed4408e3c068a94ea8c14aca inherit pro_methods_classxii_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aaa267fe2a56fc8b9f7d6caea1ada35d5" id="r_aaa267fe2a56fc8b9f7d6caea1ada35d5"><td class="memItemLeft" align="right" valign="top"><a id="aaa267fe2a56fc8b9f7d6caea1ada35d5" name="aaa267fe2a56fc8b9f7d6caea1ada35d5"></a>
<a class="el" href="../../dd/d52/classxii_mutex.htm">xiiMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ReaderWriterMutex</b></td></tr>
<tr class="memdesc:aaa267fe2a56fc8b9f7d6caea1ada35d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Locks m_Readers / m_Writers as well as the m_bIsInUse flag of each reader / writer. <br /></td></tr>
<tr class="separator:aaa267fe2a56fc8b9f7d6caea1ada35d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1707266102dba12fcf2537ad8396783" id="r_ad1707266102dba12fcf2537ad8396783"><td class="memItemLeft" align="right" valign="top"><a id="ad1707266102dba12fcf2537ad8396783" name="ad1707266102dba12fcf2537ad8396783"></a>
<a class="el" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a>&lt; <a class="el" href="../../da/d76/classxii_data_directory_1_1_folder_reader.htm">xiiDataDirectory::FolderReader</a> *, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Readers</b></td></tr>
<tr class="separator:ad1707266102dba12fcf2537ad8396783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac377daa2fb4e2e1621bb5b4b66a922d1" id="r_ac377daa2fb4e2e1621bb5b4b66a922d1"><td class="memItemLeft" align="right" valign="top"><a id="ac377daa2fb4e2e1621bb5b4b66a922d1" name="ac377daa2fb4e2e1621bb5b4b66a922d1"></a>
<a class="el" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a>&lt; <a class="el" href="../../d0/d0b/classxii_data_directory_1_1_folder_writer.htm">xiiDataDirectory::FolderWriter</a> *, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Writers</b></td></tr>
<tr class="separator:ac377daa2fb4e2e1621bb5b4b66a922d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a642b7adeb2292b023bdc154ee6ea45c0" id="r_a642b7adeb2292b023bdc154ee6ea45c0"><td class="memItemLeft" align="right" valign="top"><a id="a642b7adeb2292b023bdc154ee6ea45c0" name="a642b7adeb2292b023bdc154ee6ea45c0"></a>
<a class="el" href="../../dd/d52/classxii_mutex.htm">xiiMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_RedirectionMutex</b></td></tr>
<tr class="separator:a642b7adeb2292b023bdc154ee6ea45c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd76789bd905d9650d5530b241e1e0a5" id="r_afd76789bd905d9650d5530b241e1e0a5"><td class="memItemLeft" align="right" valign="top"><a id="afd76789bd905d9650d5530b241e1e0a5" name="afd76789bd905d9650d5530b241e1e0a5"></a>
<a class="el" href="../../d6/df7/classxii_map.htm">xiiMap</a>&lt; <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a>, <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_FileRedirection</b></td></tr>
<tr class="separator:afd76789bd905d9650d5530b241e1e0a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a967e29412f2370ebdaf0afec78934c" id="r_a6a967e29412f2370ebdaf0afec78934c"><td class="memItemLeft" align="right" valign="top"><a id="a6a967e29412f2370ebdaf0afec78934c" name="a6a967e29412f2370ebdaf0afec78934c"></a>
<a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString128</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sRedirectedDataDirPath</b></td></tr>
<tr class="separator:a6a967e29412f2370ebdaf0afec78934c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classxii_data_directory_type"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classxii_data_directory_type')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../de/d33/classxii_data_directory_type.htm">xiiDataDirectoryType</a></td></tr>
<tr class="memitem:aa2e35e87ebc68dea17046ebf50c5f935 inherit pro_attribs_classxii_data_directory_type" id="r_aa2e35e87ebc68dea17046ebf50c5f935"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString128</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sDataDirectoryPath</b></td></tr>
<tr class="memdesc:aa2e35e87ebc68dea17046ebf50c5f935 inherit pro_attribs_classxii_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes can use 'GetDataDirectoryPath' to access this data. <br /></td></tr>
<tr class="separator:aa2e35e87ebc68dea17046ebf50c5f935 inherit pro_attribs_classxii_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="../../d8/d4f/class_a.htm">A</a> data directory type to handle access to ordinary files. </p>
<p>Register the 'Factory' function at <a class="el" href="../../d7/d0a/classxii_file_system.htm" title="The xiiFileSystem provides high-level functionality to manage files in a virtual file system.">xiiFileSystem</a> to allow it to mount local directories. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af642d692fe4b6b80117ac1c53358af67" name="af642d692fe4b6b80117ac1c53358af67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af642d692fe4b6b80117ac1c53358af67">&#9670;&#160;</a></span>DeleteFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiDataDirectory::FolderType::DeleteFile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFile</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If a Data Directory Type supports it, this function will remove the given file from it. </p>

<p>Reimplemented from <a class="el" href="../../de/d33/classxii_data_directory_type.htm#a8f8204841c9213f481f30f5121e03d94">xiiDataDirectoryType</a>.</p>

<p>Reimplemented in <a class="el" href="../../d9/df6/classxii_data_directory_1_1_fileserve_type.htm#a683558300693ea2d6dc9d6a0e0eb50d9">xiiDataDirectory::FileserveType</a>.</p>

</div>
</div>
<a id="a5fc14aaa2cfd3592887c05acbdd90ea8" name="a5fc14aaa2cfd3592887c05acbdd90ea8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fc14aaa2cfd3592887c05acbdd90ea8">&#9670;&#160;</a></span>ExistsFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiDataDirectory::FolderType::ExistsFile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bOneSpecificDataDir</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function checks whether the given file exists in this data directory. </p>
<p>The default implementation simply calls <a class="el" href="../../da/d95/classxii_o_s_file.htm#a57e1ed06c65f9b02826a1679e38cb410" title="Checks whether the given file exists.">xiiOSFile::ExistsFile</a> An optimized implementation might look this information up in some hash-map. </p>

<p>Reimplemented from <a class="el" href="../../de/d33/classxii_data_directory_type.htm#a2939f6389612e2aeb6ae2ae762276b8e">xiiDataDirectoryType</a>.</p>

<p>Reimplemented in <a class="el" href="../../d9/df6/classxii_data_directory_1_1_fileserve_type.htm#a6d51cbae35307dd6c9403c878e7a8fdf">xiiDataDirectory::FileserveType</a>.</p>

</div>
</div>
<a id="a16c1d5c08de02ee178728989afbb957c" name="a16c1d5c08de02ee178728989afbb957c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16c1d5c08de02ee178728989afbb957c">&#9670;&#160;</a></span>GetFileStats()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiDataDirectory::FolderType::GetFileStats </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFileOrFolder</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bOneSpecificDataDir</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/dd0/structxii_file_stats.htm">xiiFileStats</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_Stats</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Upon success returns the <a class="el" href="../../d6/dd0/structxii_file_stats.htm" title="Holds the stats for a file.">xiiFileStats</a> for a file in this data directory. </p>

<p>Implements <a class="el" href="../../de/d33/classxii_data_directory_type.htm#accf67cf83009d29d4385c1a8bdeaf1ed">xiiDataDirectoryType</a>.</p>

<p>Reimplemented in <a class="el" href="../../d9/df6/classxii_data_directory_1_1_fileserve_type.htm#a3b5923a48897cb25d5b6c2ffeccfa17c">xiiDataDirectory::FileserveType</a>.</p>

</div>
</div>
<a id="a4a770d107984987841e11fd7cba0c95b" name="a4a770d107984987841e11fd7cba0c95b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a770d107984987841e11fd7cba0c95b">&#9670;&#160;</a></span>GetRedirectedDataDirectoryPath()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString128</a> &amp; xiiDataDirectory::FolderType::GetRedirectedDataDirectoryPath </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>By default this is the same as <a class="el" href="../../de/d33/classxii_data_directory_type.htm#a9d41d095f8aae8b6a02d14809a563a3a" title="Returns the absolute path to the data directory.">GetDataDirectoryPath()</a>, but derived implementations may use a different location where they actually get the files from. </p>

<p>Reimplemented from <a class="el" href="../../de/d33/classxii_data_directory_type.htm#aa223a93e7b7db8894554f3b7b0176c06">xiiDataDirectoryType</a>.</p>

</div>
</div>
<a id="a0d50c30b0f78d93a882d8c06f0ff2df8" name="a0d50c30b0f78d93a882d8c06f0ff2df8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d50c30b0f78d93a882d8c06f0ff2df8">&#9670;&#160;</a></span>InternalInitializeDataDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiDataDirectory::FolderType::InternalInitializeDataDirectory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sDirectory</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called by 'xiiDataDirectoryType_Folder::Factory'. </p>

<p>Implements <a class="el" href="../../de/d33/classxii_data_directory_type.htm#a65c551c72e3e70fc0185c784112e7343">xiiDataDirectoryType</a>.</p>

<p>Reimplemented in <a class="el" href="../../d9/df6/classxii_data_directory_1_1_fileserve_type.htm#ae4e50f490bf72f0d9db3bbe60da737ee">xiiDataDirectory::FileserveType</a>.</p>

</div>
</div>
<a id="a51b97330e5c3fa515f30fc131a1ab470" name="a51b97330e5c3fa515f30fc131a1ab470"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51b97330e5c3fa515f30fc131a1ab470">&#9670;&#160;</a></span>OnReaderWriterClose()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiDataDirectory::FolderType::OnReaderWriterClose </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/d39/classxii_data_directory_reader_writer_base.htm">xiiDataDirectoryReaderWriterBase</a> *</td>          <td class="paramname"><span class="paramname"><em>pClosed</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Marks the given reader/writer as reusable. </p>

<p>Reimplemented from <a class="el" href="../../de/d33/classxii_data_directory_type.htm#a6bd08b2185798c937702e813ee4a8a1a">xiiDataDirectoryType</a>.</p>

</div>
</div>
<a id="a94b3f685a139699b3cf9efedeb608880" name="a94b3f685a139699b3cf9efedeb608880"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94b3f685a139699b3cf9efedeb608880">&#9670;&#160;</a></span>OpenFileToRead()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/d3d/classxii_data_directory_reader.htm">xiiDataDirectoryReader</a> * xiiDataDirectory::FolderType::OpenFileToRead </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/df4/structxii_file_share_mode.htm#a853af051a2b930d18b9d14f78c09e5e1">xiiFileShareMode::Enum</a></td>          <td class="paramname"><span class="paramname"><em>FileShareMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bSpecificallyThisDataDir</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Must be implemented to create a <a class="el" href="../../de/d3d/classxii_data_directory_reader.htm" title="A base class for readers that handle reading from a (virtual) file inside a data directory.">xiiDataDirectoryReader</a> for accessing the given file. Returns nullptr if the file could not be opened. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szFile</td><td>is given as a path relative to the data directory's path. So unless the data directory path is empty, this will never be an absolute path. If a rooted path was given, the root name is also removed and only the relative part is passed along. </td></tr>
    <tr><td class="paramname">bSpecificallyThisDataDir</td><td>This is true when the original path specified to open the file through exactly this data directory, by using a rooted path. If an absolute path is used, which incidentally matches the prefix of this data directory, bSpecificallyThisDataDir is NOT set to true, as there might be other data directories that also match. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../de/d33/classxii_data_directory_type.htm#abd25b08e47282bae0e2fa87942fe23ec">xiiDataDirectoryType</a>.</p>

<p>Reimplemented in <a class="el" href="../../d9/df6/classxii_data_directory_1_1_fileserve_type.htm#a471ffd0be6926486e49bbd5ee07d0039">xiiDataDirectory::FileserveType</a>.</p>

</div>
</div>
<a id="ad4896e949adb1dc13c8b4c5c32da9255" name="ad4896e949adb1dc13c8b4c5c32da9255"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4896e949adb1dc13c8b4c5c32da9255">&#9670;&#160;</a></span>OpenFileToWrite()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d3/dd7/classxii_data_directory_writer.htm">xiiDataDirectoryWriter</a> * xiiDataDirectory::FolderType::OpenFileToWrite </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/df4/structxii_file_share_mode.htm#a853af051a2b930d18b9d14f78c09e5e1">xiiFileShareMode::Enum</a></td>          <td class="paramname"><span class="paramname"><em>FileShareMode</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Must be implemented to create a <a class="el" href="../../d3/dd7/classxii_data_directory_writer.htm" title="A base class for writers that handle writing to a (virtual) file inside a data directory.">xiiDataDirectoryWriter</a> for accessing the given file. Returns nullptr if the file could not be opened. </p>
<p>If it always returns nullptr (default) the data directory is read-only (at least through this type). </p>

<p>Reimplemented from <a class="el" href="../../de/d33/classxii_data_directory_type.htm#a6c13ac855808b22240a77ca11d3655cd">xiiDataDirectoryType</a>.</p>

<p>Reimplemented in <a class="el" href="../../d9/df6/classxii_data_directory_1_1_fileserve_type.htm#acf525a2fd5ec94cc5dabcacd460a3582">xiiDataDirectory::FileserveType</a>.</p>

</div>
</div>
<a id="a3f826695cf922022c93882a01c3bb1a9" name="a3f826695cf922022c93882a01c3bb1a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f826695cf922022c93882a01c3bb1a9">&#9670;&#160;</a></span>ReloadExternalConfigs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiDataDirectory::FolderType::ReloadExternalConfigs </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>When s_sRedirectionFile and s_sRedirectionPrefix are used to enable file redirection, this will reload those config files. </p>

<p>Reimplemented from <a class="el" href="../../de/d33/classxii_data_directory_type.htm#a188b02feb34f82ee3fda2d685f640f6b">xiiDataDirectoryType</a>.</p>

<p>Reimplemented in <a class="el" href="../../d9/df6/classxii_data_directory_1_1_fileserve_type.htm#a510195f0d9567399970cfcf73cc57570">xiiDataDirectory::FileserveType</a>.</p>

</div>
</div>
<a id="a31905d56e983dde3768fc5c56ac7cf3a" name="a31905d56e983dde3768fc5c56ac7cf3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31905d56e983dde3768fc5c56ac7cf3a">&#9670;&#160;</a></span>RemoveDataDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void xiiDataDirectory::FolderType::RemoveDataDirectory </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function is called by the filesystem when a data directory is removed. </p>
<p>It should delete itself using the proper allocator. </p>

<p>Implements <a class="el" href="../../de/d33/classxii_data_directory_type.htm#ae00b69a7586651b18fe3a975f539c3a3">xiiDataDirectoryType</a>.</p>

<p>Reimplemented in <a class="el" href="../../d9/df6/classxii_data_directory_1_1_fileserve_type.htm#a1c1f70ea4f1c052998a54e2408006e57">xiiDataDirectory::FileserveType</a>.</p>

</div>
</div>
<a id="a3b421965dbe5303bd0e0aeb85830f3f6" name="a3b421965dbe5303bd0e0aeb85830f3f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b421965dbe5303bd0e0aeb85830f3f6">&#9670;&#160;</a></span>ResolveAssetRedirection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiDataDirectory::FolderType::ResolveAssetRedirection </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPathOrAssetGuid</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_sRedirection</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If this data directory knows how to redirect the given path, it should do so and return true. Called by <a class="el" href="../../d7/d0a/classxii_file_system.htm#a9abfaf036f4391db83674478735c9f32" title="Returns true, if any data directory knows how to redirect the given path. Otherwise the original stri...">xiiFileSystem::ResolveAssetRedirection</a>. </p>

<p>Reimplemented from <a class="el" href="../../de/d33/classxii_data_directory_type.htm#a6bc3b529b723c4e6e4c88140cbef098e">xiiDataDirectoryType</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a32a073905c292cb9c1f70098afbac836" name="a32a073905c292cb9c1f70098afbac836"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32a073905c292cb9c1f70098afbac836">&#9670;&#160;</a></span>s_sRedirectionFile</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> xiiDataDirectory::FolderType::s_sRedirectionFile</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="../../d8/d4f/class_a.htm">A</a> 'redirection file' is an optional file located inside a data directory that lists which file access is redirected to which other file lookup. Each redirection is one line in the file (terminated by a <br  />
). Each line consists of the 'key' string, a semicolon and a 'value' string. No unnecessary whitespace is allowed. When a file that matches 'key' is accessed through a mounted data directory, the file access will be replaced by 'value' (plus s_sRedirectionPrefix) 'key' may be anything (e.g. a GUID string), 'value' should be a valid relative path into the SAME data directory. The redirection file can be used to implement an asset lookup, where assets are identified by GUIDs and need to be mapped to the actual asset file. </p>

</div>
</div>
<a id="ac7c2a27a56c79d02fdca5a651b7e8f5d" name="ac7c2a27a56c79d02fdca5a651b7e8f5d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7c2a27a56c79d02fdca5a651b7e8f5d">&#9670;&#160;</a></span>s_sRedirectionPrefix</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> xiiDataDirectory::FolderType::s_sRedirectionPrefix</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>If a redirection file is used AND the redirection lookup was successful, s_sRedirectionPrefix is prepended to the redirected file access. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/IO/FileSystem/<a class="el" href="../../d7/d26/_data_dir_type_folder_8h_source.htm">DataDirTypeFolder.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/IO/FileSystem/Implementation/<b>DataDirTypeFolder.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>xiiDataDirectory</b></li><li class="navelem"><a class="el" href="../../d5/dd5/classxii_data_directory_1_1_folder_type.htm">FolderType</a></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:47:37 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
