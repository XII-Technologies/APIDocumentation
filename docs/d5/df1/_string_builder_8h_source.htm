<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Strings/StringBuilder.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d5/df1/_string_builder_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringBuilder.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/ThirdParty/utf8/utf8.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/MemoryUtils.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/FormatString.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringBase.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/PathUtils.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringUtils.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringView.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">template</span> &lt;xiiUInt16 Size&gt;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">struct </span><a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">template</span> &lt;xiiUInt16 Size, <span class="keyword">typename</span> AllocatorWrapper&gt;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">struct </span><a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d2e/classxii_format_string.htm">xiiFormatString</a>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm">   34</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> : <span class="keyword">public</span> <a class="code" href="../../d2/d29/structxii_string_base.htm">xiiStringBase</a>&lt;xiiStringBuilder&gt;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>(<a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs) noexcept;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">template</span> &lt;xiiUInt16 Size&gt;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a6306bb897169fdf80b0e23db3500d448">   48</a></span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a6306bb897169fdf80b0e23db3500d448">xiiStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp; rhs) :</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    m_uiCharacterCount(rhs.m_uiCharacterCount), m_Data(rhs.m_Data)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keyword">template</span> &lt;xiiUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#adce1d8a490a101786c7e66834ca77b93">   55</a></span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#adce1d8a490a101786c7e66834ca77b93">xiiStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, A&gt;</a>&amp; rhs) :</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    m_uiCharacterCount(rhs.m_uiCharacterCount), m_Data(rhs.m_Data)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">template</span> &lt;xiiUInt16 Size&gt;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a0c044d863e4c2ceccf8ea36a364b3aad">   63</a></span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a0c044d863e4c2ceccf8ea36a364b3aad">xiiStringBuilder</a>(<a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp;&amp; rhs) :</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    m_uiCharacterCount(rhs.m_uiCharacterCount), m_Data(std::move(rhs.m_Data))</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keyword">template</span> &lt;xiiUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a583ac27cd0632bf08c084c0a6502fe83">   70</a></span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a583ac27cd0632bf08c084c0a6502fe83">xiiStringBuilder</a>(<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, A&gt;</a>&amp;&amp; rhs) :</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    m_uiCharacterCount(rhs.m_uiCharacterCount), m_Data(std::move(rhs.m_Data))</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  }</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData1, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData2, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData3 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData4 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData5 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData6 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="comment">/* implicit */</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="comment">/* implicit */</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="comment">/* implicit */</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator = <a class="code" href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a>&amp;&amp; rhs) noexcept;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keyword">template</span> &lt;xiiUInt16 Size&gt;</div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a47b420a146dd5a9f64f59ac31716507b">  104</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a47b420a146dd5a9f64f59ac31716507b">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    m_Data             = rhs.m_Data;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keyword">template</span> &lt;xiiUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a98bdbaf20f43b7840ab2d9b7ae9c9118">  112</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a98bdbaf20f43b7840ab2d9b7ae9c9118">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, A&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    m_Data             = rhs.m_Data;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keyword">template</span> &lt;xiiUInt16 Size&gt;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a11e70905bdd15ea5c95ddffa747cb145">  120</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a11e70905bdd15ea5c95ddffa747cb145">operator=</a>(<a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase&lt;Size&gt;</a>&amp;&amp; rhs)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    m_Data             = std::move(rhs.m_Data);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keyword">template</span> &lt;xiiUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a72a50979eaf37519aad480626e0d5464">  128</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a72a50979eaf37519aad480626e0d5464">operator=</a>(<a class="code" href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString&lt;Size, A&gt;</a>&amp;&amp; rhs) noexcept</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    m_Data             = std::move(rhs.m_Data);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  }</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* GetAllocator() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordtype">void</span> Clear(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* GetData() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  xiiUInt32 GetElementCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  xiiUInt32 GetCharacterCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordtype">bool</span> IsPureASCII() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">void</span> ToUpper(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordtype">void</span> ToLower(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordtype">void</span> ChangeCharacter(iterator&amp; ref_it, xiiUInt32 uiCharacter); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keywordtype">void</span> Set(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData1, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData2 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData3 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData4 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData5 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData6 = {});</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordtype">void</span> SetSubString_FromTo(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* pEnd);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="keywordtype">void</span> SetSubString_ElementCount(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, xiiUInt32 uiElementCount);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordtype">void</span> SetSubString_CharacterCount(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, xiiUInt32 uiCharacterCount);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="keywordtype">void</span> Append(xiiUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordtype">void</span> Append(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keywordtype">void</span> Append(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData1, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData2 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData3 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData4 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData5 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData6 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordtype">void</span> Prepend(xiiUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordtype">void</span> Prepend(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordtype">void</span> Prepend(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData1, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData2 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData3 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData4 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData5 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sData6 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordtype">void</span> Printf(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Format, ...); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordtype">void</span> PrintfArgs(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Format, va_list szArgs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  <span class="keywordtype">void</span> Format(<span class="keyword">const</span> <a class="code" href="../../da/d2e/classxii_format_string.htm">xiiFormatString</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a45a583817a994e6567d03d0b64eb7a34">  212</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a45a583817a994e6567d03d0b64eb7a34">Format</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ARGS&amp;&amp;... args)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    Format(<a class="code" href="../../d2/df5/classxii_format_string_impl.htm">xiiFormatStringImpl&lt;ARGS...&gt;</a>(szFormat, std::forward&lt;ARGS&gt;(args)...));</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keywordtype">void</span> AppendFormat(<span class="keyword">const</span> <a class="code" href="../../da/d2e/classxii_format_string.htm">xiiFormatString</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a3034a8fcb1467de39185a4211b50216c">  222</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a3034a8fcb1467de39185a4211b50216c">AppendFormat</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ARGS&amp;&amp;... args)</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    AppendFormat(<a class="code" href="../../d2/df5/classxii_format_string_impl.htm">xiiFormatStringImpl&lt;ARGS...&gt;</a>(szFormat, std::forward&lt;ARGS&gt;(args)...));</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  }</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keywordtype">void</span> PrependFormat(<span class="keyword">const</span> <a class="code" href="../../da/d2e/classxii_format_string.htm">xiiFormatString</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a name="l00232"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#a6a95be68f3234f1fae7cb7eeff447bd8">  232</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/dbb/classxii_string_builder.htm#a6a95be68f3234f1fae7cb7eeff447bd8">PrependFormat</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ARGS&amp;&amp;... args)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    PrependFormat(<a class="code" href="../../d2/df5/classxii_format_string_impl.htm">xiiFormatStringImpl&lt;ARGS...&gt;</a>(szFormat, std::forward&lt;ARGS&gt;(args)...));</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <span class="keywordtype">void</span> Shrink(xiiUInt32 uiShrinkCharsFront, xiiUInt32 uiShrinkCharsBack); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="keywordtype">void</span> Reserve(xiiUInt32 uiNumElements); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="keywordtype">void</span> ReplaceSubString(<span class="keyword">const</span> <span class="keywordtype">char</span>* szStartPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szEndPos, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplaceWith); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <span class="keywordtype">void</span> Insert(<span class="keyword">const</span> <span class="keywordtype">char</span>* szInsertAtPos, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sTextToInsert); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="keywordtype">void</span> Remove(<span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveFromPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveToPos); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceFirst(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceFirst_NoCase(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceLast(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceLast_NoCase(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  xiiUInt32 ReplaceAll(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplacement); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  xiiUInt32 ReplaceAll_NoCase(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplacement); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceWholeWord(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplaceWith, <a class="code" href="../../df/d65/classxii_string_utils.htm#af474cd805cbd076c00d508adacd057bd">xiiStringUtils::XII_CHARACTER_FILTER</a> isDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceWholeWord_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplaceWith, <a class="code" href="../../df/d65/classxii_string_utils.htm#af474cd805cbd076c00d508adacd057bd">xiiStringUtils::XII_CHARACTER_FILTER</a> isDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  xiiUInt32 ReplaceWholeWordAll(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplaceWith, <a class="code" href="../../df/d65/classxii_string_utils.htm#af474cd805cbd076c00d508adacd057bd">xiiStringUtils::XII_CHARACTER_FILTER</a> isDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  xiiUInt32 ReplaceWholeWordAll_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sReplaceWith, <a class="code" href="../../df/d65/classxii_string_utils.htm#af474cd805cbd076c00d508adacd057bd">xiiStringUtils::XII_CHARACTER_FILTER</a> isDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="keywordtype">void</span> ReadAll(<a class="code" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>&amp; ref_stream);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <span class="comment">// ******* Path Functions ********</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  <span class="keywordtype">void</span> MakeCleanPath(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  <span class="keywordtype">void</span> PathParentDirectory(xiiUInt32 uiLevelsUp = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  <span class="keywordtype">void</span> AppendPath(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath1, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath2 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath3 = {}, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPath4 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <span class="keywordtype">void</span> AppendWithSeparator(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sSeparator, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sText1, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sText2 = <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>(), <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sText3 = <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>(), <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sText4 = <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>(), <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sText5 = <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>(), <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sText6 = <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>());</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  <span class="keywordtype">void</span> ChangeFileName(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sNewFileName); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  <span class="keywordtype">void</span> ChangeFileNameAndExtension(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sNewFileNameWithExtension); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  <span class="keywordtype">void</span> ChangeFileExtension(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sNewExtension); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; </div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  <span class="keywordtype">void</span> RemoveFileExtension(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> MakeRelativeTo(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sAbsolutePathToMakeThisRelativeTo); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;  <span class="keywordtype">void</span> MakePathSeparatorsNative(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  <span class="keywordtype">bool</span> IsPathBelowFolder(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPathToFolder); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; </div>
<div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="../../d4/dbb/classxii_string_builder.htm#aab6bdc6adbaf905c2cf4146655198819">  372</a></span>&#160;  xiiUInt64 <a class="code" href="../../d4/dbb/classxii_string_builder.htm#aab6bdc6adbaf905c2cf4146655198819">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Data.GetHeapMemoryUsage(); }</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  <span class="keywordtype">void</span> Trim(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimChars); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160; </div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <span class="keywordtype">void</span> Trim(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsEnd); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160; </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  <span class="keywordtype">bool</span> TrimWordStart(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sWord); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  <span class="keywordtype">bool</span> TrimWordEnd(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sWord); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160; </div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;  <span class="keywordtype">void</span> RemoveDoubleSlashesInPath(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160; </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  <span class="keywordtype">void</span> ChangeCharacterNonASCII(iterator&amp; it, xiiUInt32 uiCharacter);</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  <span class="keywordtype">void</span> AppendTerminator();</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160; </div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;  <span class="comment">// needed for better copy construction</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  <span class="keyword">template</span> &lt;xiiUInt16 T&gt;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  <span class="keyword">friend</span> <span class="keyword">struct </span><a class="code" href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a>;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;  <span class="keyword">friend</span> <a class="code" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160; </div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;  xiiUInt32                 m_uiCharacterCount;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;  <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;char, 128&gt;</a> m_Data;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;};</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringBuilder_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_string_builder_htm_a11e70905bdd15ea5c95ddffa747cb145"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a11e70905bdd15ea5c95ddffa747cb145">xiiStringBuilder::operator=</a></div><div class="ttdeci">void operator=(xiiHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:120</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a72a50979eaf37519aad480626e0d5464"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a72a50979eaf37519aad480626e0d5464">xiiStringBuilder::operator=</a></div><div class="ttdeci">void operator=(xiiHybridString&lt; Size, A &gt; &amp;&amp;rhs) noexcept</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:128</div></div>
<div class="ttc" id="aclassxii_foundation_htm_a40d4e876d8aa817b36d04d0cac497fb8"><div class="ttname"><a href="../../dd/daf/classxii_foundation.htm#a40d4e876d8aa817b36d04d0cac497fb8">xiiFoundation::GetDefaultAllocator</a></div><div class="ttdeci">static XII_ALWAYS_INLINE xiiAllocatorBase * GetDefaultAllocator()</div><div class="ttdoc">The default allocator can be used for any kind of allocation if no alignment is required.</div><div class="ttdef"><b>Definition:</b> Basics.h:82</div></div>
<div class="ttc" id="astructxii_string_base_htm"><div class="ttname"><a href="../../d2/d29/structxii_string_base.htm">xiiStringBase</a></div><div class="ttdoc">Base class for strings, which implements all read-only string functions.</div><div class="ttdef"><b>Definition:</b> StringBase.h:13</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a6306bb897169fdf80b0e23db3500d448"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a6306bb897169fdf80b0e23db3500d448">xiiStringBuilder::xiiStringBuilder</a></div><div class="ttdeci">xiiStringBuilder(const xiiHybridStringBase&lt; Size &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:48</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_adce1d8a490a101786c7e66834ca77b93"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#adce1d8a490a101786c7e66834ca77b93">xiiStringBuilder::xiiStringBuilder</a></div><div class="ttdeci">xiiStringBuilder(const xiiHybridString&lt; Size, A &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:55</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_aab6bdc6adbaf905c2cf4146655198819"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#aab6bdc6adbaf905c2cf4146655198819">xiiStringBuilder::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:372</div></div>
<div class="ttc" id="astructxii_hybrid_string_htm"><div class="ttname"><a href="../../df/dfb/structxii_hybrid_string.htm">xiiHybridString</a></div><div class="ttdef"><b>Definition:</b> Stream.h:16</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt; char, 128 &gt;</a></div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a47b420a146dd5a9f64f59ac31716507b"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a47b420a146dd5a9f64f59ac31716507b">xiiStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const xiiHybridStringBase&lt; Size &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:104</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a45a583817a994e6567d03d0b64eb7a34"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a45a583817a994e6567d03d0b64eb7a34">xiiStringBuilder::Format</a></div><div class="ttdeci">void Format(const char *szFormat, ARGS &amp;&amp;... args)</div><div class="ttdoc">Replaces this with a formatted string. Uses '{}' formatting placeholders, see xiiFormatString for det...</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:212</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a98bdbaf20f43b7840ab2d9b7ae9c9118"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a98bdbaf20f43b7840ab2d9b7ae9c9118">xiiStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const xiiHybridString&lt; Size, A &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:112</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a6a95be68f3234f1fae7cb7eeff447bd8"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a6a95be68f3234f1fae7cb7eeff447bd8">xiiStringBuilder::PrependFormat</a></div><div class="ttdeci">void PrependFormat(const char *szFormat, ARGS &amp;&amp;... args)</div><div class="ttdoc">Prepends a formatted string. Uses '{}' formatting placeholders, see xiiFormatString for details.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:232</div></div>
<div class="ttc" id="aclassxii_stream_reader_htm"><div class="ttname"><a href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:21</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a3034a8fcb1467de39185a4211b50216c"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a3034a8fcb1467de39185a4211b50216c">xiiStringBuilder::AppendFormat</a></div><div class="ttdeci">void AppendFormat(const char *szFormat, ARGS &amp;&amp;... args)</div><div class="ttdoc">Appends a formatted string. Uses '{}' formatting placeholders, see xiiFormatString for details.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:222</div></div>
<div class="ttc" id="aclassxii_format_string_htm"><div class="ttname"><a href="../../da/d2e/classxii_format_string.htm">xiiFormatString</a></div><div class="ttdoc">Implements formating of strings with placeholders and formatting options.</div><div class="ttdef"><b>Definition:</b> FormatString.h:54</div></div>
<div class="ttc" id="aclassxii_string_utils_htm_af474cd805cbd076c00d508adacd057bd"><div class="ttname"><a href="../../df/d65/classxii_string_utils.htm#af474cd805cbd076c00d508adacd057bd">xiiStringUtils::XII_CHARACTER_FILTER</a></div><div class="ttdeci">bool(*)(xiiUInt32 uiChar) XII_CHARACTER_FILTER</div><div class="ttdoc">Function Definition for a function that determines whether a (Utf32) character belongs to a certain c...</div><div class="ttdef"><b>Definition:</b> StringUtils.h:206</div></div>
<div class="ttc" id="aclassxii_format_string_impl_htm"><div class="ttname"><a href="../../d2/df5/classxii_format_string_impl.htm">xiiFormatStringImpl</a></div><div class="ttdef"><b>Definition:</b> FormatStringImpl.h:8</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:54</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a583ac27cd0632bf08c084c0a6502fe83"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a583ac27cd0632bf08c084c0a6502fe83">xiiStringBuilder::xiiStringBuilder</a></div><div class="ttdeci">xiiStringBuilder(xiiHybridString&lt; Size, A &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:70</div></div>
<div class="ttc" id="astructxii_hybrid_string_base_htm"><div class="ttname"><a href="../../df/d4f/structxii_hybrid_string_base.htm">xiiHybridStringBase</a></div><div class="ttdoc">A string class for storing and passing around strings.</div><div class="ttdef"><b>Definition:</b> String.h:27</div></div>
<div class="ttc" id="aclassxii_string_builder_htm"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a></div><div class="ttdoc">xiiStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="aclassxii_string_builder_htm_a0c044d863e4c2ceccf8ea36a364b3aad"><div class="ttname"><a href="../../d4/dbb/classxii_string_builder.htm#a0c044d863e4c2ceccf8ea36a364b3aad">xiiStringBuilder::xiiStringBuilder</a></div><div class="ttdeci">xiiStringBuilder(xiiHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:63</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b0d9e1007714c8956662e529025ab552.htm">Strings</a></li><li class="navelem"><b>StringBuilder.h</b></li>
    <li class="footer">Generated on Tue Nov 14 2023 07:45:52 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
