<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiTransformTemplate&lt; Type &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d5/d13/classxii_transform_template.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d0/dd6/classxii_transform_template-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiTransformTemplate&lt; Type &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A class that represents position, rotation and scaling via a position vector, a quaternion and a scale vector.  
 <a href="../../d5/d13/classxii_transform_template.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/d56/_transform_8h_source.htm">Transform.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a34467a5bc7cc93f9b9a0e7057b3cd2fd"><td class="memItemLeft" align="right" valign="top"><a id="a34467a5bc7cc93f9b9a0e7057b3cd2fd"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ComponentType</b> = Type</td></tr>
<tr class="separator:a34467a5bc7cc93f9b9a0e7057b3cd2fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abcaa99c183b2b7e36a71bc41504a43b0"><td class="memItemLeft" align="right" valign="top"><a id="abcaa99c183b2b7e36a71bc41504a43b0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:abcaa99c183b2b7e36a71bc41504a43b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac27efcd528f8d8fcedae8a557fa2753e"><td class="memItemLeft" align="right" valign="top"><a id="ac27efcd528f8d8fcedae8a557fa2753e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#ac27efcd528f8d8fcedae8a557fa2753e">xiiTransformTemplate</a> ()=default</td></tr>
<tr class="memdesc:ac27efcd528f8d8fcedae8a557fa2753e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor: Does not do any initialization. <br /></td></tr>
<tr class="separator:ac27efcd528f8d8fcedae8a557fa2753e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc9c45f3aaecc379266bd0e9491911c3"><td class="memItemLeft" align="right" valign="top"><a id="afc9c45f3aaecc379266bd0e9491911c3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#afc9c45f3aaecc379266bd0e9491911c3">xiiTransformTemplate</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vPosition, const <a class="el" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a>&lt; Type &gt; &amp;qRotation=<a class="el" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a>&lt; Type &gt;::IdentityQuaternion(), const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vScale=<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;(1))</td></tr>
<tr class="memdesc:afc9c45f3aaecc379266bd0e9491911c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets position and rotation. <br /></td></tr>
<tr class="separator:afc9c45f3aaecc379266bd0e9491911c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebafcbcf8590f912d2e6d419383c780c"><td class="memItemLeft" align="right" valign="top"><a id="aebafcbcf8590f912d2e6d419383c780c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#aebafcbcf8590f912d2e6d419383c780c">SetFromMat4</a> (const <a class="el" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template</a>&lt; Type &gt; &amp;mMat)</td></tr>
<tr class="memdesc:aebafcbcf8590f912d2e6d419383c780c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Attempts to extract position, scale and rotation from the matrix. Negative scaling and shearing will get lost in the process. <br /></td></tr>
<tr class="separator:aebafcbcf8590f912d2e6d419383c780c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44e06a8cc7377e41f52049dab22ebcbf"><td class="memItemLeft" align="right" valign="top"><a id="a44e06a8cc7377e41f52049dab22ebcbf"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a44e06a8cc7377e41f52049dab22ebcbf">SetIdentity</a> ()</td></tr>
<tr class="memdesc:a44e06a8cc7377e41f52049dab22ebcbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the position to be zero and the rotation to identity. <br /></td></tr>
<tr class="separator:a44e06a8cc7377e41f52049dab22ebcbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a253a2035630ccd15b1c5d39a9a5d5826"><td class="memItemLeft" align="right" valign="top"><a id="a253a2035630ccd15b1c5d39a9a5d5826"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a253a2035630ccd15b1c5d39a9a5d5826">GetMaxScale</a> () const</td></tr>
<tr class="memdesc:a253a2035630ccd15b1c5d39a9a5d5826"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the scale component with maximum magnitude. <br /></td></tr>
<tr class="separator:a253a2035630ccd15b1c5d39a9a5d5826"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33662d5ecbe759b7b29cf3e14f456652"><td class="memItemLeft" align="right" valign="top"><a id="a33662d5ecbe759b7b29cf3e14f456652"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a33662d5ecbe759b7b29cf3e14f456652">ContainsNegativeScale</a> () const</td></tr>
<tr class="memdesc:a33662d5ecbe759b7b29cf3e14f456652"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this transform contains negative scaling aka mirroring. <br /></td></tr>
<tr class="separator:a33662d5ecbe759b7b29cf3e14f456652"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a425ad7398ce0d3d84707b7b6ee7c04a6"><td class="memItemLeft" align="right" valign="top"><a id="a425ad7398ce0d3d84707b7b6ee7c04a6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a425ad7398ce0d3d84707b7b6ee7c04a6">ContainsUniformScale</a> () const</td></tr>
<tr class="memdesc:a425ad7398ce0d3d84707b7b6ee7c04a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this transform contains uniform scaling. <br /></td></tr>
<tr class="separator:a425ad7398ce0d3d84707b7b6ee7c04a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45eb6fe689f441aea3fa9fdab05ad91b"><td class="memItemLeft" align="right" valign="top"><a id="a45eb6fe689f441aea3fa9fdab05ad91b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a45eb6fe689f441aea3fa9fdab05ad91b">IsIdentical</a> (const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a45eb6fe689f441aea3fa9fdab05ad91b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality Check (bitwise) <br /></td></tr>
<tr class="separator:a45eb6fe689f441aea3fa9fdab05ad91b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae7aa3f59b94d2c080f9ae4bfefb444d"><td class="memItemLeft" align="right" valign="top"><a id="aae7aa3f59b94d2c080f9ae4bfefb444d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#aae7aa3f59b94d2c080f9ae4bfefb444d">IsEqual</a> (const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate</a> &amp;rhs, Type fEpsilon) const</td></tr>
<tr class="memdesc:aae7aa3f59b94d2c080f9ae4bfefb444d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality Check with epsilon. <br /></td></tr>
<tr class="separator:aae7aa3f59b94d2c080f9ae4bfefb444d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1351dca4ceb5c54ddfbaab055a46968e"><td class="memItemLeft" align="right" valign="top"><a id="a1351dca4ceb5c54ddfbaab055a46968e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a1351dca4ceb5c54ddfbaab055a46968e">Invert</a> ()</td></tr>
<tr class="memdesc:a1351dca4ceb5c54ddfbaab055a46968e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inverts this transform. <br /></td></tr>
<tr class="separator:a1351dca4ceb5c54ddfbaab055a46968e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70ed1d718e1e7b27e52b3d43113de7d5"><td class="memItemLeft" align="right" valign="top"><a id="a70ed1d718e1e7b27e52b3d43113de7d5"></a>
const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a70ed1d718e1e7b27e52b3d43113de7d5">GetInverse</a> () const</td></tr>
<tr class="memdesc:a70ed1d718e1e7b27e52b3d43113de7d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the inverse of this transform. <br /></td></tr>
<tr class="separator:a70ed1d718e1e7b27e52b3d43113de7d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36a35049b6989f075e8771082194fcbb"><td class="memItemLeft" align="right" valign="top"><a id="a36a35049b6989f075e8771082194fcbb"></a>
<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>TransformPosition</b> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;v) const</td></tr>
<tr class="separator:a36a35049b6989f075e8771082194fcbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65d24a1050c26b6e626f625914797565"><td class="memItemLeft" align="right" valign="top"><a id="a65d24a1050c26b6e626f625914797565"></a>
<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>TransformDirection</b> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;v) const</td></tr>
<tr class="separator:a65d24a1050c26b6e626f625914797565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6def2ae113afac2c6bbed04e05102d87"><td class="memItemLeft" align="right" valign="top"><a id="a6def2ae113afac2c6bbed04e05102d87"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;v)</td></tr>
<tr class="separator:a6def2ae113afac2c6bbed04e05102d87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a3c5e3997b637f226b3f1161cac953"><td class="memItemLeft" align="right" valign="top"><a id="a64a3c5e3997b637f226b3f1161cac953"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;v)</td></tr>
<tr class="separator:a64a3c5e3997b637f226b3f1161cac953"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69615c191cfadcb8869f114b51ed81ea"><td class="memItemLeft" align="right" valign="top"><a id="a69615c191cfadcb8869f114b51ed81ea"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a69615c191cfadcb8869f114b51ed81ea">SetLocalTransform</a> (const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate</a> &amp;globalTransformParent, const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate</a> &amp;globalTransformChild)</td></tr>
<tr class="memdesc:a69615c191cfadcb8869f114b51ed81ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets this transform to be the local transformation needed to get from the parent's transform to the child's. <br /></td></tr>
<tr class="separator:a69615c191cfadcb8869f114b51ed81ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a922779422cb31f6bf0ec05ef3bd5a298"><td class="memItemLeft" align="right" valign="top"><a id="a922779422cb31f6bf0ec05ef3bd5a298"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a922779422cb31f6bf0ec05ef3bd5a298">SetGlobalTransform</a> (const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate</a> &amp;globalTransformParent, const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate</a> &amp;localTransformChild)</td></tr>
<tr class="memdesc:a922779422cb31f6bf0ec05ef3bd5a298"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets this transform to the global transform, that is reached by applying the child's local transform to the parent's global one. <br /></td></tr>
<tr class="separator:a922779422cb31f6bf0ec05ef3bd5a298"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e7c0d80aebfb786dd22d57b98f415dc"><td class="memItemLeft" align="right" valign="top"><a id="a9e7c0d80aebfb786dd22d57b98f415dc"></a>
const <a class="el" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a9e7c0d80aebfb786dd22d57b98f415dc">GetAsMat4</a> () const</td></tr>
<tr class="memdesc:a9e7c0d80aebfb786dd22d57b98f415dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the transformation as a matrix. <br /></td></tr>
<tr class="separator:a9e7c0d80aebfb786dd22d57b98f415dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a67c04fa12ed0e23fee11be05df1d801d"><td class="memItemLeft" align="right" valign="top"><a id="a67c04fa12ed0e23fee11be05df1d801d"></a>
static const <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d13/classxii_transform_template.htm#a67c04fa12ed0e23fee11be05df1d801d">IdentityTransform</a> ()</td></tr>
<tr class="memdesc:a67c04fa12ed0e23fee11be05df1d801d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Identity Transform. <br /></td></tr>
<tr class="separator:a67c04fa12ed0e23fee11be05df1d801d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:adca09d3129d8d58d9998eb49bb65587c"><td class="memItemLeft" align="right" valign="top"><a id="adca09d3129d8d58d9998eb49bb65587c"></a>
<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_vPosition</b></td></tr>
<tr class="separator:adca09d3129d8d58d9998eb49bb65587c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78464bfa8dac10f0c2af517583701e17"><td class="memItemLeft" align="right" valign="top"><a id="a78464bfa8dac10f0c2af517583701e17"></a>
<a class="el" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_qRotation</b></td></tr>
<tr class="separator:a78464bfa8dac10f0c2af517583701e17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a05a77e148447123f241d65aaf3e900"><td class="memItemLeft" align="right" valign="top"><a id="a4a05a77e148447123f241d65aaf3e900"></a>
<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_vScale</b></td></tr>
<tr class="separator:a4a05a77e148447123f241d65aaf3e900"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename Type&gt;<br />
class xiiTransformTemplate&lt; Type &gt;</h3>

<p>A class that represents position, rotation and scaling via a position vector, a quaternion and a scale vector. </p>
<dl class="todo"><dt><b><a class="el" href="../../dd/da0/todo.htm#_todo000030">Todo:</a></b></dt><dd>Fix docs and unit tests </dd></dl>
<p>Scale is applied first, then rotation and finally translation is added. Thus scale and rotation are always in 'local space', i.e. applying a rotation to the <a class="el" href="../../d5/d13/classxii_transform_template.htm" title="A class that represents position, rotation and scaling via a position vector, a quaternion and a scal...">xiiTransformTemplate</a> will rotate objects in place around their local center. Since the translation is added afterwards, the translation component is always the global center position, around which objects rotate.</p>
<p>The functions <a class="el" href="../../d5/d13/classxii_transform_template.htm#a69615c191cfadcb8869f114b51ed81ea" title="Sets this transform to be the local transformation needed to get from the parent&#39;s transform to the c...">SetLocalTransform()</a> and <a class="el" href="../../d5/d13/classxii_transform_template.htm#a922779422cb31f6bf0ec05ef3bd5a298" title="Sets this transform to the global transform, that is reached by applying the child&#39;s local transform ...">SetGlobalTransform()</a> allow to create transforms that either represent the full global transformation of an object, factoring its parent's transform in, or the local transformation that will get you from the parent's global transformation to the current global transformation of a child (i.e. only the difference). This is particularly useful when editing entities in a hierarchical structure.</p>
<p>This representation cannot handle shearing, which means rotations and scalings cannot be combined correctly. Many parts of game engine cannot handle shearing or non-uniform scaling across hierarchies anyway. Therefore this class implements a simplified way of combining scalings when multiplying two xiiTransform's. Instead of rotating scale into the proper space, the two values are simply multiplied component-wise.</p>
<p>In situations where this is insufficient, use a 3x3 or 4x4 matrix instead. Sometimes it is sufficient to use the matrix for the computation and the result can be stored in a transform again. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Math/<a class="el" href="../../d4/dbc/_engine_2_foundation_2_math_2_declarations_8h_source.htm">Declarations.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Math/<a class="el" href="../../db/d56/_transform_8h_source.htm">Transform.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Math/Implementation/<a class="el" href="../../de/dfe/_transform__inl_8h_source.htm">Transform_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate</a></li>
    <li class="footer">Generated on Sun Dec 10 2023 03:58:39 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
