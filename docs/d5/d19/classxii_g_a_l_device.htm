<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiGALDevice Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d5/d19/classxii_g_a_l_device.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../de/d60/classxii_g_a_l_device-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiGALDevice Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The xiiRenderDevice class is the primary interface for interactions with rendering APIs. It contains a set of (non-virtual) functions to set state, create resources etc. which rely on API specific implementations provided by protected virtual functions. Redundant state changes are prevented at the platform independent level in the non-virtual functions.  
 <a href="../../d5/d19/classxii_g_a_l_device.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d7/d8b/_device_8h_source.htm">Device.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a64fd727410fb0d83a90f5b7999feaf7b"><td class="memItemLeft" align="right" valign="top"><a id="a64fd727410fb0d83a90f5b7999feaf7b"></a>
<a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Initialize</b> ()</td></tr>
<tr class="separator:a64fd727410fb0d83a90f5b7999feaf7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74d0e7690e6d814b3341b65f6ec5af35"><td class="memItemLeft" align="right" valign="top"><a id="a74d0e7690e6d814b3341b65f6ec5af35"></a>
<a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Shutdown</b> ()</td></tr>
<tr class="separator:a74d0e7690e6d814b3341b65f6ec5af35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc7eab665af8fc6c508a32f77c6d08f7"><td class="memItemLeft" align="right" valign="top"><a id="acc7eab665af8fc6c508a32f77c6d08f7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>BeginPipeline</b> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> Name, <a class="el" href="../../de/dc7/classxii_g_a_l_swap_chain_handle.htm">xiiGALSwapChainHandle</a> hSwapChain)</td></tr>
<tr class="separator:acc7eab665af8fc6c508a32f77c6d08f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac58c75e3dcc1f29a6990f2370a4aea03"><td class="memItemLeft" align="right" valign="top"><a id="ac58c75e3dcc1f29a6990f2370a4aea03"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EndPipeline</b> (<a class="el" href="../../de/dc7/classxii_g_a_l_swap_chain_handle.htm">xiiGALSwapChainHandle</a> hSwapChain)</td></tr>
<tr class="separator:ac58c75e3dcc1f29a6990f2370a4aea03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad047f9f8072c6f5b75bb836d4670e0e"><td class="memItemLeft" align="right" valign="top"><a id="aad047f9f8072c6f5b75bb836d4670e0e"></a>
xiiGALPass *&#160;</td><td class="memItemRight" valign="bottom"><b>BeginPass</b> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> Name)</td></tr>
<tr class="separator:aad047f9f8072c6f5b75bb836d4670e0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1976fdaa37a58892fe830e308170e19f"><td class="memItemLeft" align="right" valign="top"><a id="a1976fdaa37a58892fe830e308170e19f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EndPass</b> (xiiGALPass *pPass)</td></tr>
<tr class="separator:a1976fdaa37a58892fe830e308170e19f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91802801bbde1b3c5789aebc174d81ed"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d51/classxii_g_a_l_blend_state_handle.htm">xiiGALBlendStateHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a91802801bbde1b3c5789aebc174d81ed">CreateBlendState</a> (const <a class="el" href="../../d6/dd7/structxii_g_a_l_blend_state_creation_description.htm">xiiGALBlendStateCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:a91802801bbde1b3c5789aebc174d81ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new blend state object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#a91802801bbde1b3c5789aebc174d81ed">More...</a><br /></td></tr>
<tr class="separator:a91802801bbde1b3c5789aebc174d81ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6538807d119fc6c60af983074eb587e0"><td class="memItemLeft" align="right" valign="top"><a id="a6538807d119fc6c60af983074eb587e0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a6538807d119fc6c60af983074eb587e0">DestroyBlendState</a> (<a class="el" href="../../d2/d51/classxii_g_a_l_blend_state_handle.htm">xiiGALBlendStateHandle</a> hBlendState)</td></tr>
<tr class="memdesc:a6538807d119fc6c60af983074eb587e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the blend state with the given handle. <br /></td></tr>
<tr class="separator:a6538807d119fc6c60af983074eb587e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9fb60f15f195693dee119e984722272"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/dce/classxii_g_a_l_depth_stencil_state_handle.htm">xiiGALDepthStencilStateHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#af9fb60f15f195693dee119e984722272">CreateDepthStencilState</a> (const <a class="el" href="../../d8/d3c/structxii_g_a_l_depth_stencil_state_creation_description.htm">xiiGALDepthStencilStateCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:af9fb60f15f195693dee119e984722272"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new depth stencil state object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#af9fb60f15f195693dee119e984722272">More...</a><br /></td></tr>
<tr class="separator:af9fb60f15f195693dee119e984722272"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fe12db201bf51065f671a97cf8a544a"><td class="memItemLeft" align="right" valign="top"><a id="a9fe12db201bf51065f671a97cf8a544a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a9fe12db201bf51065f671a97cf8a544a">DestroyDepthStencilState</a> (<a class="el" href="../../de/dce/classxii_g_a_l_depth_stencil_state_handle.htm">xiiGALDepthStencilStateHandle</a> hDepthStencilState)</td></tr>
<tr class="memdesc:a9fe12db201bf51065f671a97cf8a544a"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the depth stencil state with the given handle. <br /></td></tr>
<tr class="separator:a9fe12db201bf51065f671a97cf8a544a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7986c4a43b5570160b5f9956f0ea96f7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/d86/classxii_g_a_l_rasterizer_state_handle.htm">xiiGALRasterizerStateHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a7986c4a43b5570160b5f9956f0ea96f7">CreateRasterizerState</a> (const <a class="el" href="../../d2/d58/structxii_g_a_l_rasterizer_state_creation_description.htm">xiiGALRasterizerStateCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:a7986c4a43b5570160b5f9956f0ea96f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new rasterizer state object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#a7986c4a43b5570160b5f9956f0ea96f7">More...</a><br /></td></tr>
<tr class="separator:a7986c4a43b5570160b5f9956f0ea96f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad8d90f24286dfae7d44d5cc3e2f6777"><td class="memItemLeft" align="right" valign="top"><a id="aad8d90f24286dfae7d44d5cc3e2f6777"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#aad8d90f24286dfae7d44d5cc3e2f6777">DestroyRasterizerState</a> (<a class="el" href="../../de/d86/classxii_g_a_l_rasterizer_state_handle.htm">xiiGALRasterizerStateHandle</a> hRasterizerState)</td></tr>
<tr class="memdesc:aad8d90f24286dfae7d44d5cc3e2f6777"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the rasterizer state with the given handle. <br /></td></tr>
<tr class="separator:aad8d90f24286dfae7d44d5cc3e2f6777"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20c8c3900bad1dcf9a832b242e654bcb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d71/classxii_g_a_l_shader_handle.htm">xiiGALShaderHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a20c8c3900bad1dcf9a832b242e654bcb">CreateShader</a> (const <a class="el" href="../../d3/d51/structxii_g_a_l_shader_creation_description.htm">xiiGALShaderCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:a20c8c3900bad1dcf9a832b242e654bcb"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new shader object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#a20c8c3900bad1dcf9a832b242e654bcb">More...</a><br /></td></tr>
<tr class="separator:a20c8c3900bad1dcf9a832b242e654bcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad85481f3cf1bfad8b1617650c29d4aa1"><td class="memItemLeft" align="right" valign="top"><a id="ad85481f3cf1bfad8b1617650c29d4aa1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#ad85481f3cf1bfad8b1617650c29d4aa1">DestroyShader</a> (<a class="el" href="../../d9/d71/classxii_g_a_l_shader_handle.htm">xiiGALShaderHandle</a> hShader)</td></tr>
<tr class="memdesc:ad85481f3cf1bfad8b1617650c29d4aa1"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the shader with the given handle. <br /></td></tr>
<tr class="separator:ad85481f3cf1bfad8b1617650c29d4aa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc86e9b79d8502a48365d64df5896e19"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d1/dba/classxii_g_a_l_buffer_handle.htm">xiiGALBufferHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#acc86e9b79d8502a48365d64df5896e19">CreateBuffer</a> (const <a class="el" href="../../d7/d69/structxii_g_a_l_buffer_creation_description.htm">xiiGALBufferCreationDescription</a> &amp;description, const <a class="el" href="../../da/dce/structxii_g_a_l_buffer_data.htm">xiiGALBufferData</a> *pInitialData=nullptr)</td></tr>
<tr class="memdesc:acc86e9b79d8502a48365d64df5896e19"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new buffer object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#acc86e9b79d8502a48365d64df5896e19">More...</a><br /></td></tr>
<tr class="separator:acc86e9b79d8502a48365d64df5896e19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afde8c47d1072f19026940985baba395a"><td class="memItemLeft" align="right" valign="top"><a id="afde8c47d1072f19026940985baba395a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#afde8c47d1072f19026940985baba395a">DestroyBuffer</a> (<a class="el" href="../../d1/dba/classxii_g_a_l_buffer_handle.htm">xiiGALBufferHandle</a> hBuffer)</td></tr>
<tr class="memdesc:afde8c47d1072f19026940985baba395a"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the buffer with the given handle. <br /></td></tr>
<tr class="separator:afde8c47d1072f19026940985baba395a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5288a25743624dbbdbe2678fefe81ba"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../df/de3/classxii_g_a_l_texture_handle.htm">xiiGALTextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#ad5288a25743624dbbdbe2678fefe81ba">CreateTexture</a> (const <a class="el" href="../../de/dd4/structxii_g_a_l_texture_creation_description.htm">xiiGALTextureCreationDescription</a> &amp;description, const <a class="el" href="../../dc/de1/structxii_g_a_l_texture_data.htm">xiiGALTextureData</a> *pInitialData=nullptr)</td></tr>
<tr class="memdesc:ad5288a25743624dbbdbe2678fefe81ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new texture object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#ad5288a25743624dbbdbe2678fefe81ba">More...</a><br /></td></tr>
<tr class="separator:ad5288a25743624dbbdbe2678fefe81ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb5d8e014a6dedefc705c4dbb060477c"><td class="memItemLeft" align="right" valign="top"><a id="acb5d8e014a6dedefc705c4dbb060477c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#acb5d8e014a6dedefc705c4dbb060477c">DestroyTexture</a> (<a class="el" href="../../df/de3/classxii_g_a_l_texture_handle.htm">xiiGALTextureHandle</a> hTexture)</td></tr>
<tr class="memdesc:acb5d8e014a6dedefc705c4dbb060477c"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the texture with the given handle. <br /></td></tr>
<tr class="separator:acb5d8e014a6dedefc705c4dbb060477c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34e2e06aa2c41ccc21e91be2f738bcb1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dfe/classxii_g_a_l_sampler_handle.htm">xiiGALSamplerHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a34e2e06aa2c41ccc21e91be2f738bcb1">CreateSampler</a> (const <a class="el" href="../../d6/dbe/structxii_g_a_l_sampler_creation_description.htm">xiiGALSamplerCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:a34e2e06aa2c41ccc21e91be2f738bcb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new sampler object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#a34e2e06aa2c41ccc21e91be2f738bcb1">More...</a><br /></td></tr>
<tr class="separator:a34e2e06aa2c41ccc21e91be2f738bcb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b2ad4769f0188d4c3c44d8c585b39ab"><td class="memItemLeft" align="right" valign="top"><a id="a2b2ad4769f0188d4c3c44d8c585b39ab"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a2b2ad4769f0188d4c3c44d8c585b39ab">DestroySampler</a> (<a class="el" href="../../da/dfe/classxii_g_a_l_sampler_handle.htm">xiiGALSamplerHandle</a> hSamplerState)</td></tr>
<tr class="memdesc:a2b2ad4769f0188d4c3c44d8c585b39ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the sampler with the given handle. <br /></td></tr>
<tr class="separator:a2b2ad4769f0188d4c3c44d8c585b39ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b8be15b8f270081c79df99ab29acf37"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d4/da5/classxii_g_a_l_input_layout_handle.htm">xiiGALInputLayoutHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a9b8be15b8f270081c79df99ab29acf37">CreateVertexDeclaration</a> (const <a class="el" href="../../d2/dee/structxii_g_a_l_input_layout_creation_description.htm">xiiGALInputLayoutCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:a9b8be15b8f270081c79df99ab29acf37"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new input layout object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#a9b8be15b8f270081c79df99ab29acf37">More...</a><br /></td></tr>
<tr class="separator:a9b8be15b8f270081c79df99ab29acf37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab52142f9364e8f104908fc77d9b2dffa"><td class="memItemLeft" align="right" valign="top"><a id="ab52142f9364e8f104908fc77d9b2dffa"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#ab52142f9364e8f104908fc77d9b2dffa">DestroyVertexDeclaration</a> (<a class="el" href="../../d4/da5/classxii_g_a_l_input_layout_handle.htm">xiiGALInputLayoutHandle</a> hInputLayout)</td></tr>
<tr class="memdesc:ab52142f9364e8f104908fc77d9b2dffa"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the input layout with the given handle. <br /></td></tr>
<tr class="separator:ab52142f9364e8f104908fc77d9b2dffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae02ba69d45c8533b912025e7f9ac11e8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d1/dbd/classxii_g_a_l_query_handle.htm">xiiGALQueryHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#ae02ba69d45c8533b912025e7f9ac11e8">CreateQuery</a> (const <a class="el" href="../../d3/d4e/structxii_g_a_l_query_creation_description.htm">xiiGALQueryCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:ae02ba69d45c8533b912025e7f9ac11e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new query object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#ae02ba69d45c8533b912025e7f9ac11e8">More...</a><br /></td></tr>
<tr class="separator:ae02ba69d45c8533b912025e7f9ac11e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a259933d57e3568553f0213f46c28fc75"><td class="memItemLeft" align="right" valign="top"><a id="a259933d57e3568553f0213f46c28fc75"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a259933d57e3568553f0213f46c28fc75">DestroyQuery</a> (<a class="el" href="../../d1/dbd/classxii_g_a_l_query_handle.htm">xiiGALQueryHandle</a> hQuery)</td></tr>
<tr class="memdesc:a259933d57e3568553f0213f46c28fc75"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the sampler with the given handle. <br /></td></tr>
<tr class="separator:a259933d57e3568553f0213f46c28fc75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a6dbf0613f78b54454e14fb40bed114"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dd/dc8/classxii_g_a_l_fence_handle.htm">xiiGALFenceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a6a6dbf0613f78b54454e14fb40bed114">CreateFence</a> (const <a class="el" href="../../dd/d6c/structxii_g_a_l_fence_creation_description.htm">xiiGALFenceCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:a6a6dbf0613f78b54454e14fb40bed114"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new fence object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#a6a6dbf0613f78b54454e14fb40bed114">More...</a><br /></td></tr>
<tr class="separator:a6a6dbf0613f78b54454e14fb40bed114"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac345e648ac70046b5ad3a5345b26d22f"><td class="memItemLeft" align="right" valign="top"><a id="ac345e648ac70046b5ad3a5345b26d22f"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#ac345e648ac70046b5ad3a5345b26d22f">DestroyFence</a> (<a class="el" href="../../dd/dc8/classxii_g_a_l_fence_handle.htm">xiiGALFenceHandle</a> hFence)</td></tr>
<tr class="memdesc:ac345e648ac70046b5ad3a5345b26d22f"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the fence with the given handle. <br /></td></tr>
<tr class="separator:ac345e648ac70046b5ad3a5345b26d22f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22d22a04beabd4a6f52ca1ac62b74050"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dd/dce/classxii_g_a_l_render_pass_handle.htm">xiiGALRenderPassHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a22d22a04beabd4a6f52ca1ac62b74050">CreateRenderPass</a> (const <a class="el" href="../../db/dc5/structxii_g_a_l_render_pass_creation_description.htm">xiiGALRenderPassCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:a22d22a04beabd4a6f52ca1ac62b74050"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new render pass object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#a22d22a04beabd4a6f52ca1ac62b74050">More...</a><br /></td></tr>
<tr class="separator:a22d22a04beabd4a6f52ca1ac62b74050"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a234de85e1aa511d7cca96a8bfa24e691"><td class="memItemLeft" align="right" valign="top"><a id="a234de85e1aa511d7cca96a8bfa24e691"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a234de85e1aa511d7cca96a8bfa24e691">DestroyRenderPass</a> (<a class="el" href="../../dd/dce/classxii_g_a_l_render_pass_handle.htm">xiiGALRenderPassHandle</a> hRenderPass)</td></tr>
<tr class="memdesc:a234de85e1aa511d7cca96a8bfa24e691"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the render pass with the given handle. <br /></td></tr>
<tr class="separator:a234de85e1aa511d7cca96a8bfa24e691"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e0d31ea9a65b724b4f2de4349c9c055"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dd/d03/classxii_g_a_l_framebuffer_handle.htm">xiiGALFramebufferHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a8e0d31ea9a65b724b4f2de4349c9c055">CreateFramebuffer</a> (const <a class="el" href="../../db/dd3/structxii_g_a_l_framebuffer_creation_description.htm">xiiGALFramebufferCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:a8e0d31ea9a65b724b4f2de4349c9c055"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new frame buffer object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#a8e0d31ea9a65b724b4f2de4349c9c055">More...</a><br /></td></tr>
<tr class="separator:a8e0d31ea9a65b724b4f2de4349c9c055"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3006e078e1b77fb2e85c50fc7dff4a1"><td class="memItemLeft" align="right" valign="top"><a id="ae3006e078e1b77fb2e85c50fc7dff4a1"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#ae3006e078e1b77fb2e85c50fc7dff4a1">DestroyFramebuffer</a> (<a class="el" href="../../dd/d03/classxii_g_a_l_framebuffer_handle.htm">xiiGALFramebufferHandle</a> hFramebuffer)</td></tr>
<tr class="memdesc:ae3006e078e1b77fb2e85c50fc7dff4a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the frame buffer with the given handle. <br /></td></tr>
<tr class="separator:ae3006e078e1b77fb2e85c50fc7dff4a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0de5f6cf7ec3f6169427c3b2a0a031ea"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d5/d6e/classxii_g_a_l_bottom_level_a_s_handle.htm">xiiGALBottomLevelASHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a0de5f6cf7ec3f6169427c3b2a0a031ea">CreateBottomLevelAS</a> (const <a class="el" href="../../d9/d69/structxii_g_a_l_bottom_level_a_s_creation_description.htm">xiiGALBottomLevelASCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:a0de5f6cf7ec3f6169427c3b2a0a031ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new bottom-level acceleration structure object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#a0de5f6cf7ec3f6169427c3b2a0a031ea">More...</a><br /></td></tr>
<tr class="separator:a0de5f6cf7ec3f6169427c3b2a0a031ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa1e61c99969fad1e43d324ff724e856"><td class="memItemLeft" align="right" valign="top"><a id="afa1e61c99969fad1e43d324ff724e856"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#afa1e61c99969fad1e43d324ff724e856">DestroyBottomLevelAS</a> (<a class="el" href="../../d5/d6e/classxii_g_a_l_bottom_level_a_s_handle.htm">xiiGALBottomLevelASHandle</a> hBottomLevelAS)</td></tr>
<tr class="memdesc:afa1e61c99969fad1e43d324ff724e856"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the bottom-level acceleration structure with the given handle. <br /></td></tr>
<tr class="separator:afa1e61c99969fad1e43d324ff724e856"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee54f9b23342d7007de01c9359cf322e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d5/dde/classxii_g_a_l_top_level_a_s_handle.htm">xiiGALTopLevelASHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#aee54f9b23342d7007de01c9359cf322e">CreateTopLevelAS</a> (const <a class="el" href="../../df/d85/structxii_g_a_l_top_level_a_s_creation_description.htm">xiiGALTopLevelASCreationDescription</a> &amp;description)</td></tr>
<tr class="memdesc:aee54f9b23342d7007de01c9359cf322e"><td class="mdescLeft">&#160;</td><td class="mdescRight">This creates a new top-level acceleration structure object.  <a href="../../d5/d19/classxii_g_a_l_device.htm#aee54f9b23342d7007de01c9359cf322e">More...</a><br /></td></tr>
<tr class="separator:aee54f9b23342d7007de01c9359cf322e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a8ff076e983a2509f6a2cb5b2ef9e1b"><td class="memItemLeft" align="right" valign="top"><a id="a8a8ff076e983a2509f6a2cb5b2ef9e1b"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a8a8ff076e983a2509f6a2cb5b2ef9e1b">DestroyTopLevelAS</a> (<a class="el" href="../../d5/dde/classxii_g_a_l_top_level_a_s_handle.htm">xiiGALTopLevelASHandle</a> hTopLevelAS)</td></tr>
<tr class="memdesc:a8a8ff076e983a2509f6a2cb5b2ef9e1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This destroys the top-level acceleration structure with the given handle. <br /></td></tr>
<tr class="separator:a8a8ff076e983a2509f6a2cb5b2ef9e1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05894d7fa443821db0aa6de5ebf5704"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#ac05894d7fa443821db0aa6de5ebf5704">WaitIdle</a> ()</td></tr>
<tr class="memdesc:ac05894d7fa443821db0aa6de5ebf5704"><td class="mdescLeft">&#160;</td><td class="mdescRight">Waits until all outstanding operations on the GPU are complete and destroys any pending resources and GPU objects.  <a href="../../d5/d19/classxii_g_a_l_device.htm#ac05894d7fa443821db0aa6de5ebf5704">More...</a><br /></td></tr>
<tr class="separator:ac05894d7fa443821db0aa6de5ebf5704"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:acd044fd51830264d0283493008d98440"><td class="memItemLeft" align="right" valign="top"><a id="acd044fd51830264d0283493008d98440"></a>
<a class="el" href="../../dc/d22/classxii_event.htm">xiiEvent</a>&lt; const <a class="el" href="../../df/d20/structxii_g_a_l_device_event.htm">xiiGALDeviceEvent</a> &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Events</b></td></tr>
<tr class="separator:acd044fd51830264d0283493008d98440"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The xiiRenderDevice class is the primary interface for interactions with rendering APIs. It contains a set of (non-virtual) functions to set state, create resources etc. which rely on API specific implementations provided by protected virtual functions. Redundant state changes are prevented at the platform independent level in the non-virtual functions. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a91802801bbde1b3c5789aebc174d81ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91802801bbde1b3c5789aebc174d81ed">&#9670;&nbsp;</a></span>CreateBlendState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d51/classxii_g_a_l_blend_state_handle.htm">xiiGALBlendStateHandle</a> xiiGALDevice::CreateBlendState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/dd7/structxii_g_a_l_blend_state_creation_description.htm">xiiGALBlendStateCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This creates a new blend state object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The blend state description. See <a class="el" href="../../d6/dd7/structxii_g_a_l_blend_state_creation_description.htm" title="This describes the blend state for all render targets in the graphics pipeline.">xiiGALBlendStateCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created blend state object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="a0de5f6cf7ec3f6169427c3b2a0a031ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0de5f6cf7ec3f6169427c3b2a0a031ea">&#9670;&nbsp;</a></span>CreateBottomLevelAS()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d5/d6e/classxii_g_a_l_bottom_level_a_s_handle.htm">xiiGALBottomLevelASHandle</a> xiiGALDevice::CreateBottomLevelAS </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d9/d69/structxii_g_a_l_bottom_level_a_s_creation_description.htm">xiiGALBottomLevelASCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This creates a new bottom-level acceleration structure object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The bottom-level acceleration structure description. See <a class="el" href="../../d9/d69/structxii_g_a_l_bottom_level_a_s_creation_description.htm" title="This describes bottom level acceleration structure creation description.">xiiGALBottomLevelASCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created bottom-level acceleration structure object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="acc86e9b79d8502a48365d64df5896e19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc86e9b79d8502a48365d64df5896e19">&#9670;&nbsp;</a></span>CreateBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d1/dba/classxii_g_a_l_buffer_handle.htm">xiiGALBufferHandle</a> xiiGALDevice::CreateBuffer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d7/d69/structxii_g_a_l_buffer_creation_description.htm">xiiGALBufferCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../da/dce/structxii_g_a_l_buffer_data.htm">xiiGALBufferData</a> *&#160;</td>
          <td class="paramname"><em>pInitialData</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This creates a new buffer object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The buffer description. See <a class="el" href="../../d7/d69/structxii_g_a_l_buffer_creation_description.htm" title="This describes the buffer creation description.">xiiGALBufferCreationDescription</a>. </td></tr>
    <tr><td class="paramname">pInitialData</td><td>- The pointer to the <a class="el" href="../../da/dce/structxii_g_a_l_buffer_data.htm" title="This describes the buffer initial data.">xiiGALBufferData</a> structure that describes the initial buffer data or nullptr if no data is provided. Immutable buffers (<a class="el" href="../../d9/d9e/structxii_g_a_l_resource_usage.htm#aa3f7d7b5b5d7b94f2e8f6b55eb5fa7dca6e4b1377bb0bd053c657f1c1b62fe4e2">xiiGALResourceUsage::Immutable</a>) must be initialized during creation.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created buffer object. The function calls AddRef(), so that the new object will have one reference.</dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>Size of a uniform buffer (<a class="el" href="../../d6/d24/structxii_g_a_l_bind_flags.htm" title="This describes which parts of the pipeline a resource can be bound to. It generally mirrors D3D11_BIN...">xiiGALBindFlags</a>) must be multiple of 16.<br  />
Stride of a formatted buffer will be computed automatically from the format if the m_uiElementByteStride member of buffer description is set to default value (0). </dd></dl>

</div>
</div>
<a id="af9fb60f15f195693dee119e984722272"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9fb60f15f195693dee119e984722272">&#9670;&nbsp;</a></span>CreateDepthStencilState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/dce/classxii_g_a_l_depth_stencil_state_handle.htm">xiiGALDepthStencilStateHandle</a> xiiGALDevice::CreateDepthStencilState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/d3c/structxii_g_a_l_depth_stencil_state_creation_description.htm">xiiGALDepthStencilStateCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This creates a new depth stencil state object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The depth stencil state description. See <a class="el" href="../../d8/d3c/structxii_g_a_l_depth_stencil_state_creation_description.htm" title="This describes the depth stencil state creation description.">xiiGALDepthStencilStateCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created depth stencil state object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="a6a6dbf0613f78b54454e14fb40bed114"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a6dbf0613f78b54454e14fb40bed114">&#9670;&nbsp;</a></span>CreateFence()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../dd/dc8/classxii_g_a_l_fence_handle.htm">xiiGALFenceHandle</a> xiiGALDevice::CreateFence </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../dd/d6c/structxii_g_a_l_fence_creation_description.htm">xiiGALFenceCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This creates a new fence object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The fence description. See <a class="el" href="../../dd/d6c/structxii_g_a_l_fence_creation_description.htm" title="This describes the fence creation description.">xiiGALFenceCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created fence object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="a8e0d31ea9a65b724b4f2de4349c9c055"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e0d31ea9a65b724b4f2de4349c9c055">&#9670;&nbsp;</a></span>CreateFramebuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../dd/d03/classxii_g_a_l_framebuffer_handle.htm">xiiGALFramebufferHandle</a> xiiGALDevice::CreateFramebuffer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../db/dd3/structxii_g_a_l_framebuffer_creation_description.htm">xiiGALFramebufferCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This creates a new frame buffer object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The frame buffer description. See <a class="el" href="../../db/dd3/structxii_g_a_l_framebuffer_creation_description.htm" title="This describes the frame buffer creation description.">xiiGALFramebufferCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created frame buffer object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="ae02ba69d45c8533b912025e7f9ac11e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae02ba69d45c8533b912025e7f9ac11e8">&#9670;&nbsp;</a></span>CreateQuery()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d1/dbd/classxii_g_a_l_query_handle.htm">xiiGALQueryHandle</a> xiiGALDevice::CreateQuery </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d3/d4e/structxii_g_a_l_query_creation_description.htm">xiiGALQueryCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This creates a new query object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The query description. See <a class="el" href="../../d3/d4e/structxii_g_a_l_query_creation_description.htm" title="This describes the query creation description.">xiiGALQueryCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created query object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="a7986c4a43b5570160b5f9956f0ea96f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7986c4a43b5570160b5f9956f0ea96f7">&#9670;&nbsp;</a></span>CreateRasterizerState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/d86/classxii_g_a_l_rasterizer_state_handle.htm">xiiGALRasterizerStateHandle</a> xiiGALDevice::CreateRasterizerState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d58/structxii_g_a_l_rasterizer_state_creation_description.htm">xiiGALRasterizerStateCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This creates a new rasterizer state object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The rasterizer state description. See <a class="el" href="../../d2/d58/structxii_g_a_l_rasterizer_state_creation_description.htm" title="This describes the rasterize state creation description.">xiiGALRasterizerStateCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created rasterizer state object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="a22d22a04beabd4a6f52ca1ac62b74050"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22d22a04beabd4a6f52ca1ac62b74050">&#9670;&nbsp;</a></span>CreateRenderPass()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../dd/dce/classxii_g_a_l_render_pass_handle.htm">xiiGALRenderPassHandle</a> xiiGALDevice::CreateRenderPass </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../db/dc5/structxii_g_a_l_render_pass_creation_description.htm">xiiGALRenderPassCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This creates a new render pass object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The render pass description. See <a class="el" href="../../db/dc5/structxii_g_a_l_render_pass_creation_description.htm" title="This describes the render pass creation description.">xiiGALRenderPassCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created render pass object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="a34e2e06aa2c41ccc21e91be2f738bcb1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34e2e06aa2c41ccc21e91be2f738bcb1">&#9670;&nbsp;</a></span>CreateSampler()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dfe/classxii_g_a_l_sampler_handle.htm">xiiGALSamplerHandle</a> xiiGALDevice::CreateSampler </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/dbe/structxii_g_a_l_sampler_creation_description.htm">xiiGALSamplerCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This creates a new sampler object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The sampler description. See <a class="el" href="../../d6/dbe/structxii_g_a_l_sampler_creation_description.htm" title="This describes the sampler creation description.">xiiGALSamplerCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created sampler object. The function calls AddRef(), so that the new object will have one reference.</dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>If an application attempts to create a sampler interface with the same attributes as an existing interface, the same interface will be returned. </dd></dl>

</div>
</div>
<a id="a20c8c3900bad1dcf9a832b242e654bcb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a20c8c3900bad1dcf9a832b242e654bcb">&#9670;&nbsp;</a></span>CreateShader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/d71/classxii_g_a_l_shader_handle.htm">xiiGALShaderHandle</a> xiiGALDevice::CreateShader </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d3/d51/structxii_g_a_l_shader_creation_description.htm">xiiGALShaderCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This creates a new shader object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The shader description. See <a class="el" href="../../d3/d51/structxii_g_a_l_shader_creation_description.htm" title="This describes the shader creation description.">xiiGALShaderCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created shader object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="ad5288a25743624dbbdbe2678fefe81ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5288a25743624dbbdbe2678fefe81ba">&#9670;&nbsp;</a></span>CreateTexture()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/de3/classxii_g_a_l_texture_handle.htm">xiiGALTextureHandle</a> xiiGALDevice::CreateTexture </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../de/dd4/structxii_g_a_l_texture_creation_description.htm">xiiGALTextureCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dc/de1/structxii_g_a_l_texture_data.htm">xiiGALTextureData</a> *&#160;</td>
          <td class="paramname"><em>pInitialData</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This creates a new texture object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The texture description. See <a class="el" href="../../de/dd4/structxii_g_a_l_texture_creation_description.htm" title="This describes the texture creation description.">xiiGALTextureCreationDescription</a>. </td></tr>
    <tr><td class="paramname">pInitialData</td><td>- The pointer to the <a class="el" href="../../dc/de1/structxii_g_a_l_texture_data.htm" title="This describes the initial data to store in the texture.">xiiGALTextureData</a> structure that describes the initial texture data or nullptr if no data is provided. Immutable textures (<a class="el" href="../../d9/d9e/structxii_g_a_l_resource_usage.htm#aa3f7d7b5b5d7b94f2e8f6b55eb5fa7dca6e4b1377bb0bd053c657f1c1b62fe4e2">xiiGALResourceUsage::Immutable</a>) must be initialized during creation.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created texture object. The function calls AddRef(), so that the new object will have one reference.</dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>To create all mip levels, set the description.m_uiMipLevels to zero.<br  />
 Multi-sampled resources cannot be initialized with data when they are created. <br  />
If initial data is provided, number of sub-resources must exactly match the number of sub-resources in the texture (which is the number of mip levels times the number of array slices. For a 3D texture, this is just the number of mip levels).</dd></dl>
<p>For example, for a 15 x 6 x 2 2D texture array, the following array of sub-resources should be provided: <br  />
 15x6, 7x3, 3x1, 1x1, 15x6, 7x3, 3x1, 1x1.<br  />
For a 15 x 6 x 4 3D texture, the following array of sub-resources should be provided:<br  />
 15x6x4, 7x3x2, 3x1x1, 1x1x1 </p>

</div>
</div>
<a id="aee54f9b23342d7007de01c9359cf322e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee54f9b23342d7007de01c9359cf322e">&#9670;&nbsp;</a></span>CreateTopLevelAS()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d5/dde/classxii_g_a_l_top_level_a_s_handle.htm">xiiGALTopLevelASHandle</a> xiiGALDevice::CreateTopLevelAS </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/d85/structxii_g_a_l_top_level_a_s_creation_description.htm">xiiGALTopLevelASCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This creates a new top-level acceleration structure object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The top-level acceleration structure description. See <a class="el" href="../../df/d85/structxii_g_a_l_top_level_a_s_creation_description.htm" title="This describes the top level acceleration structure creation description.">xiiGALTopLevelASCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created top-level acceleration structure object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="a9b8be15b8f270081c79df99ab29acf37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b8be15b8f270081c79df99ab29acf37">&#9670;&nbsp;</a></span>CreateVertexDeclaration()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d4/da5/classxii_g_a_l_input_layout_handle.htm">xiiGALInputLayoutHandle</a> xiiGALDevice::CreateVertexDeclaration </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/dee/structxii_g_a_l_input_layout_creation_description.htm">xiiGALInputLayoutCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>description</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This creates a new input layout object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">description</td><td>- The input layout description. See <a class="el" href="../../d2/dee/structxii_g_a_l_input_layout_creation_description.htm" title="This describes the input layout creation description.">xiiGALInputLayoutCreationDescription</a>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The handle to the created input layout object. The function calls AddRef(), so that the new object will have one reference. </dd></dl>

</div>
</div>
<a id="ac05894d7fa443821db0aa6de5ebf5704"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac05894d7fa443821db0aa6de5ebf5704">&#9670;&nbsp;</a></span>WaitIdle()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiGALDevice::WaitIdle </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Waits until all outstanding operations on the GPU are complete and destroys any pending resources and GPU objects. </p>
<dl class="section note"><dt>Note</dt><dd>The method blocks the execution of the calling thread until the GPU is idle.</dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>The method does not flush immediate contexts, so it will only wait for commands that have been previously submitted for execution. An application should explicitly flush the contexts using xiiGALCommandEncoder::Flush() if it needs to make sure all recorded commands are complete when the method returns. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/GraphicsFoundation/Device/<a class="el" href="../../d7/d8b/_device_8h_source.htm">Device.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d5/d19/classxii_g_a_l_device.htm">xiiGALDevice</a></li>
    <li class="footer">Generated on Thu Aug 17 2023 14:05:58 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
