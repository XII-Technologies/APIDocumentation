<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: Todo List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/da0/todo.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="PageDoc"><div class="header">
  <div class="headertitle">
<div class="title">Todo List </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><dl class="reflist">
<dt>Member <a class="el" href="../../d0/d32/classxii_application_file_system_config.htm#a9f76491cfdf8cfd386942c70b1974fe6">xiiApplicationFileSystemConfig::Load</a>  (const char *szPath=":project/DataDirectories.ddl")</dt>
<dd><a class="anchor" id="_todo000031"></a>Temp fix for backwards compatibility  </dd>
<dt>Class <a class="el" href="../../db/d16/structxii_array_map_base_1_1_pair.htm">xiiArrayMapBase&lt; KEY, VALUE &gt;::Pair</a>  </dt>
<dd><a class="anchor" id="_todo000038"></a>Custom comparer  </dd>
<dt>Member <a class="el" href="../../d7/dd5/classxii_asset_document.htm#a9f0d29ba1d1d21cfb935b82f6c5e7fa1">xiiAssetDocument::InternalAfterSaveDocument</a>  () override</dt>
<dd><a class="anchor" id="_todo000002"></a>Should only be done for platform agnostic assets  </dd>
<dt>Member <a class="el" href="../../d7/dd5/classxii_asset_document.htm#ae758f8542a048d796e1a826b82f066ac">xiiAssetDocument::SaveThumbnail</a>  (const <a class="el" href="../../d4/d6a/classxii_image.htm" title="A class containing image data and associated meta data.">xiiImage</a> &amp;img, const <a class="el" href="../../db/d84/classxii_asset_document_1_1_thumbnail_info.htm" title="The thumbnail info containing the hash of the file is appended to assets. The serialized size of this...">ThumbnailInfo</a> &amp;thumbnailInfo) const</dt>
<dd><a class="anchor" id="_todo000003"></a>A conversion to B8G8R8X8_UNORM currently fails  </dd>
<dt>Member <a class="el" href="../../d1/d4f/classxii_chunk_stream_writer.htm#a25bb8c093562f1d1b4d8547fb47c0e25">xiiChunkStreamWriter::EndChunk</a>  ()</dt>
<dd><a class="anchor" id="_todo000042"></a>Write Chunk CRC  </dd>
<dt>Class <a class="el" href="../../db/d48/classxii_color_animation_component.htm">xiiColorAnimationComponent</a>  </dt>
<dd><p class="startdd"><a class="anchor" id="_todo000067"></a>Expose the <a class="el" href="../../dc/d8d/structxii_set_color_mode.htm">xiiSetColorMode</a> of the <a class="el" href="../../de/d10/structxii_msg_set_color.htm">xiiMsgSetColor</a> </p>
<p class="interdd">Add speed parameter </p>
<p class="interdd">Add loop mode (once, back-and-forth, loop) </p>
<p class="interdd">Add option to send message to whole sub-tree (SendMessageRecursive) </p>
<p class="enddd">Add on-finished (loop point) event  </p>
</dd>
<dt>Member <a class="el" href="../../de/d86/classxii_color_gradient.htm#aa6a8ebe4caef0eedb2e9fb9c55d4ccad">xiiColorGradient::EvaluateAlpha</a>  (double x, xiiUInt8 &amp;alpha) const</dt>
<dd><a class="anchor" id="_todo000063"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../de/d86/classxii_color_gradient.htm#ac329aec82876e817510556c3b45857ce">xiiColorGradient::EvaluateColor</a>  (double x, <a class="el" href="../../d3/de6/classxii_color.htm" title="xiiColor represents and RGBA color in linear color space. Values are stored as float,...">xiiColor</a> &amp;rgb) const</dt>
<dd><a class="anchor" id="_todo000062"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../de/d86/classxii_color_gradient.htm#aa49e0a1be801599dcaee28839a6be865">xiiColorGradient::EvaluateIntensity</a>  (double x, float &amp;intensity) const</dt>
<dd><a class="anchor" id="_todo000064"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../da/dcc/classxii_color_gradient_asset_data.htm#a84e15eab04039abb325582a8725ba1d6">xiiColorGradientAssetData::TickFromTime</a>  (<a class="el" href="../../d7/dc1/structxii_time.htm" title="The time class encapsulates a double value storing the time in seconds.">xiiTime</a> time)</dt>
<dd><a class="anchor" id="_todo000008"></a>Make this a property ?  </dd>
<dt>Member <a class="el" href="../../d0/df0/classxii_command_history.htm#a43d14879ba408eeabc94b8ea52e34b43">xiiCommandHistory::MergeLastTwoTransactions</a>  ()</dt>
<dd><a class="anchor" id="_todo000167"></a>This would not be necessary, if hierarchical transactions would not crash  </dd>
<dt>Member <a class="el" href="../../d0/df0/classxii_command_history.htm#aae30acefbe39545628650c28d38367fa">xiiCommandHistory::StartTransaction</a>  (const <a class="el" href="../../da/d2e/classxii_format_string.htm" title="Implements formating of strings with placeholders and formatting options.">xiiFormatString</a> &amp;sDisplayString)</dt>
<dd><a class="anchor" id="_todo000166"></a>Allow to have a limited transaction history and clean up transactions after a while  </dd>
<dt>Member <a class="el" href="../../d1/d87/classxii_curve1_d.htm#a541acbcab64b35a3b1a430cbd47c591f">xiiCurve1D::CreateLinearApproximation</a>  (double fMaxError=0.01, xiiUInt8 uiMaxSubDivs=8)</dt>
<dd><a class="anchor" id="_todo000065"></a>Since we do this, we actually don't need the linear approximation anymore and could just evaluate the full curve  </dd>
<dt>Member <a class="el" href="../../dd/df5/structxii_curve1_d_resource_descriptor.htm#a92a11d2fa4ddc183ea857cb93552b950">xiiCurve1DResourceDescriptor::Load</a>  (<a class="el" href="../../d4/d5e/classxii_stream_reader.htm" title="Interface for binary in (read) streams.">xiiStreamReader</a> &amp;stream)</dt>
<dd><a class="anchor" id="_todo000023"></a>We can do this on load, or somehow ensure this is always already correctly saved  </dd>
<dt>Member <a class="el" href="../../d9/d5d/classxii_dds_file_format.htm#ac61d05457059a49a0a7b097fa0400bed">xiiDdsFileFormat::WriteImage</a>  (<a class="el" href="../../d0/d18/classxii_stream_writer.htm" title="Interface for binary out (write) streams.">xiiStreamWriter</a> &amp;stream, const <a class="el" href="../../d6/d21/classxii_image_view.htm" title="A class referencing image data and holding metadata about the image.">xiiImageView</a> &amp;image, const char *szFileExtension) const override</dt>
<dd><a class="anchor" id="_todo000128"></a>sub-image size  </dd>
<dt>Member <a class="el" href="../../db/d08/classxii_decal_asset_document_generator.htm#a805b9909d0c3c7bc4913886d923c08f3">xiiDecalAssetDocumentGenerator::GetImportModes</a>  (const char *szParentDirRelativePath, <a class="el" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt; xiiAssetDocumentGenerator::Info, 4 &gt;</a> &amp;out_Modes) const override</dt>
<dd><a class="anchor" id="_todo000009"></a>Make this configurable  </dd>
<dt>Member <a class="el" href="../../da/dd8/classxii_document_object.htm#aa7f0cddf9c9fa76b5998d74c8bd697f8">xiiDocumentObject::IsOnHeap</a>  () const</dt>
<dd><a class="anchor" id="_todo000169"></a>Christopher: This crashes when the pointer is nullptr, which appears to be possible It happened for me when duplicating (CTRL+D) 2 objects 2 times then moving them and finally undoing everything  </dd>
<dt>Member <a class="el" href="../../db/dba/classxii_edit_action.htm#a635949a4c96b48922e47dfac0d5cb455">xiiEditAction::xiiEditAction</a>  (const <a class="el" href="../../d9/d45/structxii_action_context.htm">xiiActionContext</a> &amp;context, const char *szName, ButtonType button)</dt>
<dd><a class="anchor" id="_todo000162"></a>Icon  </dd>
<dt>Member <a class="el" href="../../db/d68/classxii_editor_shape_icons_extractor.htm#ae56875b56b3db8d384aa3e48cae2db04">xiiEditorShapeIconsExtractor::Extract</a>  (const <a class="el" href="../../dd/df1/classxii_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">xiiView</a> &amp;view, const <a class="el" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray&lt; const xiiGameObject * &gt;</a> &amp;visibleObjects, <a class="el" href="../../d9/db2/classxii_extracted_render_data.htm">xiiExtractedRenderData</a> &amp;extractedRenderData) override</dt>
<dd><a class="anchor" id="_todo000022"></a>Once we have a solution for objects that only have a shape icon we can switch this loop to use visibleObjects instead.  </dd>
<dt>Member <a class="el" href="../../db/d21/classxii_fileserve_client.htm#a2fee6763358b5a6b164585b1ed6a0d59">xiiFileserveClient::EnsureConnected</a>  (<a class="el" href="../../d7/dc1/structxii_time.htm" title="The time class encapsulates a double value storing the time in seconds.">xiiTime</a> timeout=<a class="el" href="../../d7/dc1/structxii_time.htm#a0d30e51875577941d5f0e312d7041c76" title="Creates an instance of xiiTime that was initialized from seconds.">xiiTime::Seconds</a>(-5))</dt>
<dd><a class="anchor" id="_todo000129"></a>Somehow abstract this away ?  </dd>
<dt>Member <a class="el" href="../../db/d21/classxii_fileserve_client.htm#aa9f41d6e31057c1ef14b6092d43bc90a">xiiFileserveClient::WaitForServerInfo</a>  (<a class="el" href="../../d7/dc1/structxii_time.htm" title="The time class encapsulates a double value storing the time in seconds.">xiiTime</a> timeout=<a class="el" href="../../d7/dc1/structxii_time.htm#a0d30e51875577941d5f0e312d7041c76" title="Creates an instance of xiiTime that was initialized from seconds.">xiiTime::Seconds</a>(60.0 *5))</dt>
<dd><a class="anchor" id="_todo000131"></a>Abstract this somehow ?  </dd>
<dt>Member <a class="el" href="../../d7/d0a/classxii_file_system.htm#acc36415d6cd65d5733a5f77cfacbd396">xiiFileSystem::ResolvePath</a>  (const char *szPath, <a class="el" href="../../d4/dbb/classxii_string_builder.htm" title="xiiStringBuilder is a class that is meant for creating and modifying strings.">xiiStringBuilder</a> *out_sAbsolutePath, <a class="el" href="../../d4/dbb/classxii_string_builder.htm" title="xiiStringBuilder is a class that is meant for creating and modifying strings.">xiiStringBuilder</a> *out_sDataDirRelativePath, <a class="el" href="../../de/d33/classxii_data_directory_type.htm" title="The base class for all data directory types.">xiiDataDirectoryType</a> **out_ppDataDir=nullptr)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000040"></a>We might also need the none-redirected path as an output </p>
<p class="enddd"><a class="anchor" id="_todo000041"></a>We might also need the none-redirected path as an output  </p>
</dd>
<dt>Member <a class="el" href="../../d3/d34/classxii_g_a_l_command_encoder.htm#a67dffb41bb674fc29a26641b3fb990b0">xiiGALCommandEncoder::SetResourceView</a>  (xiiGALShaderStage::Enum Stage, xiiUInt32 uiSlot, <a class="el" href="../../dc/de0/classxii_g_a_l_resource_view_handle.htm">xiiGALResourceViewHandle</a> hResourceView)</dt>
<dd><a class="anchor" id="_todo000099"></a>Check if the device supports the stage / the slot index  </dd>
<dt>Member <a class="el" href="../../d3/d34/classxii_g_a_l_command_encoder.htm#ac470babc00619e3caa33b37ee6fc9a38">xiiGALCommandEncoder::SetShader</a>  (<a class="el" href="../../d9/d71/classxii_g_a_l_shader_handle.htm">xiiGALShaderHandle</a> hShader)</dt>
<dd><a class="anchor" id="_todo000098"></a>Assert for shader capabilities (supported shader stages etc.)  </dd>
<dt>Member <a class="el" href="../../d3/d34/classxii_g_a_l_command_encoder.htm#a27acf8e65e0d2b6110cb28df5c6058cc">xiiGALCommandEncoder::SetUnorderedAccessView</a>  (xiiUInt32 uiSlot, <a class="el" href="../../d0/d76/classxii_g_a_l_unordered_access_view_handle.htm">xiiGALUnorderedAccessViewHandle</a> hUnorderedAccessView)</dt>
<dd><a class="anchor" id="_todo000100"></a>Check if the device supports the stage / the slot index  </dd>
<dt>Member <a class="el" href="../../d1/dda/classxii_g_a_l_command_encoder_impl_diligent.htm#a59ca3783812d9c8aebdca2abcea84fe6">xiiGALCommandEncoderImplDiligent::SetSamplerStatePlatform</a>  (xiiGALShaderStage::Enum Stage, xiiUInt32 uiSlot, const <a class="el" href="../../da/d71/classxii_g_a_l_sampler_state.htm">xiiGALSamplerState</a> *pSamplerState) override</dt>
<dd><a class="anchor" id="_todo000089"></a>Check if the device supports the stage / the slot index  </dd>
<dt>Member <a class="el" href="../../d6/d29/classxii_g_a_l_command_encoder_impl_d_x11.htm#add6460faab027d69f1791582be61884d">xiiGALCommandEncoderImplDX11::ReadbackTexturePlatform</a>  (const <a class="el" href="../../d3/d9a/classxii_g_a_l_texture.htm">xiiGALTexture</a> *pTexture) override</dt>
<dd><a class="anchor" id="_todo000093"></a>Other mip levels etc?  </dd>
<dt>Member <a class="el" href="../../d6/d29/classxii_g_a_l_command_encoder_impl_d_x11.htm#a1d999ad4c0bb08a852e62b0dbdfc669b">xiiGALCommandEncoderImplDX11::SetConstantBufferPlatform</a>  (xiiUInt32 uiSlot, const <a class="el" href="../../da/d03/classxii_g_a_l_buffer.htm">xiiGALBuffer</a> *pBuffer) override</dt>
<dd><a class="anchor" id="_todo000091"></a>Check if the device supports the slot index?  </dd>
<dt>Member <a class="el" href="../../d6/d29/classxii_g_a_l_command_encoder_impl_d_x11.htm#adc165417bcda3ee081316a304a365999">xiiGALCommandEncoderImplDX11::SetSamplerStatePlatform</a>  (xiiGALShaderStage::Enum Stage, xiiUInt32 uiSlot, const <a class="el" href="../../da/d71/classxii_g_a_l_sampler_state.htm">xiiGALSamplerState</a> *pSamplerState) override</dt>
<dd><a class="anchor" id="_todo000092"></a>Check if the device supports the stage / the slot index  </dd>
<dt>Member <a class="el" href="../../d8/d2c/classxii_g_a_l_compute_command_encoder.htm#a6c49d29368271939072c140d617869ae">xiiGALComputeCommandEncoder::Dispatch</a>  (xiiUInt32 uiThreadGroupCountX, xiiUInt32 uiThreadGroupCountY, xiiUInt32 uiThreadGroupCountZ)</dt>
<dd><a class="anchor" id="_todo000101"></a>Assert for compute  </dd>
<dt>Member <a class="el" href="../../d8/d2c/classxii_g_a_l_compute_command_encoder.htm#a005ff4ef836d2f286e778e06ff2e8f2e">xiiGALComputeCommandEncoder::DispatchIndirect</a>  (<a class="el" href="../../d1/dba/classxii_g_a_l_buffer_handle.htm">xiiGALBufferHandle</a> hIndirectArgumentBuffer, xiiUInt32 uiArgumentOffsetInBytes)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000102"></a>Assert for compute </p>
<p class="interdd"><a class="anchor" id="_todo000103"></a>Assert for indirect dispatch </p>
<p class="interdd"><a class="anchor" id="_todo000104"></a>Assert offset &lt; buffer size </p>
<p class="enddd"><a class="anchor" id="_todo000105"></a>Assert that the buffer can be used for indirect arguments (flag in desc)  </p>
</dd>
<dt>Member <a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a49273c4b5ef6352ec2065b9a2f3e18ce">xiiGALDevice::CreateBuffer</a>  (const <a class="el" href="../../d7/d69/structxii_g_a_l_buffer_creation_description.htm">xiiGALBufferCreationDescription</a> &amp;Description, <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt; const xiiUInt8 &gt;</a> pInitialData=<a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt; const xiiUInt8 &gt;()</a>)</dt>
<dd><a class="anchor" id="_todo000123"></a>Platform independent validation (buffer type supported)  </dd>
<dt>Member <a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a17eaed615e28e0a14f83ae92c335e2f5">xiiGALDevice::CreateRenderTargetView</a>  (const <a class="el" href="../../d4/dd9/structxii_g_a_l_render_target_view_creation_description.htm">xiiGALRenderTargetViewCreationDescription</a> &amp;Description)</dt>
<dd><a class="anchor" id="_todo000125"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a1840f3e348baae5ca553cad6137f2a98">xiiGALDevice::CreateSamplerState</a>  (const <a class="el" href="../../de/d4e/structxii_g_a_l_sampler_state_creation_description.htm">xiiGALSamplerStateCreationDescription</a> &amp;Description)</dt>
<dd><a class="anchor" id="_todo000122"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#acce13d0fa0cf45f98a8cb19c1f9de2e0">xiiGALDevice::CreateTexture</a>  (const <a class="el" href="../../de/dd4/structxii_g_a_l_texture_creation_description.htm">xiiGALTextureCreationDescription</a> &amp;Description, <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt; xiiGALSystemMemoryDescription &gt;</a> pInitialData=<a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt; xiiGALSystemMemoryDescription &gt;()</a>)</dt>
<dd><a class="anchor" id="_todo000124"></a>Platform independent validation (desc width &amp; height &lt; platform maximum, format, etc.)  </dd>
<dt>Member <a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a965c6a260382a4bf086e5b1e835cc4ee">xiiGALDevice::CreateVertexDeclaration</a>  (const <a class="el" href="../../de/d7f/structxii_g_a_l_vertex_declaration_creation_description.htm">xiiGALVertexDeclarationCreationDescription</a> &amp;Description)</dt>
<dd><a class="anchor" id="_todo000126"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d5/d19/classxii_g_a_l_device.htm#a81721ad9def06846cb91b0a01742dcf5">xiiGALDevice::GetBackBufferTextureFromSwapChain</a>  (<a class="el" href="../../de/dc7/classxii_g_a_l_swap_chain_handle.htm">xiiGALSwapChainHandle</a> hSwapChain)</dt>
<dd><a class="anchor" id="_todo000121"></a>Map functions to save on memcpys  </dd>
<dt>Member <a class="el" href="../../dc/d77/classxii_g_a_l_render_command_encoder.htm#ad31be0e8712cecacd5dc508f442a4fc2">xiiGALRenderCommandEncoder::BeginStreamOut</a>  ()</dt>
<dd><a class="anchor" id="_todo000119"></a>Assert for streamout support  </dd>
<dt>Member <a class="el" href="../../dc/d77/classxii_g_a_l_render_command_encoder.htm#a0c26e0e7e57a222ae42a33260ace135b">xiiGALRenderCommandEncoder::Draw</a>  (xiiUInt32 uiVertexCount, xiiUInt32 uiStartVertex)</dt>
<dd><a class="anchor" id="_todo000106"></a>If platform indicates that non-indexed rendering is not possible bind a helper index buffer which contains continuous indices (0, 1, 2, ..)  </dd>
<dt>Member <a class="el" href="../../dc/d77/classxii_g_a_l_render_command_encoder.htm#ad97e1f4b999381c1065d17ed957d22be">xiiGALRenderCommandEncoder::DrawAuto</a>  ()</dt>
<dd><a class="anchor" id="_todo000118"></a>Assert for draw auto support  </dd>
<dt>Member <a class="el" href="../../dc/d77/classxii_g_a_l_render_command_encoder.htm#afbc3441f13f2c272729fb7c0c2baf596">xiiGALRenderCommandEncoder::DrawIndexedInstanced</a>  (xiiUInt32 uiIndexCountPerInstance, xiiUInt32 uiInstanceCount, xiiUInt32 uiStartIndex)</dt>
<dd><a class="anchor" id="_todo000107"></a>Assert for instancing  </dd>
<dt>Member <a class="el" href="../../dc/d77/classxii_g_a_l_render_command_encoder.htm#a405c82c1b37cabd29e460221e8ae7f48">xiiGALRenderCommandEncoder::DrawIndexedInstancedIndirect</a>  (<a class="el" href="../../d1/dba/classxii_g_a_l_buffer_handle.htm">xiiGALBufferHandle</a> hIndirectArgumentBuffer, xiiUInt32 uiArgumentOffsetInBytes)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000108"></a>Assert for instancing </p>
<p class="interdd"><a class="anchor" id="_todo000109"></a>Assert for indirect draw </p>
<p class="interdd"><a class="anchor" id="_todo000110"></a>Assert offset &lt; buffer size </p>
<p class="enddd"><a class="anchor" id="_todo000111"></a>Assert that the buffer can be used for indirect arguments (flag in desc)  </p>
</dd>
<dt>Member <a class="el" href="../../dc/d77/classxii_g_a_l_render_command_encoder.htm#a4ae87dbbde71a21f16a527a3ebe0099e">xiiGALRenderCommandEncoder::DrawInstanced</a>  (xiiUInt32 uiVertexCountPerInstance, xiiUInt32 uiInstanceCount, xiiUInt32 uiStartVertex)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000112"></a>Assert for instancing </p>
<p class="enddd"><a class="anchor" id="_todo000113"></a>If platform indicates that non-indexed rendering is not possible bind a helper index buffer which contains continuous indices (0, 1, 2, ..)  </p>
</dd>
<dt>Member <a class="el" href="../../dc/d77/classxii_g_a_l_render_command_encoder.htm#a5db4febb1f890b4ebf0492883979d8ee">xiiGALRenderCommandEncoder::DrawInstancedIndirect</a>  (<a class="el" href="../../d1/dba/classxii_g_a_l_buffer_handle.htm">xiiGALBufferHandle</a> hIndirectArgumentBuffer, xiiUInt32 uiArgumentOffsetInBytes)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000114"></a>Assert for instancing </p>
<p class="interdd"><a class="anchor" id="_todo000115"></a>Assert for indirect draw </p>
<p class="interdd"><a class="anchor" id="_todo000116"></a>Assert offset &lt; buffer size </p>
<p class="enddd"><a class="anchor" id="_todo000117"></a>Assert that the buffer can be used for indirect arguments (flag in desc)  </p>
</dd>
<dt>Member <a class="el" href="../../dc/d77/classxii_g_a_l_render_command_encoder.htm#addfd28fe9497e93fc5321256a136e717">xiiGALRenderCommandEncoder::SetIndexBuffer</a>  (<a class="el" href="../../d1/dba/classxii_g_a_l_buffer_handle.htm">xiiGALBufferHandle</a> hIndexBuffer)</dt>
<dd><a class="anchor" id="_todo000120"></a>Assert on index buffer type (if non nullptr)  </dd>
<dt>Member <a class="el" href="../../de/d10/structxii_g_a_l_resource_format.htm#a96dcef199b9268dddff76f98bc7305be">xiiGALResourceFormat::IsDepthFormat</a>  (xiiGALResourceFormat::Enum format)</dt>
<dd><a class="anchor" id="_todo000127"></a>A combination of propertyflags, something like srgb, normalized, ...  </dd>
<dt>Member <a class="el" href="../../d2/df1/classxii_g_a_l_swap_chain_d_x11.htm#a9877a07d44c0990cdf9cf2297632a92e">xiiGALSwapChainDX11::InitPlatform</a>  (<a class="el" href="../../d5/d19/classxii_g_a_l_device.htm" title="The xiiRenderDevice class is the primary interface for interactions with rendering APIs It contains a...">xiiGALDevice</a> *pDevice) override</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000094"></a>The mode switch needs to be handled (ResizeBuffers + communication with engine) </p>
<p class="interdd"><a class="anchor" id="_todo000095"></a>Get from MSAA value of the m_WindowDesc </p>
<p class="enddd"><a class="anchor" id="_todo000096"></a>Get from enumeration of available modes  </p>
</dd>
<dt>Member <a class="el" href="../../d0/d2a/classxii_g_a_l_texture_diligent.htm#a60d241fc3909031119b72ac42421577f">xiiGALTextureDiligent::InitPlatform</a>  (<a class="el" href="../../d5/d19/classxii_g_a_l_device.htm" title="The xiiRenderDevice class is the primary interface for interactions with rendering APIs It contains a...">xiiGALDevice</a> *pDevice, <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt; xiiGALSystemMemoryDescription &gt;</a> pInitialData) override</dt>
<dd><a class="anchor" id="_todo000090"></a>Validation if interface of corresponding texture object exists  </dd>
<dt>Member <a class="el" href="../../db/dd6/classxii_g_a_l_texture_d_x11.htm#a800d732fd5c4c9ccb103c04f657cb7f3">xiiGALTextureDX11::InitPlatform</a>  (<a class="el" href="../../d5/d19/classxii_g_a_l_device.htm" title="The xiiRenderDevice class is the primary interface for interactions with rendering APIs It contains a...">xiiGALDevice</a> *pDevice, <a class="el" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt; xiiGALSystemMemoryDescription &gt;</a> pInitialData) override</dt>
<dd><a class="anchor" id="_todo000097"></a>Validation if interface of corresponding texture object exists  </dd>
<dt>Member <a class="el" href="../../d1/ded/classxii_game_application.htm#a559c7bc7ae52997ab21c1d6481844c34">xiiGameApplication::Init_SetupDefaultResources</a>  () override</dt>
<dd><a class="anchor" id="_todo000072"></a>Loading Cubemap Texture  </dd>
<dt>Member <a class="el" href="../../d1/dbf/classxii_game_object_document.htm#a131b8b9138d71792518fb5ee810a7fc9">xiiGameObjectDocument::InvalidateGlobalTransformValue</a>  (const <a class="el" href="../../da/dd8/classxii_document_object.htm">xiiDocumentObject</a> *pObject) const</dt>
<dd><a class="anchor" id="_todo000004"></a>If all parents are always inserted as well, we can stop once an object is found that is not in the list  </dd>
<dt>Member <a class="el" href="../../d4/ded/classxii_game_object_gizmo_edit_tool.htm#a5f9e23993f565b20ceee07319e2e99a6">xiiGameObjectGizmoEditTool::UpdateGizmoTransformation</a>  ()</dt>
<dd><a class="anchor" id="_todo000006"></a>Pivot point  </dd>
<dt>Class <a class="el" href="../../d0/dcc/structxii_generic_id.htm">xiiGenericId&lt; InstanceIndexBits, GenerationBits &gt;</a>  </dt>
<dd><a class="anchor" id="_todo000066"></a>Document this better.  </dd>
<dt>Member <a class="el" href="../../d7/de9/classxii_jolt_actions.htm#a0095eecbdb653f265eac622114659167">xiiJoltActions::MapMenuActions</a>  ()</dt>
<dd><a class="anchor" id="_todo000017"></a>Is there a way to integrate into ALL document types in a specific menu (ie. project settings)  </dd>
<dt>Member <a class="el" href="../../da/dc0/classxii_jolt_mesh_resource.htm#ab772067bb317f1326230624c3ddb6f65">xiiJoltMeshResource::UnloadData</a>  (Unload WhatToUnload) override</dt>
<dd><a class="anchor" id="_todo000134"></a>Compute memory usage  </dd>
<dt>Member <a class="el" href="../../d6/d64/classxii_material_asset_document.htm#aa18de29e81fcdaba54c8fdbd545efeba">xiiMaterialAssetDocument::InternalTransformAsset</a>  (const char *szTargetFile, const char *szOutputTag, const <a class="el" href="../../d6/db6/classxii_platform_profile.htm">xiiPlatformProfile</a> *pAssetProfile, const <a class="el" href="../../d2/d2f/classxii_asset_file_header.htm" title="Simple class to handle asset file headers (the very first bytes in all transformed asset files)">xiiAssetFileHeader</a> &amp;AssetHeader, xiiBitflags&lt; xiiTransformFlags &gt; transformFlags) override</dt>
<dd><a class="anchor" id="_todo000010"></a>Rendering platform is currently hardcoded  </dd>
<dt>Member <a class="el" href="../../d6/d64/classxii_material_asset_document.htm#a11757b8c3f1ab31b8ab254e83989e333">xiiMaterialAssetDocument::UpdateAssetDocumentInfo</a>  (<a class="el" href="../../da/d03/classxii_asset_document_info.htm">xiiAssetDocumentInfo</a> *pInfo) const override</dt>
<dd><a class="anchor" id="_todo000011"></a>The Visual Shader node configuration files would need to be a dependency of the auto-generated shader.  </dd>
<dt>Member <a class="el" href="../../d0/d2b/classxii_mesh_resource_descriptor.htm#adf7133bbb1d2bc932933c397870b6e92">xiiMeshResourceDescriptor::Load</a>  (<a class="el" href="../../d4/d5e/classxii_stream_reader.htm" title="Interface for binary in (read) streams.">xiiStreamReader</a> &amp;stream)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000083"></a><a class="el" href="../../dd/df8/structxii_mesh_resource_descriptor_1_1_material.htm">Material</a> Path (relative to mesh file) </p>
<p class="enddd"><a class="anchor" id="_todo000084"></a>load from file  </p>
</dd>
<dt>Member <a class="el" href="../../d0/d2b/classxii_mesh_resource_descriptor.htm#a365af6fbdae9a2a9a081d23fef77a485">xiiMeshResourceDescriptor::Save</a>  (<a class="el" href="../../d0/d18/classxii_stream_writer.htm" title="Interface for binary out (write) streams.">xiiStreamWriter</a> &amp;stream)</dt>
<dd><a class="anchor" id="_todo000082"></a><a class="el" href="../../dd/df8/structxii_mesh_resource_descriptor_1_1_material.htm">Material</a> Path (relative to mesh file)  </dd>
<dt>Member <a class="el" href="../../d5/df7/classxii_open_ddl_parser.htm#ad3f80494c1fb43a6672fc60c08c246dc">xiiOpenDdlParser::OnPrimitiveBool</a>  (xiiUInt32 count, const bool *pData, bool bThisIsAll)=0</dt>
<dd><a class="anchor" id="_todo000049"></a>Currently not supported  </dd>
<dt>Member <a class="el" href="../../dc/d39/classxii_particle_behavior___color_gradient.htm#a58faccd08aea4aa1b9ddf0075cd4f0e3">xiiParticleBehavior_ColorGradient::Process</a>  (xiiUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000135"></a>Use level of detail to reduce the update interval further up close, with a high interval, animations appear choppy, especially when fading stuff out at the end  </dd>
<dt>Member <a class="el" href="../../de/def/classxii_particle_behavior___fade_out.htm#ad5d305f04c371150e2a10b1062588628">xiiParticleBehavior_FadeOut::Process</a>  (xiiUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000136"></a>Use level of detail to reduce the update interval further up close, with a high interval, animations appear choppy, especially when fading stuff out at the end  </dd>
<dt>Member <a class="el" href="../../d3/d39/classxii_particle_behavior___raycast.htm#ac28c02ffd144690a74979b8530f6e8c2">xiiParticleBehavior_Raycast::Process</a>  (xiiUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000137"></a>Get current element index from iterator ?  </dd>
<dt>Member <a class="el" href="../../d6/d02/classxii_particle_component.htm#a3342dbd8de0c6b3f71615b072b3bf373">xiiParticleComponent::SerializeComponent</a>  (<a class="el" href="../../de/d8c/classxii_world_writer.htm" title="Stores an entire xiiWorld in a stream.">xiiWorldWriter</a> &amp;stream) const override</dt>
<dd><a class="anchor" id="_todo000138"></a>store effect state  </dd>
<dt>Member <a class="el" href="../../db/dab/classxii_particle_effect_resource.htm#a6976de1ab6f7ba5ed5ffe4463213294f">xiiParticleEffectResource::UnloadData</a>  (Unload WhatToUnload) override</dt>
<dd><a class="anchor" id="_todo000140"></a>Clear something  </dd>
<dt>Member <a class="el" href="../../db/dab/classxii_particle_effect_resource.htm#affb8b29220a6bea14d3d44aac0bc5505">xiiParticleEffectResource::UpdateMemoryUsage</a>  (MemoryUsage &amp;out_NewMemoryUsage) override</dt>
<dd><a class="anchor" id="_todo000141"></a>Better statistics  </dd>
<dt>Member <a class="el" href="../../d5/de2/classxii_particle_finalizer___age.htm#a173988ec133e42caed80ac97aa1e1dc3">xiiParticleFinalizer_Age::Process</a>  (xiiUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000139"></a>Get current element index from iterator ?  </dd>
<dt>Member <a class="el" href="../../dc/d8a/classxii_particle_type_light.htm#a0ab7100a122d2f60dd10c15ce6f5cae6">xiiParticleTypeLight::CreateRequiredStreams</a>  () override</dt>
<dd><a class="anchor" id="_todo000142"></a>Initialize (instead of during extraction)  </dd>
<dt>Member <a class="el" href="../../da/df0/classxii_particle_type_trail.htm#a571ffaf9625949e3c6b08b7d66a8c3f3">xiiParticleTypeTrail::ExtractTypeRenderData</a>  (<a class="el" href="../../d3/d47/structxii_msg_extract_render_data.htm">xiiMsgExtractRenderData</a> &amp;msg, const xiiTransform &amp;instanceTransform) const override</dt>
<dd><a class="anchor" id="_todo000143"></a>This loop could be done without a condition  </dd>
<dt>Member <a class="el" href="../../da/df0/classxii_particle_type_trail.htm#a91314b012f6ba962d843a53f43104381">xiiParticleTypeTrail::GetMaxParticleRadius</a>  (float fParticleSize) const override</dt>
<dd><a class="anchor" id="_todo000144"></a>This is a hacky guess, one would actually need to inspect the trail positions  </dd>
<dt>Member <a class="el" href="../../da/df0/classxii_particle_type_trail.htm#a494ba27cf2d95e09368fd3f20c4f4a43">xiiParticleTypeTrail::m_TrailPoints64</a>  </dt>
<dd><a class="anchor" id="_todo000145"></a>Use a shared freelist across effects instead  </dd>
<dt>Member <a class="el" href="../../d6/dbf/classxii_phantom_rtti_manager.htm#a465764e703bc202cbe90bf8c7effbc22">xiiPhantomRttiManager::RegisterType</a>  (<a class="el" href="../../d2/d17/structxii_reflected_type_descriptor.htm" title="Stores the description of a reflected type in a serializable form. Used by xiiPhantomRttiManager to a...">xiiReflectedTypeDescriptor</a> &amp;desc)</dt>
<dd><a class="anchor" id="_todo000170"></a>Had to increase the recursion depth to allow registering phantom types that are based on actual types coming from the engine process  </dd>
<dt>Member <a class="el" href="../../de/d63/classxii_processing_stream.htm#a53b1472978bf60f6b1162998c49847a3">xiiProcessingStream::SetSize</a>  (xiiUInt64 uiNumElements)</dt>
<dd><a class="anchor" id="_todo000039"></a>Allow to reuse memory from a pool ?  </dd>
<dt>Member <a class="el" href="../../da/d5a/classxii_property_anim_component.htm#a4dab3cf0902793818e3e441a69d0b3fb">xiiPropertyAnimComponent::SerializeComponent</a>  (<a class="el" href="../../de/d8c/classxii_world_writer.htm" title="Stores an entire xiiWorld in a stream.">xiiWorldWriter</a> &amp;stream) const override</dt>
<dd><a class="anchor" id="_todo000068"></a>Somehow store the animation state (not necessary for new scenes, but for quicksaves)  </dd>
<dt>Member <a class="el" href="../../da/d0b/classxii_qt_color_gradient_widget.htm#a63e2abcee8bb41bb21b762f174c7fb14">xiiQtColorGradientWidget::mouseMoveEvent</a>  (QMouseEvent *event) override</dt>
<dd><a class="anchor" id="_todo000165"></a>Why not += ?  </dd>
<dt>Member <a class="el" href="../../d9/dca/classxii_qt_data_widget.htm#ab9d1081c699d6aec6e3dd7b80a0eff2f">xiiQtDataWidget::xiiQtDataWidget</a>  (QWidget *parent=0)</dt>
<dd><a class="anchor" id="_todo000159"></a>Improve Data Transfer UI  </dd>
<dt>Member <a class="el" href="../../dc/d1f/classxii_qt_duplicate_dlg.htm#a45526f622f275f83afe42d2a63f784c9">xiiQtDuplicateDlg::xiiQtDuplicateDlg</a>  (QWidget *parent=nullptr)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000020"></a>Boundingbox helper not implemented yet (get bbox size from selection) </p>
<p class="enddd"><a class="anchor" id="_todo000021"></a>Grouping of duplicates not implemented yet  </p>
</dd>
<dt>Member <a class="el" href="../../d3/d93/classxii_qt_engine_view_widget.htm#aa7cecfd4d87df827ac033ee310405ef0">xiiQtEngineViewWidget::UpdateCameraInterpolation</a>  ()</dt>
<dd><a class="anchor" id="_todo000005"></a>Hard coded up vector  </dd>
<dt>Member <a class="el" href="../../d8/dc8/classxii_qt_property_editor_tag_set_widget.htm#a78d6fcb623427fde74b3b4e540bca221">xiiQtPropertyEditorTagSetWidget::OnInit</a>  () override</dt>
<dd><a class="anchor" id="_todo000164"></a><a class="el" href="../../da/d9d/structxii_string_view.htm" title="xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...">xiiStringView</a> is POD? -&gt; array&lt;stringview&gt;::Remove(stringview) fails, because of memcmp  </dd>
<dt>Member <a class="el" href="../../d0/d1b/classxii_qt_reflection_widget.htm#a6b83bfff61cef1de1ac6a23727c709bc">xiiQtReflectionWidget::ProcessTelemetry</a>  (void *pUnuseed)</dt>
<dd><a class="anchor" id="_todo000160"></a>should read the message handlers here  </dd>
<dt>Member <a class="el" href="../../d4/db1/classxii_qt_shortcut_editor_dlg.htm#adcde8579c9376b549ffdcb54956adbca">xiiQtShortcutEditorDlg::xiiQtShortcutEditorDlg</a>  (QWidget *parent)</dt>
<dd><a class="anchor" id="_todo000163"></a>Instead of removing &amp;, replace it by underlined text (requires formatted text output)  </dd>
<dt>Member <a class="el" href="../../d5/de7/classxii_random.htm#a456d382181fe2140ffd41d6af5778c09">xiiRandom::DoubleMinMax</a>  (double fMinValue, double fMaxValue)</dt>
<dd><a class="anchor" id="_todo000050"></a>Probably not correct  </dd>
<dt>Member <a class="el" href="../../d5/de7/classxii_random.htm#a844c01e9883c659be252cdf858791801">xiiRandom::DoubleVariance</a>  (double fValue, double fVariance)</dt>
<dd><a class="anchor" id="_todo000051"></a>Test whether this is actually correct  </dd>
<dt>Member <a class="el" href="../../d5/de7/classxii_random.htm#a8d5039f636674159da85e97173403c9d">xiiRandom::DoubleVarianceAroundZero</a>  (double fAbsMaxValue)</dt>
<dd><a class="anchor" id="_todo000052"></a>Test whether this is actually correct  </dd>
<dt>Member <a class="el" href="../../d3/d53/classxii_rc_agent_component.htm#a6834d4138ae7f173061b7c382cbfd485">xiiRcAgentComponent::FindNavMeshPolyAt</a>  (const xiiVec3 &amp;vPosition, dtPolyRef &amp;out_PolyRef, xiiVec3 *out_vAdjustedPosition=nullptr, float fPlaneEpsilon=0.01f, float fHeightEpsilon=1.0f) const</dt>
<dd><a class="anchor" id="_todo000148"></a>Hard-coded filter  </dd>
<dt>Member <a class="el" href="../../d3/d53/classxii_rc_agent_component.htm#a4ddaf10cd50218312ed6f4cefd6a281c">xiiRcAgentComponent::HasReachedPosition</a>  (const xiiVec3 &amp;pos, float fMaxDistance) const</dt>
<dd><a class="anchor" id="_todo000151"></a>The comment below may not always be true  </dd>
<dt>Class <a class="el" href="../../d4/d9b/classxii_remote_message.htm">xiiRemoteMessage</a>  </dt>
<dd><a class="anchor" id="_todo000035"></a>Add move semantics for <a class="el" href="../../d4/d9b/classxii_remote_message.htm" title="Encapsulates all the data that is transmitted when sending or receiving a message with xiiRemoteInter...">xiiRemoteMessage</a>  </dd>
<dt>Member <a class="el" href="../../df/dd1/structxii_resource_flags.htm#a35ed53a09c8c81dd2636b2b56d69618caa2f877284605239b4ee9534769af5b16">xiiResourceFlags::ResourceHasFallback</a>  </dt>
<dd><a class="anchor" id="_todo000027"></a>implement NoFileAccessRequired  </dd>
<dt>Member <a class="el" href="../../d3/d6e/classxii_rotor_component.htm#ae28a991858f35f04aac2f92245bdc674">xiiRotorComponent::Update</a>  ()</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000069"></a>Scripting integration </p>
<p class="interdd"><a class="anchor" id="_todo000070"></a>Scripting integration </p>
<p class="enddd"><a class="anchor" id="_todo000071"></a>This will probably give precision issues pretty quickly  </p>
</dd>
<dt>Member <a class="el" href="../../de/d3e/classxii_scene_actions.htm#a73aa54c5a6f157a6160da3b7d59a31d0">xiiSceneActions::MapToolbarActions</a>  (const char *szMapping)</dt>
<dd><a class="anchor" id="_todo000018"></a>This works incorrectly with value 6.0f -&gt; it places the action inside the snap category  </dd>
<dt>Member <a class="el" href="../../d0/dc6/classxii_selection_context.htm#a47cbe01e6254b85413ae57cfaa2a691d">xiiSelectionContext::DoKeyPressEvent</a>  (QKeyEvent *e) override</dt>
<dd><a class="anchor" id="_todo000007"></a>Handle the current cursor (icon) across all active input contexts  </dd>
<dt>Member <a class="el" href="../../d1/db4/classxii_shadow_pool.htm#a518d1be835b2281825a99fa26e929fc1">xiiShadowPool::AddPointLight</a>  (const <a class="el" href="../../da/db8/classxii_point_light_component.htm" title="The standard point light component. This component represents point lights with various properties (e...">xiiPointLightComponent</a> *pPointLight, float fScreenSpaceSize, const <a class="el" href="../../dd/df1/classxii_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">xiiView</a> *pReferenceView)</dt>
<dd><a class="anchor" id="_todo000080"></a>expose somewhere  </dd>
<dt>Member <a class="el" href="../../d1/db4/classxii_shadow_pool.htm#a6f744c448d6500061dce2031da7a6b07">xiiShadowPool::AddSpotLight</a>  (const <a class="el" href="../../d5/d5e/classxii_spot_light_component.htm" title="The standard spot light component. This component represents spot lights with various properties (e....">xiiSpotLightComponent</a> *pSpotLight, float fScreenSpaceSize, const <a class="el" href="../../dd/df1/classxii_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">xiiView</a> *pReferenceView)</dt>
<dd><a class="anchor" id="_todo000081"></a>expose somewhere  </dd>
<dt>Member <a class="el" href="../../d4/d8d/classxii_simd_mat4f.htm#a1359cf7c10b5f827cca2b03eb2b46066">xiiSimdMat4f::Invert</a>  (const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;fEpsilon=xiiMath::SmallEpsilon&lt; float &gt;())</dt>
<dd><a class="anchor" id="_todo000055"></a>optimize  </dd>
<dt>Member <a class="el" href="../../dd/d82/structxii_simd_math.htm#ad4cc1e6e57aca70e9b29933bbd1ddb0d">xiiSimdMath::Exp</a>  (const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm" title="A 4-component SIMD vector class.">xiiSimdVec4f</a> &amp;f)</dt>
<dd><a class="anchor" id="_todo000056"></a>optimize these methods if needed  </dd>
<dt>Member <a class="el" href="../../db/dda/classxii_simd_quat.htm#a8c6c37d8c942e2d9a8c96244997b8ca0">xiiSimdQuat::GetRotationAxisAndAngle</a>  (<a class="el" href="../../d3/da5/classxii_simd_vec4f.htm" title="A 4-component SIMD vector class.">xiiSimdVec4f</a> &amp;vAxis, <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;angle, const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;fEpsilon=xiiMath::DefaultEpsilon&lt; float &gt;()) const</dt>
<dd><a class="anchor" id="_todo000059"></a>optimize  </dd>
<dt>Member <a class="el" href="../../db/dda/classxii_simd_quat.htm#a11a661fb093719009dd32b13265dd434">xiiSimdQuat::SetFromAxisAndAngle</a>  (const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm" title="A 4-component SIMD vector class.">xiiSimdVec4f</a> &amp;vRotationAxis, const <a class="el" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a> &amp;angle)</dt>
<dd><a class="anchor" id="_todo000058"></a>optimize  </dd>
<dt>Member <a class="el" href="../../db/dda/classxii_simd_quat.htm#a56e2c8227e8fce2c4d5669add072fcd4">xiiSimdQuat::SetShortestRotation</a>  (const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm" title="A 4-component SIMD vector class.">xiiSimdVec4f</a> &amp;vDirFrom, const <a class="el" href="../../d3/da5/classxii_simd_vec4f.htm" title="A 4-component SIMD vector class.">xiiSimdVec4f</a> &amp;vDirTo)</dt>
<dd><a class="anchor" id="_todo000057"></a>optimize these methods if needed  </dd>
<dt>Member <a class="el" href="../../d2/d1c/classxii_singleton_registry.htm#a20e713fe8f06ba24320b390e67daa40f">xiiSingletonRegistry::GetSingletonInstance</a>  ()</dt>
<dd><a class="anchor" id="_todo000037"></a>Events for new/deleted singletons -&gt; xiiInspector integration  </dd>
<dt>Member <a class="el" href="../../db/d96/classxii_surface_resource.htm#a1621f806fd453f97dcf8455adfefaccf">xiiSurfaceResource::InteractWithSurface</a>  (<a class="el" href="../../d6/d89/classxii_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">xiiWorld</a> *pWorld, <a class="el" href="../../da/d2c/structxii_game_object_handle.htm" title="A handle to a game object.">xiiGameObjectHandle</a> hObject, const xiiVec3 &amp;vPosition, const xiiVec3 &amp;vSurfaceNormal, const xiiVec3 &amp;vIncomingDirection, const <a class="el" href="../../d5/dd2/classxii_temp_hashed_string.htm" title="A class to use together with xiiHashedString for quick comparisons with temporary strings that need n...">xiiTempHashedString</a> &amp;sInteraction, const xiiUInt16 *pOverrideTeamID, float fImpulseSqr=0.0f) const</dt>
<dd><a class="anchor" id="_todo000026"></a>do random deviation, make sure to clamp max deviation angle  </dd>
<dt>Class <a class="el" href="../../d9/d32/classxii_telemetry.htm">xiiTelemetry</a>  </dt>
<dd><a class="anchor" id="_todo000036"></a>document and test (and finish)  </dd>
<dt>Member <a class="el" href="../../da/de8/classxii_texture_cube_asset_document_generator.htm#aac0042f24ff256ced1473a1f344c5777">xiiTextureCubeAssetDocumentGenerator::GetImportModes</a>  (const char *szParentDirRelativePath, <a class="el" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt; xiiAssetDocumentGenerator::Info, 4 &gt;</a> &amp;out_Modes) const override</dt>
<dd><a class="anchor" id="_todo000012"></a>Make this configurable  </dd>
<dt>Member <a class="el" href="../../dc/d16/classxii_texture_resource_loader.htm#a1110663fe398f762a240d7b0f1849059">xiiTextureResourceLoader::OpenDataStream</a>  (const <a class="el" href="../../d9/de1/classxii_resource.htm" title="The base class for all resources.">xiiResource</a> *pResource) override</dt>
<dd><a class="anchor" id="_todo000087"></a>A conversion to B8G8R8X8_UNORM currently fails  </dd>
<dt>Member <a class="el" href="../../d3/d08/structxii_texture_utils.htm#a31f60b4a924f57388c2c78e4146b5631">xiiTextureUtils::ImageFormatToGalFormat</a>  (<a class="el" href="../../d5/dd3/structxii_image_format.htm#a005ef22274255637febbc13f075b9e38" title="Enum describing the encoding format of the pixels of an image.">xiiImageFormat::Enum</a> format, bool bSRGB)</dt>
<dd><a class="anchor" id="_todo000088"></a>Not supported by some GPUs ?  </dd>
<dt>Member <a class="el" href="../../d6/d88/classxii_tokenizer.htm#a9b28c184bf20d503867c4c811645c175">xiiTokenizer::GetNextLine</a>  (xiiUInt32 &amp;uiFirstToken, <a class="el" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt; const xiiToken *, 32 &gt;</a> &amp;Tokens) const</dt>
<dd><a class="anchor" id="_todo000034"></a>Theoretically, if the line ends with an identifier, and the next directly starts with one again,  </dd>
<dt>Class <a class="el" href="../../d5/d13/classxii_transform_template.htm">xiiTransformTemplate&lt; Type &gt;</a>  </dt>
<dd><a class="anchor" id="_todo000053"></a>Fix docs and unit tests  </dd>
<dt>Member <a class="el" href="../../d7/d22/classxii_visual_script_component.htm#af07c91dd34ab98b0a51fbd96191c5880">xiiVisualScriptComponent::DeserializeComponent</a>  (<a class="el" href="../../df/df8/classxii_world_reader.htm" title="Reads a world description from a stream. Allows to instantiate that world multiple times in different...">xiiWorldReader</a> &amp;stream) override</dt>
<dd><a class="anchor" id="_todo000075"></a>Read script state  </dd>
<dt>Member <a class="el" href="../../d7/d22/classxii_visual_script_component.htm#a9e1a29f25d285a4f3b070aaeeb391b3b">xiiVisualScriptComponent::SerializeComponent</a>  (<a class="el" href="../../de/d8c/classxii_world_writer.htm" title="Stores an entire xiiWorld in a stream.">xiiWorldWriter</a> &amp;stream) const override</dt>
<dd><a class="anchor" id="_todo000074"></a>Store the current script state  </dd>
<dt>Member <a class="el" href="../../d7/d22/classxii_visual_script_component.htm#a45f06b6f3ea9c0d8c9f11c0a6dbc4088">xiiVisualScriptComponent::Update</a>  ()</dt>
<dd><a class="anchor" id="_todo000076"></a>Do we really need to tick scripts every frame?  </dd>
<dt>Member <a class="el" href="../../d5/dec/classxii_visual_shader_node_manager.htm#a71c537ac46595af071c6ac4af28f1eb7">xiiVisualShaderNodeManager::InternalCanAdd</a>  (const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm" title="This enumerable class holds information about reflected types. Each instance represents one type that...">xiiRTTI</a> *pRtti, const <a class="el" href="../../da/dd8/classxii_document_object.htm">xiiDocumentObject</a> *pParent, const char *szParentProperty, const <a class="el" href="../../db/d1a/classxii_variant.htm" title="xiiVariant is a class that can store different types of variables, which is useful in situations wher...">xiiVariant</a> &amp;index) const override</dt>
<dd><a class="anchor" id="_todo000016"></a>This is an arbitrary limit and it does not count how many nodes reference the same texture  </dd>
<dt>Member <a class="el" href="../../d2/d13/classxii_window.htm#a67dc5b6aba5980d4f0443f1fa1a89826">xiiWindow::Initialize</a>  ()</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000029"></a>Expose icon functionality somehow (101 == IDI_ICON1, see resource.h) </p>
<p class="enddd"><a class="anchor" id="_todo000030"></a>Test &amp; support for multiple windows.  </p>
</dd>
<dt>Member <a class="el" href="../../d9/d8d/classxii_window_output_target_g_a_l.htm#a9d1a0532aa49e05bacaf1c02e911fa85">xiiWindowOutputTargetGAL::CaptureImage</a>  (<a class="el" href="../../d4/d6a/classxii_image.htm" title="A class containing image data and associated meta data.">xiiImage</a> &amp;out_Image) override</dt>
<dd><a class="anchor" id="_todo000073"></a>Make this more efficient </dd>
</dl>
</div></div><!-- contents -->
</div><!-- PageDoc -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Sun Mar 12 2023 21:19:52 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
