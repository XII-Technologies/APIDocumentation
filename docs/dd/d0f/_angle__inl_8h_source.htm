<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Math/Implementation/Angle_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/d0f/_angle__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Angle_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="keyword">inline</span> constexpr Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::Pi</a>()</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;{</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>Type<span class="keyword">&gt;</span>(3.1415926535897932384626433832795);</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;}</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a7da06216380b9e6d3e6f04570afb9a2c">   10</a></span>&#160;constexpr XII_ALWAYS_INLINE Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a7da06216380b9e6d3e6f04570afb9a2c">xiiAngleTemplate&lt;Type&gt;::DegToRadMultiplier</a>()</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::Pi</a>() / (Type)180;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#aad83b7c65f38f601d03f3d0c7fbcefc5">   16</a></span>&#160;constexpr XII_ALWAYS_INLINE Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#aad83b7c65f38f601d03f3d0c7fbcefc5">xiiAngleTemplate&lt;Type&gt;::RadToDegMultiplier</a>()</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keywordflow">return</span> ((Type)180) / Pi();</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a125b34adf00dc677204d2a7a5904b2ab">   22</a></span>&#160;constexpr Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a125b34adf00dc677204d2a7a5904b2ab">xiiAngleTemplate&lt;Type&gt;::DegToRad</a>(Type f)</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordflow">return</span> f * DegToRadMultiplier();</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a56b7439a2dd2efc94c847a302a32b820">   28</a></span>&#160;constexpr Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a56b7439a2dd2efc94c847a302a32b820">xiiAngleTemplate&lt;Type&gt;::RadToDeg</a>(Type f)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordflow">return</span> f * RadToDegMultiplier();</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a186b3138db53d77de01facd1026240c0">   34</a></span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a186b3138db53d77de01facd1026240c0">xiiAngleTemplate&lt;Type&gt;::Degree</a>(Type fDegree)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>(DegToRad(fDegree));</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a6daf638ae092b7998e03c16ba97e7239">   40</a></span>&#160;constexpr XII_ALWAYS_INLINE <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a6daf638ae092b7998e03c16ba97e7239">xiiAngleTemplate&lt;Type&gt;::Radian</a>(Type fRadian)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a>(fRadian);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a0981cd78050c0ee3b82197d6572d56be">   46</a></span>&#160;constexpr <span class="keyword">inline</span> Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a0981cd78050c0ee3b82197d6572d56be">xiiAngleTemplate&lt;Type&gt;::GetDegree</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">return</span> RadToDeg(m_fRadian);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">   52</a></span>&#160;constexpr XII_ALWAYS_INLINE Type <a class="code" href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">xiiAngleTemplate&lt;Type&gt;::GetRadian</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordflow">return</span> m_fRadian;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a7e9e308308a55e19b03dbf5a3fed8c66">   58</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a7e9e308308a55e19b03dbf5a3fed8c66">xiiAngleTemplate&lt;Type&gt;::NormalizeRange</a>()</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keyword">const</span> Type fTwoPi = <span class="keyword">static_cast&lt;</span>Type<span class="keyword">&gt;</span>(2.0) * <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::Pi</a>();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">const</span> Type fTwoPiTen = <span class="keyword">static_cast&lt;</span>Type<span class="keyword">&gt;</span>(10.0) * <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::Pi</a>();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordflow">if</span> (m_fRadian &gt; fTwoPiTen || m_fRadian &lt; -fTwoPiTen)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    m_fRadian = <span class="keyword">sizeof</span>(m_fRadian &gt; 4) ? fmod(m_fRadian, fTwoPi) : fmodf(m_fRadian, fTwoPi);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordflow">while</span> (m_fRadian &gt;= fTwoPi)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    m_fRadian -= fTwoPi;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordflow">while</span> (m_fRadian &lt; <span class="keyword">static_cast&lt;</span>Type<span class="keyword">&gt;</span>(0.0))</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    m_fRadian += fTwoPi;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a61b9cffe96c9937c13122e97f23417f9">   81</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a61b9cffe96c9937c13122e97f23417f9">xiiAngleTemplate&lt;Type&gt;::GetNormalizedRange</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> out(m_fRadian);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  out.<a class="code" href="../../d3/ddb/classxii_angle_template.htm#a7e9e308308a55e19b03dbf5a3fed8c66">NormalizeRange</a>();</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordflow">return</span> out;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#a2b5342a182d1fdedc3db8a49cd4a2e21">   89</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a2b5342a182d1fdedc3db8a49cd4a2e21">xiiAngleTemplate&lt;Type&gt;::IsEqualSimple</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a> rhs, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a> epsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> diff = AngleBetween(*<span class="keyword">this</span>, rhs);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordflow">return</span> ((diff.m_fRadian &gt;= -epsilon.m_fRadian) &amp;&amp; (diff.m_fRadian &lt;= epsilon.m_fRadian));</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="../../d3/ddb/classxii_angle_template.htm#ad395aa30c07355b4af56067d542d6514">   97</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#ad395aa30c07355b4af56067d542d6514">xiiAngleTemplate&lt;Type&gt;::IsEqualNormalized</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> rhs, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> epsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="comment">// Equality between normalized angles</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> aNorm = GetNormalizedRange();</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> bNorm = rhs.<a class="code" href="../../d3/ddb/classxii_angle_template.htm#a61b9cffe96c9937c13122e97f23417f9">GetNormalizedRange</a>();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordflow">return</span> aNorm.<a class="code" href="../../d3/ddb/classxii_angle_template.htm#a2b5342a182d1fdedc3db8a49cd4a2e21">IsEqualSimple</a>(bNorm, epsilon);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;constexpr XII_ALWAYS_INLINE <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator-</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>(-m_fRadian);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator+=</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a> r)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  m_fRadian += r.m_fRadian;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator-=</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a> r)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  m_fRadian -= r.m_fRadian;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator+</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a> r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>(m_fRadian + r.m_fRadian);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator-</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a> r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>(m_fRadian - r.m_fRadian);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;constexpr XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordflow">return</span> m_fRadian == r.m_fRadian;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;constexpr XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordflow">return</span> m_fRadian != r.m_fRadian;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;constexpr XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordflow">return</span> m_fRadian &lt; r.m_fRadian;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;constexpr XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator&gt;</a>(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordflow">return</span> m_fRadian &gt; r.m_fRadian;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;constexpr XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator&lt;=</a>(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">return</span> m_fRadian &lt;= r.m_fRadian;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;constexpr XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;::operator&gt;=</a>(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordflow">return</span> m_fRadian &gt;= r.m_fRadian;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> operator*(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> a, Type f)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;{</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a6daf638ae092b7998e03c16ba97e7239">xiiAngleTemplate&lt;Type&gt;::Radian</a>(a.<a class="code" href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">GetRadian</a>() * f);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> operator*(Type f, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> a)</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;{</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a6daf638ae092b7998e03c16ba97e7239">xiiAngleTemplate&lt;Type&gt;::Radian</a>(a.<a class="code" href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">GetRadian</a>() * f);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> operator/(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> a, Type f)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;{</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm#a6daf638ae092b7998e03c16ba97e7239">xiiAngleTemplate&lt;Type&gt;::Radian</a>(a.<a class="code" href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">GetRadian</a>() / f);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;constexpr <span class="keyword">inline</span> Type operator/(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> a, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> b)</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;{</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordflow">return</span> a.<a class="code" href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">GetRadian</a>() / b.<a class="code" href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">GetRadian</a>();</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_angle_template_htm_a7da06216380b9e6d3e6f04570afb9a2c"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a7da06216380b9e6d3e6f04570afb9a2c">xiiAngleTemplate::DegToRadMultiplier</a></div><div class="ttdeci">constexpr static XII_ALWAYS_INLINE Type DegToRadMultiplier()</div><div class="ttdoc">Returns the constant to multiply with an angle in degree to convert it to radians.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:10</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a6daf638ae092b7998e03c16ba97e7239"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a6daf638ae092b7998e03c16ba97e7239">xiiAngleTemplate::Radian</a></div><div class="ttdeci">constexpr static xiiAngleTemplate&lt; Type &gt; Radian(Type fRadian)</div><div class="ttdoc">Creates an instance of xiiAngleTemplate that was initialized from radian. (No need for any conversion...</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:40</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a125b34adf00dc677204d2a7a5904b2ab"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a125b34adf00dc677204d2a7a5904b2ab">xiiAngleTemplate::DegToRad</a></div><div class="ttdeci">constexpr static Type DegToRad(Type f)</div><div class="ttdoc">Converts an angle in degree to radians.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:22</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_ad395aa30c07355b4af56067d542d6514"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#ad395aa30c07355b4af56067d542d6514">xiiAngleTemplate::IsEqualNormalized</a></div><div class="ttdeci">bool IsEqualNormalized(xiiAngleTemplate&lt; Type &gt; rhs, xiiAngleTemplate&lt; Type &gt; epsilon) const</div><div class="ttdoc">Equality check with epsilon that uses normalized angles. Will recognize 720 degree == 0 degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:97</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_afaebb218561104c8b89d645dab3d8ded"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#afaebb218561104c8b89d645dab3d8ded">xiiAngleTemplate::GetRadian</a></div><div class="ttdeci">constexpr Type GetRadian() const</div><div class="ttdoc">Returns the radian value. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:52</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a7e9e308308a55e19b03dbf5a3fed8c66"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a7e9e308308a55e19b03dbf5a3fed8c66">xiiAngleTemplate::NormalizeRange</a></div><div class="ttdeci">void NormalizeRange()</div><div class="ttdoc">Brings the angle into the range of 0 degree - 360 degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:58</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a56b7439a2dd2efc94c847a302a32b820"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a56b7439a2dd2efc94c847a302a32b820">xiiAngleTemplate::RadToDeg</a></div><div class="ttdeci">constexpr static Type RadToDeg(Type f)</div><div class="ttdoc">Converts an angle in radians to degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:28</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_aad83b7c65f38f601d03f3d0c7fbcefc5"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#aad83b7c65f38f601d03f3d0c7fbcefc5">xiiAngleTemplate::RadToDegMultiplier</a></div><div class="ttdeci">constexpr static XII_ALWAYS_INLINE Type RadToDegMultiplier()</div><div class="ttdoc">Returns the constant to multiply with an angle in degree to convert it to radians.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:16</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a0981cd78050c0ee3b82197d6572d56be"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a0981cd78050c0ee3b82197d6572d56be">xiiAngleTemplate::GetDegree</a></div><div class="ttdeci">constexpr Type GetDegree() const</div><div class="ttdoc">Returns the degree value. (Performs a conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:46</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a2b5342a182d1fdedc3db8a49cd4a2e21"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a2b5342a182d1fdedc3db8a49cd4a2e21">xiiAngleTemplate::IsEqualSimple</a></div><div class="ttdeci">bool IsEqualSimple(xiiAngleTemplate&lt; Type &gt; rhs, xiiAngleTemplate&lt; Type &gt; epsilon) const</div><div class="ttdoc">Equality check with epsilon. Simple check without normalization. 360 degree will equal 0 degree,...</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:89</div></div>
<div class="ttc" id="aclassxii_angle_template_htm"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a></div><div class="ttdoc">Wrapper class for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:10</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a61b9cffe96c9937c13122e97f23417f9"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a61b9cffe96c9937c13122e97f23417f9">xiiAngleTemplate::GetNormalizedRange</a></div><div class="ttdeci">xiiAngleTemplate&lt; Type &gt; GetNormalizedRange() const</div><div class="ttdoc">Returns an equivalent angle with range between 0 degree - 360 degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:81</div></div>
<div class="ttc" id="aclassxii_angle_template_htm_a186b3138db53d77de01facd1026240c0"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm#a186b3138db53d77de01facd1026240c0">xiiAngleTemplate::Degree</a></div><div class="ttdeci">constexpr static xiiAngleTemplate&lt; Type &gt; Degree(Type fDegree)</div><div class="ttdoc">Creates an instance of xiiAngleTemplate that was initialized from degree. (Performs a conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:34</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c1b0860bb61ff24e678d996d14e4bcdd.htm">Math</a></li><li class="navelem"><a class="el" href="../../dir_fb7e93d80251333452775ccd3b7c417a.htm">Implementation</a></li><li class="navelem"><b>Angle_inl.h</b></li>
    <li class="footer">Generated on Fri Jun 16 2023 14:12:43 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
