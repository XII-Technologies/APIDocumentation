<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/EnginePlugins/VisualScriptPlugin/Runtime/Implementation/VisualScript_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dd/dcd/_visual_script__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">VisualScript_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">// static</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, xiiUInt32 Size&gt;</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="keywordtype">void</span> <a class="code hl_struct" href="../../dd/dbe/structxii_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">xiiVisualScriptGraphDescription::EmbeddedArrayOrPointer&lt;T, Size&gt;::AddAdditionalDataSize</a>(<a class="code hl_class" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a> a, xiiUInt32&amp; inout_uiAdditionalDataSize)</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>{</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>  <span class="keywordflow">if</span> (a.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>() &gt; Size)</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  {</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>    inout_uiAdditionalDataSize = <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a49b9826f878346f165be1d4b0f85a819">xiiMemoryUtils::AlignSize&lt;xiiUInt32&gt;</a>(inout_uiAdditionalDataSize, XII_ALIGNMENT_OF(T));</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>    inout_uiAdditionalDataSize += a.<a class="code hl_function" href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">GetCount</a>() * <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>  }</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>}</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="comment">// static</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, xiiUInt32 Size&gt;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="keywordtype">void</span> <a class="code hl_struct" href="../../dd/dbe/structxii_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">xiiVisualScriptGraphDescription::EmbeddedArrayOrPointer&lt;T, Size&gt;::AddAdditionalDataSize</a>(xiiUInt32 uiSize, xiiUInt32 uiAlignment, xiiUInt32&amp; inout_uiAdditionalDataSize)</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="keywordflow">if</span> (uiSize &gt; Size * <span class="keyword">sizeof</span>(T))</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  {</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    inout_uiAdditionalDataSize = <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a49b9826f878346f165be1d4b0f85a819">xiiMemoryUtils::AlignSize&lt;xiiUInt32&gt;</a>(inout_uiAdditionalDataSize, uiAlignment);</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    inout_uiAdditionalDataSize += uiSize;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  }</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>}</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, xiiUInt32 Size&gt;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>T* <a class="code hl_struct" href="../../dd/dbe/structxii_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">xiiVisualScriptGraphDescription::EmbeddedArrayOrPointer&lt;T, Size&gt;::Init</a>(xiiUInt8 uiCount, xiiUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>{</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <span class="keywordflow">if</span> (uiCount &lt;= Size)</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  {</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    <span class="keywordflow">return</span> m_Embedded;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  }</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  inout_pAdditionalData = <a class="code hl_function" href="../../d8/d9d/classxii_memory_utils.htm#a208861bbacbbed85d680cd6d3c75ff17">xiiMemoryUtils::AlignForwards</a>(inout_pAdditionalData, XII_ALIGNMENT_OF(T));</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  m_Ptr                 = <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(inout_pAdditionalData);</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  inout_pAdditionalData += uiCount * <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keywordflow">return</span> m_Ptr;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>}</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, xiiUInt32 Size&gt;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><a class="code hl_struct" href="../../dd/dad/structxii_result.htm">xiiResult</a> <a class="code hl_struct" href="../../dd/dbe/structxii_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">xiiVisualScriptGraphDescription::EmbeddedArrayOrPointer&lt;T, Size&gt;::ReadFromStream</a>(xiiUInt8&amp; out_uiCount, <a class="code hl_class" href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a>&amp; inout_stream, xiiUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>{</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  xiiUInt16 uiCount = 0;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  inout_stream &gt;&gt; uiCount;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <span class="keywordflow">if</span> (uiCount &gt; <a class="code hl_function" href="../../d1/d37/namespacexii_math.htm#a6bbce1588f70c91d6cad87e82a0238c1">xiiMath::MaxValue&lt;xiiUInt8&gt;</a>())</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  {</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  }</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  out_uiCount = <span class="keyword">static_cast&lt;</span>xiiUInt8<span class="keyword">&gt;</span>(uiCount);</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  T*              pTargetPtr       = Init(out_uiCount, inout_pAdditionalData);</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="keyword">const</span> xiiUInt64 uiNumBytesToRead = uiCount * <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keywordflow">if</span> (inout_stream.<a class="code hl_function" href="../../d4/d5e/classxii_stream_reader.htm#adaf383aa54a7b140435ea4df72771f52">ReadBytes</a>(pTargetPtr, uiNumBytesToRead) != uiNumBytesToRead)</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    <span class="keywordflow">return</span> XII_FAILURE;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="keywordflow">return</span> XII_SUCCESS;</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>}</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>XII_ALWAYS_INLINE xiiUInt32 xiiVisualScriptGraphDescription::Node::GetExecutionIndex(xiiUInt32 uiSlot)<span class="keyword"> const</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keywordflow">if</span> (uiSlot &lt; m_NumExecutionIndices)</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  {</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    <span class="keywordflow">return</span> m_NumExecutionIndices &lt;= XII_ARRAY_SIZE(m_ExecutionIndices.m_Embedded) ? m_ExecutionIndices.m_Embedded[uiSlot] : m_ExecutionIndices.m_Ptr[uiSlot];</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  }</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keywordflow">return</span> xiiInvalidIndex;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>}</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>XII_ALWAYS_INLINE <a class="code hl_struct" href="../../d6/de6/structxii_visual_script_data_description_1_1_data_offset.htm">xiiVisualScriptGraphDescription::DataOffset</a> xiiVisualScriptGraphDescription::Node::GetInputDataOffset(xiiUInt32 uiSlot)<span class="keyword"> const</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keywordflow">if</span> (uiSlot &lt; m_NumInputDataOffsets)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    <span class="keywordflow">return</span> m_NumInputDataOffsets &lt;= XII_ARRAY_SIZE(m_InputDataOffsets.m_Embedded) ? m_InputDataOffsets.m_Embedded[uiSlot] : m_InputDataOffsets.m_Ptr[uiSlot];</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  }</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keywordflow">return</span> {};</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>}</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>XII_ALWAYS_INLINE <a class="code hl_struct" href="../../d6/de6/structxii_visual_script_data_description_1_1_data_offset.htm">xiiVisualScriptGraphDescription::DataOffset</a> xiiVisualScriptGraphDescription::Node::GetOutputDataOffset(xiiUInt32 uiSlot)<span class="keyword"> const</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keywordflow">if</span> (uiSlot &lt; m_NumOutputDataOffsets)</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  {</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <span class="keywordflow">return</span> m_NumOutputDataOffsets &lt;= XII_ARRAY_SIZE(m_OutputDataOffsets.m_Embedded) ? m_OutputDataOffsets.m_Embedded[uiSlot] : m_OutputDataOffsets.m_Ptr[uiSlot];</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  }</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="keywordflow">return</span> {};</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>}</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>XII_ALWAYS_INLINE <span class="keyword">const</span> T&amp; xiiVisualScriptGraphDescription::Node::GetUserData()<span class="keyword"> const</span></div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  XII_ASSERT_DEBUG(m_UserDataByteSize &gt;= <span class="keyword">sizeof</span>(T), <span class="stringliteral">&quot;Invalid data&quot;</span>);</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T*<span class="keyword">&gt;</span>(m_UserDataByteSize &lt;= <span class="keyword">sizeof</span>(m_UserData.m_Embedded) ? m_UserData.m_Embedded : m_UserData.m_Ptr);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>}</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>T&amp; xiiVisualScriptGraphDescription::Node::InitUserData(xiiUInt8*&amp; inout_pAdditionalData, xiiUInt32 uiByteSize <span class="comment">/*= sizeof(T)*/</span>)</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>{</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  m_UserDataByteSize = uiByteSize;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="keyword">auto</span> pUserData     = m_UserData.Init(uiByteSize / <span class="keyword">sizeof</span>(xiiUInt32), inout_pAdditionalData);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  XII_CHECK_ALIGNMENT(pUserData, XII_ALIGNMENT_OF(T));</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(pUserData);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>}</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>XII_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_struct" href="../../d7/d63/structxii_visual_script_graph_description_1_1_node.htm">xiiVisualScriptGraphDescription::Node</a>* xiiVisualScriptGraphDescription::GetNode(xiiUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <span class="keywordflow">return</span> uiIndex &lt; m_Nodes.GetCount() ? &amp;m_Nodes.GetPtr()[uiIndex] : <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>}</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiVisualScriptGraphDescription::IsCoroutine()<span class="keyword"> const</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  <span class="keyword">auto</span> entryNodeType = GetNode(0)-&gt;m_Type;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keywordflow">return</span> entryNodeType == xiiVisualScriptNodeDescription::Type::EntryCall_Coroutine || entryNodeType == xiiVisualScriptNodeDescription::Type::MessageHandler_Coroutine;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>}</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>XII_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr&lt;const xiiVisualScriptDataDescription&gt;</a>&amp; xiiVisualScriptGraphDescription::GetLocalDataDesc()<span class="keyword"> const</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <span class="keywordflow">return</span> m_pLocalDataDesc;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>}</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>XII_FORCE_INLINE <span class="keyword">const</span> T&amp; xiiVisualScriptExecutionContext::GetData(DataOffset dataOffset)<span class="keyword"> const</span></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;GetData&lt;T&gt;(dataOffset);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>}</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>XII_FORCE_INLINE T&amp; xiiVisualScriptExecutionContext::GetWritableData(DataOffset dataOffset)</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>{</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  XII_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Can&#39;t write to constant data&quot;</span>);</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;GetWritableData&lt;T&gt;(dataOffset);</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>}</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>XII_FORCE_INLINE <span class="keywordtype">void</span> xiiVisualScriptExecutionContext::SetData(DataOffset dataOffset, <span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>{</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  XII_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Outputs can&#39;t set constant data&quot;</span>);</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;SetData&lt;T&gt;(dataOffset, value);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>}</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>XII_FORCE_INLINE <a class="code hl_struct" href="../../d2/de4/structxii_typed_pointer.htm">xiiTypedPointer</a> xiiVisualScriptExecutionContext::GetPointerData(DataOffset dataOffset)</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>{</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  XII_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Pointers can&#39;t be constant data&quot;</span>);</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;GetPointerData(dataOffset, m_uiExecutionCounter);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>}</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>XII_FORCE_INLINE <span class="keywordtype">void</span> xiiVisualScriptExecutionContext::SetPointerData(DataOffset dataOffset, T ptr, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pType)</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>{</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  XII_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Pointers can&#39;t be constant data&quot;</span>);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  m_DataStorage[dataOffset.m_uiSource]-&gt;SetPointerData(dataOffset, ptr, pType, m_uiExecutionCounter);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>}</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>XII_FORCE_INLINE <a class="code hl_class" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> xiiVisualScriptExecutionContext::GetDataAsVariant(DataOffset dataOffset, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a>* pExpectedType)<span class="keyword"> const</span></div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;GetDataAsVariant(dataOffset, pExpectedType, m_uiExecutionCounter);</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>}</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>XII_FORCE_INLINE <span class="keywordtype">void</span> xiiVisualScriptExecutionContext::SetDataFromVariant(DataOffset dataOffset, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value)</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>{</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  XII_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Outputs can&#39;t set constant data&quot;</span>);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;SetDataFromVariant(dataOffset, value, m_uiExecutionCounter);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>}</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>XII_ALWAYS_INLINE <span class="keywordtype">void</span> xiiVisualScriptExecutionContext::SetCurrentCoroutine(<a class="code hl_class" href="../../de/d39/classxii_script_coroutine.htm">xiiScriptCoroutine</a>* pCoroutine)</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>{</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  m_pCurrentCoroutine = pCoroutine;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>}</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="keyword">inline</span> <a class="code hl_struct" href="../../d7/dc1/structxii_time.htm">xiiTime</a> xiiVisualScriptExecutionContext::GetDeltaTimeSinceLastExecution()</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>{</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  XII_ASSERT_DEBUG(m_pDesc-&gt;IsCoroutine(), <span class="stringliteral">&quot;Delta time is only valid for coroutines&quot;</span>);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  <span class="keywordflow">return</span> m_DeltaTimeSinceLastExecution;</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>}</div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:37</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm_af1e072a93ee1a583d0db00e821c2d999"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm#af1e072a93ee1a583d0db00e821c2d999">xiiArrayPtr::GetCount</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:146</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a208861bbacbbed85d680cd6d3c75ff17"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a208861bbacbbed85d680cd6d3c75ff17">xiiMemoryUtils::AlignForwards</a></div><div class="ttdeci">static T * AlignForwards(T *pPtr, size_t uiAlignment)</div><div class="ttdoc">Aligns the pointer ptr by moving its address forwards to the next multiple of uiAlignment.</div></div>
<div class="ttc" id="aclassxii_memory_utils_htm_a49b9826f878346f165be1d4b0f85a819"><div class="ttname"><a href="../../d8/d9d/classxii_memory_utils.htm#a49b9826f878346f165be1d4b0f85a819">xiiMemoryUtils::AlignSize</a></div><div class="ttdeci">static T AlignSize(T uiSize, T uiAlignment)</div><div class="ttdoc">Aligns the given size uiSize by rounding up to the next multiple of the size.</div></div>
<div class="ttc" id="aclassxii_r_t_t_i_htm"><div class="ttname"><a href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclassxii_script_coroutine_htm"><div class="ttname"><a href="../../de/d39/classxii_script_coroutine.htm">xiiScriptCoroutine</a></div><div class="ttdoc">Base class of script coroutines.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:35</div></div>
<div class="ttc" id="aclassxii_shared_ptr_htm"><div class="ttname"><a href="../../d8/d9b/classxii_shared_ptr.htm">xiiSharedPtr</a></div><div class="ttdoc">A Shared ptr manages a shared object and destroys that object when no one references it anymore....</div><div class="ttdef"><b>Definition</b> SharedPtr.h:10</div></div>
<div class="ttc" id="aclassxii_stream_reader_htm"><div class="ttname"><a href="../../d4/d5e/classxii_stream_reader.htm">xiiStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclassxii_stream_reader_htm_adaf383aa54a7b140435ea4df72771f52"><div class="ttname"><a href="../../d4/d5e/classxii_stream_reader.htm#adaf383aa54a7b140435ea4df72771f52">xiiStreamReader::ReadBytes</a></div><div class="ttdeci">virtual xiiUInt64 ReadBytes(void *pReadBuffer, xiiUInt64 uiBytesToRead)=0</div><div class="ttdoc">Reads a raw number of bytes into the read buffer, this is the only method which has to be implemented...</div></div>
<div class="ttc" id="aclassxii_variant_htm"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm">xiiVariant</a></div><div class="ttdoc">xiiVariant is a class that can store different types of variables, which is useful in situations wher...</div><div class="ttdef"><b>Definition</b> Variant.h:44</div></div>
<div class="ttc" id="anamespacexii_math_htm_a6bbce1588f70c91d6cad87e82a0238c1"><div class="ttname"><a href="../../d1/d37/namespacexii_math.htm#a6bbce1588f70c91d6cad87e82a0238c1">xiiMath::MaxValue</a></div><div class="ttdeci">constexpr TYPE MaxValue()</div><div class="ttdoc">Returns the largest possible positive value (that is not infinity).</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:56</div></div>
<div class="ttc" id="astructxii_time_htm"><div class="ttname"><a href="../../d7/dc1/structxii_time.htm">xiiTime</a></div><div class="ttdoc">The time class encapsulates a double value storing the time in seconds.</div><div class="ttdef"><b>Definition</b> Time.h:12</div></div>
<div class="ttc" id="astructxii_typed_pointer_htm"><div class="ttname"><a href="../../d2/de4/structxii_typed_pointer.htm">xiiTypedPointer</a></div><div class="ttdoc">A typed raw pointer.</div><div class="ttdef"><b>Definition</b> TypedPointer.h:13</div></div>
<div class="ttc" id="astructxii_visual_script_data_description_1_1_data_offset_htm"><div class="ttname"><a href="../../d6/de6/structxii_visual_script_data_description_1_1_data_offset.htm">xiiVisualScriptDataDescription::DataOffset</a></div><div class="ttdef"><b>Definition</b> VisualScriptData.h:10</div></div>
<div class="ttc" id="astructxii_visual_script_graph_description_1_1_embedded_array_or_pointer_htm"><div class="ttname"><a href="../../dd/dbe/structxii_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">xiiVisualScriptGraphDescription::EmbeddedArrayOrPointer</a></div><div class="ttdef"><b>Definition</b> VisualScript.h:142</div></div>
<div class="ttc" id="astructxii_visual_script_graph_description_1_1_node_htm"><div class="ttname"><a href="../../d7/d63/structxii_visual_script_graph_description_1_1_node.htm">xiiVisualScriptGraphDescription::Node</a></div><div class="ttdef"><b>Definition</b> VisualScript.h:187</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_260e93b09b1f607a5a2893957a57de87.htm">EnginePlugins</a></li><li class="navelem"><a class="el" href="../../dir_3266bd805ee584df34f5341cedfb8b04.htm">VisualScriptPlugin</a></li><li class="navelem"><a class="el" href="../../dir_886e1842723a3fe5bcebc610b130415c.htm">Runtime</a></li><li class="navelem"><a class="el" href="../../dir_7fecc563020f3f91282253717756fc07.htm">Implementation</a></li><li class="navelem"><b>VisualScript_inl.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:02:14 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
