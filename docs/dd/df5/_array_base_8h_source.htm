<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Engine/Foundation/Containers/ArrayBase.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XII Engine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/df5/_array_base_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ArrayBase.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Algorithm/Sorting.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/ArrayPtr.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_INTEROP_STL_SPAN)</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#  include &lt;span&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#ifndef xiiInvalidIndex</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#  define xiiInvalidIndex 0xFFFFFFFFU</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm">   18</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase</a></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a85ea62d9f68f7a08c0d71d4f60ec4d7b">   22</a></span>&#160;  <a class="code" href="../../da/d4c/classxii_array_base.htm#a85ea62d9f68f7a08c0d71d4f60ec4d7b">xiiArrayBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <a class="code" href="../../da/d4c/classxii_array_base.htm#a1aa63ec4e48bbcd78206f1a4d0ed3412">~xiiArrayBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#aba1caa3a7fd339b97a42b7a7c6462440">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">operator</span> <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keyword">operator</span> <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#ad70f0262f264a918f64d8018bc85054d">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a950bfcf80cb60c580a815c3a4fafdbe2">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a950bfcf80cb60c580a815c3a4fafdbe2">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../da/d4c/classxii_array_base.htm#a2efa1906d1123183f18a70fc2a008fc3">operator[]</a>(xiiUInt32 uiIndex) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  T&amp; <a class="code" href="../../da/d4c/classxii_array_base.htm#a2efa1906d1123183f18a70fc2a008fc3">operator[]</a>(xiiUInt32 uiIndex); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">SetCount</a>(xiiUInt32 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">SetCount</a>(xiiUInt32 uiCount, <span class="keyword">const</span> T&amp; fillValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = <span class="keywordtype">void</span>&gt;                     <span class="comment">// Template is used to only conditionally compile this function in when it is actually used.</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">SetCountUninitialized</a>(xiiUInt32 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#ac9e0425e1b0ae3e9a958af289d336b34">EnsureCount</a>(xiiUInt32 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  xiiUInt32 <a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#ab517ef07fbed3ecc766ac24394ae1fc8">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a4ae4bf9cd46a5736ddeed4672e84d05c">Contains</a>(<span class="keyword">const</span> T&amp; value) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#aab14a4d946d6fc3a98cb0907b830d829">InsertAt</a>(xiiUInt32 uiIndex, <span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#aab14a4d946d6fc3a98cb0907b830d829">InsertAt</a>(xiiUInt32 uiIndex, T&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a0f15ffe8d9d4cf30dbfe85f2355f87f3">InsertRange</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; range, xiiUInt32 uiIndex); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a79122e86b6c0895983dde7da738f4f7e">RemoveAndCopy</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#af44f4640654ede7c5f3b6dea920fc852">RemoveAndSwap</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a37ed2d14e39f124a0e4b3afad19615d0">RemoveAtAndCopy</a>(xiiUInt32 uiIndex, xiiUInt32 uiNumElements = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#af88e03749773adddbbbac8389963c69f">RemoveAtAndSwap</a>(xiiUInt32 uiIndex, xiiUInt32 uiNumElements = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  xiiUInt32 <a class="code" href="../../da/d4c/classxii_array_base.htm#a3f1d04afc7c0b78048a6ae00f0dad616">IndexOf</a>(<span class="keyword">const</span> T&amp; value, xiiUInt32 uiStartIndex = 0) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  xiiUInt32 <a class="code" href="../../da/d4c/classxii_array_base.htm#a33d696c060495085bcdd4a9774959179">LastIndexOf</a>(<span class="keyword">const</span> T&amp; value, xiiUInt32 uiStartIndex = xiiInvalidIndex) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  T&amp; <a class="code" href="../../da/d4c/classxii_array_base.htm#af8b150ecd75941f71981db12f78c70b2">ExpandAndGetRef</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  T* <a class="code" href="../../da/d4c/classxii_array_base.htm#ae7c9f257c3d2dad1fd92d8b80465e22c">ExpandBy</a>(xiiUInt32 uiNumNewItems);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">PushBack</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">PushBack</a>(T&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#ab61a71e4322d8397a82a6d37c3fb9a33">PushBackUnchecked</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#ab61a71e4322d8397a82a6d37c3fb9a33">PushBackUnchecked</a>(T&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#ab24631562df0f7a1c2f991000490b5c6">PushBackRange</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a>&amp; range); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a27e05cf9ccd5e5c2434612da12648733">PopBack</a>(xiiUInt32 uiCountToRemove = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  T&amp; <a class="code" href="../../da/d4c/classxii_array_base.htm#a4780d4cda12bb4316d96e80c7e976091">PeekBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../da/d4c/classxii_array_base.htm#a4780d4cda12bb4316d96e80c7e976091">PeekBack</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#ad02c74f222eb78fe41627cc3b41fa3ad">Sort</a>(<span class="keyword">const</span> Comparer&amp; comparer); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#ad02c74f222eb78fe41627cc3b41fa3ad">Sort</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  T* <a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>();</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keyword">const</span> T* <a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;T&gt;</a> <a class="code" href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">GetArrayPtr</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const T&gt;</a> <a class="code" href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">GetArrayPtr</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;typename xiiArrayPtr&lt;T&gt;::ByteType</a>&gt; <a class="code" href="../../da/d4c/classxii_array_base.htm#a479716d5712790819c5f5130c7985f15">GetByteArrayPtr</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;typename xiiArrayPtr&lt;const T&gt;::ByteType</a>&gt; <a class="code" href="../../da/d4c/classxii_array_base.htm#a479716d5712790819c5f5130c7985f15">GetByteArrayPtr</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ad8080a54880fc59025d5aa3eed8cec21">  160</a></span>&#160;  xiiUInt32 <a class="code" href="../../da/d4c/classxii_array_base.htm#ad8080a54880fc59025d5aa3eed8cec21">GetCapacity</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">m_uiCapacity</a>; }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keyword">using</span> const_iterator         = <span class="keyword">const</span> T*;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keyword">using</span> const_reverse_iterator = <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">using</span> iterator               = T*;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keyword">using</span> reverse_iterator       = <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_INTEROP_STL_SPAN)</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keyword">operator</span> std::span&lt;const T&gt;()<span class="keyword"> const</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">return</span> std::span(<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>()));</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">operator</span> std::span&lt;T&gt;()</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  {</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">return</span> std::span(<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>()));</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  }</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  std::span&lt;T&gt; GetSpan()</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  {</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">return</span> std::span(<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>()));</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  std::span&lt;const T&gt; GetSpan()<span class="keyword"> const</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">return</span> std::span(<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>()));</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keywordtype">void</span> DoSwap(<a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; other);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#ac72646567deadcaaf4f24b6ce2b61a4d">  193</a></span>&#160;  T* <a class="code" href="../../da/d4c/classxii_array_base.htm#ac72646567deadcaaf4f24b6ce2b61a4d">m_pElements</a> = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a466dea27f227cab87a867becebce4bcb">  196</a></span>&#160;  xiiUInt32 <a class="code" href="../../da/d4c/classxii_array_base.htm#a466dea27f227cab87a867becebce4bcb">m_uiCount</a> = 0;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">  199</a></span>&#160;  xiiUInt32 <a class="code" href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">m_uiCapacity</a> = 0;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;};</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">typename</span> xiiArrayBase&lt;T, Derived&gt;::iterator begin(<a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;{</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordflow">return</span> ref_container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>();</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keyword">typename</span> xiiArrayBase&lt;T, Derived&gt;::const_iterator begin(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;{</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keyword">typename</span> xiiArrayBase&lt;T, Derived&gt;::const_iterator cbegin(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;{</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>();</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::reverse_iterator</a> rbegin(<a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;{</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::reverse_iterator</a>(ref_container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() + ref_container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>() - 1);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a> rbegin(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;{</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() + container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>() - 1);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a> crbegin(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;{</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() + container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>() - 1);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keyword">typename</span> xiiArrayBase&lt;T, Derived&gt;::iterator end(<a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="keywordflow">return</span> ref_container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() + ref_container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>();</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;}</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">typename</span> xiiArrayBase&lt;T, Derived&gt;::const_iterator end(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;{</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() + container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>();</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keyword">typename</span> xiiArrayBase&lt;T, Derived&gt;::const_iterator cend(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() + container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">GetCount</a>();</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::reverse_iterator</a> rend(<a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;{</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::reverse_iterator</a>(ref_container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() - 1);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a> rend(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;{</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() - 1);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a> crend(<span class="keyword">const</span> <a class="code" href="../../da/d4c/classxii_array_base.htm">xiiArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">xiiArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">GetData</a>() - 1);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/ArrayBase_inl.h&gt;</span></div>
<div class="ttc" id="aclassxii_array_base_htm"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm">xiiArrayBase</a></div><div class="ttdoc">Base class for all array containers. Implements all the basic functionality that only requires a poin...</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:19</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a0f15ffe8d9d4cf30dbfe85f2355f87f3"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a0f15ffe8d9d4cf30dbfe85f2355f87f3">xiiArrayBase::InsertRange</a></div><div class="ttdeci">void InsertRange(const xiiArrayPtr&lt; const T &gt; &amp;range, xiiUInt32 uiIndex)</div><div class="ttdoc">Inserts all elements in the range starting at the given index, shifting the elements after the index.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:211</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a1aa63ec4e48bbcd78206f1a4d0ed3412"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a1aa63ec4e48bbcd78206f1a4d0ed3412">xiiArrayBase::~xiiArrayBase</a></div><div class="ttdeci">~xiiArrayBase()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:6</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a27e05cf9ccd5e5c2434612da12648733"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a27e05cf9ccd5e5c2434612da12648733">xiiArrayBase::PopBack</a></div><div class="ttdeci">void PopBack(xiiUInt32 uiCountToRemove=1)</div><div class="ttdoc">Removes count elements from the end of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:371</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a2ac4701f79554bcc89ba1a2b0ad5f9ad"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a2ac4701f79554bcc89ba1a2b0ad5f9ad">xiiArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:417</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a2efa1906d1123183f18a70fc2a008fc3"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a2efa1906d1123183f18a70fc2a008fc3">xiiArrayBase::operator[]</a></div><div class="ttdeci">const T &amp; operator[](xiiUInt32 uiIndex) const</div><div class="ttdoc">Returns the element at the given index. Does bounds checks in debug builds.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:82</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a33d696c060495085bcdd4a9774959179"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a33d696c060495085bcdd4a9774959179">xiiArrayBase::LastIndexOf</a></div><div class="ttdeci">xiiUInt32 LastIndexOf(const T &amp;value, xiiUInt32 uiStartIndex=xiiInvalidIndex) const</div><div class="ttdoc">Searches for the last occurrence of the given value and returns its index or xiiInvalidIndex if not f...</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:289</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a37ed2d14e39f124a0e4b3afad19615d0"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a37ed2d14e39f124a0e4b3afad19615d0">xiiArrayBase::RemoveAtAndCopy</a></div><div class="ttdeci">void RemoveAtAndCopy(xiiUInt32 uiIndex, xiiUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:245</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a3f1d04afc7c0b78048a6ae00f0dad616"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a3f1d04afc7c0b78048a6ae00f0dad616">xiiArrayBase::IndexOf</a></div><div class="ttdeci">xiiUInt32 IndexOf(const T &amp;value, xiiUInt32 uiStartIndex=0) const</div><div class="ttdoc">Searches for the first occurrence of the given value and returns its index or xiiInvalidIndex if not ...</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:276</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4071fdcb9041d9f4ad7ffabccdf8eb5e"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4071fdcb9041d9f4ad7ffabccdf8eb5e">xiiArrayBase::m_uiCapacity</a></div><div class="ttdeci">xiiUInt32 m_uiCapacity</div><div class="ttdoc">The number of elements which can be stored in the array without re-allocating.</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:199</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4114fd2fe9dc9b02ce50e8d723515c24"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4114fd2fe9dc9b02ce50e8d723515c24">xiiArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(xiiUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:147</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a43100f93e19bb795ea0980dae2b28e0b"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a43100f93e19bb795ea0980dae2b28e0b">xiiArrayBase::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:164</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a466dea27f227cab87a867becebce4bcb"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a466dea27f227cab87a867becebce4bcb">xiiArrayBase::m_uiCount</a></div><div class="ttdeci">xiiUInt32 m_uiCount</div><div class="ttdoc">The number of elements used from the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:196</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4780d4cda12bb4316d96e80c7e976091"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4780d4cda12bb4316d96e80c7e976091">xiiArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:380</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a479716d5712790819c5f5130c7985f15"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a479716d5712790819c5f5130c7985f15">xiiArrayBase::GetByteArrayPtr</a></div><div class="ttdeci">xiiArrayPtr&lt; typename xiiArrayPtr&lt; T &gt;::ByteType &gt; GetByteArrayPtr()</div><div class="ttdoc">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:447</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a4ae4bf9cd46a5736ddeed4672e84d05c"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a4ae4bf9cd46a5736ddeed4672e84d05c">xiiArrayBase::Contains</a></div><div class="ttdeci">bool Contains(const T &amp;value) const</div><div class="ttdoc">Checks whether the given value can be found in the array. O(n) complexity.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:183</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a706ff45a8f4a199483ba8053517c8d2a"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a706ff45a8f4a199483ba8053517c8d2a">xiiArrayBase::GetArrayPtr</a></div><div class="ttdeci">xiiArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:435</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a7609a39613cdc57b56d12537b3ba4d48"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a7609a39613cdc57b56d12537b3ba4d48">xiiArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:170</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a79122e86b6c0895983dde7da738f4f7e"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a79122e86b6c0895983dde7da738f4f7e">xiiArrayBase::RemoveAndCopy</a></div><div class="ttdeci">bool RemoveAndCopy(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:221</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a85ea62d9f68f7a08c0d71d4f60ec4d7b"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a85ea62d9f68f7a08c0d71d4f60ec4d7b">xiiArrayBase::xiiArrayBase</a></div><div class="ttdeci">xiiArrayBase()</div><div class="ttdoc">Constructor.</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a8b86f58a2097871da0e0b91eecc823e4"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a8b86f58a2097871da0e0b91eecc823e4">xiiArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:325</div></div>
<div class="ttc" id="aclassxii_array_base_htm_a950bfcf80cb60c580a815c3a4fafdbe2"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#a950bfcf80cb60c580a815c3a4fafdbe2">xiiArrayBase::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const xiiArrayBase&lt; T, Derived &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:70</div></div>
<div class="ttc" id="aclassxii_array_base_htm_aab14a4d946d6fc3a98cb0907b830d829"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#aab14a4d946d6fc3a98cb0907b830d829">xiiArrayBase::InsertAt</a></div><div class="ttdeci">void InsertAt(xiiUInt32 uiIndex, const T &amp;value)</div><div class="ttdoc">Inserts value at index by shifting all following elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:189</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ab24631562df0f7a1c2f991000490b5c6"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ab24631562df0f7a1c2f991000490b5c6">xiiArrayBase::PushBackRange</a></div><div class="ttdeci">void PushBackRange(const xiiArrayPtr&lt; const T &gt; &amp;range)</div><div class="ttdoc">Pushes all elements in range at the end of the array. Increases the capacity if necessary.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:361</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ab517ef07fbed3ecc766ac24394ae1fc8"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ab517ef07fbed3ecc766ac24394ae1fc8">xiiArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:176</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ab61a71e4322d8397a82a6d37c3fb9a33"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ab61a71e4322d8397a82a6d37c3fb9a33">xiiArrayBase::PushBackUnchecked</a></div><div class="ttdeci">void PushBackUnchecked(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array. Does NOT ensure capacity.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:343</div></div>
<div class="ttc" id="aclassxii_array_base_htm_aba1caa3a7fd339b97a42b7a7c6462440"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#aba1caa3a7fd339b97a42b7a7c6462440">xiiArrayBase::operator=</a></div><div class="ttdeci">void operator=(const xiiArrayPtr&lt; const T &gt; &amp;rhs)</div><div class="ttdoc">Copies the data from some other contiguous array into this one.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:13</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ac72646567deadcaaf4f24b6ce2b61a4d"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ac72646567deadcaaf4f24b6ce2b61a4d">xiiArrayBase::m_pElements</a></div><div class="ttdeci">T * m_pElements</div><div class="ttdoc">Element-type access to m_Data.</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:193</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ac9e0425e1b0ae3e9a958af289d336b34"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ac9e0425e1b0ae3e9a958af289d336b34">xiiArrayBase::EnsureCount</a></div><div class="ttdeci">void EnsureCount(xiiUInt32 uiCount)</div><div class="ttdoc">Ensures the container has at least uiCount elements. Ie. calls SetCount() if the container has fewer ...</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:136</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ad02c74f222eb78fe41627cc3b41fa3ad"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ad02c74f222eb78fe41627cc3b41fa3ad">xiiArrayBase::Sort</a></div><div class="ttdeci">void Sort()</div><div class="ttdoc">Sort with default comparer.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:407</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ad70f0262f264a918f64d8018bc85054d"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ad70f0262f264a918f64d8018bc85054d">xiiArrayBase::operator==</a></div><div class="ttdeci">bool operator==(const xiiArrayBase&lt; T, Derived &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:61</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ad8080a54880fc59025d5aa3eed8cec21"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ad8080a54880fc59025d5aa3eed8cec21">xiiArrayBase::GetCapacity</a></div><div class="ttdeci">xiiUInt32 GetCapacity() const</div><div class="ttdoc">Returns the reserved number of elements that the array can hold without reallocating.</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:160</div></div>
<div class="ttc" id="aclassxii_array_base_htm_ae7c9f257c3d2dad1fd92d8b80465e22c"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#ae7c9f257c3d2dad1fd92d8b80465e22c">xiiArrayBase::ExpandBy</a></div><div class="ttdeci">T * ExpandBy(xiiUInt32 uiNumNewItems)</div><div class="ttdoc">Expands the array by N new items and returns a pointer to the first new one.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:318</div></div>
<div class="ttc" id="aclassxii_array_base_htm_aeb9f05e6229fcca31131a822a99bc1f9"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#aeb9f05e6229fcca31131a822a99bc1f9">xiiArrayBase::SetCount</a></div><div class="ttdeci">void SetCount(xiiUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:98</div></div>
<div class="ttc" id="aclassxii_array_base_htm_af44f4640654ede7c5f3b6dea920fc852"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#af44f4640654ede7c5f3b6dea920fc852">xiiArrayBase::RemoveAndSwap</a></div><div class="ttdeci">bool RemoveAndSwap(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:233</div></div>
<div class="ttc" id="aclassxii_array_base_htm_af88e03749773adddbbbac8389963c69f"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#af88e03749773adddbbbac8389963c69f">xiiArrayBase::RemoveAtAndSwap</a></div><div class="ttdeci">void RemoveAtAndSwap(xiiUInt32 uiIndex, xiiUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:256</div></div>
<div class="ttc" id="aclassxii_array_base_htm_af8b150ecd75941f71981db12f78c70b2"><div class="ttname"><a href="../../da/d4c/classxii_array_base.htm#af8b150ecd75941f71981db12f78c70b2">xiiArrayBase::ExpandAndGetRef</a></div><div class="ttdeci">T &amp; ExpandAndGetRef()</div><div class="ttdoc">Grows the array by one element and returns a reference to the newly created element.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:302</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:37</div></div>
<div class="ttc" id="astructconst__reverse__pointer__iterator_htm"><div class="ttname"><a href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a></div><div class="ttdoc">Base class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition:</b> ArrayIterator.h:148</div></div>
<div class="ttc" id="astructreverse__pointer__iterator_htm"><div class="ttname"><a href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a></div><div class="ttdoc">Non-Const class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition:</b> ArrayIterator.h:211</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_7f59ab18dbc50035dfc0ee7070867286.htm">Containers</a></li><li class="navelem"><b>ArrayBase.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 12:44:14 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
