<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/CodeUtils/Expression/ExpressionAST.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/df9/_expression_a_s_t_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ExpressionAST.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/CodeUtils/Expression/ExpressionDeclarations.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/StackAllocator.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d8e/classxii_d_g_m_l_graph.htm">xiiDGMLGraph</a>;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="../../d4/d5b/classxii_expression_a_s_t.htm">    8</a></span>&#160;<span class="keyword">class </span>XII_FOUNDATION_DLL <a class="code" href="../../d4/d5b/classxii_expression_a_s_t.htm">xiiExpressionAST</a></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;{</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../d4/db4/structxii_expression_a_s_t_1_1_node_type.htm">   11</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d4/db4/structxii_expression_a_s_t_1_1_node_type.htm">NodeType</a></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  {</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keyword">using</span> StorageType = xiiUInt8;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="keyword">enum</span> Enum</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    {</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;      Invalid,</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;      Default = Invalid,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      <span class="comment">// Unary</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;      FirstUnary,</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;      Negate,</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;      Absolute,</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;      Saturate,</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;      Sqrt,</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      Exp,</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      Ln,</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      Log2,</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      Log10,</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      Pow2,</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      Sin,</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      Cos,</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      Tan,</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      ASin,</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;      ACos,</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      ATan,</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      RadToDeg,</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;      DegToRad,</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      Round,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      Floor,</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      Ceil,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      Trunc,</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      Frac,</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      Length,</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      Normalize,</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      BitwiseNot,</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;      LogicalNot,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      All,</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      Any,</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      TypeConversion,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      LastUnary,</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="comment">// Binary</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      FirstBinary,</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      Add,</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      Subtract,</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      Multiply,</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      Divide,</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      Modulo,</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      Log,</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      Pow,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      Min,</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;      Max,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      Dot,</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      Cross,</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      Reflect,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      BitshiftLeft,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      BitshiftRight,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      BitwiseAnd,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;      BitwiseXor,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;      BitwiseOr,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      Equal,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      NotEqual,</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      Less,</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      LessEqual,</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      Greater,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      GreaterEqual,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      LogicalAnd,</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      LogicalOr,</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      LastBinary,</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <span class="comment">// Ternary</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      FirstTernary,</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      Clamp,</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;      Select,</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      Lerp,</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      LastTernary,</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;      <a class="code" href="../../da/dcc/structxii_expression_a_s_t_1_1_constant.htm">Constant</a>,</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <a class="code" href="../../d6/da0/structxii_expression_a_s_t_1_1_swizzle.htm">Swizzle</a>,</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <a class="code" href="../../d0/d81/structxii_expression_a_s_t_1_1_input.htm">Input</a>,</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      <a class="code" href="../../d8/d81/structxii_expression_a_s_t_1_1_output.htm">Output</a>,</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      <a class="code" href="../../db/d29/structxii_expression_a_s_t_1_1_function_call.htm">FunctionCall</a>,</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <a class="code" href="../../d2/d5c/structxii_expression_a_s_t_1_1_constructor_call.htm">ConstructorCall</a>,</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      Count</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    };</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsUnary(Enum nodeType);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsBinary(Enum nodeType);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsTernary(Enum nodeType);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsConstant(Enum nodeType);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsSwizzle(Enum nodeType);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsInput(Enum nodeType);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsOutput(Enum nodeType);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsFunctionCall(Enum nodeType);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsConstructorCall(Enum nodeType);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsCommutative(Enum nodeType);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> AlwaysReturnsSingleElement(Enum nodeType);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetName(Enum nodeType);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  };</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm">  116</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm">DataType</a></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">using</span> StorageType = xiiUInt8;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664">  120</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664">Enum</a></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      Unknown,</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      Unknown2,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      Unknown3,</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      Unknown4,</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      Bool,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      Bool2,</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      Bool3,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      Bool4,</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      Int,</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      Int2,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      Int3,</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      Int4,</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      Float,</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      Float2,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      Float3,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      Float4,</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664a42421190206d1968a40f23e0102729bd">  142</a></span>&#160;      <a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664a42421190206d1968a40f23e0102729bd">Double</a>,  </div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664ae9ea85f1c09d7272be3ad8fd01ce6eca">  143</a></span>&#160;      <a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664ae9ea85f1c09d7272be3ad8fd01ce6eca">Double2</a>, </div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664a4bbb00ee3f1c46b3ce71348f127f7296">  144</a></span>&#160;      <a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664a4bbb00ee3f1c46b3ce71348f127f7296">Double3</a>, </div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664ae5b5a78ae7d11a24a579025cd44f7c22">  145</a></span>&#160;      <a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664ae5b5a78ae7d11a24a579025cd44f7c22">Double4</a>, </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      Count,</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;      Default = Unknown,</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    };</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariantType::Enum</a> GetVariantType(Enum dataType);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">static</span> Enum FromStreamType(<a class="code" href="../../de/d63/classxii_processing_stream.htm#a61a5f8d7dfbc0d30a08a35f369334b7d">xiiProcessingStream::DataType</a> dataType);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    XII_ALWAYS_INLINE <span class="keyword">static</span> <a class="code" href="../../dc/d2b/structxii_expression_1_1_register_type.htm#a8e6822d6ceb7fcec5cab5831d8704aea">xiiExpression::RegisterType::Enum</a> GetRegisterType(Enum dataType)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="../../dc/d2b/structxii_expression_1_1_register_type.htm#a8e6822d6ceb7fcec5cab5831d8704aea">xiiExpression::RegisterType::Enum</a><span class="keyword">&gt;</span>(dataType &gt;&gt; 2);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    XII_ALWAYS_INLINE <span class="keyword">static</span> Enum FromRegisterType(<a class="code" href="../../dc/d2b/structxii_expression_1_1_register_type.htm#a8e6822d6ceb7fcec5cab5831d8704aea">xiiExpression::RegisterType::Enum</a> registerType, xiiUInt32 uiElementCount = 1)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    {</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664">xiiExpressionAST::DataType::Enum</a><span class="keyword">&gt;</span>((registerType &lt;&lt; 2) + uiElementCount - 1);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    }</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    XII_ALWAYS_INLINE <span class="keyword">static</span> xiiUInt32 GetElementCount(Enum dataType) { <span class="keywordflow">return</span> (dataType &amp; 0x3) + 1; }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetName(Enum dataType);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  };</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../d0/d57/structxii_expression_a_s_t_1_1_vector_component.htm">  171</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d0/d57/structxii_expression_a_s_t_1_1_vector_component.htm">VectorComponent</a></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="keyword">using</span> StorageType = xiiUInt8;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">enum</span> Enum</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      X,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;      Y,</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      Z,</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      W,</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;      R = X,</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      G = Y,</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      B = Z,</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;      A = W,</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      Count,</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      Default = X</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    };</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetName(Enum vectorComponent);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keyword">static</span> Enum FromChar(xiiUInt32 uiChar);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  };</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">  197</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  {</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;NodeType&gt;</a> m_Type;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;DataType&gt;</a> m_ReturnType;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    xiiUInt8          m_uiOverloadIndex    = 0xFF;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    xiiUInt8          m_uiNumInputElements = 0;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    xiiUInt32 m_uiHash = 0;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  };</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="../../dd/d1d/structxii_expression_a_s_t_1_1_unary_operator.htm">  207</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../dd/d1d/structxii_expression_a_s_t_1_1_unary_operator.htm">UnaryOperator</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  {</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* m_pOperand = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  };</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="../../d2/da4/structxii_expression_a_s_t_1_1_binary_operator.htm">  212</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d2/da4/structxii_expression_a_s_t_1_1_binary_operator.htm">BinaryOperator</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  {</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* m_pLeftOperand  = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* m_pRightOperand = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  };</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="../../d7/d32/structxii_expression_a_s_t_1_1_ternary_operator.htm">  218</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d7/d32/structxii_expression_a_s_t_1_1_ternary_operator.htm">TernaryOperator</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* m_pFirstOperand  = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* m_pSecondOperand = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* m_pThirdOperand  = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  };</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="../../da/dcc/structxii_expression_a_s_t_1_1_constant.htm">  225</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../da/dcc/structxii_expression_a_s_t_1_1_constant.htm">Constant</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  {</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a> m_Value;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  };</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="../../d6/da0/structxii_expression_a_s_t_1_1_swizzle.htm">  230</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d6/da0/structxii_expression_a_s_t_1_1_swizzle.htm">Swizzle</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;VectorComponent&gt;</a> m_Components[4];</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    xiiUInt32                m_NumComponents = 0;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>*                    m_pExpression   = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  };</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="../../d0/d81/structxii_expression_a_s_t_1_1_input.htm">  237</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d0/d81/structxii_expression_a_s_t_1_1_input.htm">Input</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  {</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="../../d9/d0a/structxii_expression_1_1_stream_desc.htm">xiiExpression::StreamDesc</a> m_Desc;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  };</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="../../d8/d81/structxii_expression_a_s_t_1_1_output.htm">  242</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d8/d81/structxii_expression_a_s_t_1_1_output.htm">Output</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="../../d9/d0a/structxii_expression_1_1_stream_desc.htm">xiiExpression::StreamDesc</a> m_Desc;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>*                     m_pExpression = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  };</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="../../db/d29/structxii_expression_a_s_t_1_1_function_call.htm">  248</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../db/d29/structxii_expression_a_s_t_1_1_function_call.htm">FunctionCall</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  {</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray&lt;const xiiExpression::FunctionDesc*, 1&gt;</a> m_Descs;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray&lt;Node*, 8&gt;</a>                              m_Arguments;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  };</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="../../d2/d5c/structxii_expression_a_s_t_1_1_constructor_call.htm">  254</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d2/d5c/structxii_expression_a_s_t_1_1_constructor_call.htm">ConstructorCall</a> : <span class="keyword">public</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <a class="code" href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray&lt;Node*, 4&gt;</a> m_Arguments;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  };</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <a class="code" href="../../d4/d5b/classxii_expression_a_s_t.htm">xiiExpressionAST</a>();</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  ~<a class="code" href="../../d4/d5b/classxii_expression_a_s_t.htm">xiiExpressionAST</a>();</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <a class="code" href="../../dd/d1d/structxii_expression_a_s_t_1_1_unary_operator.htm">UnaryOperator</a>*   CreateUnaryOperator(NodeType::Enum type, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pOperand, <a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664">DataType::Enum</a> returnType = DataType::Unknown);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <a class="code" href="../../d2/da4/structxii_expression_a_s_t_1_1_binary_operator.htm">BinaryOperator</a>*  CreateBinaryOperator(NodeType::Enum type, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pLeftOperand, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pRightOperand);</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <a class="code" href="../../d7/d32/structxii_expression_a_s_t_1_1_ternary_operator.htm">TernaryOperator</a>* CreateTernaryOperator(NodeType::Enum type, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pFirstOperand, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pSecondOperand, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pThirdOperand);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <a class="code" href="../../da/dcc/structxii_expression_a_s_t_1_1_constant.htm">Constant</a>*        CreateConstant(<span class="keyword">const</span> <a class="code" href="../../db/d1a/classxii_variant.htm">xiiVariant</a>&amp; value, <a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664">DataType::Enum</a> dataType = DataType::Float);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <a class="code" href="../../d6/da0/structxii_expression_a_s_t_1_1_swizzle.htm">Swizzle</a>*         CreateSwizzle(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sSwizzle, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pExpression);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  <a class="code" href="../../d6/da0/structxii_expression_a_s_t_1_1_swizzle.htm">Swizzle</a>*         CreateSwizzle(<a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;VectorComponent&gt;</a> component, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pExpression);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  <a class="code" href="../../d6/da0/structxii_expression_a_s_t_1_1_swizzle.htm">Swizzle</a>*         CreateSwizzle(<a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a>&lt;<a class="code" href="../../de/dfd/structxii_enum.htm">xiiEnum&lt;VectorComponent&gt;</a>&gt; swizzle, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pExpression);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <a class="code" href="../../d0/d81/structxii_expression_a_s_t_1_1_input.htm">Input</a>*           CreateInput(<span class="keyword">const</span> <a class="code" href="../../d9/d0a/structxii_expression_1_1_stream_desc.htm">xiiExpression::StreamDesc</a>&amp; desc);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <a class="code" href="../../d8/d81/structxii_expression_a_s_t_1_1_output.htm">Output</a>*          CreateOutput(<span class="keyword">const</span> <a class="code" href="../../d9/d0a/structxii_expression_1_1_stream_desc.htm">xiiExpression::StreamDesc</a>&amp; desc, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pExpression);</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <a class="code" href="../../db/d29/structxii_expression_a_s_t_1_1_function_call.htm">FunctionCall</a>*    CreateFunctionCall(<span class="keyword">const</span> <a class="code" href="../../dc/d45/structxii_expression_1_1_function_desc.htm">xiiExpression::FunctionDesc</a>&amp; desc, <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;Node*&gt;</a> arguments);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <a class="code" href="../../db/d29/structxii_expression_a_s_t_1_1_function_call.htm">FunctionCall</a>*    CreateFunctionCall(<a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const xiiExpression::FunctionDesc&gt;</a> descs, <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;Node*&gt;</a> arguments);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <a class="code" href="../../d2/d5c/structxii_expression_a_s_t_1_1_constructor_call.htm">ConstructorCall</a>* CreateConstructorCall(<a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664">DataType::Enum</a> dataType, <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;Node*&gt;</a> arguments);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  <a class="code" href="../../d2/d5c/structxii_expression_a_s_t_1_1_constructor_call.htm">ConstructorCall</a>* CreateConstructorCall(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pOldValue, <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNewValue, <a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPartialAssignmentMask);</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;Node*&gt;</a>       GetChildren(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr&lt;const Node*&gt;</a> GetChildren(<span class="keyword">const</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="keywordtype">void</span> PrintGraph(<a class="code" href="../../d1/d8e/classxii_d_g_m_l_graph.htm">xiiDGMLGraph</a>&amp; ref_graph) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  <a class="code" href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray&lt;Output*, 8&gt;</a> m_OutputNodes;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  <span class="comment">// Transforms</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* TypeDeductionAndConversion(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* ReplaceVectorInstructions(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* ScalarizeVectorInstructions(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* ReplaceUnsupportedInstructions(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* FoldConstants(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* CommonSubexpressionElimination(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* Validate(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <a class="code" href="../../dd/dad/structxii_result.htm">xiiResult</a> ScalarizeOutputs();</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  <span class="keywordtype">void</span> ResolveOverloads(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664">DataType::Enum</a> GetExpectedChildDataType(<span class="keyword">const</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode, xiiUInt32 uiChildIndex);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> UpdateHash(<a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual(<span class="keyword">const</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNodeA, <span class="keyword">const</span> <a class="code" href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">Node</a>* pNodeB);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <a class="code" href="../../de/d0e/classxii_stack_allocator.htm">xiiStackAllocator&lt;&gt;</a> m_Allocator;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <a class="code" href="../../d6/d31/classxii_set.htm">xiiSet&lt;xiiExpression::FunctionDesc&gt;</a> m_FunctionDescs;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable&lt;xiiUInt32, xiiSmallArray&lt;Node*, 1&gt;</a>&gt; m_NodeDeduplicationTable;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructxii_expression_a_s_t_1_1_binary_operator_htm"><div class="ttname"><a href="../../d2/da4/structxii_expression_a_s_t_1_1_binary_operator.htm">xiiExpressionAST::BinaryOperator</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:212</div></div>
<div class="ttc" id="astructxii_enum_htm"><div class="ttname"><a href="../../de/dfd/structxii_enum.htm">xiiEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition:</b> Enum.h:37</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_unary_operator_htm"><div class="ttname"><a href="../../dd/d1d/structxii_expression_a_s_t_1_1_unary_operator.htm">xiiExpressionAST::UnaryOperator</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:207</div></div>
<div class="ttc" id="aclassxii_array_ptr_htm"><div class="ttname"><a href="../../d0/d60/classxii_array_ptr.htm">xiiArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:36</div></div>
<div class="ttc" id="aclassxii_variant_htm"><div class="ttname"><a href="../../db/d1a/classxii_variant.htm">xiiVariant</a></div><div class="ttdoc">xiiVariant is a class that can store different types of variables, which is useful in situations wher...</div><div class="ttdef"><b>Definition:</b> Variant.h:43</div></div>
<div class="ttc" id="astructxii_variant_type_htm_a38d867476ba7137c38a09976ece9ee6b"><div class="ttname"><a href="../../dd/dba/structxii_variant_type.htm#a38d867476ba7137c38a09976ece9ee6b">xiiVariantType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdoc">This enum describes the type of data that is currently stored inside the variant. Note that changes t...</div><div class="ttdef"><b>Definition:</b> VariantType.h:25</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_data_type_htm_a3f35cb13d8925930f4a369337d81e664ae9ea85f1c09d7272be3ad8fd01ce6eca"><div class="ttname"><a href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664ae9ea85f1c09d7272be3ad8fd01ce6eca">xiiExpressionAST::DataType::Double2</a></div><div class="ttdeci">@ Double2</div><div class="ttdoc">Unsupported.</div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:143</div></div>
<div class="ttc" id="aclassxii_set_htm"><div class="ttname"><a href="../../d6/d31/classxii_set.htm">xiiSet&lt; xiiExpression::FunctionDesc &gt;</a></div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_vector_component_htm"><div class="ttname"><a href="../../d0/d57/structxii_expression_a_s_t_1_1_vector_component.htm">xiiExpressionAST::VectorComponent</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:171</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_ternary_operator_htm"><div class="ttname"><a href="../../d7/d32/structxii_expression_a_s_t_1_1_ternary_operator.htm">xiiExpressionAST::TernaryOperator</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:218</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_swizzle_htm"><div class="ttname"><a href="../../d6/da0/structxii_expression_a_s_t_1_1_swizzle.htm">xiiExpressionAST::Swizzle</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:230</div></div>
<div class="ttc" id="aclassxii_hybrid_array_htm"><div class="ttname"><a href="../../dc/da9/classxii_hybrid_array.htm">xiiHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition:</b> HybridArray.h:11</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_data_type_htm_a3f35cb13d8925930f4a369337d81e664"><div class="ttname"><a href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664">xiiExpressionAST::DataType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:120</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_data_type_htm_a3f35cb13d8925930f4a369337d81e664ae5b5a78ae7d11a24a579025cd44f7c22"><div class="ttname"><a href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664ae5b5a78ae7d11a24a579025cd44f7c22">xiiExpressionAST::DataType::Double4</a></div><div class="ttdeci">@ Double4</div><div class="ttdoc">Unsupported.</div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:145</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_output_htm"><div class="ttname"><a href="../../d8/d81/structxii_expression_a_s_t_1_1_output.htm">xiiExpressionAST::Output</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:242</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_data_type_htm_a3f35cb13d8925930f4a369337d81e664a4bbb00ee3f1c46b3ce71348f127f7296"><div class="ttname"><a href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664a4bbb00ee3f1c46b3ce71348f127f7296">xiiExpressionAST::DataType::Double3</a></div><div class="ttdeci">@ Double3</div><div class="ttdoc">Unsupported.</div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:144</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_constructor_call_htm"><div class="ttname"><a href="../../d2/d5c/structxii_expression_a_s_t_1_1_constructor_call.htm">xiiExpressionAST::ConstructorCall</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:254</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_node_type_htm"><div class="ttname"><a href="../../d4/db4/structxii_expression_a_s_t_1_1_node_type.htm">xiiExpressionAST::NodeType</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:11</div></div>
<div class="ttc" id="astructxii_expression_1_1_function_desc_htm"><div class="ttname"><a href="../../dc/d45/structxii_expression_1_1_function_desc.htm">xiiExpression::FunctionDesc</a></div><div class="ttdoc">Describes an expression function and its signature, e.g. how many input parameter it has and their ty...</div><div class="ttdef"><b>Definition:</b> ExpressionDeclarations.h:71</div></div>
<div class="ttc" id="aclassxii_stack_allocator_htm"><div class="ttname"><a href="../../de/d0e/classxii_stack_allocator.htm">xiiStackAllocator</a></div><div class="ttdef"><b>Definition:</b> StackAllocator.h:11</div></div>
<div class="ttc" id="aclassxii_d_g_m_l_graph_htm"><div class="ttname"><a href="../../d1/d8e/classxii_d_g_m_l_graph.htm">xiiDGMLGraph</a></div><div class="ttdoc">This class encapsulates building a DGML compatible graph.</div><div class="ttdef"><b>Definition:</b> DGMLWriter.h:9</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_input_htm"><div class="ttname"><a href="../../d0/d81/structxii_expression_a_s_t_1_1_input.htm">xiiExpressionAST::Input</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:237</div></div>
<div class="ttc" id="aclassxii_expression_a_s_t_htm"><div class="ttname"><a href="../../d4/d5b/classxii_expression_a_s_t.htm">xiiExpressionAST</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:8</div></div>
<div class="ttc" id="astructxii_result_htm"><div class="ttname"><a href="../../dd/dad/structxii_result.htm">xiiResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:54</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_constant_htm"><div class="ttname"><a href="../../da/dcc/structxii_expression_a_s_t_1_1_constant.htm">xiiExpressionAST::Constant</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:225</div></div>
<div class="ttc" id="aclassxii_hash_table_htm"><div class="ttname"><a href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a></div><div class="ttdef"><b>Definition:</b> HashTable.h:255</div></div>
<div class="ttc" id="aclassxii_small_array_htm"><div class="ttname"><a href="../../d6/d1f/classxii_small_array.htm">xiiSmallArray&lt; const xiiExpression::FunctionDesc *, 1 &gt;</a></div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_node_htm"><div class="ttname"><a href="../../d7/da4/structxii_expression_a_s_t_1_1_node.htm">xiiExpressionAST::Node</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:197</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_data_type_htm"><div class="ttname"><a href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm">xiiExpressionAST::DataType</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:116</div></div>
<div class="ttc" id="astructxii_expression_1_1_stream_desc_htm"><div class="ttname"><a href="../../d9/d0a/structxii_expression_1_1_stream_desc.htm">xiiExpression::StreamDesc</a></div><div class="ttdoc">Describes an input or output stream for a expression VM.</div><div class="ttdef"><b>Definition:</b> ExpressionDeclarations.h:56</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_data_type_htm_a3f35cb13d8925930f4a369337d81e664a42421190206d1968a40f23e0102729bd"><div class="ttname"><a href="../../d7/d8f/structxii_expression_a_s_t_1_1_data_type.htm#a3f35cb13d8925930f4a369337d81e664a42421190206d1968a40f23e0102729bd">xiiExpressionAST::DataType::Double</a></div><div class="ttdeci">@ Double</div><div class="ttdoc">Unsupported.</div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:142</div></div>
<div class="ttc" id="aclassxii_processing_stream_htm_a61a5f8d7dfbc0d30a08a35f369334b7d"><div class="ttname"><a href="../../de/d63/classxii_processing_stream.htm#a61a5f8d7dfbc0d30a08a35f369334b7d">xiiProcessingStream::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">The data types which can be stored in the stream. When adding new data types the GetDataTypeSize() of...</div><div class="ttdef"><b>Definition:</b> ProcessingStream.h:12</div></div>
<div class="ttc" id="astructxii_expression_1_1_register_type_htm_a8e6822d6ceb7fcec5cab5831d8704aea"><div class="ttname"><a href="../../dc/d2b/structxii_expression_1_1_register_type.htm#a8e6822d6ceb7fcec5cab5831d8704aea">xiiExpression::RegisterType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> ExpressionDeclarations.h:33</div></div>
<div class="ttc" id="astructxii_expression_a_s_t_1_1_function_call_htm"><div class="ttname"><a href="../../db/d29/structxii_expression_a_s_t_1_1_function_call.htm">xiiExpressionAST::FunctionCall</a></div><div class="ttdef"><b>Definition:</b> ExpressionAST.h:248</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_a310e74f255299a0e9ba52ecb9387fcd.htm">CodeUtils</a></li><li class="navelem"><a class="el" href="../../dir_51e0e3172f0ee149d61456fae3821a25.htm">Expression</a></li><li class="navelem"><b>ExpressionAST.h</b></li>
    <li class="footer">Generated on Thu Dec 28 2023 08:05:18 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
