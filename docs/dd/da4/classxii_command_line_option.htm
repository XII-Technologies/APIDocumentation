<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiCommandLineOption Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/da4/classxii_command_line_option.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../de/d79/classxii_command_line_option-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiCommandLineOption Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="../../dd/da4/classxii_command_line_option.htm" title="xiiCommandLineOption (and derived types) are used to define options that the application supports.">xiiCommandLineOption</a> (and derived types) are used to define options that the application supports.  
 <a href="../../dd/da4/classxii_command_line_option.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d4/dda/_command_line_options_8h_source.htm">CommandLineOptions.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for xiiCommandLineOption:</div>
<div class="dyncontent">
<div class="center"><img src="../../d6/d9b/classxii_command_line_option__inherit__graph.png" border="0" usemap="#xii_command_line_option_inherit__map" alt="Inheritance graph"/></div>
<map name="xii_command_line_option_inherit__map" id="xii_command_line_option_inherit__map">
<area shape="rect" title="xiiCommandLineOption (and derived types) are used to define options that the application supports." alt="" coords="404,132,579,159"/>
<area shape="rect" href="../../de/da9/classxii_command_line_option_doc.htm" title="xiiCommandLineOptionDoc can be used to document a command line option whose logic might be more compl..." alt="" coords="627,132,827,159"/>
<area shape="rect" href="../../dc/d54/classxii_enumerable.htm" title=" " alt="" coords="141,125,356,166"/>
<area shape="rect" href="../../d2/d38/classxii_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="5,132,93,159"/>
<area shape="rect" href="../../db/d51/classxii_command_line_option_bool.htm" title="This command line option exposes simple on/off switches." alt="" coords="879,5,1083,32"/>
<area shape="rect" href="../../dd/d8c/classxii_command_line_option_enum.htm" title="An &#39;enum&#39; option is a string option that only allows certain phrases (&#39;keys&#39;)." alt="" coords="875,56,1087,83"/>
<area shape="rect" href="../../db/d47/classxii_command_line_option_float.htm" title="This command line option exposes float values, optionally with a min/max range." alt="" coords="877,107,1085,133"/>
<area shape="rect" href="../../de/d58/classxii_command_line_option_int.htm" title="This command line option exposes integer values, optionally with a min/max range." alt="" coords="885,157,1077,184"/>
<area shape="rect" href="../../de/d4a/classxii_command_line_option_path.htm" title="This command line option exposes absolute paths. If the user provides a relative path,..." alt="" coords="880,208,1083,235"/>
<area shape="rect" href="../../d6/d63/classxii_command_line_option_string.htm" title="This command line option exposes simple string values." alt="" coords="875,259,1088,285"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a6db96aceade745ee4e75369b1926b11a"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#a6db96aceade745ee4e75369b1926b11a">LogAvailableModes</a> { <a class="el" href="../../dd/da4/classxii_command_line_option.htm#a6db96aceade745ee4e75369b1926b11aa68eec46437c384d8dad18d5464ebc35c">LogAvailableModes::Always</a>, 
<a class="el" href="../../dd/da4/classxii_command_line_option.htm#a6db96aceade745ee4e75369b1926b11aabcbc3c880a5324ca7a3026e27cbed21a">LogAvailableModes::IfHelpRequested</a>
 }</td></tr>
<tr class="separator:a6db96aceade745ee4e75369b1926b11a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeecfc1ea4f7297497d9e99f9274c8ac4"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#aeecfc1ea4f7297497d9e99f9274c8ac4">LogMode</a> { <br />
&#160;&#160;<a class="el" href="../../dd/da4/classxii_command_line_option.htm#aeecfc1ea4f7297497d9e99f9274c8ac4a6e7b34fa59e1bd229b207892956dc41c">LogMode::Never</a>, 
<a class="el" href="../../dd/da4/classxii_command_line_option.htm#aeecfc1ea4f7297497d9e99f9274c8ac4a4855854f683cb35c7c4035763c4963d5">LogMode::FirstTime</a>, 
<a class="el" href="../../dd/da4/classxii_command_line_option.htm#aeecfc1ea4f7297497d9e99f9274c8ac4a8d7dddecfd427ddb33711966c80f3c99">LogMode::FirstTimeIfSpecified</a>, 
<a class="el" href="../../dd/da4/classxii_command_line_option.htm#aeecfc1ea4f7297497d9e99f9274c8ac4a68eec46437c384d8dad18d5464ebc35c">LogMode::Always</a>, 
<br />
&#160;&#160;<a class="el" href="../../dd/da4/classxii_command_line_option.htm#aeecfc1ea4f7297497d9e99f9274c8ac4a1644dc20516cb1b423acc5b7cac81bcf">LogMode::AlwaysIfSpecified</a>
<br />
 }</td></tr>
<tr class="memdesc:aeecfc1ea4f7297497d9e99f9274c8ac4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes whether the value of an option (and whether something went wrong), should be printed to <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a>.  <a href="../../dd/da4/classxii_command_line_option.htm#aeecfc1ea4f7297497d9e99f9274c8ac4">More...</a><br /></td></tr>
<tr class="separator:aeecfc1ea4f7297497d9e99f9274c8ac4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a71c85d3a9182b4c27a9b5c60716002d2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#a71c85d3a9182b4c27a9b5c60716002d2">xiiCommandLineOption</a> (const char *szSortingGroup)</td></tr>
<tr class="separator:a71c85d3a9182b4c27a9b5c60716002d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd5e9be95b41de5b22e19d11cf6b5422"><td class="memItemLeft" align="right" valign="top"><a id="abd5e9be95b41de5b22e19d11cf6b5422"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#abd5e9be95b41de5b22e19d11cf6b5422">GetSortingGroup</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out) const</td></tr>
<tr class="memdesc:abd5e9be95b41de5b22e19d11cf6b5422"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the sorting group name to 'out'. <br /></td></tr>
<tr class="separator:abd5e9be95b41de5b22e19d11cf6b5422"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7fde9a9d111d47142dd71d0372f5572"><td class="memItemLeft" align="right" valign="top"><a id="ad7fde9a9d111d47142dd71d0372f5572"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#ad7fde9a9d111d47142dd71d0372f5572">GetOptions</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out) const =0</td></tr>
<tr class="memdesc:ad7fde9a9d111d47142dd71d0372f5572"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes all the supported options (e.g. '-arg') to 'out'. If more than one option is allowed, they should be separated with semicolons or pipes. <br /></td></tr>
<tr class="separator:ad7fde9a9d111d47142dd71d0372f5572"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a622401ba3e05a7a5c9ba9b83760f8aed"><td class="memItemLeft" align="right" valign="top"><a id="a622401ba3e05a7a5c9ba9b83760f8aed"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#a622401ba3e05a7a5c9ba9b83760f8aed">GetSplitOptions</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;outAll, <a class="el" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a>&lt; <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> &gt; &amp;splitOptions) const</td></tr>
<tr class="memdesc:a622401ba3e05a7a5c9ba9b83760f8aed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the supported option names (e.g. '-arg') as split strings. <br /></td></tr>
<tr class="separator:a622401ba3e05a7a5c9ba9b83760f8aed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5131e4e7a839d1ec2256861117930b1b"><td class="memItemLeft" align="right" valign="top"><a id="a5131e4e7a839d1ec2256861117930b1b"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#a5131e4e7a839d1ec2256861117930b1b">GetParamShortDesc</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out) const =0</td></tr>
<tr class="memdesc:a5131e4e7a839d1ec2256861117930b1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a very short description of the option (type). For example "&lt;int&gt;" or "&lt;enum&gt;". <br /></td></tr>
<tr class="separator:a5131e4e7a839d1ec2256861117930b1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace26f3fde11af81e3e9fb18704f73237"><td class="memItemLeft" align="right" valign="top"><a id="ace26f3fde11af81e3e9fb18704f73237"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#ace26f3fde11af81e3e9fb18704f73237">GetParamDefaultValueDesc</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out) const =0</td></tr>
<tr class="memdesc:ace26f3fde11af81e3e9fb18704f73237"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a very short string for the options default value. For example "0" or "auto". <br /></td></tr>
<tr class="separator:ace26f3fde11af81e3e9fb18704f73237"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cec1d300a92eba97dc08b65cb607ed6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#a2cec1d300a92eba97dc08b65cb607ed6">GetLongDesc</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out) const =0</td></tr>
<tr class="memdesc:a2cec1d300a92eba97dc08b65cb607ed6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a proper description of the option.  <a href="../../dd/da4/classxii_command_line_option.htm#a2cec1d300a92eba97dc08b65cb607ed6">More...</a><br /></td></tr>
<tr class="separator:a2cec1d300a92eba97dc08b65cb607ed6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1f2c3780fbcf391737400eb503597b"><td class="memItemLeft" align="right" valign="top"><a id="ade1f2c3780fbcf391737400eb503597b"></a>
virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#ade1f2c3780fbcf391737400eb503597b">GetType</a> ()=0</td></tr>
<tr class="memdesc:ade1f2c3780fbcf391737400eb503597b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string indicating the exact implementation type. <br /></td></tr>
<tr class="separator:ade1f2c3780fbcf391737400eb503597b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acc74e5bf3d5e0c46b80a35b7a5015af8"><td class="memItemLeft" align="right" valign="top"><a id="acc74e5bf3d5e0c46b80a35b7a5015af8"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#acc74e5bf3d5e0c46b80a35b7a5015af8">IsHelpRequested</a> (const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *pUtils=<a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>())</td></tr>
<tr class="memdesc:acc74e5bf3d5e0c46b80a35b7a5015af8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether a command line was passed that requests help output. <br /></td></tr>
<tr class="separator:acc74e5bf3d5e0c46b80a35b7a5015af8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a645bb1bb7247e659832ed959d7b499ea"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#a645bb1bb7247e659832ed959d7b499ea">RequireOptions</a> (const char *requiredOptions, <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> *pMissingOption=nullptr, const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *pUtils=<a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>())</td></tr>
<tr class="memdesc:a645bb1bb7247e659832ed959d7b499ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all required options are passed to the command line.  <a href="../../dd/da4/classxii_command_line_option.htm#a645bb1bb7247e659832ed959d7b499ea">More...</a><br /></td></tr>
<tr class="separator:a645bb1bb7247e659832ed959d7b499ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe0e8525d42b621be8a92fe5c4d5c849"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#abe0e8525d42b621be8a92fe5c4d5c849">LogAvailableOptions</a> (<a class="el" href="../../dd/da4/classxii_command_line_option.htm#a6db96aceade745ee4e75369b1926b11a">LogAvailableModes</a> mode, const char *szGroupFilter=nullptr, const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *pUtils=<a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>())</td></tr>
<tr class="memdesc:abe0e8525d42b621be8a92fe5c4d5c849"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints all available options to the <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a>.  <a href="../../dd/da4/classxii_command_line_option.htm#abe0e8525d42b621be8a92fe5c4d5c849">More...</a><br /></td></tr>
<tr class="separator:abe0e8525d42b621be8a92fe5c4d5c849"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fd2bc3da30ca627453c00cbaa9c6cd0"><td class="memItemLeft" align="right" valign="top"><a id="a7fd2bc3da30ca627453c00cbaa9c6cd0"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#a7fd2bc3da30ca627453c00cbaa9c6cd0">LogAvailableOptionsToBuffer</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out_Buffer, <a class="el" href="../../dd/da4/classxii_command_line_option.htm#a6db96aceade745ee4e75369b1926b11a">LogAvailableModes</a> mode, const char *szGroupFilter=nullptr, const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *pUtils=<a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>())</td></tr>
<tr class="memdesc:a7fd2bc3da30ca627453c00cbaa9c6cd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="../../dd/da4/classxii_command_line_option.htm#abe0e8525d42b621be8a92fe5c4d5c849" title="Prints all available options to the xiiLog.">LogAvailableOptions()</a> but captures the output from <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a> and returns it in an <a class="el" href="../../d4/dbb/classxii_string_builder.htm" title="xiiStringBuilder is a class that is meant for creating and modifying strings.">xiiStringBuilder</a>. <br /></td></tr>
<tr class="separator:a7fd2bc3da30ca627453c00cbaa9c6cd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classxii_no_base"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classxii_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d2/d38/classxii_no_base.htm">xiiNoBase</a></td></tr>
<tr class="memitem:ac03a1d9fba3babf7db68227be61737e6 inherit pub_static_methods_classxii_no_base"><td class="memItemLeft" align="right" valign="top"><a id="ac03a1d9fba3babf7db68227be61737e6"></a>
static const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:ac03a1d9fba3babf7db68227be61737e6 inherit pub_static_methods_classxii_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a6f889a54a4037899113fe77193c5fec1"><td class="memItemLeft" align="right" valign="top"><a id="a6f889a54a4037899113fe77193c5fec1"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szSortingGroup</b> = nullptr</td></tr>
<tr class="separator:a6f889a54a4037899113fe77193c5fec1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classxii_enumerable"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classxii_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../dc/d54/classxii_enumerable.htm">xiiEnumerable&lt; xiiCommandLineOption &gt;</a></td></tr>
<tr class="memitem:afe563009387fc95276982bb4b87094e0 inherit pro_attribs_classxii_enumerable"><td class="memItemLeft" align="right" valign="top"><a id="afe563009387fc95276982bb4b87094e0"></a>
<a class="el" href="../../dc/d54/classxii_enumerable.htm">xiiEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:afe563009387fc95276982bb4b87094e0 inherit pro_attribs_classxii_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="../../dd/da4/classxii_command_line_option.htm" title="xiiCommandLineOption (and derived types) are used to define options that the application supports.">xiiCommandLineOption</a> (and derived types) are used to define options that the application supports. </p>
<p>Command line options are created as global variables anywhere throughout the code, wherever they are needed. The point of using them over going through <a class="el" href="../../d0/d67/classxii_command_line_utils.htm" title="This is a helper class to parse command lines.">xiiCommandLineUtils</a> directly, is that the options can be listed automatically and thus an application can print all available options, when the user requests help.</p>
<p>Consequently, their main purpose is to make options discoverable and to document them in a consistent manner.</p>
<p>Additionally, classes like <a class="el" href="../../dd/d8c/classxii_command_line_option_enum.htm" title="An &#39;enum&#39; option is a string option that only allows certain phrases (&#39;keys&#39;).">xiiCommandLineOptionEnum</a> add functionality that makes some options easier to setup. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a6db96aceade745ee4e75369b1926b11a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6db96aceade745ee4e75369b1926b11a">&#9670;&nbsp;</a></span>LogAvailableModes</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../dd/da4/classxii_command_line_option.htm#a6db96aceade745ee4e75369b1926b11a">xiiCommandLineOption::LogAvailableModes</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a6db96aceade745ee4e75369b1926b11aa68eec46437c384d8dad18d5464ebc35c"></a>Always&#160;</td><td class="fielddoc"><p>Logs the available modes no matter what. </p>
</td></tr>
<tr><td class="fieldname"><a id="a6db96aceade745ee4e75369b1926b11aabcbc3c880a5324ca7a3026e27cbed21a"></a>IfHelpRequested&#160;</td><td class="fielddoc"><p>Only logs the modes, if '-h', '-help', '-?' or something similar was specified. </p>
</td></tr>
</table>

</div>
</div>
<a id="aeecfc1ea4f7297497d9e99f9274c8ac4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeecfc1ea4f7297497d9e99f9274c8ac4">&#9670;&nbsp;</a></span>LogMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../dd/da4/classxii_command_line_option.htm#aeecfc1ea4f7297497d9e99f9274c8ac4">xiiCommandLineOption::LogMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Describes whether the value of an option (and whether something went wrong), should be printed to <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a>. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a6e7b34fa59e1bd229b207892956dc41c"></a>Never&#160;</td><td class="fielddoc"><p>Don't log anything. </p>
</td></tr>
<tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a4855854f683cb35c7c4035763c4963d5"></a>FirstTime&#160;</td><td class="fielddoc"><p>Only print the information the first time a value is accessed. </p>
</td></tr>
<tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a8d7dddecfd427ddb33711966c80f3c99"></a>FirstTimeIfSpecified&#160;</td><td class="fielddoc"><p>Only on first access and only if the user specified the value on the command line. </p>
</td></tr>
<tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a68eec46437c384d8dad18d5464ebc35c"></a>Always&#160;</td><td class="fielddoc"><p>Always log the options value on access. </p>
</td></tr>
<tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a1644dc20516cb1b423acc5b7cac81bcf"></a>AlwaysIfSpecified&#160;</td><td class="fielddoc"><p>Always log values, if the user specified non-default ones. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a71c85d3a9182b4c27a9b5c60716002d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71c85d3a9182b4c27a9b5c60716002d2">&#9670;&nbsp;</a></span>xiiCommandLineOption()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">xiiCommandLineOption::xiiCommandLineOption </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szSortingGroup</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szSortingGroup</td><td>This string is used to sort options. Application options should start with an underscore, such that they appear first in the output. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2cec1d300a92eba97dc08b65cb607ed6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cec1d300a92eba97dc08b65cb607ed6">&#9670;&nbsp;</a></span>GetLongDesc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiCommandLineOption::GetLongDesc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;&#160;</td>
          <td class="paramname"><em>out</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a proper description of the option. </p>
<p>The long description is allowed to contain newlines (<br  />
) and the output will be formatted accordingly. </p>

<p>Implemented in <a class="el" href="../../de/da9/classxii_command_line_option_doc.htm#ae6299d1c7e80fb52fb947289dad0bf00">xiiCommandLineOptionDoc</a>.</p>

</div>
</div>
<a id="abe0e8525d42b621be8a92fe5c4d5c849"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe0e8525d42b621be8a92fe5c4d5c849">&#9670;&nbsp;</a></span>LogAvailableOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiCommandLineOption::LogAvailableOptions </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/da4/classxii_command_line_option.htm#a6db96aceade745ee4e75369b1926b11a">LogAvailableModes</a>&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szGroupFilter</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *&#160;</td>
          <td class="paramname"><em>pUtils</em> = <code><a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prints all available options to the <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szGroupFilter</td><td>If this is empty, all options from all 'sorting groups' are logged. If non-empty, only options from sorting groups that appear in this string will be logged. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a645bb1bb7247e659832ed959d7b499ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a645bb1bb7247e659832ed959d7b499ea">&#9670;&nbsp;</a></span>RequireOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiCommandLineOption::RequireOptions </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>requiredOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> *&#160;</td>
          <td class="paramname"><em>pMissingOption</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *&#160;</td>
          <td class="paramname"><em>pUtils</em> = <code><a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks whether all required options are passed to the command line. </p>
<p>The options are passed as a semicolon-separated list (spare spaces are stripped away), for instance "-opt1; -opt2" </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Utilities/<a class="el" href="../../d4/dda/_command_line_options_8h_source.htm">CommandLineOptions.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Utilities/Implementation/CommandLineOptions.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/da4/classxii_command_line_option.htm">xiiCommandLineOption</a></li>
    <li class="footer">Generated on Fri Mar 24 2023 17:20:20 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
