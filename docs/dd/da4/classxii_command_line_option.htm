<!-- HTML header for doxygen 1.11.0-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: xiiCommandLineOption Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript">
  DoxygenAwesomeDarkModeToggle.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript">
  DoxygenAwesomeFragmentCopyButton.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript">
  DoxygenAwesomeParagraphLink.init()
</script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript">
  DoxygenAwesomeInteractiveToc.init()
</script>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dd/da4/classxii_command_line_option.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../de/d79/classxii_command_line_option-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">xiiCommandLineOption Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="../../dd/da4/classxii_command_line_option.htm" title="xiiCommandLineOption (and derived types) are used to define options that the application supports.">xiiCommandLineOption</a> (and derived types) are used to define options that the application supports.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d4/dda/_command_line_options_8h_source.htm">CommandLineOptions.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for xiiCommandLineOption:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="../../d6/d9b/classxii_command_line_option__inherit__graph.svg" width="100%" height="512"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a6db96aceade745ee4e75369b1926b11a" id="r_a6db96aceade745ee4e75369b1926b11a"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6db96aceade745ee4e75369b1926b11a">LogAvailableModes</a> { <a class="el" href="#a6db96aceade745ee4e75369b1926b11aa68eec46437c384d8dad18d5464ebc35c">Always</a>
, <a class="el" href="#a6db96aceade745ee4e75369b1926b11aabcbc3c880a5324ca7a3026e27cbed21a">IfHelpRequested</a>
 }</td></tr>
<tr class="separator:a6db96aceade745ee4e75369b1926b11a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeecfc1ea4f7297497d9e99f9274c8ac4" id="r_aeecfc1ea4f7297497d9e99f9274c8ac4"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeecfc1ea4f7297497d9e99f9274c8ac4">LogMode</a> { <br />
&#160;&#160;<a class="el" href="#aeecfc1ea4f7297497d9e99f9274c8ac4a6e7b34fa59e1bd229b207892956dc41c">Never</a>
, <a class="el" href="#aeecfc1ea4f7297497d9e99f9274c8ac4a4855854f683cb35c7c4035763c4963d5">FirstTime</a>
, <a class="el" href="#aeecfc1ea4f7297497d9e99f9274c8ac4a8d7dddecfd427ddb33711966c80f3c99">FirstTimeIfSpecified</a>
, <a class="el" href="#aeecfc1ea4f7297497d9e99f9274c8ac4a68eec46437c384d8dad18d5464ebc35c">Always</a>
, <br />
&#160;&#160;<a class="el" href="#aeecfc1ea4f7297497d9e99f9274c8ac4a1644dc20516cb1b423acc5b7cac81bcf">AlwaysIfSpecified</a>
<br />
 }</td></tr>
<tr class="memdesc:aeecfc1ea4f7297497d9e99f9274c8ac4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes whether the value of an option (and whether something went wrong), should be printed to <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a>.  <a href="#aeecfc1ea4f7297497d9e99f9274c8ac4">More...</a><br /></td></tr>
<tr class="separator:aeecfc1ea4f7297497d9e99f9274c8ac4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5b141c29d56f46cfe580bf023810ab0f" id="r_a5b141c29d56f46cfe580bf023810ab0f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5b141c29d56f46cfe580bf023810ab0f">xiiCommandLineOption</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sSortingGroup)</td></tr>
<tr class="separator:a5b141c29d56f46cfe580bf023810ab0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a140b6cc484c22e77899b1a9ca6894d63" id="r_a140b6cc484c22e77899b1a9ca6894d63"><td class="memItemLeft" align="right" valign="top"><a id="a140b6cc484c22e77899b1a9ca6894d63" name="a140b6cc484c22e77899b1a9ca6894d63"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>GetSortingGroup</b> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;ref_sOut) const</td></tr>
<tr class="memdesc:a140b6cc484c22e77899b1a9ca6894d63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the sorting group name to 'out'. <br /></td></tr>
<tr class="separator:a140b6cc484c22e77899b1a9ca6894d63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa78187ddd7d5f3ca3c1fe8606baa3f22" id="r_aa78187ddd7d5f3ca3c1fe8606baa3f22"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa78187ddd7d5f3ca3c1fe8606baa3f22">GetOptions</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;ref_sOut) const =0</td></tr>
<tr class="memdesc:aa78187ddd7d5f3ca3c1fe8606baa3f22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes all the supported options (e.g. '-arg') to 'out'. If more than one option is allowed, they should be separated with semicolons or pipes.  <br /></td></tr>
<tr class="separator:aa78187ddd7d5f3ca3c1fe8606baa3f22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a852ced85440e0026bd0d30cd59a08f68" id="r_a852ced85440e0026bd0d30cd59a08f68"><td class="memItemLeft" align="right" valign="top"><a id="a852ced85440e0026bd0d30cd59a08f68" name="a852ced85440e0026bd0d30cd59a08f68"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GetSplitOptions</b> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out_sAll, <a class="el" href="../../dc/da4/classxii_dynamic_array.htm">xiiDynamicArray</a>&lt; <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> &gt; &amp;ref_splitOptions) const</td></tr>
<tr class="memdesc:a852ced85440e0026bd0d30cd59a08f68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the supported option names (e.g. '-arg') as split strings. <br /></td></tr>
<tr class="separator:a852ced85440e0026bd0d30cd59a08f68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afefb32bb09107ded0553ffc925e7c3de" id="r_afefb32bb09107ded0553ffc925e7c3de"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afefb32bb09107ded0553ffc925e7c3de">GetParamShortDesc</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;ref_sOut) const =0</td></tr>
<tr class="memdesc:afefb32bb09107ded0553ffc925e7c3de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a very short description of the option (type). For example "&lt;int&gt;" or "&lt;enum&gt;".  <br /></td></tr>
<tr class="separator:afefb32bb09107ded0553ffc925e7c3de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d088b99e0e50ab991e920c8668ce5c9" id="r_a0d088b99e0e50ab991e920c8668ce5c9"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0d088b99e0e50ab991e920c8668ce5c9">GetParamDefaultValueDesc</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;ref_sOut) const =0</td></tr>
<tr class="memdesc:a0d088b99e0e50ab991e920c8668ce5c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a very short string for the options default value. For example "0" or "auto".  <br /></td></tr>
<tr class="separator:a0d088b99e0e50ab991e920c8668ce5c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3584d22bb28de41c92bfd398847ae6ae" id="r_a3584d22bb28de41c92bfd398847ae6ae"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3584d22bb28de41c92bfd398847ae6ae">GetLongDesc</a> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;ref_sOut) const =0</td></tr>
<tr class="memdesc:a3584d22bb28de41c92bfd398847ae6ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a proper description of the option.  <br /></td></tr>
<tr class="separator:a3584d22bb28de41c92bfd398847ae6ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3e704c9c926676f748d568a7b33c8b2" id="r_ae3e704c9c926676f748d568a7b33c8b2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae3e704c9c926676f748d568a7b33c8b2">GetType</a> ()=0</td></tr>
<tr class="memdesc:ae3e704c9c926676f748d568a7b33c8b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string indicating the exact implementation type.  <br /></td></tr>
<tr class="separator:ae3e704c9c926676f748d568a7b33c8b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acc74e5bf3d5e0c46b80a35b7a5015af8" id="r_acc74e5bf3d5e0c46b80a35b7a5015af8"><td class="memItemLeft" align="right" valign="top"><a id="acc74e5bf3d5e0c46b80a35b7a5015af8" name="acc74e5bf3d5e0c46b80a35b7a5015af8"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsHelpRequested</b> (const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *pUtils=<a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>())</td></tr>
<tr class="memdesc:acc74e5bf3d5e0c46b80a35b7a5015af8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether a command line was passed that requests help output. <br /></td></tr>
<tr class="separator:acc74e5bf3d5e0c46b80a35b7a5015af8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81850702f933537a5be4defa4085961c" id="r_a81850702f933537a5be4defa4085961c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a81850702f933537a5be4defa4085961c">RequireOptions</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sRequiredOptions, <a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> *pMissingOption=nullptr, const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *pUtils=<a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>())</td></tr>
<tr class="memdesc:a81850702f933537a5be4defa4085961c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all required options are passed to the command line.  <br /></td></tr>
<tr class="separator:a81850702f933537a5be4defa4085961c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a094e4b5372c49966a2ddf4c48ea330ed" id="r_a094e4b5372c49966a2ddf4c48ea330ed"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a094e4b5372c49966a2ddf4c48ea330ed">LogAvailableOptions</a> (<a class="el" href="#a6db96aceade745ee4e75369b1926b11a">LogAvailableModes</a> mode, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sGroupFilter={}, const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *pUtils=<a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>())</td></tr>
<tr class="memdesc:a094e4b5372c49966a2ddf4c48ea330ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints all available options to the <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a>.  <br /></td></tr>
<tr class="separator:a094e4b5372c49966a2ddf4c48ea330ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c4421793d7ed8393d5305e5371c4cde" id="r_a6c4421793d7ed8393d5305e5371c4cde"><td class="memItemLeft" align="right" valign="top"><a id="a6c4421793d7ed8393d5305e5371c4cde" name="a6c4421793d7ed8393d5305e5371c4cde"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>LogAvailableOptionsToBuffer</b> (<a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;out_sBuffer, <a class="el" href="#a6db96aceade745ee4e75369b1926b11a">LogAvailableModes</a> mode, <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sGroupFilter={}, const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *pUtils=<a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>())</td></tr>
<tr class="memdesc:a6c4421793d7ed8393d5305e5371c4cde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="#a094e4b5372c49966a2ddf4c48ea330ed" title="Prints all available options to the xiiLog.">LogAvailableOptions()</a> but captures the output from <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a> and returns it in a <a class="el" href="../../d4/dbb/classxii_string_builder.htm" title="xiiStringBuilder is a class that is meant for creating and modifying strings.">xiiStringBuilder</a>. <br /></td></tr>
<tr class="separator:a6c4421793d7ed8393d5305e5371c4cde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classxii_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classxii_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d2/d38/classxii_no_base.htm">xiiNoBase</a></td></tr>
<tr class="memitem:a4bde433b55ebd55edf63c57239799bba inherit pub_static_methods_classxii_no_base" id="r_a4bde433b55ebd55edf63c57239799bba"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../db/d89/classxii_r_t_t_i.htm">xiiRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:a4bde433b55ebd55edf63c57239799bba inherit pub_static_methods_classxii_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a428eda72d8ad3a721487e37981302c05" id="r_a428eda72d8ad3a721487e37981302c05"><td class="memItemLeft" align="right" valign="top"><a id="a428eda72d8ad3a721487e37981302c05" name="a428eda72d8ad3a721487e37981302c05"></a>
<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sSortingGroup</b></td></tr>
<tr class="separator:a428eda72d8ad3a721487e37981302c05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classxii_enumerable"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classxii_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../dc/d54/classxii_enumerable.htm">xiiEnumerable&lt; xiiCommandLineOption &gt;</a></td></tr>
<tr class="memitem:afe563009387fc95276982bb4b87094e0 inherit pro_attribs_classxii_enumerable" id="r_afe563009387fc95276982bb4b87094e0"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/d54/classxii_enumerable.htm">xiiEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:afe563009387fc95276982bb4b87094e0 inherit pro_attribs_classxii_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="../../dd/da4/classxii_command_line_option.htm" title="xiiCommandLineOption (and derived types) are used to define options that the application supports.">xiiCommandLineOption</a> (and derived types) are used to define options that the application supports. </p>
<p>Command line options are created as global variables anywhere throughout the code, wherever they are needed. The point of using them over going through <a class="el" href="../../d0/d67/classxii_command_line_utils.htm" title="This is a helper class to parse command lines.">xiiCommandLineUtils</a> directly, is that the options can be listed automatically and thus an application can print all available options, when the user requests help.</p>
<p>Consequently, their main purpose is to make options discoverable and to document them in a consistent manner.</p>
<p>Additionally, classes like <a class="el" href="../../dd/d8c/classxii_command_line_option_enum.htm" title="An &#39;enum&#39; option is a string option that only allows certain phrases (&#39;keys&#39;).">xiiCommandLineOptionEnum</a> add functionality that makes some options easier to setup. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a6db96aceade745ee4e75369b1926b11a" name="a6db96aceade745ee4e75369b1926b11a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6db96aceade745ee4e75369b1926b11a">&#9670;&#160;</a></span>LogAvailableModes</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a6db96aceade745ee4e75369b1926b11a">xiiCommandLineOption::LogAvailableModes</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a6db96aceade745ee4e75369b1926b11aa68eec46437c384d8dad18d5464ebc35c" name="a6db96aceade745ee4e75369b1926b11aa68eec46437c384d8dad18d5464ebc35c"></a>Always&#160;</td><td class="fielddoc"><p>Logs the available modes no matter what. </p>
</td></tr>
<tr><td class="fieldname"><a id="a6db96aceade745ee4e75369b1926b11aabcbc3c880a5324ca7a3026e27cbed21a" name="a6db96aceade745ee4e75369b1926b11aabcbc3c880a5324ca7a3026e27cbed21a"></a>IfHelpRequested&#160;</td><td class="fielddoc"><p>Only logs the modes, if '-h', '-help', '-?' or something similar was specified. </p>
</td></tr>
</table>

</div>
</div>
<a id="aeecfc1ea4f7297497d9e99f9274c8ac4" name="aeecfc1ea4f7297497d9e99f9274c8ac4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeecfc1ea4f7297497d9e99f9274c8ac4">&#9670;&#160;</a></span>LogMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#aeecfc1ea4f7297497d9e99f9274c8ac4">xiiCommandLineOption::LogMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Describes whether the value of an option (and whether something went wrong), should be printed to <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a>. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a6e7b34fa59e1bd229b207892956dc41c" name="aeecfc1ea4f7297497d9e99f9274c8ac4a6e7b34fa59e1bd229b207892956dc41c"></a>Never&#160;</td><td class="fielddoc"><p>Don't log anything. </p>
</td></tr>
<tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a4855854f683cb35c7c4035763c4963d5" name="aeecfc1ea4f7297497d9e99f9274c8ac4a4855854f683cb35c7c4035763c4963d5"></a>FirstTime&#160;</td><td class="fielddoc"><p>Only print the information the first time a value is accessed. </p>
</td></tr>
<tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a8d7dddecfd427ddb33711966c80f3c99" name="aeecfc1ea4f7297497d9e99f9274c8ac4a8d7dddecfd427ddb33711966c80f3c99"></a>FirstTimeIfSpecified&#160;</td><td class="fielddoc"><p>Only on first access and only if the user specified the value on the command line. </p>
</td></tr>
<tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a68eec46437c384d8dad18d5464ebc35c" name="aeecfc1ea4f7297497d9e99f9274c8ac4a68eec46437c384d8dad18d5464ebc35c"></a>Always&#160;</td><td class="fielddoc"><p>Always log the options value on access. </p>
</td></tr>
<tr><td class="fieldname"><a id="aeecfc1ea4f7297497d9e99f9274c8ac4a1644dc20516cb1b423acc5b7cac81bcf" name="aeecfc1ea4f7297497d9e99f9274c8ac4a1644dc20516cb1b423acc5b7cac81bcf"></a>AlwaysIfSpecified&#160;</td><td class="fielddoc"><p>Always log values, if the user specified non-default ones. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5b141c29d56f46cfe580bf023810ab0f" name="a5b141c29d56f46cfe580bf023810ab0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b141c29d56f46cfe580bf023810ab0f">&#9670;&#160;</a></span>xiiCommandLineOption()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">xiiCommandLineOption::xiiCommandLineOption </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sSortingGroup</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sSortingGroup</td><td>This string is used to sort options. Application options should start with an underscore, such that they appear first in the output. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3584d22bb28de41c92bfd398847ae6ae" name="a3584d22bb28de41c92bfd398847ae6ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3584d22bb28de41c92bfd398847ae6ae">&#9670;&#160;</a></span>GetLongDesc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiCommandLineOption::GetLongDesc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_sOut</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a proper description of the option. </p>
<p>The long description is allowed to contain newlines (<br  />
) and the output will be formatted accordingly. </p>

<p>Implemented in <a class="el" href="../../de/da9/classxii_command_line_option_doc.htm#aa4662d7ea78eba18780e05a71bdaa32a">xiiCommandLineOptionDoc</a>.</p>

</div>
</div>
<a id="aa78187ddd7d5f3ca3c1fe8606baa3f22" name="aa78187ddd7d5f3ca3c1fe8606baa3f22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa78187ddd7d5f3ca3c1fe8606baa3f22">&#9670;&#160;</a></span>GetOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiCommandLineOption::GetOptions </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_sOut</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes all the supported options (e.g. '-arg') to 'out'. If more than one option is allowed, they should be separated with semicolons or pipes. </p>

<p>Implemented in <a class="el" href="../../de/da9/classxii_command_line_option_doc.htm#a99f7a571d006847b8997a91d9d29071f">xiiCommandLineOptionDoc</a>.</p>

</div>
</div>
<a id="a0d088b99e0e50ab991e920c8668ce5c9" name="a0d088b99e0e50ab991e920c8668ce5c9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d088b99e0e50ab991e920c8668ce5c9">&#9670;&#160;</a></span>GetParamDefaultValueDesc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiCommandLineOption::GetParamDefaultValueDesc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_sOut</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a very short string for the options default value. For example "0" or "auto". </p>

<p>Implemented in <a class="el" href="../../de/da9/classxii_command_line_option_doc.htm#a8f7315067eb8220911ee1af8c6681e3c">xiiCommandLineOptionDoc</a>, <a class="el" href="../../dd/d8c/classxii_command_line_option_enum.htm#ae35082923aaa2a8b66b1866259219ca8">xiiCommandLineOptionEnum</a>, <a class="el" href="../../db/d47/classxii_command_line_option_float.htm#ac980da0cbb8bfb74fb32db08a8c35129">xiiCommandLineOptionFloat</a>, and <a class="el" href="../../de/d58/classxii_command_line_option_int.htm#a5e1645c09057b13d950f31465e524c6e">xiiCommandLineOptionInt</a>.</p>

</div>
</div>
<a id="afefb32bb09107ded0553ffc925e7c3de" name="afefb32bb09107ded0553ffc925e7c3de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afefb32bb09107ded0553ffc925e7c3de">&#9670;&#160;</a></span>GetParamShortDesc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void xiiCommandLineOption::GetParamShortDesc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/dbb/classxii_string_builder.htm">xiiStringBuilder</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_sOut</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a very short description of the option (type). For example "&lt;int&gt;" or "&lt;enum&gt;". </p>

<p>Implemented in <a class="el" href="../../de/da9/classxii_command_line_option_doc.htm#a77f98eae10243a416eb64d7442944813">xiiCommandLineOptionDoc</a>, <a class="el" href="../../dd/d8c/classxii_command_line_option_enum.htm#a7790bdb97827f4758cd82546a5063d7f">xiiCommandLineOptionEnum</a>, <a class="el" href="../../db/d47/classxii_command_line_option_float.htm#ae1b776adb62bbe1862b0fe4560531fbd">xiiCommandLineOptionFloat</a>, and <a class="el" href="../../de/d58/classxii_command_line_option_int.htm#a916fc99a44188fc2112927dd18bd9fb3">xiiCommandLineOptionInt</a>.</p>

</div>
</div>
<a id="ae3e704c9c926676f748d568a7b33c8b2" name="ae3e704c9c926676f748d568a7b33c8b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3e704c9c926676f748d568a7b33c8b2">&#9670;&#160;</a></span>GetType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> xiiCommandLineOption::GetType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a string indicating the exact implementation type. </p>

<p>Implemented in <a class="el" href="../../db/d51/classxii_command_line_option_bool.htm#aaec0590123669acf4b9feb7da6f8ab04">xiiCommandLineOptionBool</a>, <a class="el" href="../../de/da9/classxii_command_line_option_doc.htm#aac33e0960145f8fa758e9e274ca07b51">xiiCommandLineOptionDoc</a>, <a class="el" href="../../dd/d8c/classxii_command_line_option_enum.htm#aaeb6a8978591fb5f9ac1ffecc2f72446">xiiCommandLineOptionEnum</a>, <a class="el" href="../../db/d47/classxii_command_line_option_float.htm#ae1ab5eaad309f9ffc027856ceaf7a4b1">xiiCommandLineOptionFloat</a>, <a class="el" href="../../de/d58/classxii_command_line_option_int.htm#a00a024a6fe41757af45ef14ffdcf9b74">xiiCommandLineOptionInt</a>, <a class="el" href="../../de/d4a/classxii_command_line_option_path.htm#a7b5d0d222e9c8df37a21d14f48609977">xiiCommandLineOptionPath</a>, and <a class="el" href="../../d6/d63/classxii_command_line_option_string.htm#ac6333fe51efc607e6d2a7930e48e2874">xiiCommandLineOptionString</a>.</p>

</div>
</div>
<a id="a094e4b5372c49966a2ddf4c48ea330ed" name="a094e4b5372c49966a2ddf4c48ea330ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a094e4b5372c49966a2ddf4c48ea330ed">&#9670;&#160;</a></span>LogAvailableOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool xiiCommandLineOption::LogAvailableOptions </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a6db96aceade745ee4e75369b1926b11a">LogAvailableModes</a></td>          <td class="paramname"><span class="paramname"><em>mode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sGroupFilter</em></span><span class="paramdefsep"> = </span><span class="paramdefval">{}</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *</td>          <td class="paramname"><span class="paramname"><em>pUtils</em></span><span class="paramdefsep"> = </span><span class="paramdefval"><a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>()</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prints all available options to the <a class="el" href="../../d4/dc6/classxii_log.htm" title="Static class that allows to write out logging information.">xiiLog</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sGroupFilter</td><td>If this is empty, all options from all 'sorting groups' are logged. If non-empty, only options from sorting groups that appear in this string will be logged. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a81850702f933537a5be4defa4085961c" name="a81850702f933537a5be4defa4085961c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81850702f933537a5be4defa4085961c">&#9670;&#160;</a></span>RequireOptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dad/structxii_result.htm">xiiResult</a> xiiCommandLineOption::RequireOptions </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sRequiredOptions</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/dfb/structxii_hybrid_string.htm">xiiString</a> *</td>          <td class="paramname"><span class="paramname"><em>pMissingOption</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d0/d67/classxii_command_line_utils.htm">xiiCommandLineUtils</a> *</td>          <td class="paramname"><span class="paramname"><em>pUtils</em></span><span class="paramdefsep"> = </span><span class="paramdefval"><a class="el" href="../../d0/d67/classxii_command_line_utils.htm#a0719a00a3dd3d43ac5b4c39092fe0dc4">xiiCommandLineUtils::GetGlobalInstance</a>()</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks whether all required options are passed to the command line. </p>
<p>The options are passed as a semicolon-separated list (spare spaces are stripped away), for instance "-opt1; -opt2" </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Utilities/<a class="el" href="../../d4/dda/_command_line_options_8h_source.htm">CommandLineOptions.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Utilities/Implementation/<b>CommandLineOptions.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/da4/classxii_command_line_option.htm">xiiCommandLineOption</a></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:47:34 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
