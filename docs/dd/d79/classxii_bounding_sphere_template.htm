<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiBoundingSphereTemplate&lt; Type &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/d79/classxii_bounding_sphere_template.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d2/d1c/classxii_bounding_sphere_template-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiBoundingSphereTemplate&lt; Type &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>An implementation of a bounding sphere.  
 <a href="../../dd/d79/classxii_bounding_sphere_template.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d6/d7f/_bounding_sphere_8h_source.htm">BoundingSphere.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a5a45a86fbb55d2ea3e4e03654fc17364"><td class="memItemLeft" align="right" valign="top"><a id="a5a45a86fbb55d2ea3e4e03654fc17364"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ComponentType</b> = Type</td></tr>
<tr class="separator:a5a45a86fbb55d2ea3e4e03654fc17364"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0a57e9a851a25a5553da3b2fe2ce481f"><td class="memItemLeft" align="right" valign="top"><a id="a0a57e9a851a25a5553da3b2fe2ce481f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a0a57e9a851a25a5553da3b2fe2ce481f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab29bdcaf8caaaabbfc3cde668450992a"><td class="memItemLeft" align="right" valign="top"><a id="ab29bdcaf8caaaabbfc3cde668450992a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#ab29bdcaf8caaaabbfc3cde668450992a">xiiBoundingSphereTemplate</a> ()</td></tr>
<tr class="memdesc:ab29bdcaf8caaaabbfc3cde668450992a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor does not initialize any data. <br /></td></tr>
<tr class="separator:ab29bdcaf8caaaabbfc3cde668450992a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7b6e5334173d3f8903dd21102f50459"><td class="memItemLeft" align="right" valign="top"><a id="af7b6e5334173d3f8903dd21102f50459"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#af7b6e5334173d3f8903dd21102f50459">xiiBoundingSphereTemplate</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vCenter, Type fRadius)</td></tr>
<tr class="memdesc:af7b6e5334173d3f8903dd21102f50459"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sphere with the given radius around the given center. <br /></td></tr>
<tr class="separator:af7b6e5334173d3f8903dd21102f50459"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a693d1bc86eb09c371a5ea478f009c208"><td class="memItemLeft" align="right" valign="top"><a id="a693d1bc86eb09c371a5ea478f009c208"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a693d1bc86eb09c371a5ea478f009c208">SetZero</a> ()</td></tr>
<tr class="memdesc:a693d1bc86eb09c371a5ea478f009c208"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets all elements to Zero. The sphere is thus 'valid'. <br /></td></tr>
<tr class="separator:a693d1bc86eb09c371a5ea478f009c208"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8bc580df1b64ad4dac86266b70afd15"><td class="memItemLeft" align="right" valign="top"><a id="ae8bc580df1b64ad4dac86266b70afd15"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#ae8bc580df1b64ad4dac86266b70afd15">IsZero</a> (Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;()) const</td></tr>
<tr class="memdesc:ae8bc580df1b64ad4dac86266b70afd15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the sphere is all zero. <br /></td></tr>
<tr class="separator:ae8bc580df1b64ad4dac86266b70afd15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d3ef02d63319009bff3083b16459cfc"><td class="memItemLeft" align="right" valign="top"><a id="a6d3ef02d63319009bff3083b16459cfc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a6d3ef02d63319009bff3083b16459cfc">SetInvalid</a> ()</td></tr>
<tr class="memdesc:a6d3ef02d63319009bff3083b16459cfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the bounding sphere to invalid values. <br /></td></tr>
<tr class="separator:a6d3ef02d63319009bff3083b16459cfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec97f1e17f2252554e530afeb7357567"><td class="memItemLeft" align="right" valign="top"><a id="aec97f1e17f2252554e530afeb7357567"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#aec97f1e17f2252554e530afeb7357567">IsValid</a> () const</td></tr>
<tr class="memdesc:aec97f1e17f2252554e530afeb7357567"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the sphere has valid values. <br /></td></tr>
<tr class="separator:aec97f1e17f2252554e530afeb7357567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d485d2bbfa866051dc6c8760673f17a"><td class="memItemLeft" align="right" valign="top"><a id="a5d485d2bbfa866051dc6c8760673f17a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a5d485d2bbfa866051dc6c8760673f17a">IsNaN</a> () const</td></tr>
<tr class="memdesc:a5d485d2bbfa866051dc6c8760673f17a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether any value is NaN. <br /></td></tr>
<tr class="separator:a5d485d2bbfa866051dc6c8760673f17a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaa11fe09e9bd6030e7e30977f983894"><td class="memItemLeft" align="right" valign="top"><a id="acaa11fe09e9bd6030e7e30977f983894"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#acaa11fe09e9bd6030e7e30977f983894">SetElements</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vCenter, Type fRadius)</td></tr>
<tr class="memdesc:acaa11fe09e9bd6030e7e30977f983894"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the sphere to the given values. <br /></td></tr>
<tr class="separator:acaa11fe09e9bd6030e7e30977f983894"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4557475810efa0432f86d10be6f65cff"><td class="memItemLeft" align="right" valign="top"><a id="a4557475810efa0432f86d10be6f65cff"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a4557475810efa0432f86d10be6f65cff">SetFromPoints</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; *pPoints, xiiUInt32 uiNumPoints, xiiUInt32 uiStride=sizeof(<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;))</td></tr>
<tr class="memdesc:a4557475810efa0432f86d10be6f65cff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the sphere to be the bounding sphere of all the given points (not necessarily the smallest one). <br /></td></tr>
<tr class="separator:a4557475810efa0432f86d10be6f65cff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80193ef1d62c8c60e85f0040e7bc8fd3"><td class="memItemLeft" align="right" valign="top"><a id="a80193ef1d62c8c60e85f0040e7bc8fd3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a80193ef1d62c8c60e85f0040e7bc8fd3">ExpandToInclude</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vPoint)</td></tr>
<tr class="memdesc:a80193ef1d62c8c60e85f0040e7bc8fd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the sphere's radius to include this point. Does NOT change its position, thus the resulting sphere might be not a very tight fit. <br /></td></tr>
<tr class="separator:a80193ef1d62c8c60e85f0040e7bc8fd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a938fb66744036731ba15de54429ffe5d"><td class="memItemLeft" align="right" valign="top"><a id="a938fb66744036731ba15de54429ffe5d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a938fb66744036731ba15de54429ffe5d">ExpandToInclude</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; *pPoints, xiiUInt32 uiNumPoints, xiiUInt32 uiStride=sizeof(<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;))</td></tr>
<tr class="memdesc:a938fb66744036731ba15de54429ffe5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the sphere's radius to include all given points. Does NOT change its position, thus the resulting sphere might be not a very tight fit. More efficient than calling this for every point individually. <br /></td></tr>
<tr class="separator:a938fb66744036731ba15de54429ffe5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec9db03e07e352bc9e86f04f4b1cbd0e"><td class="memItemLeft" align="right" valign="top"><a id="aec9db03e07e352bc9e86f04f4b1cbd0e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#aec9db03e07e352bc9e86f04f4b1cbd0e">ExpandToInclude</a> (const <a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm">xiiBoundingSphereTemplate</a> &amp;rhs)</td></tr>
<tr class="memdesc:aec9db03e07e352bc9e86f04f4b1cbd0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases this sphere's radius, such that it encloses the other sphere. Does not change the center position of this sphere. <br /></td></tr>
<tr class="separator:aec9db03e07e352bc9e86f04f4b1cbd0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb739e9be4cfc7d166befa9c358b3f4f"><td class="memItemLeft" align="right" valign="top"><a id="afb739e9be4cfc7d166befa9c358b3f4f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#afb739e9be4cfc7d166befa9c358b3f4f">ExpandToInclude</a> (const <a class="el" href="../../d2/dd6/classxii_bounding_box_template.htm">xiiBoundingBoxTemplate</a>&lt; Type &gt; &amp;rhs)</td></tr>
<tr class="memdesc:afb739e9be4cfc7d166befa9c358b3f4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases this sphere's radius, such that it encloses the box. Does not change the center position of this sphere. <br /></td></tr>
<tr class="separator:afb739e9be4cfc7d166befa9c358b3f4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7905bdaac8b200e46f9fc506bd65a27"><td class="memItemLeft" align="right" valign="top"><a id="ab7905bdaac8b200e46f9fc506bd65a27"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#ab7905bdaac8b200e46f9fc506bd65a27">Grow</a> (Type fDiff)</td></tr>
<tr class="memdesc:ab7905bdaac8b200e46f9fc506bd65a27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the size of the sphere by the given amount. <br /></td></tr>
<tr class="separator:ab7905bdaac8b200e46f9fc506bd65a27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a9fea36ddcec67afac9cba4f59b5485"><td class="memItemLeft" align="right" valign="top"><a id="a6a9fea36ddcec67afac9cba4f59b5485"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a6a9fea36ddcec67afac9cba4f59b5485">IsIdentical</a> (const <a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm">xiiBoundingSphereTemplate</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a6a9fea36ddcec67afac9cba4f59b5485"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether two spheres are identical. <br /></td></tr>
<tr class="separator:a6a9fea36ddcec67afac9cba4f59b5485"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6780eefe68e16016c31f17fc276465c"><td class="memItemLeft" align="right" valign="top"><a id="af6780eefe68e16016c31f17fc276465c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#af6780eefe68e16016c31f17fc276465c">IsEqual</a> (const <a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm">xiiBoundingSphereTemplate</a> &amp;rhs, Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;()) const</td></tr>
<tr class="memdesc:af6780eefe68e16016c31f17fc276465c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests whether two spheres are equal within some threshold. <br /></td></tr>
<tr class="separator:af6780eefe68e16016c31f17fc276465c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7979964408018ed38e43c448914730a"><td class="memItemLeft" align="right" valign="top"><a id="ae7979964408018ed38e43c448914730a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#ae7979964408018ed38e43c448914730a">Translate</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vTranslation)</td></tr>
<tr class="memdesc:ae7979964408018ed38e43c448914730a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the sphere by the given vector. <br /></td></tr>
<tr class="separator:ae7979964408018ed38e43c448914730a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7b595722f621ecff2fd21fe1ce37800"><td class="memItemLeft" align="right" valign="top"><a id="aa7b595722f621ecff2fd21fe1ce37800"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#aa7b595722f621ecff2fd21fe1ce37800">ScaleFromCenter</a> (Type fScale)</td></tr>
<tr class="memdesc:aa7b595722f621ecff2fd21fe1ce37800"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the sphere's size, does not change its center position. <br /></td></tr>
<tr class="separator:aa7b595722f621ecff2fd21fe1ce37800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae773cba15bdae9d0952c3e11bb43d0c5"><td class="memItemLeft" align="right" valign="top"><a id="ae773cba15bdae9d0952c3e11bb43d0c5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#ae773cba15bdae9d0952c3e11bb43d0c5">ScaleFromOrigin</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vScale)</td></tr>
<tr class="memdesc:ae773cba15bdae9d0952c3e11bb43d0c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the sphere in world unites, meaning its center position will change as well. <br /></td></tr>
<tr class="separator:ae773cba15bdae9d0952c3e11bb43d0c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad320a1dbfc60fe192dc29d744ca50752"><td class="memItemLeft" align="right" valign="top"><a id="ad320a1dbfc60fe192dc29d744ca50752"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#ad320a1dbfc60fe192dc29d744ca50752">TransformFromOrigin</a> (const <a class="el" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template</a>&lt; Type &gt; &amp;mTransform)</td></tr>
<tr class="memdesc:ad320a1dbfc60fe192dc29d744ca50752"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms the sphere with the given matrix from the world origin. I.e. scalings and rotations will influence its position. <br /></td></tr>
<tr class="separator:ad320a1dbfc60fe192dc29d744ca50752"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38bf494dafd4350db92297c289297118"><td class="memItemLeft" align="right" valign="top"><a id="a38bf494dafd4350db92297c289297118"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a38bf494dafd4350db92297c289297118">TransformFromCenter</a> (const <a class="el" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template</a>&lt; Type &gt; &amp;mTransform)</td></tr>
<tr class="memdesc:a38bf494dafd4350db92297c289297118"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms the sphere with the given matrix from its own center. I.e. rotations have no effect, scalings will only affect the radius, and only translations will affect its position. <br /></td></tr>
<tr class="separator:a38bf494dafd4350db92297c289297118"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07eff45caa8016fd8d2a13f4b8c7be40"><td class="memItemLeft" align="right" valign="top"><a id="a07eff45caa8016fd8d2a13f4b8c7be40"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a07eff45caa8016fd8d2a13f4b8c7be40">GetDistanceTo</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vPoint) const</td></tr>
<tr class="memdesc:a07eff45caa8016fd8d2a13f4b8c7be40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the distance of the point to the sphere's surface. Returns negative values for points inside the sphere. <br /></td></tr>
<tr class="separator:a07eff45caa8016fd8d2a13f4b8c7be40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc2c820d742a73adc586440c762ca406"><td class="memItemLeft" align="right" valign="top"><a id="adc2c820d742a73adc586440c762ca406"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#adc2c820d742a73adc586440c762ca406">GetDistanceTo</a> (const <a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm">xiiBoundingSphereTemplate</a> &amp;rhs) const</td></tr>
<tr class="memdesc:adc2c820d742a73adc586440c762ca406"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the distance between the two spheres. Zero for spheres that are exactly touching each other, negative values for overlapping spheres. <br /></td></tr>
<tr class="separator:adc2c820d742a73adc586440c762ca406"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0cbf8bc5e65eeb4d343da55ccc95a4b"><td class="memItemLeft" align="right" valign="top"><a id="ae0cbf8bc5e65eeb4d343da55ccc95a4b"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#ae0cbf8bc5e65eeb4d343da55ccc95a4b">GetDistanceTo</a> (const <a class="el" href="../../d2/dd6/classxii_bounding_box_template.htm">xiiBoundingBoxTemplate</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ae0cbf8bc5e65eeb4d343da55ccc95a4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the minimum distance between the box and the sphere. Zero if both are exactly touching, negative values if they overlap. <br /></td></tr>
<tr class="separator:ae0cbf8bc5e65eeb4d343da55ccc95a4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83001db854c35b3c9e94ff3a5f5868d1"><td class="memItemLeft" align="right" valign="top"><a id="a83001db854c35b3c9e94ff3a5f5868d1"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a83001db854c35b3c9e94ff3a5f5868d1">GetDistanceTo</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; *pPoints, xiiUInt32 uiNumPoints, xiiUInt32 uiStride=sizeof(<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;)) const</td></tr>
<tr class="memdesc:a83001db854c35b3c9e94ff3a5f5868d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the minimum distance of any of the points to the sphere. <br /></td></tr>
<tr class="separator:a83001db854c35b3c9e94ff3a5f5868d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3582b68594ea926746e7c87f1965c27"><td class="memItemLeft" align="right" valign="top"><a id="aa3582b68594ea926746e7c87f1965c27"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#aa3582b68594ea926746e7c87f1965c27">Contains</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vPoint) const</td></tr>
<tr class="memdesc:aa3582b68594ea926746e7c87f1965c27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the given point is inside the sphere. <br /></td></tr>
<tr class="separator:aa3582b68594ea926746e7c87f1965c27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ad3bff7129714d993f02c75b2853e15"><td class="memItemLeft" align="right" valign="top"><a id="a6ad3bff7129714d993f02c75b2853e15"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a6ad3bff7129714d993f02c75b2853e15">Contains</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; *pPoints, xiiUInt32 uiNumPoints, xiiUInt32 uiStride=sizeof(<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;)) const</td></tr>
<tr class="memdesc:a6ad3bff7129714d993f02c75b2853e15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether all the given points are inside this sphere. <br /></td></tr>
<tr class="separator:a6ad3bff7129714d993f02c75b2853e15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f9656c1bf1c2baabc26bd1a43c060c2"><td class="memItemLeft" align="right" valign="top"><a id="a1f9656c1bf1c2baabc26bd1a43c060c2"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a1f9656c1bf1c2baabc26bd1a43c060c2">Contains</a> (const <a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm">xiiBoundingSphereTemplate</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a1f9656c1bf1c2baabc26bd1a43c060c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the other sphere is completely inside this sphere. <br /></td></tr>
<tr class="separator:a1f9656c1bf1c2baabc26bd1a43c060c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71508b015ef85d00d9d828aab4d6b07d"><td class="memItemLeft" align="right" valign="top"><a id="a71508b015ef85d00d9d828aab4d6b07d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a71508b015ef85d00d9d828aab4d6b07d">Contains</a> (const <a class="el" href="../../d2/dd6/classxii_bounding_box_template.htm">xiiBoundingBoxTemplate</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a71508b015ef85d00d9d828aab4d6b07d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the given box is completely inside this sphere. <br /></td></tr>
<tr class="separator:a71508b015ef85d00d9d828aab4d6b07d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefef38c6ad5ce13dfc1a304d7a5ae739"><td class="memItemLeft" align="right" valign="top"><a id="aefef38c6ad5ce13dfc1a304d7a5ae739"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#aefef38c6ad5ce13dfc1a304d7a5ae739">Overlaps</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; *pPoints, xiiUInt32 uiNumPoints, xiiUInt32 uiStride=sizeof(<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;)) const</td></tr>
<tr class="memdesc:aefef38c6ad5ce13dfc1a304d7a5ae739"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether any of the given points is inside the sphere. <br /></td></tr>
<tr class="separator:aefef38c6ad5ce13dfc1a304d7a5ae739"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa978b09e239e830d9f52f81d1a3fff0b"><td class="memItemLeft" align="right" valign="top"><a id="aa978b09e239e830d9f52f81d1a3fff0b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#aa978b09e239e830d9f52f81d1a3fff0b">Overlaps</a> (const <a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm">xiiBoundingSphereTemplate</a> &amp;rhs) const</td></tr>
<tr class="memdesc:aa978b09e239e830d9f52f81d1a3fff0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the two objects overlap. <br /></td></tr>
<tr class="separator:aa978b09e239e830d9f52f81d1a3fff0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8252e89c4a9b9123fc3b1d65f66753e1"><td class="memItemLeft" align="right" valign="top"><a id="a8252e89c4a9b9123fc3b1d65f66753e1"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a8252e89c4a9b9123fc3b1d65f66753e1">Overlaps</a> (const <a class="el" href="../../d2/dd6/classxii_bounding_box_template.htm">xiiBoundingBoxTemplate</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a8252e89c4a9b9123fc3b1d65f66753e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the two objects overlap. <br /></td></tr>
<tr class="separator:a8252e89c4a9b9123fc3b1d65f66753e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3510c2857accc8db2eb8829d4e38f85"><td class="memItemLeft" align="right" valign="top"><a id="af3510c2857accc8db2eb8829d4e38f85"></a>
const <a class="el" href="../../d2/dd6/classxii_bounding_box_template.htm">xiiBoundingBoxTemplate</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#af3510c2857accc8db2eb8829d4e38f85">GetBoundingBox</a> () const</td></tr>
<tr class="memdesc:af3510c2857accc8db2eb8829d4e38f85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a bounding box that encloses this sphere. <br /></td></tr>
<tr class="separator:af3510c2857accc8db2eb8829d4e38f85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0e5e3692952a90c02094170ef0c9af9"><td class="memItemLeft" align="right" valign="top"><a id="ae0e5e3692952a90c02094170ef0c9af9"></a>
const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#ae0e5e3692952a90c02094170ef0c9af9">GetClampedPoint</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vPoint)</td></tr>
<tr class="memdesc:ae0e5e3692952a90c02094170ef0c9af9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clamps the given position to the volume of the sphere. The resulting point will always be inside the sphere, but have the closest distance to the original point. <br /></td></tr>
<tr class="separator:ae0e5e3692952a90c02094170ef0c9af9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87df6dc89ed619ed70c691ae539a8d20"><td class="memItemLeft" align="right" valign="top"><a id="a87df6dc89ed619ed70c691ae539a8d20"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a87df6dc89ed619ed70c691ae539a8d20">GetRayIntersection</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vRayStartPos, const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vRayDir, Type *out_fIntersection=nullptr, <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; *out_vIntersection=nullptr) const</td></tr>
<tr class="memdesc:a87df6dc89ed619ed70c691ae539a8d20"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the intersection of a ray with this sphere. Returns true if there was an intersection. May optionally return the intersection time and position. The ray's direction must be normalized. The function will also return true, if the ray already starts inside the sphere, but it will still compute the intersection with the surface of the sphere. <br /></td></tr>
<tr class="separator:a87df6dc89ed619ed70c691ae539a8d20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67681ead9b7e137899dd39976bd1fd74"><td class="memItemLeft" align="right" valign="top"><a id="a67681ead9b7e137899dd39976bd1fd74"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm#a67681ead9b7e137899dd39976bd1fd74">GetLineSegmentIntersection</a> (const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vLineStartPos, const <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; &amp;vLineEndPos, Type *out_fHitFraction=nullptr, <a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt; *out_vIntersection=nullptr) const</td></tr>
<tr class="memdesc:a67681ead9b7e137899dd39976bd1fd74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the line segment intersects the sphere. <br /></td></tr>
<tr class="separator:a67681ead9b7e137899dd39976bd1fd74"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a74494c20e1627f8e29a807f60c98f70c"><td class="memItemLeft" align="right" valign="top"><a id="a74494c20e1627f8e29a807f60c98f70c"></a>
<a class="el" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_vCenter</b></td></tr>
<tr class="separator:a74494c20e1627f8e29a807f60c98f70c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb01c1832d48db9a1633dbab1c11e313"><td class="memItemLeft" align="right" valign="top"><a id="acb01c1832d48db9a1633dbab1c11e313"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>m_fRadius</b></td></tr>
<tr class="separator:acb01c1832d48db9a1633dbab1c11e313"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename Type&gt;<br />
class xiiBoundingSphereTemplate&lt; Type &gt;</h3>

<p>An implementation of a bounding sphere. </p>
<p>This class allows to construct and manipulate bounding spheres. It also provides a large set of functions to do overlap queries, ray casts and other useful operations. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Math/<a class="el" href="../../d6/d7f/_bounding_sphere_8h_source.htm">BoundingSphere.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Math/Implementation/<a class="el" href="../../da/d5c/_all_classes__inl_8h_source.htm">AllClasses_inl.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Math/Implementation/<a class="el" href="../../d9/d6f/_bounding_sphere__inl_8h_source.htm">BoundingSphere_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d79/classxii_bounding_sphere_template.htm">xiiBoundingSphereTemplate</a></li>
    <li class="footer">Generated on Fri Mar 24 2023 17:20:20 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
