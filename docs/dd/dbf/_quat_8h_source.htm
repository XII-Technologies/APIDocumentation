<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Math/Quat.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/dbf/_quat_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Quat.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Vec3.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="comment">// Means this object can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">using</span> ComponentType = Type;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="comment">// *** Data ***</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> v;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  Type                  w;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a>(Type inX, Type inY, Type inZ, Type inW); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#if XII_ENABLED(XII_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    XII_ASSERT_ALWAYS(!<a class="code" href="../../d9/d1b/classxii_quat_template.htm#acac88d8e4caf8ddb378b3c8afcc1efce">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please check that &quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                <span class="stringliteral">&quot;all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;Type&gt;</a> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#abc8e13490d6d8b6d763461342c371e30">IdentityQuaternion</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="comment">// *** Functions to create a quaternion ***</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#ae88f50c75d2e37f3b4f4d2b735d20915">SetIdentity</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a49829f80f46861fa33a195732adaee32">SetElements</a>(Type inX, Type inY, Type inZ, Type inW); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#aaef4b95931d63340b6bb3bb22734f734">SetFromAxisAndAngle</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vRotationAxis, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a> angle); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a9eedbd0664e93fed324f940d37cc6791">SetShortestRotation</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vDirFrom, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; vDirTo); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a4c5018aaf26a32127f17884de644e485">SetFromMat3</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a626e119e067b041d16a8fd8bfb006c92">ReconstructFromMat3</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a>&amp; m);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a7e0b7355144093951d34ec4cd7c08e81">ReconstructFromMat4</a>(<span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a>&amp; m);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#aca6ff595f2b25d5950fbfe256dc56af9">SetSlerp</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a>&amp; qFrom, <span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a>&amp; qTo, Type t); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="comment">// *** Common Functions ***</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#aab1ecbbf3bfc5f7d00b32df1ce89e342">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a4439e3b9882a6a061622a29f9c42cd5f">GetRotationAxisAndAngle</a>(<a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; ref_vAxis, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; ref_angle, Type fEpsilon = xiiMath::DefaultEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template&lt;Type&gt;</a> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#aa6d32f6602a305f9bb2b80d578db647f">GetAsMat3</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template&lt;Type&gt;</a> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#ae4acab9c811fa6a9f02c2312599526fc">GetAsMat4</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#ae8d1ef81f529aa01674735ee3095d2a0">IsValid</a>(Type fEpsilon = xiiMath::DefaultEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#acac88d8e4caf8ddb378b3c8afcc1efce">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a09a33fa5dcfe6cfaab85362445b27898">IsEqualRotation</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a>&amp; qOther, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a1ccee339c17216c8ed01970c2c4bfea2">Invert</a>();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a4e6d4c187d368bbf3ef46d7914393b1c">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="comment">// *** Common Quaternion operations ***</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  Type <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a6e0a54212fcfe9b1926789427db98aac">Dot</a>(<span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="comment">// *** Euler Angle Conversions ***</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a8d26c87261cce8521c28c4b3a1b12f99">GetAsEulerAngles</a>(<a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; out_x, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; out_y, <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; out_z) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm#a57c283998a8fe1e5bc7c8725386f19d1">SetFromEulerAngles</a>(<span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; x, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; y, <span class="keyword">const</span> <a class="code" href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate&lt;Type&gt;</a>&amp; z); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;};</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;Type&gt;</a>&amp; q, <span class="keyword">const</span> <a class="code" href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;Type&gt;</a>&amp; q1, <span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;Type&gt;</a>&amp; q2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;Type&gt;</a>&amp; q1, <span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;Type&gt;</a>&amp; q2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;Type&gt;</a>&amp; q1, <span class="keyword">const</span> <a class="code" href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate&lt;Type&gt;</a>&amp; q2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Quat_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_quat_template_htm_a4e6d4c187d368bbf3ef46d7914393b1c"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a4e6d4c187d368bbf3ef46d7914393b1c">xiiQuatTemplate::operator-</a></div><div class="ttdeci">const xiiQuatTemplate operator-() const</div><div class="ttdoc">Returns a Quaternion that represents the negative / inverted rotation.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:95</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a49829f80f46861fa33a195732adaee32"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a49829f80f46861fa33a195732adaee32">xiiQuatTemplate::SetElements</a></div><div class="ttdeci">void SetElements(Type inX, Type inY, Type inZ, Type inW)</div><div class="ttdoc">Sets the individual elements of the quaternion directly. Note that x,y,z do NOT represent a rotation ...</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:29</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a4439e3b9882a6a061622a29f9c42cd5f"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a4439e3b9882a6a061622a29f9c42cd5f">xiiQuatTemplate::GetRotationAxisAndAngle</a></div><div class="ttdeci">void GetRotationAxisAndAngle(xiiVec3Template&lt; Type &gt; &amp;ref_vAxis, xiiAngleTemplate&lt; Type &gt; &amp;ref_angle, Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns the rotation-axis and angle, that this quaternion rotates around.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:65</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_ae88f50c75d2e37f3b4f4d2b735d20915"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#ae88f50c75d2e37f3b4f4d2b735d20915">xiiQuatTemplate::SetIdentity</a></div><div class="ttdeci">void SetIdentity()</div><div class="ttdoc">Sets the Quaternion to the identity.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:36</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a9eedbd0664e93fed324f940d37cc6791"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a9eedbd0664e93fed324f940d37cc6791">xiiQuatTemplate::SetShortestRotation</a></div><div class="ttdeci">void SetShortestRotation(const xiiVec3Template&lt; Type &gt; &amp;vDirFrom, const xiiVec3Template&lt; Type &gt; &amp;vDirTo)</div><div class="ttdoc">Creates a quaternion, that rotates through the shortest arc from &quot;vDirFrom&quot; to &quot;vDirTo&quot;.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:329</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_aab1ecbbf3bfc5f7d00b32df1ce89e342"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#aab1ecbbf3bfc5f7d00b32df1ce89e342">xiiQuatTemplate::Normalize</a></div><div class="ttdeci">void Normalize()</div><div class="ttdoc">Normalizes the quaternion to unit length. ALL rotation-quaternions should be normalized at all times ...</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:52</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_acac88d8e4caf8ddb378b3c8afcc1efce"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#acac88d8e4caf8ddb378b3c8afcc1efce">xiiQuatTemplate::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:143</div></div>
<div class="ttc" id="aclassxii_mat4_template_htm"><div class="ttname"><a href="../../d1/dec/classxii_mat4_template.htm">xiiMat4Template</a></div><div class="ttdoc">A 4x4 component matrix class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:171</div></div>
<div class="ttc" id="aclassxii_mat3_template_htm"><div class="ttname"><a href="../../d3/d74/classxii_mat3_template.htm">xiiMat3Template</a></div><div class="ttdoc">A 3x3 component matrix class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:164</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a09a33fa5dcfe6cfaab85362445b27898"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a09a33fa5dcfe6cfaab85362445b27898">xiiQuatTemplate::IsEqualRotation</a></div><div class="ttdeci">bool IsEqualRotation(const xiiQuatTemplate &amp;qOther, Type fEpsilon) const</div><div class="ttdoc">Determines whether this and qOther represent the same rotation. This is a rather slow operation.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:149</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a1ccee339c17216c8ed01970c2c4bfea2"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a1ccee339c17216c8ed01970c2c4bfea2">xiiQuatTemplate::Invert</a></div><div class="ttdeci">void Invert()</div><div class="ttdoc">Inverts the rotation, so instead of rotating N degrees around an axis, the quaternion will rotate -N ...</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:87</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_aa6d32f6602a305f9bb2b80d578db647f"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#aa6d32f6602a305f9bb2b80d578db647f">xiiQuatTemplate::GetAsMat3</a></div><div class="ttdeci">const xiiMat3Template&lt; Type &gt; GetAsMat3() const</div><div class="ttdoc">Returns the Quaternion as a matrix.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:172</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a8d26c87261cce8521c28c4b3a1b12f99"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a8d26c87261cce8521c28c4b3a1b12f99">xiiQuatTemplate::GetAsEulerAngles</a></div><div class="ttdeci">void GetAsEulerAngles(xiiAngleTemplate&lt; Type &gt; &amp;out_x, xiiAngleTemplate&lt; Type &gt; &amp;out_y, xiiAngleTemplate&lt; Type &gt; &amp;out_z) const</div><div class="ttdoc">Converts the quaternion to Euler angles.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:436</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a7e0b7355144093951d34ec4cd7c08e81"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a7e0b7355144093951d34ec4cd7c08e81">xiiQuatTemplate::ReconstructFromMat4</a></div><div class="ttdeci">void ReconstructFromMat4(const xiiMat4Template&lt; Type &gt; &amp;m)</div><div class="ttdoc">Reconstructs a rotation quaternion from a matrix that may contain scaling and mirroring.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:308</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a6e0a54212fcfe9b1926789427db98aac"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a6e0a54212fcfe9b1926789427db98aac">xiiQuatTemplate::Dot</a></div><div class="ttdeci">Type Dot(const xiiQuatTemplate &amp;rhs) const</div><div class="ttdoc">Returns the dot-product of the two quaternions (commutative, order does not matter).</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:103</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a57c283998a8fe1e5bc7c8725386f19d1"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a57c283998a8fe1e5bc7c8725386f19d1">xiiQuatTemplate::SetFromEulerAngles</a></div><div class="ttdeci">void SetFromEulerAngles(const xiiAngleTemplate&lt; Type &gt; &amp;x, const xiiAngleTemplate&lt; Type &gt; &amp;y, const xiiAngleTemplate&lt; Type &gt; &amp;z)</div><div class="ttdoc">Sets the quaternion from Euler angles.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:479</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_ae8d1ef81f529aa01674735ee3095d2a0"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#ae8d1ef81f529aa01674735ee3095d2a0">xiiQuatTemplate::IsValid</a></div><div class="ttdeci">bool IsValid(Type fEpsilon=xiiMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether all components are neither NaN nor infinite and that the quaternion is normalized.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:130</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_abc8e13490d6d8b6d763461342c371e30"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#abc8e13490d6d8b6d763461342c371e30">xiiQuatTemplate::IdentityQuaternion</a></div><div class="ttdeci">static const xiiQuatTemplate&lt; Type &gt; IdentityQuaternion()</div><div class="ttdoc">Static function that returns a quaternion that represents the identity rotation (none).</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:23</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_ae4acab9c811fa6a9f02c2312599526fc"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#ae4acab9c811fa6a9f02c2312599526fc">xiiQuatTemplate::GetAsMat4</a></div><div class="ttdeci">const xiiMat4Template&lt; Type &gt; GetAsMat4() const</div><div class="ttdoc">Returns the Quaternion as a matrix.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:204</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_aaef4b95931d63340b6bb3bb22734f734"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#aaef4b95931d63340b6bb3bb22734f734">xiiQuatTemplate::SetFromAxisAndAngle</a></div><div class="ttdeci">void SetFromAxisAndAngle(const xiiVec3Template&lt; Type &gt; &amp;vRotationAxis, xiiAngleTemplate&lt; Type &gt; angle)</div><div class="ttdoc">Creates a quaternion from a rotation-axis and an angle.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:43</div></div>
<div class="ttc" id="aclassxii_quat_template_htm"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm">xiiQuatTemplate</a></div><div class="ttdoc">Quaternions can be used to represent rotations in 3D space.</div><div class="ttdef"><b>Definition:</b> Declarations.h:185</div></div>
<div class="ttc" id="aclassxii_angle_template_htm"><div class="ttname"><a href="../../d3/ddb/classxii_angle_template.htm">xiiAngleTemplate</a></div><div class="ttdoc">Wrapper class for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:10</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a626e119e067b041d16a8fd8bfb006c92"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a626e119e067b041d16a8fd8bfb006c92">xiiQuatTemplate::ReconstructFromMat3</a></div><div class="ttdeci">void ReconstructFromMat3(const xiiMat3Template&lt; Type &gt; &amp;m)</div><div class="ttdoc">Reconstructs a rotation quaternion from a matrix that may contain scaling and mirroring.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:293</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_aca6ff595f2b25d5950fbfe256dc56af9"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#aca6ff595f2b25d5950fbfe256dc56af9">xiiQuatTemplate::SetSlerp</a></div><div class="ttdeci">void SetSlerp(const xiiQuatTemplate &amp;qFrom, const xiiQuatTemplate &amp;qTo, Type t)</div><div class="ttdoc">Sets this quaternion to be the spherical linear interpolation of the other two.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:366</div></div>
<div class="ttc" id="aclassxii_vec3_template_htm"><div class="ttname"><a href="../../d9/d9a/classxii_vec3_template.htm">xiiVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:138</div></div>
<div class="ttc" id="aclassxii_quat_template_htm_a4c5018aaf26a32127f17884de644e485"><div class="ttname"><a href="../../d9/d1b/classxii_quat_template.htm#a4c5018aaf26a32127f17884de644e485">xiiQuatTemplate::SetFromMat3</a></div><div class="ttdeci">void SetFromMat3(const xiiMat3Template&lt; Type &gt; &amp;m)</div><div class="ttdoc">Creates a quaternion from the given matrix.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:243</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c1b0860bb61ff24e678d996d14e4bcdd.htm">Math</a></li><li class="navelem"><b>Quat.h</b></li>
    <li class="footer">Generated on Mon Oct 9 2023 19:12:12 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
