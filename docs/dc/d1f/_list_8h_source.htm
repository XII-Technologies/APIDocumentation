<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: /home/runner/work/XII/XII/Source/Engine/Foundation/Containers/List.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XII Engine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dc/d1f/_list_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">List.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Deque.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../dd/dc3/classxii_list_base.htm">   11</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase</a></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">struct </span>ListElement;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keyword">struct </span>ListElementBase</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  {</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    ListElementBase();</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    ListElement* m_pPrev;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    ListElement* m_pNext;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  };</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keyword">struct </span>ListElement : <span class="keyword">public</span> ListElementBase</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    ListElement() :</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      ListElementBase()</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">explicit</span> ListElement(<span class="keyword">const</span> T&amp; data);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    T m_Data = {};</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  };</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">struct </span>ConstIterator</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    ConstIterator() :</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      m_pElement(<span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#ae9df9e731cc3fb924a2af580c74a82e2">operator==</a>(<span class="keyword">typename</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase&lt;T&gt;::ConstIterator</a> it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement == it2.m_pElement); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> T&amp; operator*()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement-&gt;m_Data); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">const</span> T* operator-&gt;()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (&amp;m_pElement-&gt;m_Data); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordtype">void</span> Next() { m_pElement = m_pElement-&gt;m_pNext; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">void</span> Prev() { m_pElement = m_pElement-&gt;m_pPrev; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">bool</span> IsValid()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> ((m_pElement != <span class="keyword">nullptr</span>) &amp;&amp; (m_pElement-&gt;m_pPrev != <span class="keyword">nullptr</span>) &amp;&amp; (m_pElement-&gt;m_pNext != <span class="keyword">nullptr</span>)); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">void</span> operator++() { Next(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">void</span> operator--() { Prev(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase</a>&lt;T&gt;;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    ConstIterator(ListElement* pInit) :</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      m_pElement(pInit)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    ListElement* m_pElement;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  };</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../de/d8a/structxii_list_base_1_1_iterator.htm">   84</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../de/d8a/structxii_list_base_1_1_iterator.htm">Iterator</a> : <span class="keyword">public</span> ConstIterator</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="comment">// this is required to pull in the const version of this function</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keyword">using</span> ConstIterator::operator*;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keyword">using</span> ConstIterator::operator-&gt;;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="../../de/d8a/structxii_list_base_1_1_iterator.htm#afa50feb133365b8e018aad0dfcff6640">   93</a></span>&#160;    <a class="code" href="../../de/d8a/structxii_list_base_1_1_iterator.htm#afa50feb133365b8e018aad0dfcff6640">Iterator</a>() :</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      ConstIterator()</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="../../de/d8a/structxii_list_base_1_1_iterator.htm#a3a4adafa2485c98b3c57c1c891bee286">   99</a></span>&#160;    T&amp; <a class="code" href="../../de/d8a/structxii_list_base_1_1_iterator.htm#a3a4adafa2485c98b3c57c1c891bee286">operator*</a>() { <span class="keywordflow">return</span> (this-&gt;m_pElement-&gt;m_Data); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../de/d8a/structxii_list_base_1_1_iterator.htm#adaa363397bd16a593a77bb1d143b73c9">  102</a></span>&#160;    T* <a class="code" href="../../de/d8a/structxii_list_base_1_1_iterator.htm#adaa363397bd16a593a77bb1d143b73c9">operator-&gt;</a>() { <span class="keywordflow">return</span> (&amp;this-&gt;m_pElement-&gt;m_Data); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase</a>&lt;T&gt;;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="../../de/d8a/structxii_list_base_1_1_iterator.htm#afa50feb133365b8e018aad0dfcff6640">Iterator</a>(ListElement* pInit) :</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      ConstIterator(pInit)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  };</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#ac0d6cbe66715efb91306b7aed30a6ebc">xiiListBase</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <a class="code" href="../../dd/dc3/classxii_list_base.htm#ac0d6cbe66715efb91306b7aed30a6ebc">xiiListBase</a>(<span class="keyword">const</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase&lt;T&gt;</a>&amp; cc, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <a class="code" href="../../dd/dc3/classxii_list_base.htm#a009be35e072d595b2b86101333bdf2a3">~xiiListBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#ab87b1e463cdbf49799c73e58173bd4de">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase&lt;T&gt;</a>&amp; cc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#a09a2287e7bfba6714e64537fc973b328">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#a4f2792345477f07326a9c37175b4c47c">Compact</a>();</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  xiiUInt32 <a class="code" href="../../dd/dc3/classxii_list_base.htm#a94474766c3c210c91dfe8c48fa1d0e33">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#a73a5ed04f67ab71c25567b978a1321cc">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../dd/dc3/classxii_list_base.htm#acef73e0ded922a9297006a6bc0653e46">PeekFront</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../dd/dc3/classxii_list_base.htm#a769fafe3122d86debdebc0e7ecb178a6">PeekBack</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  T&amp; <a class="code" href="../../dd/dc3/classxii_list_base.htm#acef73e0ded922a9297006a6bc0653e46">PeekFront</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  T&amp; <a class="code" href="../../dd/dc3/classxii_list_base.htm#a769fafe3122d86debdebc0e7ecb178a6">PeekBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  T&amp; <a class="code" href="../../dd/dc3/classxii_list_base.htm#a32f6d57d489bb7acdb6cdee04c28c29a">PushBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#a32f6d57d489bb7acdb6cdee04c28c29a">PushBack</a>(<span class="keyword">const</span> T&amp; element); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#af41a04d9cb073bf5f7ace0688f7f39db">PopBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  T&amp; <a class="code" href="../../dd/dc3/classxii_list_base.htm#a5e55a5f2f34140599a8ba9f65e255782">PushFront</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#a5e55a5f2f34140599a8ba9f65e255782">PushFront</a>(<span class="keyword">const</span> T&amp; element); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#a09374502a79d2bd564515ec06fd2cab9">PopFront</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#a1426559f14d7a24ca5fa2002e59f1841">SetCount</a>(xiiUInt32 uiNewSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  Iterator <a class="code" href="../../dd/dc3/classxii_list_base.htm#aa5897b325921d9f6e6ff97358d6986d3">Insert</a>(<span class="keyword">const</span> Iterator&amp; pos, <span class="keyword">const</span> T&amp; data); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#aa5897b325921d9f6e6ff97358d6986d3">Insert</a>(<span class="keyword">const</span> Iterator&amp; pos, ConstIterator first, <span class="keyword">const</span> ConstIterator&amp; last);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  Iterator <a class="code" href="../../dd/dc3/classxii_list_base.htm#aa5897b325921d9f6e6ff97358d6986d3">Insert</a>(<span class="keyword">const</span> Iterator&amp; pos);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  Iterator <a class="code" href="../../dd/dc3/classxii_list_base.htm#a6b8b7e62057f372362faf4cc806dbb28">Remove</a>(<span class="keyword">const</span> Iterator&amp; pos); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  Iterator <a class="code" href="../../dd/dc3/classxii_list_base.htm#a6b8b7e62057f372362faf4cc806dbb28">Remove</a>(Iterator first, <span class="keyword">const</span> Iterator&amp; last);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  Iterator <a class="code" href="../../dd/dc3/classxii_list_base.htm#abe3b0c472697d7340cb0aca8d8c7ee17">GetIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  Iterator <a class="code" href="../../dd/dc3/classxii_list_base.htm#a6f9ba54d433d6806536e492abf241669">GetEndIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  ConstIterator <a class="code" href="../../dd/dc3/classxii_list_base.htm#abe3b0c472697d7340cb0aca8d8c7ee17">GetIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  ConstIterator <a class="code" href="../../dd/dc3/classxii_list_base.htm#a6f9ba54d433d6806536e492abf241669">GetEndIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="../../dd/dc3/classxii_list_base.htm#a5864d1e212789ecffb0c020d17951a4b">  200</a></span>&#160;  <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* <a class="code" href="../../dd/dc3/classxii_list_base.htm#a5864d1e212789ecffb0c020d17951a4b">GetAllocator</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code" href="../../d1/d7d/classxii_deque_base.htm#ac6bd66726793b411f2df0cfdb23dfbaa">GetAllocator</a>(); }</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm#ae9df9e731cc3fb924a2af580c74a82e2">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="../../dd/dc3/classxii_list_base.htm#addc7e22fe88ab595abb7731b91f86b54">  206</a></span>&#160;  xiiUInt64 <a class="code" href="../../dd/dc3/classxii_list_base.htm#addc7e22fe88ab595abb7731b91f86b54">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code" href="../../d1/d7d/classxii_deque_base.htm#abe5332bb093bdfed4202c5fdd3739a12">GetHeapMemoryUsage</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  ListElementBase m_First;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  ListElementBase m_Last;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="comment">// \brief Small hack to get around const problems.</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  Iterator m_End;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  xiiUInt32 m_uiCount;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  ListElement* AcquireNode();</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keywordtype">void</span> ReleaseNode(ListElement* pNode);</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <a class="code" href="../../d8/df8/classxii_deque.htm">xiiDeque&lt;ListElement, xiiNullAllocatorWrapper, false&gt;</a> m_Elements;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  ListElement* m_pFreeElementStack;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;};</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> AllocatorWrapper = xiiDefaultAllocatorWrapper&gt;</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="../../df/d73/classxii_list.htm">  236</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../df/d73/classxii_list.htm">xiiList</a> : <span class="keyword">public</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase</a>&lt;T&gt;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;{</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <a class="code" href="../../df/d73/classxii_list.htm">xiiList</a>();</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../df/d73/classxii_list.htm">xiiList</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <a class="code" href="../../df/d73/classxii_list.htm">xiiList</a>(<span class="keyword">const</span> <a class="code" href="../../df/d73/classxii_list.htm">xiiList&lt;T, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <a class="code" href="../../df/d73/classxii_list.htm">xiiList</a>(<span class="keyword">const</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../df/d73/classxii_list.htm">xiiList&lt;T, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../dd/dc3/classxii_list_base.htm">xiiListBase&lt;T&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;};</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/List_inl.h&gt;</span></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassxii_deque_base_htm_abe5332bb093bdfed4202c5fdd3739a12"><div class="ttname"><a href="../../d1/d7d/classxii_deque_base.htm#abe5332bb093bdfed4202c5fdd3739a12">xiiDequeBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> Deque_inl.h:979</div></div>
<div class="ttc" id="aclassxii_deque_base_htm_ac6bd66726793b411f2df0cfdb23dfbaa"><div class="ttname"><a href="../../d1/d7d/classxii_deque_base.htm#ac6bd66726793b411f2df0cfdb23dfbaa">xiiDequeBase::GetAllocator</a></div><div class="ttdeci">xiiAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> Deque.h:167</div></div>
<div class="ttc" id="aclassxii_deque_htm"><div class="ttname"><a href="../../d8/df8/classxii_deque.htm">xiiDeque&lt; ListElement, xiiNullAllocatorWrapper, false &gt;</a></div></div>
<div class="ttc" id="aclassxii_list_base_htm"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm">xiiListBase</a></div><div class="ttdoc">A List-class, similar to STL::list.</div><div class="ttdef"><b>Definition:</b> List.h:12</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a009be35e072d595b2b86101333bdf2a3"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a009be35e072d595b2b86101333bdf2a3">xiiListBase::~xiiListBase</a></div><div class="ttdeci">~xiiListBase()</div><div class="ttdoc">Destroys the list and all its content.</div><div class="ttdef"><b>Definition:</b> List_inl.h:40</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a09374502a79d2bd564515ec06fd2cab9"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a09374502a79d2bd564515ec06fd2cab9">xiiListBase::PopFront</a></div><div class="ttdeci">void PopFront()</div><div class="ttdoc">Removes the very first element from the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:213</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a09a2287e7bfba6714e64537fc973b328"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a09a2287e7bfba6714e64537fc973b328">xiiListBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the list, afterwards it is empty.</div><div class="ttdef"><b>Definition:</b> List_inl.h:132</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a1426559f14d7a24ca5fa2002e59f1841"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a1426559f14d7a24ca5fa2002e59f1841">xiiListBase::SetCount</a></div><div class="ttdeci">void SetCount(xiiUInt32 uiNewSize)</div><div class="ttdoc">Sets the number of elements that are in the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:303</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a32f6d57d489bb7acdb6cdee04c28c29a"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a32f6d57d489bb7acdb6cdee04c28c29a">xiiListBase::PushBack</a></div><div class="ttdeci">T &amp; PushBack()</div><div class="ttdoc">Appends a default-constructed element to the list and returns a reference to it.</div><div class="ttdef"><b>Definition:</b> List_inl.h:181</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a4f2792345477f07326a9c37175b4c47c"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a4f2792345477f07326a9c37175b4c47c">xiiListBase::Compact</a></div><div class="ttdeci">void Compact()</div><div class="ttdoc">See xiiDeque::Compact()</div><div class="ttdef"><b>Definition:</b> List_inl.h:142</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a5864d1e212789ecffb0c020d17951a4b"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a5864d1e212789ecffb0c020d17951a4b">xiiListBase::GetAllocator</a></div><div class="ttdeci">xiiAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> List.h:200</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a5e55a5f2f34140599a8ba9f65e255782"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a5e55a5f2f34140599a8ba9f65e255782">xiiListBase::PushFront</a></div><div class="ttdeci">T &amp; PushFront()</div><div class="ttdoc">Appends a default-constructed element to the front of the list and returns a reference to it.</div><div class="ttdef"><b>Definition:</b> List_inl.h:193</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a6b8b7e62057f372362faf4cc806dbb28"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a6b8b7e62057f372362faf4cc806dbb28">xiiListBase::Remove</a></div><div class="ttdeci">Iterator Remove(const Iterator &amp;pos)</div><div class="ttdoc">Erases the element pointed to by the iterator.</div><div class="ttdef"><b>Definition:</b> List_inl.h:270</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a6f9ba54d433d6806536e492abf241669"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a6f9ba54d433d6806536e492abf241669">xiiListBase::GetEndIterator</a></div><div class="ttdeci">Iterator GetEndIterator()</div><div class="ttdoc">Returns an iterator pointing behind the last element. Necessary if one wants to insert elements at th...</div><div class="ttdef"><b>Definition:</b> List_inl.h:102</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a73a5ed04f67ab71c25567b978a1321cc"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a73a5ed04f67ab71c25567b978a1321cc">xiiListBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether size == 0. O(1) operation.</div><div class="ttdef"><b>Definition:</b> List_inl.h:126</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a769fafe3122d86debdebc0e7ecb178a6"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a769fafe3122d86debdebc0e7ecb178a6">xiiListBase::PeekBack</a></div><div class="ttdeci">const T &amp; PeekBack() const</div><div class="ttdoc">Returns the very last element in the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:172</div></div>
<div class="ttc" id="aclassxii_list_base_htm_a94474766c3c210c91dfe8c48fa1d0e33"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#a94474766c3c210c91dfe8c48fa1d0e33">xiiListBase::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the list. O(1) operation.</div><div class="ttdef"><b>Definition:</b> List_inl.h:120</div></div>
<div class="ttc" id="aclassxii_list_base_htm_aa5897b325921d9f6e6ff97358d6986d3"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#aa5897b325921d9f6e6ff97358d6986d3">xiiListBase::Insert</a></div><div class="ttdeci">Iterator Insert(const Iterator &amp;pos, const T &amp;data)</div><div class="ttdoc">Inserts one element before the position defined by the iterator.</div><div class="ttdef"><b>Definition:</b> List_inl.h:238</div></div>
<div class="ttc" id="aclassxii_list_base_htm_ab87b1e463cdbf49799c73e58173bd4de"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#ab87b1e463cdbf49799c73e58173bd4de">xiiListBase::operator=</a></div><div class="ttdeci">void operator=(const xiiListBase&lt; T &gt; &amp;cc)</div><div class="ttdoc">Copies the list cc into this list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:46</div></div>
<div class="ttc" id="aclassxii_list_base_htm_abe3b0c472697d7340cb0aca8d8c7ee17"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#abe3b0c472697d7340cb0aca8d8c7ee17">xiiListBase::GetIterator</a></div><div class="ttdeci">Iterator GetIterator()</div><div class="ttdoc">Returns an iterator to the first list-element.</div><div class="ttdef"><b>Definition:</b> List_inl.h:96</div></div>
<div class="ttc" id="aclassxii_list_base_htm_ac0d6cbe66715efb91306b7aed30a6ebc"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#ac0d6cbe66715efb91306b7aed30a6ebc">xiiListBase::xiiListBase</a></div><div class="ttdeci">xiiListBase(xiiAllocatorBase *pAllocator)</div><div class="ttdoc">Initializes the list to be empty.</div><div class="ttdef"><b>Definition:</b> List_inl.h:22</div></div>
<div class="ttc" id="aclassxii_list_base_htm_acef73e0ded922a9297006a6bc0653e46"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#acef73e0ded922a9297006a6bc0653e46">xiiListBase::PeekFront</a></div><div class="ttdeci">const T &amp; PeekFront() const</div><div class="ttdoc">Returns the very first element in the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:164</div></div>
<div class="ttc" id="aclassxii_list_base_htm_addc7e22fe88ab595abb7731b91f86b54"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#addc7e22fe88ab595abb7731b91f86b54">xiiListBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> List.h:206</div></div>
<div class="ttc" id="aclassxii_list_base_htm_ae9df9e731cc3fb924a2af580c74a82e2"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#ae9df9e731cc3fb924a2af580c74a82e2">xiiListBase::operator==</a></div><div class="ttdeci">bool operator==(const xiiListBase&lt; T &gt; &amp;rhs) const</div><div class="ttdoc">Comparison operator.</div><div class="ttdef"><b>Definition:</b> List_inl.h:313</div></div>
<div class="ttc" id="aclassxii_list_base_htm_af41a04d9cb073bf5f7ace0688f7f39db"><div class="ttname"><a href="../../dd/dc3/classxii_list_base.htm#af41a04d9cb073bf5f7ace0688f7f39db">xiiListBase::PopBack</a></div><div class="ttdeci">void PopBack()</div><div class="ttdoc">Removes the very last element from the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:205</div></div>
<div class="ttc" id="aclassxii_list_htm"><div class="ttname"><a href="../../df/d73/classxii_list.htm">xiiList</a></div><div class="ttdef"><b>Definition:</b> List.h:237</div></div>
<div class="ttc" id="astructxii_list_base_1_1_iterator_htm"><div class="ttname"><a href="../../de/d8a/structxii_list_base_1_1_iterator.htm">xiiListBase::Iterator</a></div><div class="ttdoc">A forward-iterator. Allows sequential access from front-to-back.</div><div class="ttdef"><b>Definition:</b> List.h:85</div></div>
<div class="ttc" id="astructxii_list_base_1_1_iterator_htm_a3a4adafa2485c98b3c57c1c891bee286"><div class="ttname"><a href="../../de/d8a/structxii_list_base_1_1_iterator.htm#a3a4adafa2485c98b3c57c1c891bee286">xiiListBase::Iterator::operator*</a></div><div class="ttdeci">T &amp; operator*()</div><div class="ttdoc">Accesses the element stored in the node.</div><div class="ttdef"><b>Definition:</b> List.h:99</div></div>
<div class="ttc" id="astructxii_list_base_1_1_iterator_htm_adaa363397bd16a593a77bb1d143b73c9"><div class="ttname"><a href="../../de/d8a/structxii_list_base_1_1_iterator.htm#adaa363397bd16a593a77bb1d143b73c9">xiiListBase::Iterator::operator-&gt;</a></div><div class="ttdeci">T * operator-&gt;()</div><div class="ttdoc">Accesses the element stored in the node.</div><div class="ttdef"><b>Definition:</b> List.h:102</div></div>
<div class="ttc" id="astructxii_list_base_1_1_iterator_htm_afa50feb133365b8e018aad0dfcff6640"><div class="ttname"><a href="../../de/d8a/structxii_list_base_1_1_iterator.htm#afa50feb133365b8e018aad0dfcff6640">xiiListBase::Iterator::Iterator</a></div><div class="ttdeci">Iterator()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> List.h:93</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_7f59ab18dbc50035dfc0ee7070867286.htm">Containers</a></li><li class="navelem"><b>List.h</b></li>
    <li class="footer">Generated on Mon Jul 1 2024 12:12:48 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
