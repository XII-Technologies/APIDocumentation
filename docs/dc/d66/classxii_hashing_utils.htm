<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: xiiHashingUtils Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dc/d66/classxii_hashing_utils.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d8/dd8/classxii_hashing_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">xiiHashingUtils Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>This class provides implementations of different hashing algorithms.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/df9/_hashing_utils_8h_source.htm">HashingUtils.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab6884dd68399383222a0d1247e4c7f38" id="r_ab6884dd68399383222a0d1247e4c7f38"><td class="memTemplParams" colspan="2"><a id="ab6884dd68399383222a0d1247e4c7f38" name="ab6884dd68399383222a0d1247e4c7f38"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:ab6884dd68399383222a0d1247e4c7f38"><td class="memTemplItemLeft" align="right" valign="top">constexpr XII_ALWAYS_INLINE xiiUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>MurmurHash32String</b> (const char(&amp;str)[N], xiiUInt32 uiSeed)</td></tr>
<tr class="separator:ab6884dd68399383222a0d1247e4c7f38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15382d677f65234e21c4b3ad2ca78fe5" id="r_a15382d677f65234e21c4b3ad2ca78fe5"><td class="memTemplParams" colspan="2"><a id="a15382d677f65234e21c4b3ad2ca78fe5" name="a15382d677f65234e21c4b3ad2ca78fe5"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a15382d677f65234e21c4b3ad2ca78fe5"><td class="memTemplItemLeft" align="right" valign="top">constexpr XII_ALWAYS_INLINE xiiUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><b>StringHash</b> (const char(&amp;str)[N], xiiUInt64 uiSeed)</td></tr>
<tr class="separator:a15382d677f65234e21c4b3ad2ca78fe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0373f16d7c0164ef7b0fa2dc6b026a5b" id="r_a0373f16d7c0164ef7b0fa2dc6b026a5b"><td class="memTemplParams" colspan="2"><a id="a0373f16d7c0164ef7b0fa2dc6b026a5b" name="a0373f16d7c0164ef7b0fa2dc6b026a5b"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a0373f16d7c0164ef7b0fa2dc6b026a5b"><td class="memTemplItemLeft" align="right" valign="top">constexpr XII_ALWAYS_INLINE xiiUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xxHash32String</b> (const char(&amp;str)[N], xiiUInt32 uiSeed)</td></tr>
<tr class="separator:a0373f16d7c0164ef7b0fa2dc6b026a5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80cae43347102d672482ff94ac195e8a" id="r_a80cae43347102d672482ff94ac195e8a"><td class="memTemplParams" colspan="2"><a id="a80cae43347102d672482ff94ac195e8a" name="a80cae43347102d672482ff94ac195e8a"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a80cae43347102d672482ff94ac195e8a"><td class="memTemplItemLeft" align="right" valign="top">constexpr XII_ALWAYS_INLINE xiiUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xxHash64String</b> (const char(&amp;str)[N], xiiUInt64 uiSeed)</td></tr>
<tr class="separator:a80cae43347102d672482ff94ac195e8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a65837b1b2450e510438743277c3c5365" id="r_a65837b1b2450e510438743277c3c5365"><td class="memItemLeft" align="right" valign="top"><a id="a65837b1b2450e510438743277c3c5365" name="a65837b1b2450e510438743277c3c5365"></a>
static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>CRC32Hash</b> (const void *pKey, size_t uiSizeInBytes)</td></tr>
<tr class="memdesc:a65837b1b2450e510438743277c3c5365"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the CRC32 checksum of the given key. <br /></td></tr>
<tr class="separator:a65837b1b2450e510438743277c3c5365"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18eac07e2879154ea01958b04380d94f" id="r_a18eac07e2879154ea01958b04380d94f"><td class="memItemLeft" align="right" valign="top"><a id="a18eac07e2879154ea01958b04380d94f" name="a18eac07e2879154ea01958b04380d94f"></a>
static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>MurmurHash32</b> (const void *pKey, size_t uiSizeInByte, xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a18eac07e2879154ea01958b04380d94f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit murmur hash of the given key. <br /></td></tr>
<tr class="separator:a18eac07e2879154ea01958b04380d94f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acca04d0de901049d50a741d1b4163584" id="r_acca04d0de901049d50a741d1b4163584"><td class="memItemLeft" align="right" valign="top"><a id="acca04d0de901049d50a741d1b4163584" name="acca04d0de901049d50a741d1b4163584"></a>
static xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>MurmurHash64</b> (const void *pKey, size_t uiSizeInByte, xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:acca04d0de901049d50a741d1b4163584"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit murmur hash of the given key. <br /></td></tr>
<tr class="separator:acca04d0de901049d50a741d1b4163584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cef49725f8c5ef9dc576e3171c0616c" id="r_a1cef49725f8c5ef9dc576e3171c0616c"><td class="memTemplParams" colspan="2"><a id="a1cef49725f8c5ef9dc576e3171c0616c" name="a1cef49725f8c5ef9dc576e3171c0616c"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a1cef49725f8c5ef9dc576e3171c0616c"><td class="memTemplItemLeft" align="right" valign="top">static constexpr xiiUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>MurmurHash32String</b> (const char(&amp;str)[N], xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a1cef49725f8c5ef9dc576e3171c0616c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit murmur hash of a string constant at compile time. Encoding does not matter here. <br /></td></tr>
<tr class="separator:a1cef49725f8c5ef9dc576e3171c0616c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13c237737f895ea33dbe17a3ccd88b21" id="r_a13c237737f895ea33dbe17a3ccd88b21"><td class="memItemLeft" align="right" valign="top">static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a13c237737f895ea33dbe17a3ccd88b21">MurmurHash32String</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStr, xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a13c237737f895ea33dbe17a3ccd88b21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit murmur hash of a string pointer during runtime. Encoding does not matter here.  <br /></td></tr>
<tr class="separator:a13c237737f895ea33dbe17a3ccd88b21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a697c8c7399f69d6ba98b81ee9f2f7233" id="r_a697c8c7399f69d6ba98b81ee9f2f7233"><td class="memItemLeft" align="right" valign="top"><a id="a697c8c7399f69d6ba98b81ee9f2f7233" name="a697c8c7399f69d6ba98b81ee9f2f7233"></a>
static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>xxHash32</b> (const void *pKey, size_t uiSizeInByte, xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a697c8c7399f69d6ba98b81ee9f2f7233"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit xxHash of the given key. <br /></td></tr>
<tr class="separator:a697c8c7399f69d6ba98b81ee9f2f7233"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b8c43320c3ea349c49a9fbf9deca5d1" id="r_a8b8c43320c3ea349c49a9fbf9deca5d1"><td class="memItemLeft" align="right" valign="top"><a id="a8b8c43320c3ea349c49a9fbf9deca5d1" name="a8b8c43320c3ea349c49a9fbf9deca5d1"></a>
static xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>xxHash64</b> (const void *pKey, size_t uiSizeInByte, xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a8b8c43320c3ea349c49a9fbf9deca5d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit xxHash of the given key. <br /></td></tr>
<tr class="separator:a8b8c43320c3ea349c49a9fbf9deca5d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a756aee2863d7e66e2c3d00bd6009df5b" id="r_a756aee2863d7e66e2c3d00bd6009df5b"><td class="memTemplParams" colspan="2"><a id="a756aee2863d7e66e2c3d00bd6009df5b" name="a756aee2863d7e66e2c3d00bd6009df5b"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a756aee2863d7e66e2c3d00bd6009df5b"><td class="memTemplItemLeft" align="right" valign="top">static constexpr xiiUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xxHash32String</b> (const char(&amp;str)[N], xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a756aee2863d7e66e2c3d00bd6009df5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit xxHash of the given string literal at compile time. <br /></td></tr>
<tr class="separator:a756aee2863d7e66e2c3d00bd6009df5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac052499a754f6d78a7600e28c0f9de35" id="r_ac052499a754f6d78a7600e28c0f9de35"><td class="memTemplParams" colspan="2"><a id="ac052499a754f6d78a7600e28c0f9de35" name="ac052499a754f6d78a7600e28c0f9de35"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:ac052499a754f6d78a7600e28c0f9de35"><td class="memTemplItemLeft" align="right" valign="top">static constexpr xiiUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xxHash64String</b> (const char(&amp;str)[N], xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:ac052499a754f6d78a7600e28c0f9de35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit xxHash of the given string literal at compile time. <br /></td></tr>
<tr class="separator:ac052499a754f6d78a7600e28c0f9de35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc671dc4dbb97ba3cedf514320b4a008" id="r_acc671dc4dbb97ba3cedf514320b4a008"><td class="memItemLeft" align="right" valign="top">static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acc671dc4dbb97ba3cedf514320b4a008">xxHash32String</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStr, xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:acc671dc4dbb97ba3cedf514320b4a008"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit xxHash of a string pointer during runtime.  <br /></td></tr>
<tr class="separator:acc671dc4dbb97ba3cedf514320b4a008"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17809640e0ea31d39eb586de43fad5b6" id="r_a17809640e0ea31d39eb586de43fad5b6"><td class="memItemLeft" align="right" valign="top">static xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a17809640e0ea31d39eb586de43fad5b6">xxHash64String</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStr, xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a17809640e0ea31d39eb586de43fad5b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit xxHash of a string pointer during runtime.  <br /></td></tr>
<tr class="separator:a17809640e0ea31d39eb586de43fad5b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd863d6061d94ce1d62ce2a0fecbc87d" id="r_afd863d6061d94ce1d62ce2a0fecbc87d"><td class="memTemplParams" colspan="2"><a id="afd863d6061d94ce1d62ce2a0fecbc87d" name="afd863d6061d94ce1d62ce2a0fecbc87d"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:afd863d6061d94ce1d62ce2a0fecbc87d"><td class="memTemplItemLeft" align="right" valign="top">static constexpr xiiUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><b>StringHash</b> (const char(&amp;str)[N], xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:afd863d6061d94ce1d62ce2a0fecbc87d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the hash of the given string literal at compile time. <br /></td></tr>
<tr class="separator:afd863d6061d94ce1d62ce2a0fecbc87d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a978d45039a8334a0fb700b0e790e7460" id="r_a978d45039a8334a0fb700b0e790e7460"><td class="memItemLeft" align="right" valign="top">static xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a978d45039a8334a0fb700b0e790e7460">StringHash</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStr, xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a978d45039a8334a0fb700b0e790e7460"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the hash of a string pointer at runtime.  <br /></td></tr>
<tr class="separator:a978d45039a8334a0fb700b0e790e7460"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa26c1ad1f288a5c3040f8045fab4382" id="r_afa26c1ad1f288a5c3040f8045fab4382"><td class="memItemLeft" align="right" valign="top">static constexpr xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afa26c1ad1f288a5c3040f8045fab4382">StringHashTo32</a> (xiiUInt64 uiHash)</td></tr>
<tr class="memdesc:afa26c1ad1f288a5c3040f8045fab4382"><td class="mdescLeft">&#160;</td><td class="mdescRight">Truncates a 64 bit string hash to 32 bit.  <br /></td></tr>
<tr class="separator:afa26c1ad1f288a5c3040f8045fab4382"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f21bbacb3193c90ed2d6ef7ce20a725" id="r_a1f21bbacb3193c90ed2d6ef7ce20a725"><td class="memItemLeft" align="right" valign="top"><a id="a1f21bbacb3193c90ed2d6ef7ce20a725" name="a1f21bbacb3193c90ed2d6ef7ce20a725"></a>
static constexpr xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>CombineHashValues32</b> (xiiUInt32 ui0, xiiUInt32 ui1)</td></tr>
<tr class="memdesc:a1f21bbacb3193c90ed2d6ef7ce20a725"><td class="mdescLeft">&#160;</td><td class="mdescRight">Combines two 32 bit hash values into one. <br /></td></tr>
<tr class="separator:a1f21bbacb3193c90ed2d6ef7ce20a725"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class provides implementations of different hashing algorithms. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a13c237737f895ea33dbe17a3ccd88b21" name="a13c237737f895ea33dbe17a3ccd88b21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13c237737f895ea33dbe17a3ccd88b21">&#9670;&#160;</a></span>MurmurHash32String()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE xiiUInt32 xiiHashingUtils::MurmurHash32String </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sStr</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt32</td>          <td class="paramname"><span class="paramname"><em>uiSeed</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the 32bit murmur hash of a string pointer during runtime. Encoding does not matter here. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<a id="a978d45039a8334a0fb700b0e790e7460" name="a978d45039a8334a0fb700b0e790e7460"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a978d45039a8334a0fb700b0e790e7460">&#9670;&#160;</a></span>StringHash()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE xiiUInt64 xiiHashingUtils::StringHash </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sStr</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt64</td>          <td class="paramname"><span class="paramname"><em>uiSeed</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the hash of a string pointer at runtime. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<a id="afa26c1ad1f288a5c3040f8045fab4382" name="afa26c1ad1f288a5c3040f8045fab4382"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa26c1ad1f288a5c3040f8045fab4382">&#9670;&#160;</a></span>StringHashTo32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE xiiUInt32 xiiHashingUtils::StringHashTo32 </td>
          <td>(</td>
          <td class="paramtype">xiiUInt64</td>          <td class="paramname"><span class="paramname"><em>uiHash</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Truncates a 64 bit string hash to 32 bit. </p>
<p>This is necessary when a 64 bit string hash is used in a hash table (which only uses 32 bit indices). </p>

</div>
</div>
<a id="acc671dc4dbb97ba3cedf514320b4a008" name="acc671dc4dbb97ba3cedf514320b4a008"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc671dc4dbb97ba3cedf514320b4a008">&#9670;&#160;</a></span>xxHash32String()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE xiiUInt32 xiiHashingUtils::xxHash32String </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sStr</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt32</td>          <td class="paramname"><span class="paramname"><em>uiSeed</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the 32bit xxHash of a string pointer during runtime. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<a id="a17809640e0ea31d39eb586de43fad5b6" name="a17809640e0ea31d39eb586de43fad5b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17809640e0ea31d39eb586de43fad5b6">&#9670;&#160;</a></span>xxHash64String()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE xiiUInt64 xiiHashingUtils::xxHash64String </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></td>          <td class="paramname"><span class="paramname"><em>sStr</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt64</td>          <td class="paramname"><span class="paramname"><em>uiSeed</em></span><span class="paramdefsep"> = </span><span class="paramdefval">0</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the 64bit xxHash of a string pointer during runtime. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/<a class="el" href="../../d8/df9/_hashing_utils_8h_source.htm">HashingUtils.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/Implementation/<a class="el" href="../../d6/d19/_hashing_murmur__inl_8h_source.htm">HashingMurmur_inl.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/Implementation/<b>HashingUtils.cpp</b></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/Implementation/<a class="el" href="../../d0/d46/_hashing_utils__inl_8h_source.htm">HashingUtils_inl.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/Implementation/<a class="el" href="../../db/dfb/_hashing_xx_hash__inl_8h_source.htm">HashingXxHash_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm">xiiHashingUtils</a></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:02:16 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
