<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiHashingUtils Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dc/d66/classxii_hashing_utils.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d8/dd8/classxii_hashing_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiHashingUtils Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class provides implementations of different hashing algorithms.  
 <a href="../../dc/d66/classxii_hashing_utils.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/df9/_hashing_utils_8h_source.htm">HashingUtils.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab6884dd68399383222a0d1247e4c7f38"><td class="memTemplParams" colspan="2"><a id="ab6884dd68399383222a0d1247e4c7f38"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:ab6884dd68399383222a0d1247e4c7f38"><td class="memTemplItemLeft" align="right" valign="top">constexpr XII_ALWAYS_INLINE xiiUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>MurmurHash32String</b> (const char(&amp;str)[N], xiiUInt32 uiSeed)</td></tr>
<tr class="separator:ab6884dd68399383222a0d1247e4c7f38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15382d677f65234e21c4b3ad2ca78fe5"><td class="memTemplParams" colspan="2"><a id="a15382d677f65234e21c4b3ad2ca78fe5"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a15382d677f65234e21c4b3ad2ca78fe5"><td class="memTemplItemLeft" align="right" valign="top">constexpr XII_ALWAYS_INLINE xiiUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><b>StringHash</b> (const char(&amp;str)[N], xiiUInt64 uiSeed)</td></tr>
<tr class="separator:a15382d677f65234e21c4b3ad2ca78fe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0373f16d7c0164ef7b0fa2dc6b026a5b"><td class="memTemplParams" colspan="2"><a id="a0373f16d7c0164ef7b0fa2dc6b026a5b"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a0373f16d7c0164ef7b0fa2dc6b026a5b"><td class="memTemplItemLeft" align="right" valign="top">constexpr XII_ALWAYS_INLINE xiiUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xxHash32String</b> (const char(&amp;str)[N], xiiUInt32 uiSeed)</td></tr>
<tr class="separator:a0373f16d7c0164ef7b0fa2dc6b026a5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80cae43347102d672482ff94ac195e8a"><td class="memTemplParams" colspan="2"><a id="a80cae43347102d672482ff94ac195e8a"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a80cae43347102d672482ff94ac195e8a"><td class="memTemplItemLeft" align="right" valign="top">constexpr XII_ALWAYS_INLINE xiiUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xxHash64String</b> (const char(&amp;str)[N], xiiUInt64 uiSeed)</td></tr>
<tr class="separator:a80cae43347102d672482ff94ac195e8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a65837b1b2450e510438743277c3c5365"><td class="memItemLeft" align="right" valign="top"><a id="a65837b1b2450e510438743277c3c5365"></a>
static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#a65837b1b2450e510438743277c3c5365">CRC32Hash</a> (const void *pKey, size_t uiSizeInBytes)</td></tr>
<tr class="memdesc:a65837b1b2450e510438743277c3c5365"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the CRC32 checksum of the given key. <br /></td></tr>
<tr class="separator:a65837b1b2450e510438743277c3c5365"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18eac07e2879154ea01958b04380d94f"><td class="memItemLeft" align="right" valign="top"><a id="a18eac07e2879154ea01958b04380d94f"></a>
static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#a18eac07e2879154ea01958b04380d94f">MurmurHash32</a> (const void *pKey, size_t uiSizeInByte, xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a18eac07e2879154ea01958b04380d94f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit murmur hash of the given key. <br /></td></tr>
<tr class="separator:a18eac07e2879154ea01958b04380d94f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acca04d0de901049d50a741d1b4163584"><td class="memItemLeft" align="right" valign="top"><a id="acca04d0de901049d50a741d1b4163584"></a>
static xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#acca04d0de901049d50a741d1b4163584">MurmurHash64</a> (const void *pKey, size_t uiSizeInByte, xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:acca04d0de901049d50a741d1b4163584"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit murmur hash of the given key. <br /></td></tr>
<tr class="separator:acca04d0de901049d50a741d1b4163584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaa637a8e6576be440b9a56ed57ebaf9"><td class="memTemplParams" colspan="2"><a id="acaa637a8e6576be440b9a56ed57ebaf9"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:acaa637a8e6576be440b9a56ed57ebaf9"><td class="memTemplItemLeft" align="right" valign="top">constexpr static xiiUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#acaa637a8e6576be440b9a56ed57ebaf9">MurmurHash32String</a> (const char(&amp;str)[N], xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:acaa637a8e6576be440b9a56ed57ebaf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit murmur hash of a string constant at compile time. Encoding does not matter here. <br /></td></tr>
<tr class="separator:acaa637a8e6576be440b9a56ed57ebaf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13c237737f895ea33dbe17a3ccd88b21"><td class="memItemLeft" align="right" valign="top">static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#a13c237737f895ea33dbe17a3ccd88b21">MurmurHash32String</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStr, xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a13c237737f895ea33dbe17a3ccd88b21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit murmur hash of a string pointer during runtime. Encoding does not matter here.  <a href="../../dc/d66/classxii_hashing_utils.htm#a13c237737f895ea33dbe17a3ccd88b21">More...</a><br /></td></tr>
<tr class="separator:a13c237737f895ea33dbe17a3ccd88b21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a697c8c7399f69d6ba98b81ee9f2f7233"><td class="memItemLeft" align="right" valign="top"><a id="a697c8c7399f69d6ba98b81ee9f2f7233"></a>
static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#a697c8c7399f69d6ba98b81ee9f2f7233">xxHash32</a> (const void *pKey, size_t uiSizeInByte, xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a697c8c7399f69d6ba98b81ee9f2f7233"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit xxHash of the given key. <br /></td></tr>
<tr class="separator:a697c8c7399f69d6ba98b81ee9f2f7233"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b8c43320c3ea349c49a9fbf9deca5d1"><td class="memItemLeft" align="right" valign="top"><a id="a8b8c43320c3ea349c49a9fbf9deca5d1"></a>
static xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#a8b8c43320c3ea349c49a9fbf9deca5d1">xxHash64</a> (const void *pKey, size_t uiSizeInByte, xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a8b8c43320c3ea349c49a9fbf9deca5d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit xxHash of the given key. <br /></td></tr>
<tr class="separator:a8b8c43320c3ea349c49a9fbf9deca5d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a90d09b2abee368234268bfdcdda27e"><td class="memTemplParams" colspan="2"><a id="a6a90d09b2abee368234268bfdcdda27e"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a6a90d09b2abee368234268bfdcdda27e"><td class="memTemplItemLeft" align="right" valign="top">constexpr static xiiUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#a6a90d09b2abee368234268bfdcdda27e">xxHash32String</a> (const char(&amp;str)[N], xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a6a90d09b2abee368234268bfdcdda27e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit xxHash of the given string literal at compile time. <br /></td></tr>
<tr class="separator:a6a90d09b2abee368234268bfdcdda27e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abedbea315ba19ffd2c80d3a43c84c09e"><td class="memTemplParams" colspan="2"><a id="abedbea315ba19ffd2c80d3a43c84c09e"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:abedbea315ba19ffd2c80d3a43c84c09e"><td class="memTemplItemLeft" align="right" valign="top">constexpr static xiiUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#abedbea315ba19ffd2c80d3a43c84c09e">xxHash64String</a> (const char(&amp;str)[N], xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:abedbea315ba19ffd2c80d3a43c84c09e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit xxHash of the given string literal at compile time. <br /></td></tr>
<tr class="separator:abedbea315ba19ffd2c80d3a43c84c09e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc671dc4dbb97ba3cedf514320b4a008"><td class="memItemLeft" align="right" valign="top">static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#acc671dc4dbb97ba3cedf514320b4a008">xxHash32String</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStr, xiiUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:acc671dc4dbb97ba3cedf514320b4a008"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit xxHash of a string pointer during runtime.  <a href="../../dc/d66/classxii_hashing_utils.htm#acc671dc4dbb97ba3cedf514320b4a008">More...</a><br /></td></tr>
<tr class="separator:acc671dc4dbb97ba3cedf514320b4a008"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17809640e0ea31d39eb586de43fad5b6"><td class="memItemLeft" align="right" valign="top">static xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#a17809640e0ea31d39eb586de43fad5b6">xxHash64String</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStr, xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a17809640e0ea31d39eb586de43fad5b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit xxHash of a string pointer during runtime.  <a href="../../dc/d66/classxii_hashing_utils.htm#a17809640e0ea31d39eb586de43fad5b6">More...</a><br /></td></tr>
<tr class="separator:a17809640e0ea31d39eb586de43fad5b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafe5be4737dcb59d3c6bb1f70db8579c"><td class="memTemplParams" colspan="2"><a id="aafe5be4737dcb59d3c6bb1f70db8579c"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:aafe5be4737dcb59d3c6bb1f70db8579c"><td class="memTemplItemLeft" align="right" valign="top">constexpr static xiiUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#aafe5be4737dcb59d3c6bb1f70db8579c">StringHash</a> (const char(&amp;str)[N], xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:aafe5be4737dcb59d3c6bb1f70db8579c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the hash of the given string literal at compile time. <br /></td></tr>
<tr class="separator:aafe5be4737dcb59d3c6bb1f70db8579c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a978d45039a8334a0fb700b0e790e7460"><td class="memItemLeft" align="right" valign="top">static xiiUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#a978d45039a8334a0fb700b0e790e7460">StringHash</a> (<a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sStr, xiiUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a978d45039a8334a0fb700b0e790e7460"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the hash of a string pointer at runtime.  <a href="../../dc/d66/classxii_hashing_utils.htm#a978d45039a8334a0fb700b0e790e7460">More...</a><br /></td></tr>
<tr class="separator:a978d45039a8334a0fb700b0e790e7460"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa26c1ad1f288a5c3040f8045fab4382"><td class="memItemLeft" align="right" valign="top">constexpr static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#afa26c1ad1f288a5c3040f8045fab4382">StringHashTo32</a> (xiiUInt64 uiHash)</td></tr>
<tr class="memdesc:afa26c1ad1f288a5c3040f8045fab4382"><td class="mdescLeft">&#160;</td><td class="mdescRight">Truncates a 64 bit string hash to 32 bit.  <a href="../../dc/d66/classxii_hashing_utils.htm#afa26c1ad1f288a5c3040f8045fab4382">More...</a><br /></td></tr>
<tr class="separator:afa26c1ad1f288a5c3040f8045fab4382"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f21bbacb3193c90ed2d6ef7ce20a725"><td class="memItemLeft" align="right" valign="top"><a id="a1f21bbacb3193c90ed2d6ef7ce20a725"></a>
constexpr static xiiUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm#a1f21bbacb3193c90ed2d6ef7ce20a725">CombineHashValues32</a> (xiiUInt32 ui0, xiiUInt32 ui1)</td></tr>
<tr class="memdesc:a1f21bbacb3193c90ed2d6ef7ce20a725"><td class="mdescLeft">&#160;</td><td class="mdescRight">Combines two 32 bit hash values into one. <br /></td></tr>
<tr class="separator:a1f21bbacb3193c90ed2d6ef7ce20a725"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class provides implementations of different hashing algorithms. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a13c237737f895ea33dbe17a3ccd88b21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13c237737f895ea33dbe17a3ccd88b21">&#9670;&nbsp;</a></span>MurmurHash32String()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE xiiUInt32 xiiHashingUtils::MurmurHash32String </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiSeed</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the 32bit murmur hash of a string pointer during runtime. Encoding does not matter here. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<a id="a978d45039a8334a0fb700b0e790e7460"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a978d45039a8334a0fb700b0e790e7460">&#9670;&nbsp;</a></span>StringHash()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE xiiUInt64 xiiHashingUtils::StringHash </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt64&#160;</td>
          <td class="paramname"><em>uiSeed</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the hash of a string pointer at runtime. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<a id="afa26c1ad1f288a5c3040f8045fab4382"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa26c1ad1f288a5c3040f8045fab4382">&#9670;&nbsp;</a></span>StringHashTo32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr XII_ALWAYS_INLINE xiiUInt32 xiiHashingUtils::StringHashTo32 </td>
          <td>(</td>
          <td class="paramtype">xiiUInt64&#160;</td>
          <td class="paramname"><em>uiHash</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Truncates a 64 bit string hash to 32 bit. </p>
<p>This is necessary when a 64 bit string hash is used in a hash table (which only uses 32 bit indices). </p>

</div>
</div>
<a id="acc671dc4dbb97ba3cedf514320b4a008"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acc671dc4dbb97ba3cedf514320b4a008">&#9670;&nbsp;</a></span>xxHash32String()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE xiiUInt32 xiiHashingUtils::xxHash32String </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt32&#160;</td>
          <td class="paramname"><em>uiSeed</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the 32bit xxHash of a string pointer during runtime. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<a id="a17809640e0ea31d39eb586de43fad5b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17809640e0ea31d39eb586de43fad5b6">&#9670;&nbsp;</a></span>xxHash64String()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">XII_ALWAYS_INLINE xiiUInt64 xiiHashingUtils::xxHash64String </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a>&#160;</td>
          <td class="paramname"><em>sStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">xiiUInt64&#160;</td>
          <td class="paramname"><em>uiSeed</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the 64bit xxHash of a string pointer during runtime. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/<a class="el" href="../../d8/df9/_hashing_utils_8h_source.htm">HashingUtils.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/Implementation/<a class="el" href="../../d6/d19/_hashing_murmur__inl_8h_source.htm">HashingMurmur_inl.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/Implementation/HashingUtils.cpp</li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/Implementation/<a class="el" href="../../d0/d46/_hashing_utils__inl_8h_source.htm">HashingUtils_inl.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Algorithm/Implementation/<a class="el" href="../../db/dfb/_hashing_xx_hash__inl_8h_source.htm">HashingXxHash_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dc/d66/classxii_hashing_utils.htm">xiiHashingUtils</a></li>
    <li class="footer">Generated on Sat Jun 22 2024 04:42:20 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
