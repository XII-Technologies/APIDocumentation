<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Strings/Implementation/StringIterator.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('de/d0b/_string_iterator_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringIterator.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringUtils.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm">    7</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;{</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keyword">using</span> iterator_category = std::bidirectional_iterator_tag;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keyword">using</span> value_type        = xiiUInt32;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keyword">using</span> difference_type   = ptrdiff_t;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keyword">using</span> pointer           = <span class="keyword">const</span> <span class="keywordtype">char</span>*;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keyword">using</span> reference         = xiiUInt32;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../de/d81/structxii_string_iterator.htm#a7a9956b4a1eca6280800f4946899eb4c">xiiStringIterator</a>() = <span class="keywordflow">default</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a328f16309087bf99fdc6597e55a7131e">   21</a></span>&#160;  XII_FORCE_INLINE <span class="keyword">explicit</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a328f16309087bf99fdc6597e55a7131e">xiiStringIterator</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStartPtr, <span class="keyword">const</span> <span class="keywordtype">char</span>* pEndPtr, <span class="keyword">const</span> <span class="keywordtype">char</span>* pCurPtr)</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    m_pStartPtr = pStartPtr;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    m_pEndPtr   = pEndPtr;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    m_pCurPtr   = pCurPtr;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  }</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a91a4535ce56adfa96fa09fab27c23b1b">   29</a></span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a91a4535ce56adfa96fa09fab27c23b1b">IsValid</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pCurPtr != <span class="keyword">nullptr</span> &amp;&amp; m_pCurPtr != m_pEndPtr; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a75128e83d2d6f529f4aa4414813bf40a">   32</a></span>&#160;  XII_ALWAYS_INLINE xiiUInt32 <a class="code" href="../../de/d81/structxii_string_iterator.htm#a75128e83d2d6f529f4aa4414813bf40a">GetCharacter</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a91a4535ce56adfa96fa09fab27c23b1b">IsValid</a>() ? <a class="code" href="../../de/d05/classxii_unicode_utils.htm#af0fc39bd8ebfb9c1239d7176fbbbd518">xiiUnicodeUtils::ConvertUtf8ToUtf32</a>(m_pCurPtr) : xiiUInt32(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a28ff913a0f79297d6546cbafac5d4897">   35</a></span>&#160;  XII_ALWAYS_INLINE xiiUInt32 <a class="code" href="../../de/d81/structxii_string_iterator.htm#a28ff913a0f79297d6546cbafac5d4897">operator*</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a75128e83d2d6f529f4aa4414813bf40a">GetCharacter</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#aedf6a7475ac224a76cf6a4121b910720">   38</a></span>&#160;  XII_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../de/d81/structxii_string_iterator.htm#aedf6a7475ac224a76cf6a4121b910720">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pCurPtr; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a3dc55b46558b084e2b72f2769fecc33c">   41</a></span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a3dc55b46558b084e2b72f2769fecc33c">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a>&amp; it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pCurPtr == it2.m_pCurPtr); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a74486a2ca7c549e3682d7fd355a591f5">   44</a></span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a74486a2ca7c549e3682d7fd355a591f5">operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a>&amp; it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pCurPtr != it2.m_pCurPtr); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#ac85be9d66a28a226c963abbcc0004d4a">   47</a></span>&#160;  XII_ALWAYS_INLINE xiiUInt32 <a class="code" href="../../de/d81/structxii_string_iterator.htm#ac85be9d66a28a226c963abbcc0004d4a">Advance</a>()</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* pPrevElement = m_pCurPtr;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">if</span> (m_pCurPtr &lt; m_pEndPtr)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <a class="code" href="../../de/d05/classxii_unicode_utils.htm#ae3e0d757861751b2c145821e42cb7815">xiiUnicodeUtils::MoveToNextUtf8</a>(m_pCurPtr);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>xiiUInt32<span class="keyword">&gt;</span>(m_pCurPtr - pPrevElement);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a0ebb8f4afd99941ffe864eb816c29711">   60</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a>&amp; <a class="code" href="../../de/d81/structxii_string_iterator.htm#a0ebb8f4afd99941ffe864eb816c29711">operator++</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">if</span> (m_pCurPtr &lt; m_pEndPtr)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;      <a class="code" href="../../de/d05/classxii_unicode_utils.htm#ae3e0d757861751b2c145821e42cb7815">xiiUnicodeUtils::MoveToNextUtf8</a>(m_pCurPtr);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a0290528124f80a3c897a4fc572fbd237">   71</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a>&amp; <a class="code" href="../../de/d81/structxii_string_iterator.htm#a0290528124f80a3c897a4fc572fbd237">operator--</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">if</span> (m_pStartPtr &lt; m_pCurPtr)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <a class="code" href="../../de/d05/classxii_unicode_utils.htm#a7a957c6c031dc9a6f86beedff3391aba">xiiUnicodeUtils::MoveToPriorUtf8</a>(m_pCurPtr);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#ae753840c83b698155f20bbda5a66b85f">   82</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a> <a class="code" href="../../de/d81/structxii_string_iterator.htm#ae753840c83b698155f20bbda5a66b85f">operator++</a>(xiiInt32) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a> tmp = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    ++(*this);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">return</span> tmp;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a4d022a72905de590f5b4802090840c61">   90</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a4d022a72905de590f5b4802090840c61">operator--</a>(xiiInt32) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a> tmp = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    --(*this);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> tmp;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#adb523110fc9ea2540964435e7ea34243">   98</a></span>&#160;  XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm#adb523110fc9ea2540964435e7ea34243">operator+=</a>(difference_type d) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">while</span> (d &gt; 0)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      ++(*this);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      --d;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">while</span> (d &lt; 0)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      --(*this);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      ++d;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a8616ee0405bcd25f387b4fa9f2374fc5">  113</a></span>&#160;  XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a8616ee0405bcd25f387b4fa9f2374fc5">operator-=</a>(difference_type d) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">while</span> (d &gt; 0)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      --(*this);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      --d;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">while</span> (d &lt; 0)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      ++(*this);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      ++d;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a38b0694c6211ec75d6ff3299822e1e6f">  128</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a38b0694c6211ec75d6ff3299822e1e6f">operator+</a>(difference_type d) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a> it = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    it += d;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">return</span> it;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#a6c6c4634a9fe5f1d02cca9f54c7cc9d9">  136</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a> <a class="code" href="../../de/d81/structxii_string_iterator.htm#a6c6c4634a9fe5f1d02cca9f54c7cc9d9">operator-</a>(difference_type d) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a> it = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    it -= d;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> it;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="../../de/d81/structxii_string_iterator.htm#aababd19e5956b55e5e510b717d9f0e7a">  146</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d81/structxii_string_iterator.htm#aababd19e5956b55e5e510b717d9f0e7a">SetCurrentPosition</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szCurPos)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    XII_ASSERT_DEV((szCurPos &gt;= m_pStartPtr) &amp;&amp; (szCurPos &lt;= m_pEndPtr), <span class="stringliteral">&quot;New position must still be inside the iterator&#39;s range.&quot;</span>);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    m_pCurPtr = szCurPos;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_pStartPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_pEndPtr   = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_pCurPtr   = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;};</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm">  162</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">using</span> iterator_category = std::bidirectional_iterator_tag;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keyword">using</span> value_type        = xiiUInt32;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keyword">using</span> difference_type   = ptrdiff_t;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keyword">using</span> pointer           = <span class="keyword">const</span> <span class="keywordtype">char</span>*;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keyword">using</span> reference         = xiiUInt32;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#afac5c118a40a4272ed1218094d9aea85">xiiStringReverseIterator</a>() = <span class="keywordflow">default</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#aea633a96f97731f4ec8cfbff2a647cf1">  176</a></span>&#160;  XII_FORCE_INLINE <span class="keyword">explicit</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#aea633a96f97731f4ec8cfbff2a647cf1">xiiStringReverseIterator</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStartPtr, <span class="keyword">const</span> <span class="keywordtype">char</span>* pEndPtr, <span class="keyword">const</span> <span class="keywordtype">char</span>* pCurPtr) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    m_pStartPtr = pStartPtr;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    m_pEndPtr   = pEndPtr;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    m_pCurPtr   = pCurPtr;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">if</span> (m_pStartPtr &gt;= m_pEndPtr)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    {</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;      m_pCurPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (m_pCurPtr == m_pEndPtr)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;      <a class="code" href="../../de/d05/classxii_unicode_utils.htm#a7a957c6c031dc9a6f86beedff3391aba">xiiUnicodeUtils::MoveToPriorUtf8</a>(m_pCurPtr);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a5a8f74a06980ec33ff8774d911e5d385">  193</a></span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a5a8f74a06980ec33ff8774d911e5d385">IsValid</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pCurPtr != <span class="keyword">nullptr</span>); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a1a22d5900004ce7015d1c5f5ba5e8fc5">  196</a></span>&#160;  XII_ALWAYS_INLINE xiiUInt32 <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a1a22d5900004ce7015d1c5f5ba5e8fc5">GetCharacter</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a5a8f74a06980ec33ff8774d911e5d385">IsValid</a>() ? <a class="code" href="../../de/d05/classxii_unicode_utils.htm#af0fc39bd8ebfb9c1239d7176fbbbd518">xiiUnicodeUtils::ConvertUtf8ToUtf32</a>(m_pCurPtr) : xiiUInt32(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a6bc485bbb5f5ab9401d4f349c3183d10">  199</a></span>&#160;  XII_ALWAYS_INLINE xiiUInt32 <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a6bc485bbb5f5ab9401d4f349c3183d10">operator*</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a1a22d5900004ce7015d1c5f5ba5e8fc5">GetCharacter</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a23c6d0dc0e355fd058bbfcee511f3626">  202</a></span>&#160;  XII_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a23c6d0dc0e355fd058bbfcee511f3626">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pCurPtr; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a44932fd4f7d20dc254d0b07a85e277b5">  205</a></span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a44932fd4f7d20dc254d0b07a85e277b5">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a>&amp; it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pCurPtr == it2.m_pCurPtr); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a8db458eb3323d2b74d410b84078fcfa5">  208</a></span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a8db458eb3323d2b74d410b84078fcfa5">operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a>&amp; it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pCurPtr != it2.m_pCurPtr); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#ac1addbda122092b6c5a26491d1600a83">  211</a></span>&#160;  XII_FORCE_INLINE <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a>&amp; <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#ac1addbda122092b6c5a26491d1600a83">operator++</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">if</span> (m_pCurPtr != <span class="keyword">nullptr</span> &amp;&amp; m_pStartPtr &lt; m_pCurPtr)</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <a class="code" href="../../de/d05/classxii_unicode_utils.htm#a7a957c6c031dc9a6f86beedff3391aba">xiiUnicodeUtils::MoveToPriorUtf8</a>(m_pCurPtr);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      m_pCurPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  }</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a486c6d9d5238bcea60a49b0725a8e32b">  222</a></span>&#160;  XII_FORCE_INLINE <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a>&amp; <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a486c6d9d5238bcea60a49b0725a8e32b">operator--</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordflow">if</span> (m_pCurPtr != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    {</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span>* szOldPos = m_pCurPtr;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      <a class="code" href="../../de/d05/classxii_unicode_utils.htm#ae3e0d757861751b2c145821e42cb7815">xiiUnicodeUtils::MoveToNextUtf8</a>(m_pCurPtr);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordflow">if</span> (m_pCurPtr == m_pEndPtr)</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        m_pCurPtr = szOldPos;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      <span class="comment">// Set back to the first character.</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;      m_pCurPtr = m_pStartPtr;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    }</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  }</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#aeff5e0538ebfb709c8ef661f4b0bba9c">  241</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#aeff5e0538ebfb709c8ef661f4b0bba9c">operator++</a>(xiiInt32) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  {</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a> tmp = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    ++(*this);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">return</span> tmp;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a6ea99c5ff284ab07b4559cfa83a00138">  249</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a6ea99c5ff284ab07b4559cfa83a00138">operator--</a>(xiiInt32) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  {</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a> tmp = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    --(*this);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">return</span> tmp;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  }</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a2916322be50c3db88053b59865b817ec">  257</a></span>&#160;  XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a2916322be50c3db88053b59865b817ec">operator+=</a>(difference_type d) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">while</span> (d &gt; 0)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    {</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      ++(*this);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;      --d;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    }</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">while</span> (d &lt; 0)</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    {</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;      --(*this);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      ++d;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    }</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#aa2600da020cb04ae706a527f80a1aebc">  272</a></span>&#160;  XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#aa2600da020cb04ae706a527f80a1aebc">operator-=</a>(difference_type d) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  {</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordflow">while</span> (d &gt; 0)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;      --(*this);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      --d;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    }</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">while</span> (d &lt; 0)</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    {</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      ++(*this);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      ++d;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  }</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a0ca42aa2663ee2234ddb207a08116e8a">  287</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a0ca42aa2663ee2234ddb207a08116e8a">operator+</a>(difference_type d) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  {</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a> it = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    it += d;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">return</span> it;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  }</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a69469b86f56bfb1de7b2d61e6c6148cf">  295</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a69469b86f56bfb1de7b2d61e6c6148cf">operator-</a>(difference_type d) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a> it = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    it -= d;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">return</span> it;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  }</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; </div>
<div class="line"><a name="l00305"></a><span class="lineno"><a class="line" href="../../d8/d78/structxii_string_reverse_iterator.htm#a173c64931e1f810f20766755742166cb">  305</a></span>&#160;  XII_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d8/d78/structxii_string_reverse_iterator.htm#a173c64931e1f810f20766755742166cb">SetCurrentPosition</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szCurPos)</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  {</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    XII_ASSERT_DEV((szCurPos == <span class="keyword">nullptr</span>) || ((szCurPos &gt;= m_pStartPtr) &amp;&amp; (szCurPos &lt; m_pEndPtr)), <span class="stringliteral">&quot;New position must still be inside the iterator&#39;s range.&quot;</span>);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    m_pCurPtr = szCurPos;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  }</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_pStartPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_pEndPtr   = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_pCurPtr   = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructxii_string_reverse_iterator_htm_aeff5e0538ebfb709c8ef661f4b0bba9c"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#aeff5e0538ebfb709c8ef661f4b0bba9c">xiiStringReverseIterator::operator++</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringReverseIterator operator++(xiiInt32)</div><div class="ttdoc">Move to the next Utf8 character.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:241</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a23c6d0dc0e355fd058bbfcee511f3626"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a23c6d0dc0e355fd058bbfcee511f3626">xiiStringReverseIterator::GetData</a></div><div class="ttdeci">const XII_ALWAYS_INLINE char * GetData() const</div><div class="ttdoc">Returns the address the iterator currently points to.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:202</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_ae753840c83b698155f20bbda5a66b85f"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#ae753840c83b698155f20bbda5a66b85f">xiiStringIterator::operator++</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringIterator operator++(xiiInt32)</div><div class="ttdoc">Move to the next Utf8 character.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:82</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a69469b86f56bfb1de7b2d61e6c6148cf"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a69469b86f56bfb1de7b2d61e6c6148cf">xiiStringReverseIterator::operator-</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringReverseIterator operator-(difference_type d) const</div><div class="ttdoc">Returns an iterator that is advanced backwards by d characters.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:295</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a7a9956b4a1eca6280800f4946899eb4c"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a7a9956b4a1eca6280800f4946899eb4c">xiiStringIterator::xiiStringIterator</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringIterator()=default</div><div class="ttdoc">Constructs an invalid iterator.</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_ae3e0d757861751b2c145821e42cb7815"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#ae3e0d757861751b2c145821e42cb7815">xiiUnicodeUtils::MoveToNextUtf8</a></div><div class="ttdeci">static void MoveToNextUtf8(const char *&amp;ref_szUtf8, xiiUInt32 uiNumCharacters=1)</div><div class="ttdoc">Moves the given string pointer ahead to the next Utf8 character sequence.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:197</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a6ea99c5ff284ab07b4559cfa83a00138"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a6ea99c5ff284ab07b4559cfa83a00138">xiiStringReverseIterator::operator--</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringReverseIterator operator--(xiiInt32)</div><div class="ttdoc">Move to the previous Utf8 character.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:249</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a3dc55b46558b084e2b72f2769fecc33c"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a3dc55b46558b084e2b72f2769fecc33c">xiiStringIterator::operator==</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool operator==(const xiiStringIterator &amp;it2) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:41</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a6bc485bbb5f5ab9401d4f349c3183d10"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a6bc485bbb5f5ab9401d4f349c3183d10">xiiStringReverseIterator::operator*</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt32 operator*() const</div><div class="ttdoc">Returns the currently pointed to character in Utf32 encoding.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:199</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a8db458eb3323d2b74d410b84078fcfa5"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a8db458eb3323d2b74d410b84078fcfa5">xiiStringReverseIterator::operator!=</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool operator!=(const xiiStringReverseIterator &amp;it2) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:208</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a328f16309087bf99fdc6597e55a7131e"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a328f16309087bf99fdc6597e55a7131e">xiiStringIterator::xiiStringIterator</a></div><div class="ttdeci">XII_FORCE_INLINE xiiStringIterator(const char *pStartPtr, const char *pEndPtr, const char *pCurPtr)</div><div class="ttdoc">Constructs either a begin or end iterator for the given string.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:21</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a5a8f74a06980ec33ff8774d911e5d385"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a5a8f74a06980ec33ff8774d911e5d385">xiiStringReverseIterator::IsValid</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool IsValid() const</div><div class="ttdoc">Checks whether this iterator points to a valid element.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:193</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a74486a2ca7c549e3682d7fd355a591f5"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a74486a2ca7c549e3682d7fd355a591f5">xiiStringIterator::operator!=</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool operator!=(const xiiStringIterator &amp;it2) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:44</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_a7a957c6c031dc9a6f86beedff3391aba"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#a7a957c6c031dc9a6f86beedff3391aba">xiiUnicodeUtils::MoveToPriorUtf8</a></div><div class="ttdeci">static void MoveToPriorUtf8(const char *&amp;ref_szUtf8, xiiUInt32 uiNumCharacters=1)</div><div class="ttdoc">Moves the given string pointer backwards to the previous Utf8 character sequence.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:231</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_aea633a96f97731f4ec8cfbff2a647cf1"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#aea633a96f97731f4ec8cfbff2a647cf1">xiiStringReverseIterator::xiiStringReverseIterator</a></div><div class="ttdeci">XII_FORCE_INLINE xiiStringReverseIterator(const char *pStartPtr, const char *pEndPtr, const char *pCurPtr)</div><div class="ttdoc">Constructs either a rbegin or rend iterator for the given string.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:176</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a0ca42aa2663ee2234ddb207a08116e8a"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a0ca42aa2663ee2234ddb207a08116e8a">xiiStringReverseIterator::operator+</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringReverseIterator operator+(difference_type d) const</div><div class="ttdoc">Returns an iterator that is advanced forwards by d characters.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:287</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a6c6c4634a9fe5f1d02cca9f54c7cc9d9"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a6c6c4634a9fe5f1d02cca9f54c7cc9d9">xiiStringIterator::operator-</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringIterator operator-(difference_type d) const</div><div class="ttdoc">Returns an iterator that is advanced backwards by d characters.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:136</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a75128e83d2d6f529f4aa4414813bf40a"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a75128e83d2d6f529f4aa4414813bf40a">xiiStringIterator::GetCharacter</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt32 GetCharacter() const</div><div class="ttdoc">Returns the currently pointed to character in Utf32 encoding.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:32</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a8616ee0405bcd25f387b4fa9f2374fc5"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a8616ee0405bcd25f387b4fa9f2374fc5">xiiStringIterator::operator-=</a></div><div class="ttdeci">XII_FORCE_INLINE void operator-=(difference_type d)</div><div class="ttdoc">Moves the iterator backwards by d characters. Does not move it beyond the range's start.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:113</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_ac1addbda122092b6c5a26491d1600a83"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#ac1addbda122092b6c5a26491d1600a83">xiiStringReverseIterator::operator++</a></div><div class="ttdeci">XII_FORCE_INLINE xiiStringReverseIterator &amp; operator++()</div><div class="ttdoc">Move to the next Utf8 character.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:211</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_ac85be9d66a28a226c963abbcc0004d4a"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#ac85be9d66a28a226c963abbcc0004d4a">xiiStringIterator::Advance</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt32 Advance()</div><div class="ttdoc">Advances the iterated to the next character, same as operator++, but returns how many bytes were cons...</div><div class="ttdef"><b>Definition:</b> StringIterator.h:47</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_aababd19e5956b55e5e510b717d9f0e7a"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#aababd19e5956b55e5e510b717d9f0e7a">xiiStringIterator::SetCurrentPosition</a></div><div class="ttdeci">void SetCurrentPosition(const char *szCurPos)</div><div class="ttdoc">Allows to set the 'current' iteration position to a different value.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:146</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a0290528124f80a3c897a4fc572fbd237"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a0290528124f80a3c897a4fc572fbd237">xiiStringIterator::operator--</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringIterator &amp; operator--()</div><div class="ttdoc">Move to the previous Utf8 character.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:71</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a0ebb8f4afd99941ffe864eb816c29711"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a0ebb8f4afd99941ffe864eb816c29711">xiiStringIterator::operator++</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringIterator &amp; operator++()</div><div class="ttdoc">Move to the next Utf8 character.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:60</div></div>
<div class="ttc" id="astructxii_string_iterator_htm"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm">xiiStringIterator</a></div><div class="ttdoc">STL forward iterator used by all string classes. Iterates over unicode characters....</div><div class="ttdef"><b>Definition:</b> StringIterator.h:7</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_adb523110fc9ea2540964435e7ea34243"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#adb523110fc9ea2540964435e7ea34243">xiiStringIterator::operator+=</a></div><div class="ttdeci">XII_FORCE_INLINE void operator+=(difference_type d)</div><div class="ttdoc">Advances the iterator forwards by d characters. Does not move it beyond the range's end.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:98</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a91a4535ce56adfa96fa09fab27c23b1b"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a91a4535ce56adfa96fa09fab27c23b1b">xiiStringIterator::IsValid</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool IsValid() const</div><div class="ttdoc">Checks whether this iterator points to a valid element. Invalid iterators either point to m_pEndPtr o...</div><div class="ttdef"><b>Definition:</b> StringIterator.h:29</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm">xiiStringReverseIterator</a></div><div class="ttdoc">STL reverse iterator used by all string classes. Iterates over unicode characters....</div><div class="ttdef"><b>Definition:</b> StringIterator.h:162</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a1a22d5900004ce7015d1c5f5ba5e8fc5"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a1a22d5900004ce7015d1c5f5ba5e8fc5">xiiStringReverseIterator::GetCharacter</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt32 GetCharacter() const</div><div class="ttdoc">Returns the currently pointed to character in Utf32 encoding.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:196</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a44932fd4f7d20dc254d0b07a85e277b5"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a44932fd4f7d20dc254d0b07a85e277b5">xiiStringReverseIterator::operator==</a></div><div class="ttdeci">XII_ALWAYS_INLINE bool operator==(const xiiStringReverseIterator &amp;it2) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:205</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_aa2600da020cb04ae706a527f80a1aebc"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#aa2600da020cb04ae706a527f80a1aebc">xiiStringReverseIterator::operator-=</a></div><div class="ttdeci">XII_FORCE_INLINE void operator-=(difference_type d)</div><div class="ttdoc">Moves the iterator backwards by d characters. Does not move it beyond the range's start.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:272</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a4d022a72905de590f5b4802090840c61"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a4d022a72905de590f5b4802090840c61">xiiStringIterator::operator--</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringIterator operator--(xiiInt32)</div><div class="ttdoc">Move to the previous Utf8 character.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:90</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_afac5c118a40a4272ed1218094d9aea85"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#afac5c118a40a4272ed1218094d9aea85">xiiStringReverseIterator::xiiStringReverseIterator</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringReverseIterator()=default</div><div class="ttdoc">Constructs an invalid iterator.</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a173c64931e1f810f20766755742166cb"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a173c64931e1f810f20766755742166cb">xiiStringReverseIterator::SetCurrentPosition</a></div><div class="ttdeci">XII_FORCE_INLINE void SetCurrentPosition(const char *szCurPos)</div><div class="ttdoc">Allows to set the 'current' iteration position to a different value.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:305</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_aedf6a7475ac224a76cf6a4121b910720"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#aedf6a7475ac224a76cf6a4121b910720">xiiStringIterator::GetData</a></div><div class="ttdeci">const XII_ALWAYS_INLINE char * GetData() const</div><div class="ttdoc">Returns the address the iterator currently points to.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:38</div></div>
<div class="ttc" id="aclassxii_unicode_utils_htm_af0fc39bd8ebfb9c1239d7176fbbbd518"><div class="ttname"><a href="../../de/d05/classxii_unicode_utils.htm#af0fc39bd8ebfb9c1239d7176fbbbd518">xiiUnicodeUtils::ConvertUtf8ToUtf32</a></div><div class="ttdeci">static xiiUInt32 ConvertUtf8ToUtf32(const char *pFirstChar)</div><div class="ttdoc">Converts the UTF-8 character that starts at pFirstChar into a UTF-32 character.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:124</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a38b0694c6211ec75d6ff3299822e1e6f"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a38b0694c6211ec75d6ff3299822e1e6f">xiiStringIterator::operator+</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiStringIterator operator+(difference_type d) const</div><div class="ttdoc">Returns an iterator that is advanced forwards by d characters.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:128</div></div>
<div class="ttc" id="astructxii_string_iterator_htm_a28ff913a0f79297d6546cbafac5d4897"><div class="ttname"><a href="../../de/d81/structxii_string_iterator.htm#a28ff913a0f79297d6546cbafac5d4897">xiiStringIterator::operator*</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiUInt32 operator*() const</div><div class="ttdoc">Returns the currently pointed to character in Utf32 encoding.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:35</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a2916322be50c3db88053b59865b817ec"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a2916322be50c3db88053b59865b817ec">xiiStringReverseIterator::operator+=</a></div><div class="ttdeci">XII_FORCE_INLINE void operator+=(difference_type d)</div><div class="ttdoc">Advances the iterator forwards by d characters. Does not move it beyond the range's end.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:257</div></div>
<div class="ttc" id="astructxii_string_reverse_iterator_htm_a486c6d9d5238bcea60a49b0725a8e32b"><div class="ttname"><a href="../../d8/d78/structxii_string_reverse_iterator.htm#a486c6d9d5238bcea60a49b0725a8e32b">xiiStringReverseIterator::operator--</a></div><div class="ttdeci">XII_FORCE_INLINE xiiStringReverseIterator &amp; operator--()</div><div class="ttdoc">Move to the previous Utf8 character.</div><div class="ttdef"><b>Definition:</b> StringIterator.h:222</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b0d9e1007714c8956662e529025ab552.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_92c52eb4981d7c3a6633b9c574fc9e8f.htm">Implementation</a></li><li class="navelem"><b>StringIterator.h</b></li>
    <li class="footer">Generated on Sat Sep 2 2023 17:37:18 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
