<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Containers/HashTable.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('de/def/_hash_table_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">HashTable.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Algorithm/HashingUtils.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/AllocatorWrapper.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="../../d0/da6/classxii_hash_table_base.htm">    8</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase</a>;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">   12</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">using</span> iterator_category = std::forward_iterator_tag;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keyword">using</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">value_type</a>        = <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keyword">using</span> difference_type   = std::ptrdiff_t;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keyword">using</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">pointer</a>           = <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>*;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keyword">using</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">reference</a>         = <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>&amp;;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#acbd8a3fd5e6cc984bfec475d2ac1e0f5">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42c00270358144f0927ac1449d8e1bb1">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">const</span> KeyType&amp; <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a5e90e73f808cbb48de465bb0a61be70b">Key</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keyword">const</span> ValueType&amp; <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42e7c02719740ec2de43da5e4c151c2e">Value</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#ae4f91d6caac6d9dd130270129ea8ea17">Next</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#ae4be785998e07afc08001e61e68a1b84">operator++</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#afe568e22fb1096fe979d74b56e3cc3e0">   41</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>&amp; <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#afe568e22fb1096fe979d74b56e3cc3e0">operator*</a>() { <span class="keywordflow">return</span> *<span class="keyword">this</span>; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase</a>&lt;KeyType, ValueType, Hasher&gt;;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; hashTable);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordtype">void</span> SetToBegin();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordtype">void</span> SetToEnd();</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>* m_pHashTable     = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  xiiUInt32                                           m_uiCurrentIndex = 0; <span class="comment">// current element index that this iterator points to.</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  xiiUInt32                                           m_uiCurrentCount = 0; <span class="comment">// current number of valid elements that this iterator has found so far.</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../dc/d5b/structxii_hash_table_base_const_iterator_1_1_pointer.htm">   55</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../dc/d5b/structxii_hash_table_base_const_iterator_1_1_pointer.htm">Pointer</a></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    std::pair&lt;const KeyType&amp;, const ValueType&amp;&gt;        value;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">const</span> std::pair&lt;const KeyType&amp;, const ValueType&amp;&gt;* operator-&gt;()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;value; }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  };</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../dc/d5b/structxii_hash_table_base_const_iterator_1_1_pointer.htm">Pointer</a> operator-&gt;()<span class="keyword"> const</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dc/d5b/structxii_hash_table_base_const_iterator_1_1_pointer.htm">Pointer</a>{.value = {<a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a5e90e73f808cbb48de465bb0a61be70b">Key</a>(), <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42e7c02719740ec2de43da5e4c151c2e">Value</a>()}};</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="comment">// These function is used to return the values for structured bindings.</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="comment">// The number and type of type of each slot are defined in the inl file.</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> Index&gt;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  std::tuple_element_t&lt;Index, xiiHashTableBaseConstIterator&gt;&amp; get()<span class="keyword"> const</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span> constexpr (Index == 0)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      return <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a5e90e73f808cbb48de465bb0a61be70b">Key</a>();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    if constexpr (Index == 1)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      return <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42e7c02719740ec2de43da5e4c151c2e">Value</a>();</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;};</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;template &lt;typename KeyType, typename ValueType, typename Hasher&gt;</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="../../d6/d06/structxii_hash_table_base_iterator.htm">   80</a></span>&#160;struct <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator</a> : public <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>&lt;KeyType, ValueType, Hasher&gt;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  XII_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  XII_ALWAYS_INLINE <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="comment">// this is required to pull in the const version of this function</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keyword">using</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator&lt;KeyType, ValueType, Hasher&gt;::Value</a>;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  XII_FORCE_INLINE ValueType&amp; <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42e7c02719740ec2de43da5e4c151c2e">Value</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  XII_FORCE_INLINE ValueType&amp; <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42e7c02719740ec2de43da5e4c151c2e">Value</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="../../d6/d06/structxii_hash_table_base_iterator.htm#a04bea282d5de72b20ac6783f8b1da947">  100</a></span>&#160;  XII_ALWAYS_INLINE <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator</a>&amp; <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm#a04bea282d5de72b20ac6783f8b1da947">operator*</a>() { <span class="keywordflow">return</span> *<span class="keyword">this</span>; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase</a>&lt;KeyType, ValueType, Hasher&gt;;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator</a>(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; hashTable);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="comment">// These functions are used to return the values for structured bindings.</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="comment">// The number and type of type of each slot are defined in the inl file.</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keyword">template</span> &lt;std::<span class="keywordtype">size_t</span> Index&gt;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  std::tuple_element_t&lt;Index, xiiHashTableBaseIterator&gt;&amp; get()</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">if</span> constexpr (Index == 0)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      return <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>&lt;KeyType, ValueType, Hasher&gt;::<a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a5e90e73f808cbb48de465bb0a61be70b">Key</a>();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    if constexpr (Index == 1)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      return <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42e7c02719740ec2de43da5e4c151c2e">Value</a>();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  template &lt;std::<span class="keywordtype">size_t</span> Index&gt;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  std::tuple_element_t&lt;Index, <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator</a>&gt;&amp; get()<span class="keyword"> const</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">if</span> constexpr (Index == 0)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      return <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>&lt;KeyType, ValueType, Hasher&gt;::<a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a5e90e73f808cbb48de465bb0a61be70b">Key</a>();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    if constexpr (Index == 1)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      return <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42e7c02719740ec2de43da5e4c151c2e">Value</a>();</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;};</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;template &lt;typename KeyType, typename ValueType, typename Hasher&gt;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;class <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase</a></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;{</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">using</span> Iterator      = <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator&lt;KeyType, ValueType, Hasher&gt;</a>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keyword">using</span> ConstIterator = <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator&lt;KeyType, ValueType, Hasher&gt;</a>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#ac324b2ff91ba07417d6b3b0536cd0de7">xiiHashTableBase</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#ac324b2ff91ba07417d6b3b0536cd0de7">xiiHashTableBase</a>(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#ac324b2ff91ba07417d6b3b0536cd0de7">xiiHashTableBase</a>(<a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp;&amp; rhs, <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#af6ae109416cbfc9d32a70ced89e1d83e">~xiiHashTableBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a740c237e4982f9d678ba0f89477a9873">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a740c237e4982f9d678ba0f89477a9873">operator=</a>(<a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp;&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42c00270358144f0927ac1449d8e1bb1">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a8bde237754738cb0f4581a62b10c1f61">Reserve</a>(xiiUInt32 uiCapacity); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a848fa98f7c9190ffa77e84d8b88cb3a6">Compact</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  xiiUInt32 <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a49b9f741e5574293c600f9ec72afea9f">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#af682d436030330453ee5de06009d0043">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a6e77dc508bfe72bb60bc8ae923fa6353">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType, <span class="keyword">typename</span> CompatibleValueType&gt;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a02b91fa3e25b22b30ab1ad5633dd2802">Insert</a>(CompatibleKeyType&amp;&amp; key, CompatibleValueType&amp;&amp; value, ValueType* out_pOldValue = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a61a55f0964be78ad4db6dfddc4026312">Remove</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, ValueType* out_pOldValue = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  Iterator <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a61a55f0964be78ad4db6dfddc4026312">Remove</a>(<span class="keyword">const</span> Iterator&amp; pos); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a61a55f0964be78ad4db6dfddc4026312">Remove</a>(<span class="keyword">const</span> ConstIterator&amp; pos) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a1bb2c25791102db37be680622f5402af">TryGetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, ValueType&amp; out_value) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a1bb2c25791102db37be680622f5402af">TryGetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keyword">const</span> ValueType*&amp; out_pValue) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a1bb2c25791102db37be680622f5402af">TryGetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, ValueType*&amp; out_pValue) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  ConstIterator <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a4a67d421ca6cbaec53333e177277d471">Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  Iterator <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a4a67d421ca6cbaec53333e177277d471">Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <span class="keyword">const</span> ValueType* <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a70f0421d5453c8a15f4ccbaf899feb89">GetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  ValueType* <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a70f0421d5453c8a15f4ccbaf899feb89">GetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  ValueType&amp; <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#ad3741658bbda9bcf456b3b058a4123d9">operator[]</a>(<span class="keyword">const</span> KeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  ValueType&amp; <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#af1c3f0f81b3f0d9d466a1abb4059d6b7">FindOrAdd</a>(<span class="keyword">const</span> KeyType&amp; key, <span class="keywordtype">bool</span>* out_pExisted); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a619655aec7081012f36bdaadc3c60d34">Contains</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  Iterator <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a343303117791ae7436217070edb8ea26">GetIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  Iterator <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#acd182ab4090c58ebbfaead6505c5a2df">GetEndIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  ConstIterator <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a343303117791ae7436217070edb8ea26">GetIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  ConstIterator <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#acd182ab4090c58ebbfaead6505c5a2df">GetEndIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a62a80a071f6afeeaab5ebbfeab7a27cf">GetAllocator</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  xiiUInt64 <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#ae0ccfe867bf8a994305afa36c7210c49">GetHeapMemoryUsage</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a323dec41a79b42ac21862da704fff211">Swap</a>(<a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; other); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="keyword">friend</span> <span class="keyword">struct </span><a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a>&lt;KeyType, ValueType, Hasher&gt;;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="keyword">friend</span> <span class="keyword">struct </span><a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator</a>&lt;KeyType, ValueType, Hasher&gt;;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keyword">struct </span>Entry</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    KeyType   key;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    ValueType value;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  };</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  Entry*     m_pEntries    = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  xiiUInt32* m_pEntryFlags = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  xiiUInt32 m_uiCount    = 0;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  xiiUInt32 m_uiCapacity = 0;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* m_pAllocator = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="keyword">enum</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  {</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    FREE_ENTRY         = 0,</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    VALID_ENTRY        = 1,</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    DELETED_ENTRY      = 2,</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    FLAGS_MASK         = 3,</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    CAPACITY_ALIGNMENT = 32</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  };</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <span class="keywordtype">void</span> SetCapacity(xiiUInt32 uiCapacity);</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="keywordtype">void</span> RemoveInternal(xiiUInt32 uiIndex);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  xiiUInt32 FindEntry(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  xiiUInt32 FindEntry(xiiUInt32 uiHash, <span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  xiiUInt32 GetFlagsCapacity() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  xiiUInt32 GetFlags(xiiUInt32* pFlags, xiiUInt32 uiEntryIndex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="keywordtype">void</span>      SetFlags(xiiUInt32 uiEntryIndex, xiiUInt32 uiFlags);</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keywordtype">bool</span> IsFreeEntry(xiiUInt32 uiEntryIndex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <span class="keywordtype">bool</span> IsValidEntry(xiiUInt32 uiEntryIndex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="keywordtype">bool</span> IsDeletedEntry(xiiUInt32 uiEntryIndex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  <span class="keywordtype">void</span> MarkEntryAsFree(xiiUInt32 uiEntryIndex);</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="keywordtype">void</span> MarkEntryAsValid(xiiUInt32 uiEntryIndex);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <span class="keywordtype">void</span> MarkEntryAsDeleted(xiiUInt32 uiEntryIndex);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;};</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; </div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher = xiiHashHelper&lt;KeyType&gt;, <span class="keyword">typename</span> AllocatorWrapper = xiiDefaultAllocatorWrapper&gt;</div>
<div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="../../d8/dc2/classxii_hash_table.htm">  315</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a> : <span class="keyword">public</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase</a>&lt;KeyType, ValueType, Hasher&gt;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;{</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a>();</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a>(<a class="code" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a>(<span class="keyword">const</span> <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable&lt;KeyType, ValueType, Hasher, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a>(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; other);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160; </div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a>(<a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable&lt;KeyType, ValueType, Hasher, AllocatorWrapper&gt;</a>&amp;&amp; other);</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a>(<a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp;&amp; other);</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable&lt;KeyType, ValueType, Hasher, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160; </div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable&lt;KeyType, ValueType, Hasher, AllocatorWrapper&gt;</a>&amp;&amp; rhs);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp;&amp; rhs);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;};</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">// begin() /end() for range-based for-loop support</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;::Iterator</a> begin(<a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;{</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <span class="keywordflow">return</span> ref_container.<a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a343303117791ae7436217070edb8ea26">GetIterator</a>();</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;}</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;::ConstIterator</a> begin(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; container)</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;{</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a343303117791ae7436217070edb8ea26">GetIterator</a>();</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;}</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160; </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;::ConstIterator</a> cbegin(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; container)</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;{</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d0/da6/classxii_hash_table_base.htm#a343303117791ae7436217070edb8ea26">GetIterator</a>();</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;}</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;::Iterator</a> end(<a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;{</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="keywordflow">return</span> ref_container.<a class="code" href="../../d0/da6/classxii_hash_table_base.htm#acd182ab4090c58ebbfaead6505c5a2df">GetEndIterator</a>();</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;}</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160; </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;::ConstIterator</a> end(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; container)</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;{</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d0/da6/classxii_hash_table_base.htm#acd182ab4090c58ebbfaead6505c5a2df">GetEndIterator</a>();</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;}</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160; </div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;::ConstIterator</a> cend(<span class="keyword">const</span> <a class="code" href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; container)</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;{</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d0/da6/classxii_hash_table_base.htm#acd182ab4090c58ebbfaead6505c5a2df">GetEndIterator</a>();</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;}</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/HashTable_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructxii_hash_table_base_const_iterator_htm"><div class="ttname"><a href="../../d0/d76/structxii_hash_table_base_const_iterator.htm">xiiHashTableBaseConstIterator</a></div><div class="ttdoc">Const iterator.</div><div class="ttdef"><b>Definition:</b> HashTable.h:12</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a740c237e4982f9d678ba0f89477a9873"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a740c237e4982f9d678ba0f89477a9873">xiiHashTableBase::operator=</a></div><div class="ttdeci">void operator=(const xiiHashTableBase&lt; KeyType, ValueType, Hasher &gt; &amp;rhs)</div><div class="ttdoc">Copies the data from another hashtable into this one.</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_ae0ccfe867bf8a994305afa36c7210c49"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#ae0ccfe867bf8a994305afa36c7210c49">xiiHashTableBase::GetHeapMemoryUsage</a></div><div class="ttdeci">xiiUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:660</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a1bb2c25791102db37be680622f5402af"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a1bb2c25791102db37be680622f5402af">xiiHashTableBase::TryGetValue</a></div><div class="ttdeci">bool TryGetValue(const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</div><div class="ttdoc">Returns whether an entry with the given key was found and if found writes out the corresponding value...</div></div>
<div class="ttc" id="astructxii_hash_table_base_iterator_htm"><div class="ttname"><a href="../../d6/d06/structxii_hash_table_base_iterator.htm">xiiHashTableBaseIterator</a></div><div class="ttdoc">Iterator with write access.</div><div class="ttdef"><b>Definition:</b> HashTable.h:80</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a61a55f0964be78ad4db6dfddc4026312"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a61a55f0964be78ad4db6dfddc4026312">xiiHashTableBase::Remove</a></div><div class="ttdeci">bool Remove(const CompatibleKeyType &amp;key, ValueType *out_pOldValue=nullptr)</div><div class="ttdoc">Removes the entry with the given key. Returns whether an entry was removed and optionally writes out ...</div></div>
<div class="ttc" id="astructxii_hash_table_base_const_iterator_htm_ae4be785998e07afc08001e61e68a1b84"><div class="ttname"><a href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#ae4be785998e07afc08001e61e68a1b84">xiiHashTableBaseConstIterator::operator++</a></div><div class="ttdeci">void operator++()</div><div class="ttdoc">Shorthand for 'Next'.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:88</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a8bde237754738cb0f4581a62b10c1f61"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a8bde237754738cb0f4581a62b10c1f61">xiiHashTableBase::Reserve</a></div><div class="ttdeci">void Reserve(xiiUInt32 uiCapacity)</div><div class="ttdoc">Expands the hashtable by over-allocating the internal storage so that the load factor is lower or equ...</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:302</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_af1c3f0f81b3f0d9d466a1abb4059d6b7"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#af1c3f0f81b3f0d9d466a1abb4059d6b7">xiiHashTableBase::FindOrAdd</a></div><div class="ttdeci">ValueType &amp; FindOrAdd(const KeyType &amp;key, bool *out_pExisted)</div><div class="ttdoc">Returns the value stored at the given key. If none exists, one is created. bExisted indicates whether...</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:579</div></div>
<div class="ttc" id="astructxii_hash_table_base_const_iterator_htm_afe568e22fb1096fe979d74b56e3cc3e0"><div class="ttname"><a href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#afe568e22fb1096fe979d74b56e3cc3e0">xiiHashTableBaseConstIterator::operator*</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiHashTableBaseConstIterator &amp; operator*()</div><div class="ttdoc">Returns '*this' to enable foreach.</div><div class="ttdef"><b>Definition:</b> HashTable.h:41</div></div>
<div class="ttc" id="astructxii_hash_table_base_const_iterator_htm_a5e90e73f808cbb48de465bb0a61be70b"><div class="ttname"><a href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a5e90e73f808cbb48de465bb0a61be70b">xiiHashTableBaseConstIterator::Key</a></div><div class="ttdeci">const KeyType &amp; Key() const</div><div class="ttdoc">Returns the 'key' of the element that this iterator points to.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:50</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_af6ae109416cbfc9d32a70ced89e1d83e"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#af6ae109416cbfc9d32a70ced89e1d83e">xiiHashTableBase::~xiiHashTableBase</a></div><div class="ttdeci">~xiiHashTableBase()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:210</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a70f0421d5453c8a15f4ccbaf899feb89"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a70f0421d5453c8a15f4ccbaf899feb89">xiiHashTableBase::GetValue</a></div><div class="ttdeci">const ValueType * GetValue(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns a pointer to the value of the entry with the given key if found, otherwise returns nullptr.</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a343303117791ae7436217070edb8ea26"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a343303117791ae7436217070edb8ea26">xiiHashTableBase::GetIterator</a></div><div class="ttdeci">Iterator GetIterator()</div><div class="ttdoc">Returns an Iterator to the very first element.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:622</div></div>
<div class="ttc" id="astructxii_hash_table_base_const_iterator_htm_a42c00270358144f0927ac1449d8e1bb1"><div class="ttname"><a href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42c00270358144f0927ac1449d8e1bb1">xiiHashTableBaseConstIterator::operator==</a></div><div class="ttdeci">bool operator==(const xiiHashTableBaseConstIterator &amp;rhs) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:44</div></div>
<div class="ttc" id="astructxii_hash_table_base_const_iterator_htm_acbd8a3fd5e6cc984bfec475d2ac1e0f5"><div class="ttname"><a href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#acbd8a3fd5e6cc984bfec475d2ac1e0f5">xiiHashTableBaseConstIterator::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether this iterator points to a valid element.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:38</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a848fa98f7c9190ffa77e84d8b88cb3a6"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a848fa98f7c9190ffa77e84d8b88cb3a6">xiiHashTableBase::Compact</a></div><div class="ttdeci">void Compact()</div><div class="ttdoc">Tries to compact the hashtable to avoid wasting memory.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:320</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_ad3741658bbda9bcf456b3b058a4123d9"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#ad3741658bbda9bcf456b3b058a4123d9">xiiHashTableBase::operator[]</a></div><div class="ttdeci">ValueType &amp; operator[](const KeyType &amp;key)</div><div class="ttdoc">Returns the value to the given key if found or creates a new entry with the given key and a default c...</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:573</div></div>
<div class="ttc" id="astructxii_hash_table_base_const_iterator_htm_ae4f91d6caac6d9dd130270129ea8ea17"><div class="ttname"><a href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#ae4f91d6caac6d9dd130270129ea8ea17">xiiHashTableBaseConstIterator::Next</a></div><div class="ttdeci">void Next()</div><div class="ttdoc">Advances the iterator to the next element in the map. The iterator will not be valid anymore,...</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:62</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm">xiiHashTableBase</a></div><div class="ttdoc">Implementation of a hashtable which stores key/value pairs.</div><div class="ttdef"><b>Definition:</b> HashTable.h:8</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a49b9f741e5574293c600f9ec72afea9f"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a49b9f741e5574293c600f9ec72afea9f">xiiHashTableBase::GetCount</a></div><div class="ttdeci">xiiUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active entries in the table.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:338</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a323dec41a79b42ac21862da704fff211"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a323dec41a79b42ac21862da704fff211">xiiHashTableBase::Swap</a></div><div class="ttdeci">void Swap(xiiHashTableBase&lt; KeyType, ValueType, Hasher &gt; &amp;other)</div><div class="ttdoc">Swaps this map with the other one.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:864</div></div>
<div class="ttc" id="aclassxii_allocator_base_htm"><div class="ttname"><a href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:21</div></div>
<div class="ttc" id="astructxii_hash_table_base_iterator_htm_a04bea282d5de72b20ac6783f8b1da947"><div class="ttname"><a href="../../d6/d06/structxii_hash_table_base_iterator.htm#a04bea282d5de72b20ac6783f8b1da947">xiiHashTableBaseIterator::operator*</a></div><div class="ttdeci">XII_ALWAYS_INLINE xiiHashTableBaseIterator &amp; operator*()</div><div class="ttdoc">Returns '*this' to enable foreach.</div><div class="ttdef"><b>Definition:</b> HashTable.h:100</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_ac324b2ff91ba07417d6b3b0536cd0de7"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#ac324b2ff91ba07417d6b3b0536cd0de7">xiiHashTableBase::xiiHashTableBase</a></div><div class="ttdeci">xiiHashTableBase(xiiAllocatorBase *pAllocator)</div><div class="ttdoc">Creates an empty hashtable. Does not allocate any data yet.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:176</div></div>
<div class="ttc" id="astructxii_hash_table_base_const_iterator_1_1_pointer_htm"><div class="ttname"><a href="../../dc/d5b/structxii_hash_table_base_const_iterator_1_1_pointer.htm">xiiHashTableBaseConstIterator::Pointer</a></div><div class="ttdef"><b>Definition:</b> HashTable.h:55</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_af682d436030330453ee5de06009d0043"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#af682d436030330453ee5de06009d0043">xiiHashTableBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the hashtable does not contain any elements.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:344</div></div>
<div class="ttc" id="astructxii_hash_table_base_const_iterator_htm_a42e7c02719740ec2de43da5e4c151c2e"><div class="ttname"><a href="../../d0/d76/structxii_hash_table_base_const_iterator.htm#a42e7c02719740ec2de43da5e4c151c2e">xiiHashTableBaseConstIterator::Value</a></div><div class="ttdeci">const ValueType &amp; Value() const</div><div class="ttdoc">Returns the 'value' of the element that this iterator points to.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:56</div></div>
<div class="ttc" id="aclassxii_hash_table_htm"><div class="ttname"><a href="../../d8/dc2/classxii_hash_table.htm">xiiHashTable</a></div><div class="ttdef"><b>Definition:</b> HashTable.h:315</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a02b91fa3e25b22b30ab1ad5633dd2802"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a02b91fa3e25b22b30ab1ad5633dd2802">xiiHashTableBase::Insert</a></div><div class="ttdeci">bool Insert(CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value, ValueType *out_pOldValue=nullptr)</div><div class="ttdoc">Inserts the key value pair or replaces value if an entry with the given key already exists.</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a6e77dc508bfe72bb60bc8ae923fa6353"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a6e77dc508bfe72bb60bc8ae923fa6353">xiiHashTableBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the table.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:350</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a4a67d421ca6cbaec53333e177277d471"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a4a67d421ca6cbaec53333e177277d471">xiiHashTableBase::Find</a></div><div class="ttdeci">ConstIterator Find(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Searches for key, returns a xiiHashTableBaseConstIterator to it or an invalid iterator,...</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:524</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a619655aec7081012f36bdaadc3c60d34"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a619655aec7081012f36bdaadc3c60d34">xiiHashTableBase::Contains</a></div><div class="ttdeci">bool Contains(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns if an entry with given key exists in the table.</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_a62a80a071f6afeeaab5ebbfeab7a27cf"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#a62a80a071f6afeeaab5ebbfeab7a27cf">xiiHashTableBase::GetAllocator</a></div><div class="ttdeci">xiiAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:654</div></div>
<div class="ttc" id="aclassxii_hash_table_base_htm_acd182ab4090c58ebbfaead6505c5a2df"><div class="ttname"><a href="../../d0/da6/classxii_hash_table_base.htm#acd182ab4090c58ebbfaead6505c5a2df">xiiHashTableBase::GetEndIterator</a></div><div class="ttdeci">Iterator GetEndIterator()</div><div class="ttdoc">Returns an Iterator to the first element that is not part of the hash-table. Needed to support range ...</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:630</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_7f59ab18dbc50035dfc0ee7070867286.htm">Containers</a></li><li class="navelem"><b>HashTable.h</b></li>
    <li class="footer">Generated on Tue Jun 18 2024 13:05:08 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
