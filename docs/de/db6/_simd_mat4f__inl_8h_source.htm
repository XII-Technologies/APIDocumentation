<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/SimdMath/Implementation/SimdMat4f_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('de/db6/_simd_mat4f__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SimdMat4f_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;XII_ALWAYS_INLINE xiiSimdMat4f::xiiSimdMat4f() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;XII_ALWAYS_INLINE xiiSimdMat4f::xiiSimdMat4f(<span class="keyword">const</span> <span class="keywordtype">float</span>* <span class="keyword">const</span> pData, <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a> layout)</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;{</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  SetFromArray(pData, layout);</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;}</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;XII_ALWAYS_INLINE xiiSimdMat4f::xiiSimdMat4f(<span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; vCol0, <span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; vCol1, <span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; vCol2, <span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; vCol3) :</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  m_col0(vCol0),</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  m_col1(vCol1),</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  m_col2(vCol2),</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  m_col3(vCol3)</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;{</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#a2058e19550239b65882b1a498082d7a8">   18</a></span>&#160;XII_ALWAYS_INLINE xiiSimdMat4f::xiiSimdMat4f(<span class="keywordtype">float</span> f1r1, <span class="keywordtype">float</span> f2r1, <span class="keywordtype">float</span> f3r1, <span class="keywordtype">float</span> f4r1, <span class="keywordtype">float</span> f1r2, <span class="keywordtype">float</span> f2r2, <span class="keywordtype">float</span> f3r2, <span class="keywordtype">float</span> f4r2, <span class="keywordtype">float</span> f1r3, <span class="keywordtype">float</span> f2r3, <span class="keywordtype">float</span> f3r3, <span class="keywordtype">float</span> f4r3, <span class="keywordtype">float</span> f1r4, <span class="keywordtype">float</span> f2r4, <span class="keywordtype">float</span> f3r4, <span class="keywordtype">float</span> f4r4)</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  m_col0.Set(f1r1, f1r2, f1r3, f1r4);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  m_col1.Set(f2r1, f2r2, f2r3, f2r4);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  m_col2.Set(f3r1, f3r2, f3r3, f3r4);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  m_col3.Set(f4r1, f4r2, f4r3, f4r4);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;}</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> xiiSimdMat4f::SetFromArray(<span class="keyword">const</span> <span class="keywordtype">float</span>* <span class="keyword">const</span> pData, <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a> layout)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  m_col0.Load&lt;4&gt;(pData + 0);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  m_col1.Load&lt;4&gt;(pData + 4);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  m_col2.Load&lt;4&gt;(pData + 8);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  m_col3.Load&lt;4&gt;(pData + 12);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordflow">if</span> (layout == <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da5ad82519c9175b12d17d03b62d0b18e1">xiiMatrixLayout::RowMajor</a>)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a65483fef7918955d5c1d8f62df38c0a9">Transpose</a>();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> xiiSimdMat4f::GetAsArray(<span class="keywordtype">float</span>* out_pData, <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a> layout)<span class="keyword"> const</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> tmp = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordflow">if</span> (layout == <a class="code" href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da5ad82519c9175b12d17d03b62d0b18e1">xiiMatrixLayout::RowMajor</a>)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    tmp.<a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a65483fef7918955d5c1d8f62df38c0a9">Transpose</a>();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  tmp.m_col0.Store&lt;4&gt;(out_pData + 0);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  tmp.m_col1.Store&lt;4&gt;(out_pData + 4);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  tmp.m_col2.Store&lt;4&gt;(out_pData + 8);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  tmp.m_col3.Store&lt;4&gt;(out_pData + 12);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#af8832084d41166105e4fcdd4fb495ab7">   54</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#af8832084d41166105e4fcdd4fb495ab7">xiiSimdMat4f::SetIdentity</a>()</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  m_col0.Set(1, 0, 0, 0);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  m_col1.Set(0, 1, 0, 0);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  m_col2.Set(0, 0, 1, 0);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  m_col3.Set(0, 0, 0, 1);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#aa3ef5c311ae2bff8e5ce2b5d8f050da5">   62</a></span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#aa3ef5c311ae2bff8e5ce2b5d8f050da5">xiiSimdMat4f::SetZero</a>()</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  m_col0.SetZero();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  m_col1.SetZero();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  m_col2.SetZero();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  m_col3.SetZero();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#aa585ca740cfdbdcf99ca7edeaddfcb66">   71</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#aa585ca740cfdbdcf99ca7edeaddfcb66">xiiSimdMat4f::IdentityMatrix</a>()</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> result;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  result.<a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#af8832084d41166105e4fcdd4fb495ab7">SetIdentity</a>();</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#af350d3fd2f6cd18743a05fd65a900a70">   79</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#af350d3fd2f6cd18743a05fd65a900a70">xiiSimdMat4f::ZeroMatrix</a>()</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> result;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  result.<a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#aa3ef5c311ae2bff8e5ce2b5d8f050da5">SetZero</a>();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#abe3bd22986f2dfe22d7c554ac666081e">   86</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#abe3bd22986f2dfe22d7c554ac666081e">xiiSimdMat4f::GetTranspose</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> result = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  result.<a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a65483fef7918955d5c1d8f62df38c0a9">Transpose</a>();</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#a9516b16c20bebad041276678fc145eb1">   93</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a9516b16c20bebad041276678fc145eb1">xiiSimdMat4f::GetInverse</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> result = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  result.<a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a1359cf7c10b5f827cca2b03eb2b46066">Invert</a>(fEpsilon).<a class="code" href="../../dd/dad/structxii_result.htm#a0e2e7a66dd1876db3912fc0f2dff69a6">IgnoreResult</a>();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#a47b000e858f38ad23ccbe16e36f2a1a8">  100</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a47b000e858f38ad23ccbe16e36f2a1a8">xiiSimdMat4f::IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a>&amp; rhs, <span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordflow">return</span> (m_col0.IsEqual(rhs.m_col0, fEpsilon) &amp;&amp; m_col1.IsEqual(rhs.m_col1, fEpsilon) &amp;&amp; m_col2.IsEqual(rhs.m_col2, fEpsilon) &amp;&amp;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;          m_col3.IsEqual(rhs.m_col3, fEpsilon))</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    .AllSet&lt;4&gt;();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#a7033bffc88394d53e2936aff4d2e4dc7">  107</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a7033bffc88394d53e2936aff4d2e4dc7">xiiSimdMat4f::IsIdentity</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a>&amp; fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keywordflow">return</span> (m_col0.IsEqual(<a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>(1, 0, 0, 0), fEpsilon) &amp;&amp; m_col1.IsEqual(<a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>(0, 1, 0, 0), fEpsilon) &amp;&amp;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;          m_col2.IsEqual(<a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>(0, 0, 1, 0), fEpsilon) &amp;&amp; m_col3.IsEqual(<a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>(0, 0, 0, 1), fEpsilon))</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    .AllSet&lt;4&gt;();</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#a154af6d1f5bbb100d73f39eb07b3f7e4">  114</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a154af6d1f5bbb100d73f39eb07b3f7e4">xiiSimdMat4f::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordflow">return</span> m_col0.IsValid&lt;4&gt;() &amp;&amp; m_col1.IsValid&lt;4&gt;() &amp;&amp; m_col2.IsValid&lt;4&gt;() &amp;&amp; m_col3.IsValid&lt;4&gt;();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#a471b4fcba934cce647b8483f21571db2">  119</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a471b4fcba934cce647b8483f21571db2">xiiSimdMat4f::IsNaN</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordflow">return</span> m_col0.IsNaN&lt;4&gt;() || m_col1.IsNaN&lt;4&gt;() || m_col2.IsNaN&lt;4&gt;() || m_col3.IsNaN&lt;4&gt;();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> xiiSimdMat4f::SetRows(<span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; vRow0, <span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; vRow1, <span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; vRow2, <span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; vRow3)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  m_col0 = vRow0;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  m_col1 = vRow1;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  m_col2 = vRow2;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  m_col3 = vRow3;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a65483fef7918955d5c1d8f62df38c0a9">Transpose</a>();</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> xiiSimdMat4f::GetRows(<a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; ref_vRow0, <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; ref_vRow1, <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; ref_vRow2, <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; ref_vRow3)<span class="keyword"> const</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> tmp = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  tmp.<a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a65483fef7918955d5c1d8f62df38c0a9">Transpose</a>();</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  ref_vRow0 = tmp.m_col0;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  ref_vRow1 = tmp.m_col1;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  ref_vRow2 = tmp.m_col2;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  ref_vRow3 = tmp.m_col3;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#a0bb26cee7c275a11080640e52a1ac4a1">  145</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a0bb26cee7c275a11080640e52a1ac4a1">xiiSimdMat4f::TransformPosition</a>(<span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> result;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  result = m_col0 * v.x();</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  result += m_col1 * v.y();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  result += m_col2 * v.z();</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  result += m_col3;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="../../d4/d8d/classxii_simd_mat4f.htm#a78f9441b50f69d7652688066fdfea1e6">  156</a></span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm#a78f9441b50f69d7652688066fdfea1e6">xiiSimdMat4f::TransformDirection</a>(<span class="keyword">const</span> <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a>&amp; v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <a class="code" href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a> result;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  result = m_col0 * v.x();</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  result += m_col1 * v.y();</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  result += m_col2 * v.z();</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;XII_ALWAYS_INLINE <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> xiiSimdMat4f::operator*(<span class="keyword">const</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a> result;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  result.m_col0 = m_col0 * rhs.m_col0.x();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  result.m_col0 += m_col1 * rhs.m_col0.y();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  result.m_col0 += m_col2 * rhs.m_col0.z();</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  result.m_col0 += m_col3 * rhs.m_col0.w();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  result.m_col1 = m_col0 * rhs.m_col1.x();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  result.m_col1 += m_col1 * rhs.m_col1.y();</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  result.m_col1 += m_col2 * rhs.m_col1.z();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  result.m_col1 += m_col3 * rhs.m_col1.w();</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  result.m_col2 = m_col0 * rhs.m_col2.x();</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  result.m_col2 += m_col1 * rhs.m_col2.y();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  result.m_col2 += m_col2 * rhs.m_col2.z();</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  result.m_col2 += m_col3 * rhs.m_col2.w();</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  result.m_col3 = m_col0 * rhs.m_col3.x();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  result.m_col3 += m_col1 * rhs.m_col3.y();</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  result.m_col3 += m_col2 * rhs.m_col3.z();</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  result.m_col3 += m_col3 * rhs.m_col3.w();</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">void</span> xiiSimdMat4f::operator*=(<span class="keyword">const</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a>&amp; rhs)</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  *<span class="keyword">this</span> = *<span class="keyword">this</span> * rhs;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdMat4f::operator==(<span class="keyword">const</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a>&amp; other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="keywordflow">return</span> (m_col0 == other.m_col0 &amp;&amp; m_col1 == other.m_col1 &amp;&amp; m_col2 == other.m_col2 &amp;&amp; m_col3 == other.m_col3).AllSet&lt;4&gt;();</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;XII_ALWAYS_INLINE <span class="keywordtype">bool</span> xiiSimdMat4f::operator!=(<span class="keyword">const</span> <a class="code" href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a>&amp; other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_simd_vec4f_htm"><div class="ttname"><a href="../../d3/da5/classxii_simd_vec4f.htm">xiiSimdVec4f</a></div><div class="ttdoc">A 4-component SIMD vector class.</div><div class="ttdef"><b>Definition:</b> SimdVec4f.h:7</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_a47b000e858f38ad23ccbe16e36f2a1a8"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#a47b000e858f38ad23ccbe16e36f2a1a8">xiiSimdMat4f::IsEqual</a></div><div class="ttdeci">bool IsEqual(const xiiSimdMat4f &amp;rhs, const xiiSimdFloat &amp;fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:100</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_a65483fef7918955d5c1d8f62df38c0a9"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#a65483fef7918955d5c1d8f62df38c0a9">xiiSimdMat4f::Transpose</a></div><div class="ttdeci">void Transpose()</div><div class="ttdoc">Transposes this matrix.</div><div class="ttdef"><b>Definition:</b> FPUMat4f_inl.h:3</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_a154af6d1f5bbb100d73f39eb07b3f7e4"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#a154af6d1f5bbb100d73f39eb07b3f7e4">xiiSimdMat4f::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether all components are finite numbers.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:114</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_abe3bd22986f2dfe22d7c554ac666081e"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#abe3bd22986f2dfe22d7c554ac666081e">xiiSimdMat4f::GetTranspose</a></div><div class="ttdeci">xiiSimdMat4f GetTranspose() const</div><div class="ttdoc">Returns the transpose of this matrix.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:86</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_aa3ef5c311ae2bff8e5ce2b5d8f050da5"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#aa3ef5c311ae2bff8e5ce2b5d8f050da5">xiiSimdMat4f::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets all elements to zero.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:62</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_af8832084d41166105e4fcdd4fb495ab7"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#af8832084d41166105e4fcdd4fb495ab7">xiiSimdMat4f::SetIdentity</a></div><div class="ttdeci">void SetIdentity()</div><div class="ttdoc">Sets all elements to zero, except the diagonal, which is set to one.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:54</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_a7033bffc88394d53e2936aff4d2e4dc7"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#a7033bffc88394d53e2936aff4d2e4dc7">xiiSimdMat4f::IsIdentity</a></div><div class="ttdeci">bool IsIdentity(const xiiSimdFloat &amp;fEpsilon=xiiMath::DefaultEpsilon&lt; float &gt;()) const</div><div class="ttdoc">Checks whether this is an identity matrix.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:107</div></div>
<div class="ttc" id="astructxii_matrix_layout_htm_ac36c91b001c7cd816897b73c0bff5e6da5ad82519c9175b12d17d03b62d0b18e1"><div class="ttname"><a href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6da5ad82519c9175b12d17d03b62d0b18e1">xiiMatrixLayout::RowMajor</a></div><div class="ttdeci">@ RowMajor</div><div class="ttdoc">The matrix is stored in row-major format.</div><div class="ttdef"><b>Definition:</b> Declarations.h:63</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm">xiiSimdMat4f</a></div><div class="ttdoc">A 4x4 matrix class.</div><div class="ttdef"><b>Definition:</b> SimdMat4f.h:6</div></div>
<div class="ttc" id="aclassxii_simd_float_htm"><div class="ttname"><a href="../../d2/d73/classxii_simd_float.htm">xiiSimdFloat</a></div><div class="ttdef"><b>Definition:</b> SimdFloat.h:6</div></div>
<div class="ttc" id="astructxii_matrix_layout_htm_ac36c91b001c7cd816897b73c0bff5e6d"><div class="ttname"><a href="../../d0/d4f/structxii_matrix_layout.htm#ac36c91b001c7cd816897b73c0bff5e6d">xiiMatrixLayout::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> Declarations.h:61</div></div>
<div class="ttc" id="astructxii_result_htm_a0e2e7a66dd1876db3912fc0f2dff69a6"><div class="ttname"><a href="../../dd/dad/structxii_result.htm#a0e2e7a66dd1876db3912fc0f2dff69a6">xiiResult::IgnoreResult</a></div><div class="ttdeci">XII_ALWAYS_INLINE void IgnoreResult()</div><div class="ttdoc">Used to silence compiler warnings, when success or failure doesn't matter.</div><div class="ttdef"><b>Definition:</b> Types.h:70</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_a1359cf7c10b5f827cca2b03eb2b46066"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#a1359cf7c10b5f827cca2b03eb2b46066">xiiSimdMat4f::Invert</a></div><div class="ttdeci">xiiResult Invert(const xiiSimdFloat &amp;fEpsilon=xiiMath::SmallEpsilon&lt; float &gt;())</div><div class="ttdoc">Inverts this matrix. Return value indicates whether the matrix could be inverted.</div><div class="ttdef"><b>Definition:</b> SimdMat4f.cpp:8</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_a9516b16c20bebad041276678fc145eb1"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#a9516b16c20bebad041276678fc145eb1">xiiSimdMat4f::GetInverse</a></div><div class="ttdeci">xiiSimdMat4f GetInverse(const xiiSimdFloat &amp;fEpsilon=xiiMath::SmallEpsilon&lt; float &gt;()) const</div><div class="ttdoc">Returns the inverse of this matrix.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:93</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_af350d3fd2f6cd18743a05fd65a900a70"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#af350d3fd2f6cd18743a05fd65a900a70">xiiSimdMat4f::ZeroMatrix</a></div><div class="ttdeci">static xiiSimdMat4f ZeroMatrix()</div><div class="ttdoc">Returns a Matrix where all elements are zero.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:79</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_a0bb26cee7c275a11080640e52a1ac4a1"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#a0bb26cee7c275a11080640e52a1ac4a1">xiiSimdMat4f::TransformPosition</a></div><div class="ttdeci">xiiSimdVec4f TransformPosition(const xiiSimdVec4f &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is one (default behavior).</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:145</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_a471b4fcba934cce647b8483f21571db2"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#a471b4fcba934cce647b8483f21571db2">xiiSimdMat4f::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:119</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_aa585ca740cfdbdcf99ca7edeaddfcb66"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#aa585ca740cfdbdcf99ca7edeaddfcb66">xiiSimdMat4f::IdentityMatrix</a></div><div class="ttdeci">static xiiSimdMat4f IdentityMatrix()</div><div class="ttdoc">Returns an Identity Matrix.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:71</div></div>
<div class="ttc" id="aclassxii_simd_mat4f_htm_a78f9441b50f69d7652688066fdfea1e6"><div class="ttname"><a href="../../d4/d8d/classxii_simd_mat4f.htm#a78f9441b50f69d7652688066fdfea1e6">xiiSimdMat4f::TransformDirection</a></div><div class="ttdeci">xiiSimdVec4f TransformDirection(const xiiSimdVec4f &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is zero. So,...</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:156</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6571b00f9c254a01b1735d75b2065daf.htm">SimdMath</a></li><li class="navelem"><a class="el" href="../../dir_421677d30b51fc7bb4bb6333857496b6.htm">Implementation</a></li><li class="navelem"><b>SimdMat4f_inl.h</b></li>
    <li class="footer">Generated on Thu Aug 17 2023 02:03:11 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
