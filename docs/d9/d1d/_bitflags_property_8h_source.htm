<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: /home/runner/work/XII/XII/Source/Engine/Foundation/Reflection/Implementation/BitflagsProperty.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d9/d1d/_bitflags_property_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">BitflagsProperty.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/EnumProperty.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/StaticRTTI.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class, <span class="keyword">typename</span> EnumType, <span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d6/d60/classxii_bitflags_accessor_property.htm">   10</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/d60/classxii_bitflags_accessor_property.htm">xiiBitflagsAccessorProperty</a> : <span class="keyword">public</span> <a class="code" href="../../dc/d9b/classxii_typed_enum_property.htm">xiiTypedEnumProperty</a>&lt;EnumType&gt;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keyword">using</span> RealType   = <span class="keyword">typename</span> <a class="code" href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits&lt;Type&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">using</span> GetterFunc = Type (Class::*)() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keyword">using</span> SetterFunc = void (Class::*)(Type value);</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../d6/d60/classxii_bitflags_accessor_property.htm#a685a03f53ebc032ac329ae49d64857d7">   18</a></span>&#160;  <a class="code" href="../../d6/d60/classxii_bitflags_accessor_property.htm#a685a03f53ebc032ac329ae49d64857d7">xiiBitflagsAccessorProperty</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName, GetterFunc getter, SetterFunc setter) :</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="../../dc/d9b/classxii_typed_enum_property.htm">xiiTypedEnumProperty</a>&lt;EnumType&gt;(sPropertyName)</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    XII_ASSERT_DEBUG(getter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The getter of a property cannot be nullptr.&quot;</span>);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    xiiAbstractMemberProperty::m_Flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab1f65a1d27f43701e3af710a8b688686">xiiPropertyFlags::Bitflags</a>);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    m_Getter = getter;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    m_Setter = setter;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">if</span> (m_Setter == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      xiiAbstractMemberProperty::m_Flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0c305b63c9d85ce290a8ca87c21859c8">xiiPropertyFlags::ReadOnly</a>);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../d6/d60/classxii_bitflags_accessor_property.htm#a7f59401b479c64986b8e9f85bc5be2ea">   31</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code" href="../../d6/d60/classxii_bitflags_accessor_property.htm#a7f59401b479c64986b8e9f85bc5be2ea">GetPropertyPointer</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment">// No access to sub-properties, if we have accessors for this property</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../d6/d60/classxii_bitflags_accessor_property.htm#a1b41e4cea2427448eeec68ebf50728ad">   37</a></span>&#160;  <span class="keyword">virtual</span> xiiInt64 <a class="code" href="../../d6/d60/classxii_bitflags_accessor_property.htm#a1b41e4cea2427448eeec68ebf50728ad">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">typename</span> EnumType::StorageType enumTemp = (<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_Getter)().<a class="code" href="../../d6/d60/classxii_bitflags_accessor_property.htm#a1b41e4cea2427448eeec68ebf50728ad">GetValue</a>();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> (xiiInt64)enumTemp;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="../../d6/d60/classxii_bitflags_accessor_property.htm#a227592630166a7c125f399a5a38eb15c">   43</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d6/d60/classxii_bitflags_accessor_property.htm#a227592630166a7c125f399a5a38eb15c">SetValue</a>(<span class="keywordtype">void</span>* pInstance, xiiInt64 value) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    XII_ASSERT_DEV(m_Setter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no setter function, thus it is read-only.&quot;</span>, <a class="code" href="../../da/d25/classxii_abstract_property.htm#a6cc3cf4e5893d65b88b67ba6c6c6f0c3">xiiAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">if</span> (m_Setter)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      (<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_Setter)((<span class="keyword">typename</span> EnumType::Enum)value);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  GetterFunc m_Getter;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  SetterFunc m_Setter;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;};</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class, <span class="keyword">typename</span> EnumType, <span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d1/d27/classxii_bitflags_member_property.htm">   59</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d27/classxii_bitflags_member_property.htm">xiiBitflagsMemberProperty</a> : <span class="keyword">public</span> <a class="code" href="../../dc/d9b/classxii_typed_enum_property.htm">xiiTypedEnumProperty</a>&lt;EnumType&gt;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">using</span> GetterFunc  = Type (*)(<span class="keyword">const</span> Class* pInstance);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keyword">using</span> SetterFunc  = void (*)(Class* pInstance, Type value);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keyword">using</span> PointerFunc = <span class="keywordtype">void</span>* (*)(<span class="keyword">const</span> Class* pInstance);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../d1/d27/classxii_bitflags_member_property.htm#a345c45b2fe0713792ac5eccbd0762b3f">   67</a></span>&#160;  <a class="code" href="../../d1/d27/classxii_bitflags_member_property.htm#a345c45b2fe0713792ac5eccbd0762b3f">xiiBitflagsMemberProperty</a>(<a class="code" href="../../da/d9d/structxii_string_view.htm">xiiStringView</a> sPropertyName, GetterFunc getter, SetterFunc setter, PointerFunc pointer) :</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="../../dc/d9b/classxii_typed_enum_property.htm">xiiTypedEnumProperty</a>&lt;EnumType&gt;(sPropertyName)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    XII_ASSERT_DEBUG(getter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The getter of a property cannot be nullptr.&quot;</span>);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    xiiAbstractMemberProperty::m_Flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab1f65a1d27f43701e3af710a8b688686">xiiPropertyFlags::Bitflags</a>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    m_Getter  = getter;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    m_Setter  = setter;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    m_Pointer = pointer;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">if</span> (m_Setter == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      xiiAbstractMemberProperty::m_Flags.<a class="code" href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">Add</a>(<a class="code" href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0c305b63c9d85ce290a8ca87c21859c8">xiiPropertyFlags::ReadOnly</a>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="../../d1/d27/classxii_bitflags_member_property.htm#a431c47f7454be0f6325a6376658b0f0f">   81</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code" href="../../d1/d27/classxii_bitflags_member_property.htm#a431c47f7454be0f6325a6376658b0f0f">GetPropertyPointer</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_Pointer(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)); }</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../d1/d27/classxii_bitflags_member_property.htm#ad4c1d4afe00ce1178c5523782ec9efe9">   83</a></span>&#160;  <span class="keyword">virtual</span> xiiInt64 <a class="code" href="../../d1/d27/classxii_bitflags_member_property.htm#ad4c1d4afe00ce1178c5523782ec9efe9">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">typename</span> EnumType::StorageType enumTemp = m_Getter(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)).GetValue();</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">return</span> (xiiInt64)enumTemp;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../d1/d27/classxii_bitflags_member_property.htm#abebcea2941cfc0d8a0f8df616f061676">   89</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d27/classxii_bitflags_member_property.htm#abebcea2941cfc0d8a0f8df616f061676">SetValue</a>(<span class="keywordtype">void</span>* pInstance, xiiInt64 value) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    XII_ASSERT_DEV(m_Setter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no setter function, thus it is read-only.&quot;</span>, <a class="code" href="../../da/d25/classxii_abstract_property.htm#a6cc3cf4e5893d65b88b67ba6c6c6f0c3">xiiAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (m_Setter)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      m_Setter(<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance), (<span class="keyword">typename</span> EnumType::Enum)value);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  GetterFunc  m_Getter;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  SetterFunc  m_Setter;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  PointerFunc m_Pointer;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassxii_bitflags_member_property_htm_a345c45b2fe0713792ac5eccbd0762b3f"><div class="ttname"><a href="../../d1/d27/classxii_bitflags_member_property.htm#a345c45b2fe0713792ac5eccbd0762b3f">xiiBitflagsMemberProperty::xiiBitflagsMemberProperty</a></div><div class="ttdeci">xiiBitflagsMemberProperty(xiiStringView sPropertyName, GetterFunc getter, SetterFunc setter, PointerFunc pointer)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:67</div></div>
<div class="ttc" id="aclassxii_typed_enum_property_htm"><div class="ttname"><a href="../../dc/d9b/classxii_typed_enum_property.htm">xiiTypedEnumProperty</a></div><div class="ttdoc">[internal] Base class for enum / bitflags properties that already defines the type.</div><div class="ttdef"><b>Definition:</b> EnumProperty.h:42</div></div>
<div class="ttc" id="aclassxii_bitflags_member_property_htm_abebcea2941cfc0d8a0f8df616f061676"><div class="ttname"><a href="../../d1/d27/classxii_bitflags_member_property.htm#abebcea2941cfc0d8a0f8df616f061676">xiiBitflagsMemberProperty::SetValue</a></div><div class="ttdeci">virtual void SetValue(void *pInstance, xiiInt64 value) const override</div><div class="ttdoc">Modifies the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:89</div></div>
<div class="ttc" id="aclassxii_bitflags_accessor_property_htm"><div class="ttname"><a href="../../d6/d60/classxii_bitflags_accessor_property.htm">xiiBitflagsAccessorProperty</a></div><div class="ttdoc">[internal] An implementation of xiiTypedEnumProperty that uses custom getter / setter functions to ac...</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:10</div></div>
<div class="ttc" id="aclassxii_bitflags_member_property_htm_a431c47f7454be0f6325a6376658b0f0f"><div class="ttname"><a href="../../d1/d27/classxii_bitflags_member_property.htm#a431c47f7454be0f6325a6376658b0f0f">xiiBitflagsMemberProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer(const void *pInstance) const override</div><div class="ttdoc">Returns a pointer to the property data or nullptr. If a valid pointer is returned,...</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:81</div></div>
<div class="ttc" id="astructxii_bitflags_htm_a89cb715ce2414f2e16675f5d8503cb1c"><div class="ttname"><a href="../../d7/d55/structxii_bitflags.htm#a89cb715ce2414f2e16675f5d8503cb1c">xiiBitflags::Add</a></div><div class="ttdeci">XII_ALWAYS_INLINE void Add(const xiiBitflags&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Sets the given flag.</div><div class="ttdef"><b>Definition:</b> Bitflags.h:154</div></div>
<div class="ttc" id="aclassxii_bitflags_accessor_property_htm_a7f59401b479c64986b8e9f85bc5be2ea"><div class="ttname"><a href="../../d6/d60/classxii_bitflags_accessor_property.htm#a7f59401b479c64986b8e9f85bc5be2ea">xiiBitflagsAccessorProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer(const void *pInstance) const override</div><div class="ttdoc">Returns a pointer to the property data or nullptr. If a valid pointer is returned,...</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:31</div></div>
<div class="ttc" id="aclassxii_bitflags_accessor_property_htm_a685a03f53ebc032ac329ae49d64857d7"><div class="ttname"><a href="../../d6/d60/classxii_bitflags_accessor_property.htm#a685a03f53ebc032ac329ae49d64857d7">xiiBitflagsAccessorProperty::xiiBitflagsAccessorProperty</a></div><div class="ttdeci">xiiBitflagsAccessorProperty(xiiStringView sPropertyName, GetterFunc getter, SetterFunc setter)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:18</div></div>
<div class="ttc" id="aclassxii_bitflags_member_property_htm_ad4c1d4afe00ce1178c5523782ec9efe9"><div class="ttname"><a href="../../d1/d27/classxii_bitflags_member_property.htm#ad4c1d4afe00ce1178c5523782ec9efe9">xiiBitflagsMemberProperty::GetValue</a></div><div class="ttdeci">virtual xiiInt64 GetValue(const void *pInstance) const override</div><div class="ttdoc">Returns the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:83</div></div>
<div class="ttc" id="astructxii_string_view_htm"><div class="ttname"><a href="../../da/d9d/structxii_string_view.htm">xiiStringView</a></div><div class="ttdoc">xiiStringView represent a read-only sub-string of a larger string, as it can store a dedicated string...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="aclassxii_abstract_property_htm_a6cc3cf4e5893d65b88b67ba6c6c6f0c3"><div class="ttname"><a href="../../da/d25/classxii_abstract_property.htm#a6cc3cf4e5893d65b88b67ba6c6c6f0c3">xiiAbstractProperty::GetPropertyName</a></div><div class="ttdeci">xiiStringView GetPropertyName() const</div><div class="ttdoc">Returns the name of the property.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:159</div></div>
<div class="ttc" id="astructxii_type_traits_htm_a235ccaef9604d6990ab760b4b1d4500b"><div class="ttname"><a href="../../dd/d53/structxii_type_traits.htm#a235ccaef9604d6990ab760b4b1d4500b">xiiTypeTraits::NonConstReferenceType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type NonConstReferenceType</div><div class="ttdoc">Removes reference and const qualifier.</div><div class="ttdef"><b>Definition:</b> TypeTraits.h:208</div></div>
<div class="ttc" id="aclassxii_bitflags_accessor_property_htm_a227592630166a7c125f399a5a38eb15c"><div class="ttname"><a href="../../d6/d60/classxii_bitflags_accessor_property.htm#a227592630166a7c125f399a5a38eb15c">xiiBitflagsAccessorProperty::SetValue</a></div><div class="ttdeci">virtual void SetValue(void *pInstance, xiiInt64 value) const override</div><div class="ttdoc">Modifies the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:43</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fbab1f65a1d27f43701e3af710a8b688686"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fbab1f65a1d27f43701e3af710a8b688686">xiiPropertyFlags::Bitflags</a></div><div class="ttdeci">@ Bitflags</div><div class="ttdoc">Bitflags property, cast to xiiAbstractEnumerationProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:55</div></div>
<div class="ttc" id="aclassxii_bitflags_member_property_htm"><div class="ttname"><a href="../../d1/d27/classxii_bitflags_member_property.htm">xiiBitflagsMemberProperty</a></div><div class="ttdoc">[internal] An implementation of xiiTypedEnumProperty that accesses the bitflags property data directl...</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:59</div></div>
<div class="ttc" id="astructxii_property_flags_htm_a54fed1f9480831324a7b3840218228fba0c305b63c9d85ce290a8ca87c21859c8"><div class="ttname"><a href="../../d6/d7c/structxii_property_flags.htm#a54fed1f9480831324a7b3840218228fba0c305b63c9d85ce290a8ca87c21859c8">xiiPropertyFlags::ReadOnly</a></div><div class="ttdeci">@ ReadOnly</div><div class="ttdoc">Can only be read but not modified.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:63</div></div>
<div class="ttc" id="aclassxii_bitflags_accessor_property_htm_a1b41e4cea2427448eeec68ebf50728ad"><div class="ttname"><a href="../../d6/d60/classxii_bitflags_accessor_property.htm#a1b41e4cea2427448eeec68ebf50728ad">xiiBitflagsAccessorProperty::GetValue</a></div><div class="ttdeci">virtual xiiInt64 GetValue(const void *pInstance) const override</div><div class="ttdoc">Returns the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition:</b> BitflagsProperty.h:37</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_1ddc44fe1263a8c7935fa6130b7d9499.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_2c1b6808f12952f4c36e05ba7068379a.htm">XII</a></li><li class="navelem"><a class="el" href="../../dir_b5a1c4ecfca018ad24b729e213296d41.htm">Source</a></li><li class="navelem"><a class="el" href="../../dir_e321052006a51284e67389ab20037e7c.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_be0c42c58b36f42c54ec54024ed4f6af.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_f1e13142959a2e7970d979e1f6f7bcb1.htm">Reflection</a></li><li class="navelem"><a class="el" href="../../dir_44ac7f88d9b5593e444e5c7bf3d69918.htm">Implementation</a></li><li class="navelem"><b>BitflagsProperty.h</b></li>
    <li class="footer">Generated on Mon May 27 2024 16:41:25 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
