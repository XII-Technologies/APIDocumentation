<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XII Engine: xiiAtomicUtils Struct Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">XII Engine<span id="projectnumber">&#160;1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d9/d66/structxii_atomic_utils.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../db/df1/structxii_atomic_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">xiiAtomicUtils Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p>This class provides functions to do atomic operations.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d0/d8e/_atomic_utils_8h_source.htm">AtomicUtils.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac8f853a580275f60b7c8bf663c6679d1" id="r_ac8f853a580275f60b7c8bf663c6679d1"><td class="memItemLeft" align="right" valign="top"><a id="ac8f853a580275f60b7c8bf663c6679d1" name="ac8f853a580275f60b7c8bf663c6679d1"></a>
static xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><b>Read</b> (const xiiInt32 &amp;iSrc)</td></tr>
<tr class="memdesc:ac8f853a580275f60b7c8bf663c6679d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns src as an atomic operation and returns its value. <br /></td></tr>
<tr class="separator:ac8f853a580275f60b7c8bf663c6679d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f24c67d48817dd77262f97b074c1566" id="r_a3f24c67d48817dd77262f97b074c1566"><td class="memItemLeft" align="right" valign="top"><a id="a3f24c67d48817dd77262f97b074c1566" name="a3f24c67d48817dd77262f97b074c1566"></a>
static xiiInt64&#160;</td><td class="memItemRight" valign="bottom"><b>Read</b> (const xiiInt64 &amp;iSrc)</td></tr>
<tr class="memdesc:a3f24c67d48817dd77262f97b074c1566"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns src as an atomic operation and returns its value. <br /></td></tr>
<tr class="separator:a3f24c67d48817dd77262f97b074c1566"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d2d54a147db45e03963683c617754c1" id="r_a6d2d54a147db45e03963683c617754c1"><td class="memItemLeft" align="right" valign="top"><a id="a6d2d54a147db45e03963683c617754c1" name="a6d2d54a147db45e03963683c617754c1"></a>
static xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><b>Increment</b> (xiiInt32 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a6d2d54a147db45e03963683c617754c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments dest as an atomic operation and returns the new value. <br /></td></tr>
<tr class="separator:a6d2d54a147db45e03963683c617754c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b4d757f2fee6d7d0023917d1e92a918" id="r_a5b4d757f2fee6d7d0023917d1e92a918"><td class="memItemLeft" align="right" valign="top"><a id="a5b4d757f2fee6d7d0023917d1e92a918" name="a5b4d757f2fee6d7d0023917d1e92a918"></a>
static xiiInt64&#160;</td><td class="memItemRight" valign="bottom"><b>Increment</b> (xiiInt64 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a5b4d757f2fee6d7d0023917d1e92a918"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments dest as an atomic operation and returns the new value. <br /></td></tr>
<tr class="separator:a5b4d757f2fee6d7d0023917d1e92a918"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1968ac87e05e281a3d4c4c6b575e0e47" id="r_a1968ac87e05e281a3d4c4c6b575e0e47"><td class="memItemLeft" align="right" valign="top"><a id="a1968ac87e05e281a3d4c4c6b575e0e47" name="a1968ac87e05e281a3d4c4c6b575e0e47"></a>
static xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><b>Decrement</b> (xiiInt32 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a1968ac87e05e281a3d4c4c6b575e0e47"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements dest as an atomic operation and returns the new value. <br /></td></tr>
<tr class="separator:a1968ac87e05e281a3d4c4c6b575e0e47"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1daba875ab506aa4551f912d7a9e305e" id="r_a1daba875ab506aa4551f912d7a9e305e"><td class="memItemLeft" align="right" valign="top"><a id="a1daba875ab506aa4551f912d7a9e305e" name="a1daba875ab506aa4551f912d7a9e305e"></a>
static xiiInt64&#160;</td><td class="memItemRight" valign="bottom"><b>Decrement</b> (xiiInt64 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a1daba875ab506aa4551f912d7a9e305e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements dest as an atomic operation and returns the new value. <br /></td></tr>
<tr class="separator:a1daba875ab506aa4551f912d7a9e305e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe29ef1181de8eb6d9b676aeb88218aa" id="r_afe29ef1181de8eb6d9b676aeb88218aa"><td class="memItemLeft" align="right" valign="top"><a id="afe29ef1181de8eb6d9b676aeb88218aa" name="afe29ef1181de8eb6d9b676aeb88218aa"></a>
static xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><b>PostIncrement</b> (xiiInt32 &amp;ref_iDest)</td></tr>
<tr class="memdesc:afe29ef1181de8eb6d9b676aeb88218aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments dest as an atomic operation and returns the old value. <br /></td></tr>
<tr class="separator:afe29ef1181de8eb6d9b676aeb88218aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba58acb7b70f02b1558dbc08d3ae3297" id="r_aba58acb7b70f02b1558dbc08d3ae3297"><td class="memItemLeft" align="right" valign="top"><a id="aba58acb7b70f02b1558dbc08d3ae3297" name="aba58acb7b70f02b1558dbc08d3ae3297"></a>
static xiiInt64&#160;</td><td class="memItemRight" valign="bottom"><b>PostIncrement</b> (xiiInt64 &amp;ref_iDest)</td></tr>
<tr class="memdesc:aba58acb7b70f02b1558dbc08d3ae3297"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments dest as an atomic operation and returns the old value. <br /></td></tr>
<tr class="separator:aba58acb7b70f02b1558dbc08d3ae3297"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8ed5587ecd7b586af8373ee65846043" id="r_aa8ed5587ecd7b586af8373ee65846043"><td class="memItemLeft" align="right" valign="top"><a id="aa8ed5587ecd7b586af8373ee65846043" name="aa8ed5587ecd7b586af8373ee65846043"></a>
static xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><b>PostDecrement</b> (xiiInt32 &amp;ref_iDest)</td></tr>
<tr class="memdesc:aa8ed5587ecd7b586af8373ee65846043"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements dest as an atomic operation and returns the old value. <br /></td></tr>
<tr class="separator:aa8ed5587ecd7b586af8373ee65846043"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64cf1317c548f734e93c264a333af264" id="r_a64cf1317c548f734e93c264a333af264"><td class="memItemLeft" align="right" valign="top"><a id="a64cf1317c548f734e93c264a333af264" name="a64cf1317c548f734e93c264a333af264"></a>
static xiiInt64&#160;</td><td class="memItemRight" valign="bottom"><b>PostDecrement</b> (xiiInt64 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a64cf1317c548f734e93c264a333af264"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements dest as an atomic operation and returns the old value. <br /></td></tr>
<tr class="separator:a64cf1317c548f734e93c264a333af264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52407699cacb962052055505e30384c1" id="r_a52407699cacb962052055505e30384c1"><td class="memItemLeft" align="right" valign="top"><a id="a52407699cacb962052055505e30384c1" name="a52407699cacb962052055505e30384c1"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Add</b> (xiiInt32 &amp;ref_iDest, xiiInt32 value)</td></tr>
<tr class="memdesc:a52407699cacb962052055505e30384c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds value to dest as an atomic operation. <br /></td></tr>
<tr class="separator:a52407699cacb962052055505e30384c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab46fc8d4f49d78a2a0eacdd2e0222e63" id="r_ab46fc8d4f49d78a2a0eacdd2e0222e63"><td class="memItemLeft" align="right" valign="top"><a id="ab46fc8d4f49d78a2a0eacdd2e0222e63" name="ab46fc8d4f49d78a2a0eacdd2e0222e63"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Add</b> (xiiInt64 &amp;ref_iDest, xiiInt64 value)</td></tr>
<tr class="memdesc:ab46fc8d4f49d78a2a0eacdd2e0222e63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds value to dest as an atomic operation. <br /></td></tr>
<tr class="separator:ab46fc8d4f49d78a2a0eacdd2e0222e63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c68bfe4539ce0cd6f0674219e8ead6c" id="r_a5c68bfe4539ce0cd6f0674219e8ead6c"><td class="memItemLeft" align="right" valign="top"><a id="a5c68bfe4539ce0cd6f0674219e8ead6c" name="a5c68bfe4539ce0cd6f0674219e8ead6c"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>And</b> (xiiInt32 &amp;ref_iDest, xiiInt32 value)</td></tr>
<tr class="memdesc:a5c68bfe4539ce0cd6f0674219e8ead6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise AND on dest using value. <br /></td></tr>
<tr class="separator:a5c68bfe4539ce0cd6f0674219e8ead6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf6c91a0dcc6dd7df5ecb7770fa4b0fa" id="r_aaf6c91a0dcc6dd7df5ecb7770fa4b0fa"><td class="memItemLeft" align="right" valign="top"><a id="aaf6c91a0dcc6dd7df5ecb7770fa4b0fa" name="aaf6c91a0dcc6dd7df5ecb7770fa4b0fa"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>And</b> (xiiInt64 &amp;ref_iDest, xiiInt64 value)</td></tr>
<tr class="memdesc:aaf6c91a0dcc6dd7df5ecb7770fa4b0fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise AND on dest using value. <br /></td></tr>
<tr class="separator:aaf6c91a0dcc6dd7df5ecb7770fa4b0fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabfc6ce5ee15217e7f6397546223d67e" id="r_aabfc6ce5ee15217e7f6397546223d67e"><td class="memItemLeft" align="right" valign="top"><a id="aabfc6ce5ee15217e7f6397546223d67e" name="aabfc6ce5ee15217e7f6397546223d67e"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Or</b> (xiiInt32 &amp;ref_iDest, xiiInt32 value)</td></tr>
<tr class="memdesc:aabfc6ce5ee15217e7f6397546223d67e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise OR on dest using value. <br /></td></tr>
<tr class="separator:aabfc6ce5ee15217e7f6397546223d67e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d8850577dc1ad948e6cc9f4fe8fdc24" id="r_a0d8850577dc1ad948e6cc9f4fe8fdc24"><td class="memItemLeft" align="right" valign="top"><a id="a0d8850577dc1ad948e6cc9f4fe8fdc24" name="a0d8850577dc1ad948e6cc9f4fe8fdc24"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Or</b> (xiiInt64 &amp;ref_iDest, xiiInt64 value)</td></tr>
<tr class="memdesc:a0d8850577dc1ad948e6cc9f4fe8fdc24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise OR on dest using value. <br /></td></tr>
<tr class="separator:a0d8850577dc1ad948e6cc9f4fe8fdc24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa97830c7ac3d92520a6cfd9af9629d08" id="r_aa97830c7ac3d92520a6cfd9af9629d08"><td class="memItemLeft" align="right" valign="top"><a id="aa97830c7ac3d92520a6cfd9af9629d08" name="aa97830c7ac3d92520a6cfd9af9629d08"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Xor</b> (xiiInt32 &amp;ref_iDest, xiiInt32 value)</td></tr>
<tr class="memdesc:aa97830c7ac3d92520a6cfd9af9629d08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise XOR on dest using value. <br /></td></tr>
<tr class="separator:aa97830c7ac3d92520a6cfd9af9629d08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97a24a4cf82953246bb5e3034bbee6ba" id="r_a97a24a4cf82953246bb5e3034bbee6ba"><td class="memItemLeft" align="right" valign="top"><a id="a97a24a4cf82953246bb5e3034bbee6ba" name="a97a24a4cf82953246bb5e3034bbee6ba"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Xor</b> (xiiInt64 &amp;ref_iDest, xiiInt64 value)</td></tr>
<tr class="memdesc:a97a24a4cf82953246bb5e3034bbee6ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise XOR on dest using value. <br /></td></tr>
<tr class="separator:a97a24a4cf82953246bb5e3034bbee6ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26b08469a21a4057ea57b26350ecb07a" id="r_a26b08469a21a4057ea57b26350ecb07a"><td class="memItemLeft" align="right" valign="top"><a id="a26b08469a21a4057ea57b26350ecb07a" name="a26b08469a21a4057ea57b26350ecb07a"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Min</b> (xiiInt32 &amp;ref_iDest, xiiInt32 value)</td></tr>
<tr class="memdesc:a26b08469a21a4057ea57b26350ecb07a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic min operation on dest using value. <br /></td></tr>
<tr class="separator:a26b08469a21a4057ea57b26350ecb07a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc9072b396fb7cade8a751f3a2fd2dc0" id="r_abc9072b396fb7cade8a751f3a2fd2dc0"><td class="memItemLeft" align="right" valign="top"><a id="abc9072b396fb7cade8a751f3a2fd2dc0" name="abc9072b396fb7cade8a751f3a2fd2dc0"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Min</b> (xiiInt64 &amp;ref_iDest, xiiInt64 value)</td></tr>
<tr class="memdesc:abc9072b396fb7cade8a751f3a2fd2dc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic min operation on dest using value. <br /></td></tr>
<tr class="separator:abc9072b396fb7cade8a751f3a2fd2dc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa73d5d34a8b585bb38545f030f999077" id="r_aa73d5d34a8b585bb38545f030f999077"><td class="memItemLeft" align="right" valign="top"><a id="aa73d5d34a8b585bb38545f030f999077" name="aa73d5d34a8b585bb38545f030f999077"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Max</b> (xiiInt32 &amp;ref_iDest, xiiInt32 value)</td></tr>
<tr class="memdesc:aa73d5d34a8b585bb38545f030f999077"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic max operation on dest using value. <br /></td></tr>
<tr class="separator:aa73d5d34a8b585bb38545f030f999077"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37ccbd35355f09c02b20d23c1979286a" id="r_a37ccbd35355f09c02b20d23c1979286a"><td class="memItemLeft" align="right" valign="top"><a id="a37ccbd35355f09c02b20d23c1979286a" name="a37ccbd35355f09c02b20d23c1979286a"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Max</b> (xiiInt64 &amp;ref_iDest, xiiInt64 value)</td></tr>
<tr class="memdesc:a37ccbd35355f09c02b20d23c1979286a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic max operation on dest using value. <br /></td></tr>
<tr class="separator:a37ccbd35355f09c02b20d23c1979286a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39d2589af842ccff9015ee11965ccee0" id="r_a39d2589af842ccff9015ee11965ccee0"><td class="memItemLeft" align="right" valign="top"><a id="a39d2589af842ccff9015ee11965ccee0" name="a39d2589af842ccff9015ee11965ccee0"></a>
static xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><b>Set</b> (xiiInt32 &amp;ref_iDest, xiiInt32 value)</td></tr>
<tr class="memdesc:a39d2589af842ccff9015ee11965ccee0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets dest to value as an atomic operation and returns the original value of dest. <br /></td></tr>
<tr class="separator:a39d2589af842ccff9015ee11965ccee0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7ef99b100b7caff9ea8efa48327f077" id="r_ae7ef99b100b7caff9ea8efa48327f077"><td class="memItemLeft" align="right" valign="top"><a id="ae7ef99b100b7caff9ea8efa48327f077" name="ae7ef99b100b7caff9ea8efa48327f077"></a>
static xiiInt64&#160;</td><td class="memItemRight" valign="bottom"><b>Set</b> (xiiInt64 &amp;ref_iDest, xiiInt64 value)</td></tr>
<tr class="memdesc:ae7ef99b100b7caff9ea8efa48327f077"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets dest to value as an atomic operation and returns the original value of dest. <br /></td></tr>
<tr class="separator:ae7ef99b100b7caff9ea8efa48327f077"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d50717df772aa91a38f3503658424b6" id="r_a1d50717df772aa91a38f3503658424b6"><td class="memItemLeft" align="right" valign="top"><a id="a1d50717df772aa91a38f3503658424b6" name="a1d50717df772aa91a38f3503658424b6"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>TestAndSet</b> (xiiInt32 &amp;ref_iDest, xiiInt32 iExpected, xiiInt32 value)</td></tr>
<tr class="memdesc:a1d50717df772aa91a38f3503658424b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em> and returns true. Otherwise <em>dest</em> will not be modified and the function returns false. <br /></td></tr>
<tr class="separator:a1d50717df772aa91a38f3503658424b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36937960f10315c40193a059afd488ba" id="r_a36937960f10315c40193a059afd488ba"><td class="memItemLeft" align="right" valign="top"><a id="a36937960f10315c40193a059afd488ba" name="a36937960f10315c40193a059afd488ba"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>TestAndSet</b> (xiiInt64 &amp;ref_iDest, xiiInt64 iExpected, xiiInt64 value)</td></tr>
<tr class="memdesc:a36937960f10315c40193a059afd488ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em> and returns true. Otherwise <em>dest</em> will not be modified and the function returns false. <br /></td></tr>
<tr class="separator:a36937960f10315c40193a059afd488ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af339b1206404d1320beb4fdb40cc9f16" id="r_af339b1206404d1320beb4fdb40cc9f16"><td class="memItemLeft" align="right" valign="top"><a id="af339b1206404d1320beb4fdb40cc9f16" name="af339b1206404d1320beb4fdb40cc9f16"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>TestAndSet</b> (void **pDest, void *pExpected, void *value)</td></tr>
<tr class="memdesc:af339b1206404d1320beb4fdb40cc9f16"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em> and returns true. Otherwise <em>dest</em> will not be modified and the function returns false. <br /></td></tr>
<tr class="separator:af339b1206404d1320beb4fdb40cc9f16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae64120c599708a619a1acfab0f474f29" id="r_ae64120c599708a619a1acfab0f474f29"><td class="memItemLeft" align="right" valign="top"><a id="ae64120c599708a619a1acfab0f474f29" name="ae64120c599708a619a1acfab0f474f29"></a>
static xiiInt32&#160;</td><td class="memItemRight" valign="bottom"><b>CompareAndSwap</b> (xiiInt32 &amp;ref_iDest, xiiInt32 iExpected, xiiInt32 value)</td></tr>
<tr class="memdesc:ae64120c599708a619a1acfab0f474f29"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em>. Otherwise <em>dest</em> will not be modified. Always returns the value of <em>dest</em> before the modification. <br /></td></tr>
<tr class="separator:ae64120c599708a619a1acfab0f474f29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dbd08312db3104e60fabc2505dde20c" id="r_a4dbd08312db3104e60fabc2505dde20c"><td class="memItemLeft" align="right" valign="top"><a id="a4dbd08312db3104e60fabc2505dde20c" name="a4dbd08312db3104e60fabc2505dde20c"></a>
static xiiInt64&#160;</td><td class="memItemRight" valign="bottom"><b>CompareAndSwap</b> (xiiInt64 &amp;ref_iDest, xiiInt64 iExpected, xiiInt64 value)</td></tr>
<tr class="memdesc:a4dbd08312db3104e60fabc2505dde20c"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em>. Otherwise <em>dest</em> will not be modified. Always returns the value of <em>dest</em> before the modification. <br /></td></tr>
<tr class="separator:a4dbd08312db3104e60fabc2505dde20c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class provides functions to do atomic operations. </p>
<p>Atomic operations are generally faster than mutexes, and should therefore be preferred whenever possible. However only the operations in themselves are atomic, once you execute several of them in sequence, the sequence will not be atomic. Also atomic operations are a lot slower than non-atomic operations, thus you should not use them in code that does not need to be thread-safe. <a class="el" href="../../db/d8e/classxii_atomic_integer.htm" title="Integer class that can be manipulated in an atomic (i.e. thread-safe) fashion.">xiiAtomicInteger</a> is built on top of <a class="el" href="../../d9/d66/structxii_atomic_utils.htm" title="This class provides functions to do atomic operations.">xiiAtomicUtils</a> and provides a more convenient interface to use atomic integer instructions. </p>
</div><hr/>The documentation for this struct was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Threading/<a class="el" href="../../d0/d8e/_atomic_utils_8h_source.htm">AtomicUtils.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Threading/Implementation/Posix/<a class="el" href="../../d0/d71/_atomic_utils__posix_8h_source.htm">AtomicUtils_posix.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Threading/Implementation/Win/<a class="el" href="../../dc/d1d/_atomic_utils__win_8h_source.htm">AtomicUtils_win.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d9/d66/structxii_atomic_utils.htm">xiiAtomicUtils</a></li>
    <li class="footer">Generated on Mon Jul 1 2024 22:02:14 for XII Engine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
