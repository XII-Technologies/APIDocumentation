<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>XIIEngine: xiiUniquePtr&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../XII-Logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">XIIEngine
   &#160;<span id="projectnumber">1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d9/d4a/classxii_unique_ptr.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../df/dbf/classxii_unique_ptr-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">xiiUniquePtr&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A Unique ptr manages an object and destroys that object when it goes out of scope. It is ensure that only one unique ptr can manage the same object.  
 <a href="../../d9/d4a/classxii_unique_ptr.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/df6/_unique_ptr_8h_source.htm">UniquePtr.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a19fbd14969e0105b1bf6f1264793f321"><td class="memItemLeft" align="right" valign="top"><a id="a19fbd14969e0105b1bf6f1264793f321"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>XII_DECLARE_MEM_RELOCATABLE_TYPE</b> ()</td></tr>
<tr class="separator:a19fbd14969e0105b1bf6f1264793f321"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f7f1bdd3bce18cee76c41e24cc2b26c"><td class="memItemLeft" align="right" valign="top"><a id="a5f7f1bdd3bce18cee76c41e24cc2b26c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a5f7f1bdd3bce18cee76c41e24cc2b26c">xiiUniquePtr</a> ()</td></tr>
<tr class="memdesc:a5f7f1bdd3bce18cee76c41e24cc2b26c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty unique ptr. <br /></td></tr>
<tr class="separator:a5f7f1bdd3bce18cee76c41e24cc2b26c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadcb6218eec2ee79946d711956c0cc53"><td class="memTemplParams" colspan="2"><a id="aadcb6218eec2ee79946d711956c0cc53"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aadcb6218eec2ee79946d711956c0cc53"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#aadcb6218eec2ee79946d711956c0cc53">xiiUniquePtr</a> (const <a class="el" href="../../de/d3c/structxii_internal_1_1_new_instance.htm">xiiInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="memdesc:aadcb6218eec2ee79946d711956c0cc53"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a unique ptr from a freshly created instance through XII_NEW or XII_DEFAULT_NEW. <br /></td></tr>
<tr class="separator:aadcb6218eec2ee79946d711956c0cc53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac079f6f08ee8f20237a9909eff69d4fd"><td class="memTemplParams" colspan="2"><a id="ac079f6f08ee8f20237a9909eff69d4fd"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ac079f6f08ee8f20237a9909eff69d4fd"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#ac079f6f08ee8f20237a9909eff69d4fd">xiiUniquePtr</a> (U *pInstance, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:ac079f6f08ee8f20237a9909eff69d4fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a unique ptr from a pointer and an allocator. The passed allocator will be used to destroy the instance when the unique ptr goes out of scope. <br /></td></tr>
<tr class="separator:ac079f6f08ee8f20237a9909eff69d4fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e45948afc33429ac70e647d8591bd81"><td class="memTemplParams" colspan="2"><a id="a7e45948afc33429ac70e647d8591bd81"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a7e45948afc33429ac70e647d8591bd81"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a7e45948afc33429ac70e647d8591bd81">xiiUniquePtr</a> (<a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:a7e45948afc33429ac70e647d8591bd81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move constructs a unique ptr from another. The other unique ptr will be empty afterwards to guarantee that there is only one unique ptr managing the same object. <br /></td></tr>
<tr class="separator:a7e45948afc33429ac70e647d8591bd81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71774846fc16d7646fda292dabffd2bc"><td class="memItemLeft" align="right" valign="top"><a id="a71774846fc16d7646fda292dabffd2bc"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a71774846fc16d7646fda292dabffd2bc">xiiUniquePtr</a> (std::nullptr_t)</td></tr>
<tr class="memdesc:a71774846fc16d7646fda292dabffd2bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization with nullptr to be able to return nullptr in functions that return unique ptr. <br /></td></tr>
<tr class="separator:a71774846fc16d7646fda292dabffd2bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b2ad18b78ae37387f0176fb09ceef63"><td class="memItemLeft" align="right" valign="top"><a id="a4b2ad18b78ae37387f0176fb09ceef63"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a4b2ad18b78ae37387f0176fb09ceef63">~xiiUniquePtr</a> ()</td></tr>
<tr class="memdesc:a4b2ad18b78ae37387f0176fb09ceef63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the managed object using the stored allocator. <br /></td></tr>
<tr class="separator:a4b2ad18b78ae37387f0176fb09ceef63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a773489f1338e13bd11b1e1092d118d90"><td class="memTemplParams" colspan="2"><a id="a773489f1338e13bd11b1e1092d118d90"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a773489f1338e13bd11b1e1092d118d90"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a773489f1338e13bd11b1e1092d118d90">operator=</a> (const <a class="el" href="../../de/d3c/structxii_internal_1_1_new_instance.htm">xiiInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="memdesc:a773489f1338e13bd11b1e1092d118d90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the unique ptr from a freshly created instance through XII_NEW or XII_DEFAULT_NEW. <br /></td></tr>
<tr class="separator:a773489f1338e13bd11b1e1092d118d90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18143dc086d55ec9a4826220b0dce29f"><td class="memTemplParams" colspan="2"><a id="a18143dc086d55ec9a4826220b0dce29f"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a18143dc086d55ec9a4826220b0dce29f"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a18143dc086d55ec9a4826220b0dce29f">operator=</a> (<a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:a18143dc086d55ec9a4826220b0dce29f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move assigns a unique ptr from another. The other unique ptr will be empty afterwards to guarantee that there is only one unique ptr managing the same object. <br /></td></tr>
<tr class="separator:a18143dc086d55ec9a4826220b0dce29f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cf200a55b92f09984abf5af80dbcf00"><td class="memItemLeft" align="right" valign="top"><a id="a9cf200a55b92f09984abf5af80dbcf00"></a>
<a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a9cf200a55b92f09984abf5af80dbcf00">operator=</a> (std::nullptr_t)</td></tr>
<tr class="memdesc:a9cf200a55b92f09984abf5af80dbcf00"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as calling 'Reset()'. <br /></td></tr>
<tr class="separator:a9cf200a55b92f09984abf5af80dbcf00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cfcda4fba6d9b0180063474f92c9b6e"><td class="memItemLeft" align="right" valign="top"><a id="a9cfcda4fba6d9b0180063474f92c9b6e"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a9cfcda4fba6d9b0180063474f92c9b6e">Release</a> ()</td></tr>
<tr class="memdesc:a9cfcda4fba6d9b0180063474f92c9b6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases the managed object without destroying it. The unique ptr will be empty afterwards. <br /></td></tr>
<tr class="separator:a9cfcda4fba6d9b0180063474f92c9b6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d56881c638a152e643b94b6efe040fa"><td class="memItemLeft" align="right" valign="top"><a id="a3d56881c638a152e643b94b6efe040fa"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a3d56881c638a152e643b94b6efe040fa">Release</a> (<a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *&amp;out_pAllocator)</td></tr>
<tr class="memdesc:a3d56881c638a152e643b94b6efe040fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases the managed object without destroying it. The unique ptr will be empty afterwards. Also returns the allocator that should be used to destroy the object. <br /></td></tr>
<tr class="separator:a3d56881c638a152e643b94b6efe040fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff6bd0f915964769fe2ec7a2a81fd2d5"><td class="memItemLeft" align="right" valign="top"><a id="aff6bd0f915964769fe2ec7a2a81fd2d5"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#aff6bd0f915964769fe2ec7a2a81fd2d5">Borrow</a> () const</td></tr>
<tr class="memdesc:aff6bd0f915964769fe2ec7a2a81fd2d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Borrows the managed object. The unique ptr stays unmodified. <br /></td></tr>
<tr class="separator:aff6bd0f915964769fe2ec7a2a81fd2d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6ab86a1b7163781f20f1edef10f108c"><td class="memItemLeft" align="right" valign="top"><a id="ae6ab86a1b7163781f20f1edef10f108c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#ae6ab86a1b7163781f20f1edef10f108c">Clear</a> ()</td></tr>
<tr class="memdesc:ae6ab86a1b7163781f20f1edef10f108c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the managed object and resets the unique ptr. <br /></td></tr>
<tr class="separator:ae6ab86a1b7163781f20f1edef10f108c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d41879e0b29cc8097ae651b251ea20a"><td class="memItemLeft" align="right" valign="top"><a id="a9d41879e0b29cc8097ae651b251ea20a"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a9d41879e0b29cc8097ae651b251ea20a">operator*</a> () const</td></tr>
<tr class="memdesc:a9d41879e0b29cc8097ae651b251ea20a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:a9d41879e0b29cc8097ae651b251ea20a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a730c723b6fd3688e3419deed65d74914"><td class="memItemLeft" align="right" valign="top"><a id="a730c723b6fd3688e3419deed65d74914"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a730c723b6fd3688e3419deed65d74914">operator-&gt;</a> () const</td></tr>
<tr class="memdesc:a730c723b6fd3688e3419deed65d74914"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:a730c723b6fd3688e3419deed65d74914"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95d685772ae01d47d18419995292e170"><td class="memItemLeft" align="right" valign="top"><a id="a95d685772ae01d47d18419995292e170"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a95d685772ae01d47d18419995292e170">operator bool</a> () const</td></tr>
<tr class="memdesc:a95d685772ae01d47d18419995292e170"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if there is managed object and false if the unique ptr is empty. <br /></td></tr>
<tr class="separator:a95d685772ae01d47d18419995292e170"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34db940bf6c6ff732cd24e257a18b90e"><td class="memItemLeft" align="right" valign="top"><a id="a34db940bf6c6ff732cd24e257a18b90e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a34db940bf6c6ff732cd24e257a18b90e">operator==</a> (const <a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a34db940bf6c6ff732cd24e257a18b90e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the unique ptr against another unique ptr. <br /></td></tr>
<tr class="separator:a34db940bf6c6ff732cd24e257a18b90e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9452ff43090956adca6a99894c605b74"><td class="memItemLeft" align="right" valign="top"><a id="a9452ff43090956adca6a99894c605b74"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a9452ff43090956adca6a99894c605b74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac79b47fc3b67140f72c3cc4b2b1f2ec8"><td class="memItemLeft" align="right" valign="top"><a id="ac79b47fc3b67140f72c3cc4b2b1f2ec8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:ac79b47fc3b67140f72c3cc4b2b1f2ec8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9711a91cd650ae02ba9d4c1ddf3a0ea"><td class="memItemLeft" align="right" valign="top"><a id="ae9711a91cd650ae02ba9d4c1ddf3a0ea"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (const <a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:ae9711a91cd650ae02ba9d4c1ddf3a0ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08682e91d721ccba6f6eb285991bce40"><td class="memItemLeft" align="right" valign="top"><a id="a08682e91d721ccba6f6eb285991bce40"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (const <a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a08682e91d721ccba6f6eb285991bce40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3255856c682ae749b1d9f59cd9a21545"><td class="memItemLeft" align="right" valign="top"><a id="a3255856c682ae749b1d9f59cd9a21545"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (const <a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a3255856c682ae749b1d9f59cd9a21545"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71c056cd5ba6422016ad2e881dd6f3a5"><td class="memItemLeft" align="right" valign="top"><a id="a71c056cd5ba6422016ad2e881dd6f3a5"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm#a71c056cd5ba6422016ad2e881dd6f3a5">operator==</a> (std::nullptr_t) const</td></tr>
<tr class="memdesc:a71c056cd5ba6422016ad2e881dd6f3a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the unique ptr against nullptr. <br /></td></tr>
<tr class="separator:a71c056cd5ba6422016ad2e881dd6f3a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f4bd413b8e944bfa1970eb0050ac21e"><td class="memItemLeft" align="right" valign="top"><a id="a8f4bd413b8e944bfa1970eb0050ac21e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a8f4bd413b8e944bfa1970eb0050ac21e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a26e474ef946185fab52bdfe53d930f"><td class="memItemLeft" align="right" valign="top"><a id="a7a26e474ef946185fab52bdfe53d930f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a7a26e474ef946185fab52bdfe53d930f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2132a3fb38f8677d7c88f7ab56c3b896"><td class="memItemLeft" align="right" valign="top"><a id="a2132a3fb38f8677d7c88f7ab56c3b896"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a2132a3fb38f8677d7c88f7ab56c3b896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae44c34a06495464f785e46728992ae27"><td class="memItemLeft" align="right" valign="top"><a id="ae44c34a06495464f785e46728992ae27"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (std::nullptr_t) const</td></tr>
<tr class="separator:ae44c34a06495464f785e46728992ae27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93ad68479ef1e44f55008398d14f0915"><td class="memItemLeft" align="right" valign="top"><a id="a93ad68479ef1e44f55008398d14f0915"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a93ad68479ef1e44f55008398d14f0915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7efcd8f6df97d228f1398e2d04390456"><td class="memTemplParams" colspan="2"><a id="a7efcd8f6df97d228f1398e2d04390456"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a7efcd8f6df97d228f1398e2d04390456"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xiiUniquePtr</b> (const <a class="el" href="../../de/d3c/structxii_internal_1_1_new_instance.htm">xiiInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="separator:a7efcd8f6df97d228f1398e2d04390456"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dc7548b9b18807d52c88ed9d2d8a550"><td class="memTemplParams" colspan="2"><a id="a1dc7548b9b18807d52c88ed9d2d8a550"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a1dc7548b9b18807d52c88ed9d2d8a550"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xiiUniquePtr</b> (U *pInstance, <a class="el" href="../../d5/d66/classxii_allocator_base.htm">xiiAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:a1dc7548b9b18807d52c88ed9d2d8a550"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0448ae26385139d2e1e494a2986417ac"><td class="memTemplParams" colspan="2"><a id="a0448ae26385139d2e1e494a2986417ac"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a0448ae26385139d2e1e494a2986417ac"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xiiUniquePtr</b> (<a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a0448ae26385139d2e1e494a2986417ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae64eeba5988f21d42fcb86cc1d5c96b2"><td class="memTemplParams" colspan="2"><a id="ae64eeba5988f21d42fcb86cc1d5c96b2"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ae64eeba5988f21d42fcb86cc1d5c96b2"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE <a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../de/d3c/structxii_internal_1_1_new_instance.htm">xiiInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="separator:ae64eeba5988f21d42fcb86cc1d5c96b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0a146551ce3ffc64c6ea4a084e2690a"><td class="memTemplParams" colspan="2"><a id="af0a146551ce3ffc64c6ea4a084e2690a"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:af0a146551ce3ffc64c6ea4a084e2690a"><td class="memTemplItemLeft" align="right" valign="top">XII_ALWAYS_INLINE <a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:af0a146551ce3ffc64c6ea4a084e2690a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
class xiiUniquePtr&lt; T &gt;</h3>

<p>A Unique ptr manages an object and destroys that object when it goes out of scope. It is ensure that only one unique ptr can manage the same object. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Types/<a class="el" href="../../d8/df6/_unique_ptr_8h_source.htm">UniquePtr.h</a></li>
<li>/home/runner/work/XII/XII/Source/Engine/Foundation/Types/Implementation/<a class="el" href="../../d9/d4d/_unique_ptr__inl_8h_source.htm">UniquePtr_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d9/d4a/classxii_unique_ptr.htm">xiiUniquePtr</a></li>
    <li class="footer">Generated on Thu Aug 10 2023 20:38:52 for XIIEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
